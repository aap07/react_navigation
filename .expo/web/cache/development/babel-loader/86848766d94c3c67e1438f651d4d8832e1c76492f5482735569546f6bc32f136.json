{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nvar NativeViewGestureHandler = function (_GestureHandler) {\n  _inherits(NativeViewGestureHandler, _GestureHandler);\n  var _super = _createSuper(NativeViewGestureHandler);\n  function NativeViewGestureHandler() {\n    var _this;\n    _classCallCheck(this, NativeViewGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.shouldActivateOnStart = false;\n    _this.disallowInterruption = false;\n    _this.startX = 0;\n    _this.startY = 0;\n    _this.minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n    return _this;\n  }\n  _createClass(NativeViewGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n      this.setShouldCancelWhenOutside(true);\n      this.view.style['touchAction'] = 'auto';\n      this.view.style['WebkitTouchCallout'] = 'auto';\n      if (this.view.hasAttribute('role')) {\n        this.buttonRole = true;\n      } else {\n        this.buttonRole = false;\n      }\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n      if (this.config.shouldActivateOnStart !== undefined) {\n        this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n      }\n      if (this.config.disallowInterruption !== undefined) {\n        this.disallowInterruption = this.config.disallowInterruption;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"resetConfig\", this).call(this);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"newPointerAction\",\n    value: function newPointerAction() {\n      this.startX = this.tracker.getLastAvgX();\n      this.startY = this.tracker.getLastAvgY();\n      if (this.currentState !== State.UNDETERMINED) {\n        return;\n      }\n      this.begin();\n      if (this.buttonRole) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n      var dx = this.startX - this.tracker.getLastAvgX();\n      var dy = this.startY - this.tracker.getLastAvgY();\n      var distSq = dx * dx + dy * dy;\n      if (distSq >= this.minDistSq) {\n        if (this.buttonRole && this.currentState === State.ACTIVE) {\n          this.cancel();\n        } else if (!this.buttonRole && this.currentState === State.BEGAN) {\n          this.activate();\n        }\n      }\n    }\n  }, {\n    key: \"onPointerOut\",\n    value: function onPointerOut() {\n      if (this.currentState === State.BEGAN || this.currentState === State.ACTIVE) {\n        this.cancel();\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp(event) {\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.tracker.getTrackedPointersCount() === 0) {\n        if (this.currentState === State.ACTIVE) {\n          this.end();\n        } else {\n          this.fail();\n        }\n      }\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if (_get(_getPrototypeOf(NativeViewGestureHandler.prototype), \"shouldRecognizeSimultaneously\", this).call(this, handler)) {\n        return true;\n      }\n      if (handler instanceof NativeViewGestureHandler && handler.getState() === State.ACTIVE && handler.disallowsInterruption()) {\n        return false;\n      }\n      var canBeInterrupted = !this.disallowInterruption;\n      if (this.currentState === State.ACTIVE && handler.getState() === State.ACTIVE && canBeInterrupted) {\n        return false;\n      }\n      return this.currentState === State.ACTIVE && canBeInterrupted && handler.getTag() > 0;\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(_handler) {\n      return !this.disallowInterruption;\n    }\n  }, {\n    key: \"disallowsInterruption\",\n    value: function disallowsInterruption() {\n      return this.disallowInterruption;\n    }\n  }]);\n  return NativeViewGestureHandler;\n}(GestureHandler);\nexport { NativeViewGestureHandler as default };","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","NativeViewGestureHandler","_GestureHandler","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","shouldActivateOnStart","disallowInterruption","startX","startY","minDistSq","_createClass","key","value","init","ref","propsRef","_get","_getPrototypeOf","prototype","setShouldCancelWhenOutside","view","style","hasAttribute","buttonRole","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties","_excluded","_objectSpread","config","undefined","resetConfig","onPointerDown","event","tracker","addToTracker","newPointerAction","onPointerAdd","getLastAvgX","getLastAvgY","currentState","UNDETERMINED","begin","activate","onPointerMove","track","dx","dy","distSq","ACTIVE","cancel","BEGAN","onPointerOut","onPointerUp","onUp","onPointerRemove","removeFromTracker","pointerId","getTrackedPointersCount","end","fail","shouldRecognizeSimultaneously","handler","getState","disallowsInterruption","canBeInterrupted","getTag","shouldBeCancelledByOther","_handler","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/web/handlers/NativeViewGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n  private buttonRole!: boolean;\n\n  //TODO: Implement logic for activation on start\n  //@ts-ignore Logic yet to be implemented\n  private shouldActivateOnStart = false;\n  private disallowInterruption = false;\n\n  private startX = 0;\n  private startY = 0;\n  private minDistSq = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(true);\n\n    this.view.style['touchAction'] = 'auto';\n\n    //@ts-ignore Turns on defualt touch behavior on Safari\n    this.view.style['WebkitTouchCallout'] = 'auto';\n\n    if (this.view.hasAttribute('role')) {\n      this.buttonRole = true;\n    } else {\n      this.buttonRole = false;\n    }\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.shouldActivateOnStart !== undefined) {\n      this.shouldActivateOnStart = this.config.shouldActivateOnStart;\n    }\n    if (this.config.disallowInterruption !== undefined) {\n      this.disallowInterruption = this.config.disallowInterruption;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.newPointerAction();\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.begin();\n    if (this.buttonRole) {\n      this.activate();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    const dx = this.startX - this.tracker.getLastAvgX();\n    const dy = this.startY - this.tracker.getLastAvgY();\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq >= this.minDistSq) {\n      if (this.buttonRole && this.currentState === State.ACTIVE) {\n        this.cancel();\n      } else if (!this.buttonRole && this.currentState === State.BEGAN) {\n        this.activate();\n      }\n    }\n  }\n\n  protected onPointerOut(): void {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.cancel();\n    }\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.tracker.getTrackedPointersCount() === 0) {\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (super.shouldRecognizeSimultaneously(handler)) {\n      return true;\n    }\n\n    if (\n      handler instanceof NativeViewGestureHandler &&\n      handler.getState() === State.ACTIVE &&\n      handler.disallowsInterruption()\n    ) {\n      return false;\n    }\n\n    const canBeInterrupted = !this.disallowInterruption;\n\n    if (\n      this.currentState === State.ACTIVE &&\n      handler.getState() === State.ACTIVE &&\n      canBeInterrupted\n    ) {\n      return false;\n    }\n\n    return (\n      this.currentState === State.ACTIVE &&\n      canBeInterrupted &&\n      handler.getTag() > 0\n    );\n  }\n\n  public shouldBeCancelledByOther(_handler: GestureHandler): boolean {\n    return !this.disallowInterruption;\n  }\n\n  public disallowsInterruption(): boolean {\n    return this.disallowInterruption;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}