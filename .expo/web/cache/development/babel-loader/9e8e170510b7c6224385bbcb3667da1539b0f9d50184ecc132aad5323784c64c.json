{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _serializeError() {\n  var data = require(\"serialize-error\");\n  _serializeError = function _serializeError() {\n    return data;\n  };\n  return data;\n}\nvar LogReporter = function () {\n  function LogReporter(logger) {\n    var reportEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    _classCallCheck(this, LogReporter);\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n  }\n  _createClass(LogReporter, [{\n    key: \"update\",\n    value: function update(event) {\n      if (event.error instanceof Error) {\n        event.error = (0, _serializeError().serializeError)(event.error);\n      }\n      this.logger.info({\n        tag: 'metro'\n      }, JSON.stringify(event));\n      this.reportEvent(event);\n    }\n  }]);\n  return LogReporter;\n}();\nexports.default = LogReporter;","map":{"version":3,"names":["_serializeError","data","require","LogReporter","logger","reportEvent","arguments","length","undefined","_classCallCheck","_createClass","key","value","update","event","error","Error","serializeError","info","tag","JSON","stringify","exports","default"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\LogReporter.ts"],"sourcesContent":["import Log from '@expo/bunyan';\nimport { serializeError } from 'serialize-error';\n\nexport default class LogReporter {\n  constructor(public logger: Log, public reportEvent: (event: any) => void = () => {}) {\n    this.logger = logger;\n    this.reportEvent = reportEvent;\n  }\n\n  update(event: any) {\n    if (event.error instanceof Error) {\n      event.error = serializeError(event.error);\n    }\n    // TODO(ville): replace xdl.PackagerLogsStream with a reporter to avoid serializing to JSON.\n    this.logger.info({ tag: 'metro' }, JSON.stringify(event));\n    this.reportEvent(event);\n  }\n}\n"],"mappings":";;;;;;;;AACA,SAAAA,gBAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,eAAA,YAAAA,gBAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAA,IAEqBE,WAAW;EAC9B,SAAAA,YAAmBC,MAAW,EAAuD;IAAA,IAA9CC,WAAiC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,YAAM,CAAC,CAAC;IAAAG,eAAA,OAAAN,WAAA;IAAE,KAAlEC,MAAW,GAAXA,MAAW;IAAA,KAASC,WAAiC,GAAjCA,WAAiC;IACtE,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,WAAW,GAAGA,WAAW;EAChC;EAAAK,YAAA,CAAAP,WAAA;IAAAQ,GAAA;IAAAC,KAAA,EAEA,SAAAC,OAAOC,KAAU,EAAE;MACjB,IAAIA,KAAK,CAACC,KAAK,YAAYC,KAAK,EAAE;QAChCF,KAAK,CAACC,KAAK,GAAG,IAAAf,eAAA,GAAAiB,cAAc,EAACH,KAAK,CAACC,KAAK,CAAC;MAC3C;MAEA,IAAI,CAACX,MAAM,CAACc,IAAI,CAAC;QAAEC,GAAG,EAAE;MAAQ,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK,CAAC,CAAC;MACzD,IAAI,CAACT,WAAW,CAACS,KAAK,CAAC;IACzB;EAAA;EAAA,OAAAX,WAAA;AAAA;AACDmB,OAAA,CAAAC,OAAA,GAAApB,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}