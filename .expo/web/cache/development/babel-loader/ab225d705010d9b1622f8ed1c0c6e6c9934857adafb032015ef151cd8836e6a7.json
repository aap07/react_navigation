{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/plugins/mod-compiler.d.ts"],"sourcesContent":["import { ExportedConfig, ModPlatform } from '../Plugin.types';\nimport { ForwardedBaseModOptions } from './createBaseMod';\nexport declare function withDefaultBaseMods(config: ExportedConfig, props?: ForwardedBaseModOptions): ExportedConfig;\n/**\n * Get a prebuild config that safely evaluates mods without persisting any changes to the file system.\n * Currently this only supports infoPlist, entitlements, androidManifest, strings, gradleProperties, and expoPlist mods.\n * This plugin should be evaluated directly:\n */\nexport declare function withIntrospectionBaseMods(config: ExportedConfig, props?: ForwardedBaseModOptions): ExportedConfig;\n/**\n *\n * @param projectRoot\n * @param config\n */\nexport declare function compileModsAsync(config: ExportedConfig, props: {\n    projectRoot: string;\n    platforms?: ModPlatform[];\n    introspect?: boolean;\n    assertMissingModProviders?: boolean;\n    ignoreExistingNativeFiles?: boolean;\n}): Promise<ExportedConfig>;\n/**\n * A generic plugin compiler.\n *\n * @param config\n */\nexport declare function evalModsAsync(config: ExportedConfig, { projectRoot, introspect, platforms, assertMissingModProviders, ignoreExistingNativeFiles, }: {\n    projectRoot: string;\n    introspect?: boolean;\n    platforms?: ModPlatform[];\n    /**\n     * Throw errors when mods are missing providers.\n     * @default true\n     */\n    assertMissingModProviders?: boolean;\n    /** Ignore any existing native files, only use the generated prebuild results. */\n    ignoreExistingNativeFiles?: boolean;\n}): Promise<ExportedConfig>;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}