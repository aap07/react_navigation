{"ast":null,"code":"// @licenselint-loose-mode\n'use strict';\n\nvar EVENT_DEFINITION = `\n  boolean_required: boolean,\n  boolean_optional_key?: boolean,\n  boolean_optional_value: ?boolean,\n  boolean_optional_both?: ?boolean,\n\n  string_required: string,\n  string_optional_key?: string,\n  string_optional_value: ?string,\n  string_optional_both?: ?string,\n\n  double_required: Double,\n  double_optional_key?: Double,\n  double_optional_value: ?Double,\n  double_optional_both?: ?Double,\n\n  float_required: Float,\n  float_optional_key?: Float,\n  float_optional_value: ?Float,\n  float_optional_both?: ?Float,\n\n  int32_required: Int32,\n  int32_optional_key?: Int32,\n  int32_optional_value: ?Int32,\n  int32_optional_both?: ?Int32,\n\n  enum_required: ('small' | 'large'),\n  enum_optional_key?: ('small' | 'large'),\n  enum_optional_value: ?('small' | 'large'),\n  enum_optional_both?: ?('small' | 'large'),\n\n  object_required: {\n    boolean_required: boolean,\n  },\n\n  object_optional_key?: {\n    string_optional_key?: string,\n  },\n\n  object_optional_value: ?{\n    float_optional_value: ?Float,\n  },\n\n  object_optional_both?: ?{\n    int32_optional_both?: ?Int32,\n  },\n\n  object_required_nested_2_layers: {\n    object_optional_nested_1_layer?: ?{\n      boolean_required: Int32,\n      string_optional_key?: string,\n      double_optional_value: ?Double,\n      float_optional_value: ?Float,\n      int32_optional_both?: ?Int32,\n    }\n  },\n\n  object_readonly_required: $ReadOnly<{\n    boolean_required: boolean,\n  }>,\n\n  object_readonly_optional_key?: $ReadOnly<{\n    string_optional_key?: string,\n  }>,\n\n  object_readonly_optional_value: ?$ReadOnly<{\n    float_optional_value: ?Float,\n  }>,\n\n  object_readonly_optional_both?: ?$ReadOnly<{\n    int32_optional_both?: ?Int32,\n  }>,\n`;\nvar ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  WithDefault,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\n\n  // Events\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>('Module', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTModule',\n}): HostComponent<ModuleProps>);\n`;\nvar ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS_NO_CAST = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  WithDefault,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\n\n  // Events\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n|}>;\n\nexport default codegenNativeComponent<ModuleProps>('Module', {\n  interfaceOnly: true,\n  excludedPlatforms: ['android'],\n  paperComponentName: 'RCTModule',\n});\n`;\nvar NO_PROPS_EVENTS_ONLY_DEPRECATED_VIEW_CONFIG_NAME_OPTION = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>('Module', {\n  deprecatedViewConfigName: 'DeprecateModuleName',\n}): HostComponent<ModuleProps>);\n`;\nvar ALL_PROP_TYPES_NO_EVENTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float, WithDefault, UnsafeMixed} from 'CodegenTypes';\nimport type {ImageSource} from 'ImageSource';\nimport type {ColorValue, ColorArrayValue, PointValue, EdgeInsetsValue, DimensionValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  // Boolean props\n  boolean_required: boolean,\n  boolean_optional_key?: WithDefault<boolean, true>,\n  boolean_optional_both?: WithDefault<boolean, true>,\n\n  // Boolean props, null default\n  boolean_null_optional_key?: WithDefault<boolean, null>,\n  boolean_null_optional_both?: WithDefault<boolean, null>,\n\n  // String props\n  string_required: string,\n  string_optional_key?: WithDefault<string, ''>,\n  string_optional_both?: WithDefault<string, ''>,\n\n  // String props, null default\n  string_null_optional_key?: WithDefault<string, null>,\n  string_null_optional_both?: WithDefault<string, null>,\n\n  // Stringish props\n  stringish_required: Stringish,\n  stringish_optional_key?: WithDefault<Stringish, ''>,\n  stringish_optional_both?: WithDefault<Stringish, ''>,\n\n  // Stringish props, null default\n  stringish_null_optional_key?: WithDefault<Stringish, null>,\n  stringish_null_optional_both?: WithDefault<Stringish, null>,\n\n  // Double props\n  double_required: Double,\n  double_optional_key?: WithDefault<Double, 1.1>,\n  double_optional_both?: WithDefault<Double, 1.1>,\n\n  // Float props\n  float_required: Float,\n  float_optional_key?: WithDefault<Float, 1.1>,\n  float_optional_both?: WithDefault<Float, 1.1>,\n\n  // Float props, null default\n  float_null_optional_key?: WithDefault<Float, null>,\n  float_null_optional_both?: WithDefault<Float, null>,\n\n  // Int32 props\n  int32_required: Int32,\n  int32_optional_key?: WithDefault<Int32, 1>,\n  int32_optional_both?: WithDefault<Int32, 1>,\n\n  // String enum props\n  enum_optional_key?: WithDefault<'small' | 'large', 'small'>,\n  enum_optional_both?: WithDefault<'small' | 'large', 'small'>,\n\n  // Int enum props\n  int_enum_optional_key?: WithDefault<0 | 1, 0>,\n\n  // Object props\n  object_optional_key?: $ReadOnly<{| prop: string |}>,\n  object_optional_both?: ?$ReadOnly<{| prop: string |}>,\n  object_optional_value: ?$ReadOnly<{| prop: string |}>,\n\n  // ImageSource props\n  image_required: ImageSource,\n  image_optional_value: ?ImageSource,\n  image_optional_both?: ?ImageSource,\n\n  // ColorValue props\n  color_required: ColorValue,\n  color_optional_key?: ColorValue,\n  color_optional_value: ?ColorValue,\n  color_optional_both?: ?ColorValue,\n\n  // ColorArrayValue props\n  color_array_required: ColorArrayValue,\n  color_array_optional_key?: ColorArrayValue,\n  color_array_optional_value: ?ColorArrayValue,\n  color_array_optional_both?: ?ColorArrayValue,\n\n  // ProcessedColorValue props\n  processed_color_required: ProcessedColorValue,\n  processed_color_optional_key?: ProcessedColorValue,\n  processed_color_optional_value: ?ProcessedColorValue,\n  processed_color_optional_both?: ?ProcessedColorValue,\n\n  // PointValue props\n  point_required: PointValue,\n  point_optional_key?: PointValue,\n  point_optional_value: ?PointValue,\n  point_optional_both?: ?PointValue,\n\n  // EdgeInsets props\n  insets_required: EdgeInsetsValue,\n  insets_optional_key?: EdgeInsetsValue,\n  insets_optional_value: ?EdgeInsetsValue,\n  insets_optional_both?: ?EdgeInsetsValue,\n\n  // DimensionValue props\n  dimension_required: DimensionValue,\n  dimension_optional_key?: DimensionValue,\n  dimension_optional_value: ?DimensionValue,\n  dimension_optional_both?: ?DimensionValue,\n\n  // Mixed props\n  mixed_required: UnsafeMixed,\n  mixed_optional_key?: UnsafeMixed,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps, Options>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar ARRAY_PROP_TYPES_NO_EVENTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float, WithDefault} from 'CodegenTypes';\nimport type {ImageSource} from 'ImageSource';\nimport type {ColorValue, PointValue, ProcessColorValue, EdgeInsetsValue, DimensionValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ObjectType = $ReadOnly<{| prop: string |}>;\ntype ArrayObjectType = $ReadOnlyArray<$ReadOnly<{| prop: string |}>>;\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  // Boolean props\n  array_boolean_required: $ReadOnlyArray<boolean>,\n  array_boolean_optional_key?: $ReadOnlyArray<boolean>,\n  array_boolean_optional_value: ?$ReadOnlyArray<boolean>,\n  array_boolean_optional_both?: ?$ReadOnlyArray<boolean>,\n\n  // String props\n  array_string_required: $ReadOnlyArray<string>,\n  array_string_optional_key?: $ReadOnlyArray<string>,\n  array_string_optional_value: ?$ReadOnlyArray<string>,\n  array_string_optional_both?: ?$ReadOnlyArray<string>,\n\n  // Double props\n  array_double_required: $ReadOnlyArray<Double>,\n  array_double_optional_key?: $ReadOnlyArray<Double>,\n  array_double_optional_value: ?$ReadOnlyArray<Double>,\n  array_double_optional_both?: ?$ReadOnlyArray<Double>,\n\n  // Float props\n  array_float_required: $ReadOnlyArray<Float>,\n  array_float_optional_key?: $ReadOnlyArray<Float>,\n  array_float_optional_value: ?$ReadOnlyArray<Float>,\n  array_float_optional_both?: ?$ReadOnlyArray<Float>,\n\n  // Int32 props\n  array_int32_required: $ReadOnlyArray<Int32>,\n  array_int32_optional_key?: $ReadOnlyArray<Int32>,\n  array_int32_optional_value: ?$ReadOnlyArray<Int32>,\n  array_int32_optional_both?: ?$ReadOnlyArray<Int32>,\n\n  // String enum props\n  array_enum_optional_key?: WithDefault<\n    $ReadOnlyArray<'small' | 'large'>,\n    'small',\n  >,\n  array_enum_optional_both?: WithDefault<\n    $ReadOnlyArray<'small' | 'large'>,\n    'small',\n  >,\n\n  // ImageSource props\n  array_image_required: $ReadOnlyArray<ImageSource>,\n  array_image_optional_key?: $ReadOnlyArray<ImageSource>,\n  array_image_optional_value: ?$ReadOnlyArray<ImageSource>,\n  array_image_optional_both?: ?$ReadOnlyArray<ImageSource>,\n\n  // ColorValue props\n  array_color_required: $ReadOnlyArray<ColorValue>,\n  array_color_optional_key?: $ReadOnlyArray<ColorValue>,\n  array_color_optional_value: ?$ReadOnlyArray<ColorValue>,\n  array_color_optional_both?: ?$ReadOnlyArray<ColorValue>,\n\n  // PointValue props\n  array_point_required: $ReadOnlyArray<PointValue>,\n  array_point_optional_key?: $ReadOnlyArray<PointValue>,\n  array_point_optional_value: ?$ReadOnlyArray<PointValue>,\n  array_point_optional_both?: ?$ReadOnlyArray<PointValue>,\n\n  // EdgeInsetsValue props\n  array_insets_required: $ReadOnlyArray<EdgeInsetsValue>,\n  array_insets_optional_key?: $ReadOnlyArray<EdgeInsetsValue>,\n  array_insets_optional_value: ?$ReadOnlyArray<EdgeInsetsValue>,\n  array_insets_optional_both?: ?$ReadOnlyArray<EdgeInsetsValue>,\n\n  // DimensionValue props\n  array_dimension_required: $ReadOnlyArray<DimensionValue>,\n  array_dimension_optional_key?: $ReadOnlyArray<DimensionValue>,\n  array_dimension_optional_value: ?$ReadOnlyArray<DimensionValue>,\n  array_dimension_optional_both?: ?$ReadOnlyArray<DimensionValue>,\n\n  // Object props\n  array_object_required: $ReadOnlyArray<$ReadOnly<{| prop: string |}>>,\n  array_object_optional_key?: $ReadOnlyArray<$ReadOnly<{| prop: string |}>>,\n  array_object_optional_value: ?ArrayObjectType,\n  array_object_optional_both?: ?$ReadOnlyArray<ObjectType>,\n\n  // Nested array object types\n  array_of_array_object_required: $ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_required: $ReadOnlyArray<$ReadOnly<{| prop: string |}>>,\n    |}>\n  >,\n  array_of_array_object_optional_key?: $ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_optional_key: $ReadOnlyArray<$ReadOnly<{| prop?: string |}>>,\n    |}>\n  >,\n  array_of_array_object_optional_value: ?$ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_optional_value: $ReadOnlyArray<$ReadOnly<{| prop: ?string |}>>,\n    |}>\n  >,\n  array_of_array_object_optional_both?: ?$ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_optional_both: $ReadOnlyArray<$ReadOnly<{| prop?: ?string |}>>,\n    |}>\n  >,\n\n  // Nested array of array of object types\n  array_of_array_of_object_required: $ReadOnlyArray<\n    $ReadOnlyArray<\n      $ReadOnly<{|\n        prop: string,\n      |}>,\n    >,\n  >,\n\n  // Nested array of array of object types (in file)\n  array_of_array_of_object_required_in_file: $ReadOnlyArray<\n    $ReadOnlyArray<ObjectType>,\n  >,\n\n  // Nested array of array of object types (with spread)\n  array_of_array_of_object_required_with_spread: $ReadOnlyArray<\n    $ReadOnlyArray<\n      $ReadOnly<{|\n        ...ObjectType\n      |}>,\n    >,\n  >,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar OBJECT_PROP_TYPES_NO_EVENTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float, WithDefault} from 'CodegenTypes';\nimport type {ImageSource} from 'ImageSource';\nimport type {ColorValue, PointValue, EdgeInsetsValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  // Boolean props\n  boolean_required: $ReadOnly<{|prop: boolean|}>,\n  boolean_optional: $ReadOnly<{|prop?: WithDefault<boolean, false>|}>,\n\n  // String props\n  string_required: $ReadOnly<{|prop: string|}>,\n  string_optional: $ReadOnly<{|prop?: WithDefault<string, ''>|}>,\n\n  // Double props\n  double_required: $ReadOnly<{|prop: Double|}>,\n  double_optional: $ReadOnly<{|prop?: WithDefault<Double, 0.0>|}>,\n\n  // Float props\n  float_required: $ReadOnly<{|prop: Float|}>,\n  float_optional: $ReadOnly<{|prop?: WithDefault<Float, 0.0>|}>,\n\n  // Int32 props\n  int_required: $ReadOnly<{|prop: Int32|}>,\n  int_optional: $ReadOnly<{|prop?: WithDefault<Int32, 0>|}>,\n\n  // String enum props\n  enum_optional: $ReadOnly<{|\n    prop?: WithDefault<$ReadOnlyArray<'small' | 'large'>, 'small'>,\n  |}>,\n\n  // ImageSource props\n  image_required: $ReadOnly<{|prop: ImageSource|}>,\n  image_optional_key: $ReadOnly<{|prop?: ImageSource|}>,\n  image_optional_value: $ReadOnly<{|prop: ?ImageSource|}>,\n  image_optional_both: $ReadOnly<{|prop?: ?ImageSource|}>,\n\n  // ColorValue props\n  color_required: $ReadOnly<{|prop: ColorValue|}>,\n  color_optional_key: $ReadOnly<{|prop?: ColorValue|}>,\n  color_optional_value: $ReadOnly<{|prop: ?ColorValue|}>,\n  color_optional_both: $ReadOnly<{|prop?: ?ColorValue|}>,\n\n  // ProcessedColorValue props\n  processed_color_required: $ReadOnly<{|prop: ProcessedColorValue|}>,\n  processed_color_optional_key: $ReadOnly<{|prop?: ProcessedColorValue|}>,\n  processed_color_optional_value: $ReadOnly<{|prop: ?ProcessedColorValue|}>,\n  processed_color_optional_both: $ReadOnly<{|prop?: ?ProcessedColorValue|}>,\n\n  // PointValue props\n  point_required: $ReadOnly<{|prop: PointValue|}>,\n  point_optional_key: $ReadOnly<{|prop?: PointValue|}>,\n  point_optional_value: $ReadOnly<{|prop: ?PointValue|}>,\n  point_optional_both: $ReadOnly<{|prop?: ?PointValue|}>,\n\n  // EdgeInsetsValue props\n  insets_required: $ReadOnly<{|prop: EdgeInsetsValue|}>,\n  insets_optional_key: $ReadOnly<{|prop?: EdgeInsetsValue|}>,\n  insets_optional_value: $ReadOnly<{|prop: ?EdgeInsetsValue|}>,\n  insets_optional_both: $ReadOnly<{|prop?: ?EdgeInsetsValue|}>,\n\n  // DimensionValue props\n  dimension_required: $ReadOnly<{|prop: DimensionValue|}>,\n  dimension_optional_key: $ReadOnly<{|prop?: DimensionValue|}>,\n  dimension_optional_value: $ReadOnly<{|prop: ?DimensionValue|}>,\n  dimension_optional_both: $ReadOnly<{|prop?: ?DimensionValue|}>,\n\n  // Nested object props\n  object_required: $ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n  object_optional_key?: $ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n  object_optional_value: ?$ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n  object_optional_both?: ?$ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar PROPS_ALIASED_LOCALLY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\ntype DeepSpread = $ReadOnly<{|\n  otherStringProp: string,\n|}>;\n\nexport type PropsInFile = $ReadOnly<{|\n  ...DeepSpread,\n  isEnabled: boolean,\n  label: string,\n|}>;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  ...PropsInFile,\n\n  localType: $ReadOnly<{|\n    ...PropsInFile\n  |}>,\n\n  localArr: $ReadOnlyArray<PropsInFile>\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar EVENTS_DEFINED_INLINE_WITH_ALL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {HostComponent} from 'react-native';\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  Int32,\n  Double,\n  Float,\n  BubblingEventHandler,\n  DirectEventHandler,\n} from 'CodegenTypes';\n\nimport type {ViewProps} from 'ViewPropTypes';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n  // No Props\n\n  // Events\n  onDirectEventDefinedInline:\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineOptionalKey?:\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineOptionalValue: ?\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineOptionalBoth?: ?\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineWithPaperName?: ?\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n      'paperDirectEventDefinedInlineWithPaperName',\n    >,\n\n  onBubblingEventDefinedInline:\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineOptionalKey?:\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineOptionalValue: ?\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineOptionalBoth?: ?\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineWithPaperName?: ?\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n      'paperBubblingEventDefinedInlineWithPaperName'\n    >,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar EVENTS_DEFINED_AS_NULL_INLINE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {BubblingEventHandler, DirectEventHandler} from 'CodegenTypese';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n\n  // Events defined inline\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullOptionalKey?: DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullOptionalValue: ?DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullOptionalBoth?: DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullWithPaperName?: ?DirectEventHandler<\n    null,\n    'paperDirectEventDefinedInlineNullWithPaperName',\n  >,\n\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullOptionalKey?: BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullOptionalValue: ?BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullOptionalBoth?: ?BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullWithPaperName?: ?BubblingEventHandler<\n    null,\n    'paperBubblingEventDefinedInlineNullWithPaperName',\n  >,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar PROPS_AND_EVENTS_TYPES_EXPORTED = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nexport type EventInFile = $ReadOnly<{|\n  ${EVENT_DEFINITION}\n|}>;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n\n  // Events defined inline\n  onBubblingEventDefinedInline: BubblingEventHandler<EventInFile>,\n  onBubblingEventDefinedInlineWithPaperName: BubblingEventHandler<EventInFile, 'paperBubblingEventDefinedInlineWithPaperName'>,\n  onDirectEventDefinedInline: DirectEventHandler<EventInFile>,\n  onDirectEventDefinedInlineWithPaperName: DirectEventHandler<EventInFile, 'paperDirectEventDefinedInlineWithPaperName'>,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar PROPS_AS_EXTERNAL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {HostComponent} from 'react-native';\n\nexport type String = string;\nexport type AnotherArray = $ReadOnlyArray<String>;\n\nexport type ModuleProps = $ReadOnly<{|\n  disable: String,\n  array: AnotherArray,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nvar COMMANDS_DEFINED_WITH_ALL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeCommands = require('codegenNativeCommands');\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float} from 'CodegenTypes';\nimport type {RootTag} from 'RCTExport';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n  // No props or events\n|}>;\n\ntype NativeType = HostComponent<ModuleProps>;\n\ninterface NativeCommands {\n  +handleRootTag: (viewRef: React.ElementRef<NativeType>, rootTag: RootTag) => void;\n  +hotspotUpdate: (viewRef: React.ElementRef<NativeType>, x: Int32, y: Int32) => void;\n  scrollTo(\n    viewRef: React.ElementRef<NativeType>,\n    x: Float,\n    y: Int32,\n    z: Double,\n    animated: boolean,\n  ): void;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['handleRootTag', 'hotspotUpdate', 'scrollTo'],\n});\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): NativeType);\n`;\nvar COMMANDS_WITH_EXTERNAL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeCommands = require('codegenNativeCommands');\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nexport type Boolean = boolean;\nexport type Int = Int32;\nexport type Void = void;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n  // No props or events\n|}>;\n\ntype NativeType = HostComponent<ModuleProps>;\n\nexport type ScrollTo = (\n  viewRef: React.ElementRef<NativeType>,\n  y: Int,\n  animated: Boolean,\n) => Void;\n\ninterface NativeCommands {\n  +scrollTo: ScrollTo;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['scrollTo'],\n});\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): NativeType);\n`;\nvar COMMANDS_EVENTS_TYPES_EXPORTED = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nexport type EventInFile = $ReadOnly<{|\n  ${EVENT_DEFINITION}\n|}>;\n\nexport type Boolean = boolean;\nexport type Int = Int32;\nexport type Void = void;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n\n  // Events defined inline\n  onBubblingEventDefinedInline: BubblingEventHandler<EventInFile>,\n  onBubblingEventDefinedInlineWithPaperName: BubblingEventHandler<EventInFile, 'paperBubblingEventDefinedInlineWithPaperName'>,\n  onDirectEventDefinedInline: DirectEventHandler<EventInFile>,\n  onDirectEventDefinedInlineWithPaperName: DirectEventHandler<EventInFile, 'paperDirectEventDefinedInlineWithPaperName'>,\n|}>;\n\ntype NativeType = HostComponent<ModuleProps>;\n\nexport type ScrollTo = (viewRef: React.ElementRef<NativeType>, y: Int, animated: Boolean) => Void;\n\ninterface NativeCommands {\n  +scrollTo: ScrollTo;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['scrollTo']\n});\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): NativeType);\n`;\nmodule.exports = {\n  ALL_PROP_TYPES_NO_EVENTS: ALL_PROP_TYPES_NO_EVENTS,\n  ARRAY_PROP_TYPES_NO_EVENTS: ARRAY_PROP_TYPES_NO_EVENTS,\n  OBJECT_PROP_TYPES_NO_EVENTS: OBJECT_PROP_TYPES_NO_EVENTS,\n  PROPS_ALIASED_LOCALLY: PROPS_ALIASED_LOCALLY,\n  ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS: ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS,\n  ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS_NO_CAST: ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS_NO_CAST,\n  NO_PROPS_EVENTS_ONLY_DEPRECATED_VIEW_CONFIG_NAME_OPTION: NO_PROPS_EVENTS_ONLY_DEPRECATED_VIEW_CONFIG_NAME_OPTION,\n  EVENTS_DEFINED_INLINE_WITH_ALL_TYPES: EVENTS_DEFINED_INLINE_WITH_ALL_TYPES,\n  EVENTS_DEFINED_AS_NULL_INLINE: EVENTS_DEFINED_AS_NULL_INLINE,\n  PROPS_AND_EVENTS_TYPES_EXPORTED: PROPS_AND_EVENTS_TYPES_EXPORTED,\n  COMMANDS_EVENTS_TYPES_EXPORTED: COMMANDS_EVENTS_TYPES_EXPORTED,\n  COMMANDS_DEFINED_WITH_ALL_TYPES: COMMANDS_DEFINED_WITH_ALL_TYPES,\n  PROPS_AS_EXTERNAL_TYPES: PROPS_AS_EXTERNAL_TYPES,\n  COMMANDS_WITH_EXTERNAL_TYPES: COMMANDS_WITH_EXTERNAL_TYPES\n};","map":{"version":3,"names":["EVENT_DEFINITION","ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS","ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS_NO_CAST","NO_PROPS_EVENTS_ONLY_DEPRECATED_VIEW_CONFIG_NAME_OPTION","ALL_PROP_TYPES_NO_EVENTS","ARRAY_PROP_TYPES_NO_EVENTS","OBJECT_PROP_TYPES_NO_EVENTS","PROPS_ALIASED_LOCALLY","EVENTS_DEFINED_INLINE_WITH_ALL_TYPES","EVENTS_DEFINED_AS_NULL_INLINE","PROPS_AND_EVENTS_TYPES_EXPORTED","PROPS_AS_EXTERNAL_TYPES","COMMANDS_DEFINED_WITH_ALL_TYPES","COMMANDS_WITH_EXTERNAL_TYPES","COMMANDS_EVENTS_TYPES_EXPORTED","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/parsers/flow/components/__test_fixtures__/fixtures.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n// @licenselint-loose-mode\n\n'use strict';\n\nconst EVENT_DEFINITION = `\n  boolean_required: boolean,\n  boolean_optional_key?: boolean,\n  boolean_optional_value: ?boolean,\n  boolean_optional_both?: ?boolean,\n\n  string_required: string,\n  string_optional_key?: string,\n  string_optional_value: ?string,\n  string_optional_both?: ?string,\n\n  double_required: Double,\n  double_optional_key?: Double,\n  double_optional_value: ?Double,\n  double_optional_both?: ?Double,\n\n  float_required: Float,\n  float_optional_key?: Float,\n  float_optional_value: ?Float,\n  float_optional_both?: ?Float,\n\n  int32_required: Int32,\n  int32_optional_key?: Int32,\n  int32_optional_value: ?Int32,\n  int32_optional_both?: ?Int32,\n\n  enum_required: ('small' | 'large'),\n  enum_optional_key?: ('small' | 'large'),\n  enum_optional_value: ?('small' | 'large'),\n  enum_optional_both?: ?('small' | 'large'),\n\n  object_required: {\n    boolean_required: boolean,\n  },\n\n  object_optional_key?: {\n    string_optional_key?: string,\n  },\n\n  object_optional_value: ?{\n    float_optional_value: ?Float,\n  },\n\n  object_optional_both?: ?{\n    int32_optional_both?: ?Int32,\n  },\n\n  object_required_nested_2_layers: {\n    object_optional_nested_1_layer?: ?{\n      boolean_required: Int32,\n      string_optional_key?: string,\n      double_optional_value: ?Double,\n      float_optional_value: ?Float,\n      int32_optional_both?: ?Int32,\n    }\n  },\n\n  object_readonly_required: $ReadOnly<{\n    boolean_required: boolean,\n  }>,\n\n  object_readonly_optional_key?: $ReadOnly<{\n    string_optional_key?: string,\n  }>,\n\n  object_readonly_optional_value: ?$ReadOnly<{\n    float_optional_value: ?Float,\n  }>,\n\n  object_readonly_optional_both?: ?$ReadOnly<{\n    int32_optional_both?: ?Int32,\n  }>,\n`;\nconst ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  WithDefault,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\n\n  // Events\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>('Module', {\n  interfaceOnly: true,\n  paperComponentName: 'RCTModule',\n}): HostComponent<ModuleProps>);\n`;\nconst ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS_NO_CAST = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n  WithDefault,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  boolean_default_true_optional_both?: WithDefault<boolean, true>,\n\n  // Events\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n|}>;\n\nexport default codegenNativeComponent<ModuleProps>('Module', {\n  interfaceOnly: true,\n  excludedPlatforms: ['android'],\n  paperComponentName: 'RCTModule',\n});\n`;\nconst NO_PROPS_EVENTS_ONLY_DEPRECATED_VIEW_CONFIG_NAME_OPTION = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>('Module', {\n  deprecatedViewConfigName: 'DeprecateModuleName',\n}): HostComponent<ModuleProps>);\n`;\nconst ALL_PROP_TYPES_NO_EVENTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float, WithDefault, UnsafeMixed} from 'CodegenTypes';\nimport type {ImageSource} from 'ImageSource';\nimport type {ColorValue, ColorArrayValue, PointValue, EdgeInsetsValue, DimensionValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  // Boolean props\n  boolean_required: boolean,\n  boolean_optional_key?: WithDefault<boolean, true>,\n  boolean_optional_both?: WithDefault<boolean, true>,\n\n  // Boolean props, null default\n  boolean_null_optional_key?: WithDefault<boolean, null>,\n  boolean_null_optional_both?: WithDefault<boolean, null>,\n\n  // String props\n  string_required: string,\n  string_optional_key?: WithDefault<string, ''>,\n  string_optional_both?: WithDefault<string, ''>,\n\n  // String props, null default\n  string_null_optional_key?: WithDefault<string, null>,\n  string_null_optional_both?: WithDefault<string, null>,\n\n  // Stringish props\n  stringish_required: Stringish,\n  stringish_optional_key?: WithDefault<Stringish, ''>,\n  stringish_optional_both?: WithDefault<Stringish, ''>,\n\n  // Stringish props, null default\n  stringish_null_optional_key?: WithDefault<Stringish, null>,\n  stringish_null_optional_both?: WithDefault<Stringish, null>,\n\n  // Double props\n  double_required: Double,\n  double_optional_key?: WithDefault<Double, 1.1>,\n  double_optional_both?: WithDefault<Double, 1.1>,\n\n  // Float props\n  float_required: Float,\n  float_optional_key?: WithDefault<Float, 1.1>,\n  float_optional_both?: WithDefault<Float, 1.1>,\n\n  // Float props, null default\n  float_null_optional_key?: WithDefault<Float, null>,\n  float_null_optional_both?: WithDefault<Float, null>,\n\n  // Int32 props\n  int32_required: Int32,\n  int32_optional_key?: WithDefault<Int32, 1>,\n  int32_optional_both?: WithDefault<Int32, 1>,\n\n  // String enum props\n  enum_optional_key?: WithDefault<'small' | 'large', 'small'>,\n  enum_optional_both?: WithDefault<'small' | 'large', 'small'>,\n\n  // Int enum props\n  int_enum_optional_key?: WithDefault<0 | 1, 0>,\n\n  // Object props\n  object_optional_key?: $ReadOnly<{| prop: string |}>,\n  object_optional_both?: ?$ReadOnly<{| prop: string |}>,\n  object_optional_value: ?$ReadOnly<{| prop: string |}>,\n\n  // ImageSource props\n  image_required: ImageSource,\n  image_optional_value: ?ImageSource,\n  image_optional_both?: ?ImageSource,\n\n  // ColorValue props\n  color_required: ColorValue,\n  color_optional_key?: ColorValue,\n  color_optional_value: ?ColorValue,\n  color_optional_both?: ?ColorValue,\n\n  // ColorArrayValue props\n  color_array_required: ColorArrayValue,\n  color_array_optional_key?: ColorArrayValue,\n  color_array_optional_value: ?ColorArrayValue,\n  color_array_optional_both?: ?ColorArrayValue,\n\n  // ProcessedColorValue props\n  processed_color_required: ProcessedColorValue,\n  processed_color_optional_key?: ProcessedColorValue,\n  processed_color_optional_value: ?ProcessedColorValue,\n  processed_color_optional_both?: ?ProcessedColorValue,\n\n  // PointValue props\n  point_required: PointValue,\n  point_optional_key?: PointValue,\n  point_optional_value: ?PointValue,\n  point_optional_both?: ?PointValue,\n\n  // EdgeInsets props\n  insets_required: EdgeInsetsValue,\n  insets_optional_key?: EdgeInsetsValue,\n  insets_optional_value: ?EdgeInsetsValue,\n  insets_optional_both?: ?EdgeInsetsValue,\n\n  // DimensionValue props\n  dimension_required: DimensionValue,\n  dimension_optional_key?: DimensionValue,\n  dimension_optional_value: ?DimensionValue,\n  dimension_optional_both?: ?DimensionValue,\n\n  // Mixed props\n  mixed_required: UnsafeMixed,\n  mixed_optional_key?: UnsafeMixed,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps, Options>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst ARRAY_PROP_TYPES_NO_EVENTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float, WithDefault} from 'CodegenTypes';\nimport type {ImageSource} from 'ImageSource';\nimport type {ColorValue, PointValue, ProcessColorValue, EdgeInsetsValue, DimensionValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ObjectType = $ReadOnly<{| prop: string |}>;\ntype ArrayObjectType = $ReadOnlyArray<$ReadOnly<{| prop: string |}>>;\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  // Boolean props\n  array_boolean_required: $ReadOnlyArray<boolean>,\n  array_boolean_optional_key?: $ReadOnlyArray<boolean>,\n  array_boolean_optional_value: ?$ReadOnlyArray<boolean>,\n  array_boolean_optional_both?: ?$ReadOnlyArray<boolean>,\n\n  // String props\n  array_string_required: $ReadOnlyArray<string>,\n  array_string_optional_key?: $ReadOnlyArray<string>,\n  array_string_optional_value: ?$ReadOnlyArray<string>,\n  array_string_optional_both?: ?$ReadOnlyArray<string>,\n\n  // Double props\n  array_double_required: $ReadOnlyArray<Double>,\n  array_double_optional_key?: $ReadOnlyArray<Double>,\n  array_double_optional_value: ?$ReadOnlyArray<Double>,\n  array_double_optional_both?: ?$ReadOnlyArray<Double>,\n\n  // Float props\n  array_float_required: $ReadOnlyArray<Float>,\n  array_float_optional_key?: $ReadOnlyArray<Float>,\n  array_float_optional_value: ?$ReadOnlyArray<Float>,\n  array_float_optional_both?: ?$ReadOnlyArray<Float>,\n\n  // Int32 props\n  array_int32_required: $ReadOnlyArray<Int32>,\n  array_int32_optional_key?: $ReadOnlyArray<Int32>,\n  array_int32_optional_value: ?$ReadOnlyArray<Int32>,\n  array_int32_optional_both?: ?$ReadOnlyArray<Int32>,\n\n  // String enum props\n  array_enum_optional_key?: WithDefault<\n    $ReadOnlyArray<'small' | 'large'>,\n    'small',\n  >,\n  array_enum_optional_both?: WithDefault<\n    $ReadOnlyArray<'small' | 'large'>,\n    'small',\n  >,\n\n  // ImageSource props\n  array_image_required: $ReadOnlyArray<ImageSource>,\n  array_image_optional_key?: $ReadOnlyArray<ImageSource>,\n  array_image_optional_value: ?$ReadOnlyArray<ImageSource>,\n  array_image_optional_both?: ?$ReadOnlyArray<ImageSource>,\n\n  // ColorValue props\n  array_color_required: $ReadOnlyArray<ColorValue>,\n  array_color_optional_key?: $ReadOnlyArray<ColorValue>,\n  array_color_optional_value: ?$ReadOnlyArray<ColorValue>,\n  array_color_optional_both?: ?$ReadOnlyArray<ColorValue>,\n\n  // PointValue props\n  array_point_required: $ReadOnlyArray<PointValue>,\n  array_point_optional_key?: $ReadOnlyArray<PointValue>,\n  array_point_optional_value: ?$ReadOnlyArray<PointValue>,\n  array_point_optional_both?: ?$ReadOnlyArray<PointValue>,\n\n  // EdgeInsetsValue props\n  array_insets_required: $ReadOnlyArray<EdgeInsetsValue>,\n  array_insets_optional_key?: $ReadOnlyArray<EdgeInsetsValue>,\n  array_insets_optional_value: ?$ReadOnlyArray<EdgeInsetsValue>,\n  array_insets_optional_both?: ?$ReadOnlyArray<EdgeInsetsValue>,\n\n  // DimensionValue props\n  array_dimension_required: $ReadOnlyArray<DimensionValue>,\n  array_dimension_optional_key?: $ReadOnlyArray<DimensionValue>,\n  array_dimension_optional_value: ?$ReadOnlyArray<DimensionValue>,\n  array_dimension_optional_both?: ?$ReadOnlyArray<DimensionValue>,\n\n  // Object props\n  array_object_required: $ReadOnlyArray<$ReadOnly<{| prop: string |}>>,\n  array_object_optional_key?: $ReadOnlyArray<$ReadOnly<{| prop: string |}>>,\n  array_object_optional_value: ?ArrayObjectType,\n  array_object_optional_both?: ?$ReadOnlyArray<ObjectType>,\n\n  // Nested array object types\n  array_of_array_object_required: $ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_required: $ReadOnlyArray<$ReadOnly<{| prop: string |}>>,\n    |}>\n  >,\n  array_of_array_object_optional_key?: $ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_optional_key: $ReadOnlyArray<$ReadOnly<{| prop?: string |}>>,\n    |}>\n  >,\n  array_of_array_object_optional_value: ?$ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_optional_value: $ReadOnlyArray<$ReadOnly<{| prop: ?string |}>>,\n    |}>\n  >,\n  array_of_array_object_optional_both?: ?$ReadOnlyArray<\n    $ReadOnly<{|\n      // This needs to be the same name as the top level array above\n      array_object_optional_both: $ReadOnlyArray<$ReadOnly<{| prop?: ?string |}>>,\n    |}>\n  >,\n\n  // Nested array of array of object types\n  array_of_array_of_object_required: $ReadOnlyArray<\n    $ReadOnlyArray<\n      $ReadOnly<{|\n        prop: string,\n      |}>,\n    >,\n  >,\n\n  // Nested array of array of object types (in file)\n  array_of_array_of_object_required_in_file: $ReadOnlyArray<\n    $ReadOnlyArray<ObjectType>,\n  >,\n\n  // Nested array of array of object types (with spread)\n  array_of_array_of_object_required_with_spread: $ReadOnlyArray<\n    $ReadOnlyArray<\n      $ReadOnly<{|\n        ...ObjectType\n      |}>,\n    >,\n  >,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst OBJECT_PROP_TYPES_NO_EVENTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float, WithDefault} from 'CodegenTypes';\nimport type {ImageSource} from 'ImageSource';\nimport type {ColorValue, PointValue, EdgeInsetsValue} from 'StyleSheetTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // Props\n  // Boolean props\n  boolean_required: $ReadOnly<{|prop: boolean|}>,\n  boolean_optional: $ReadOnly<{|prop?: WithDefault<boolean, false>|}>,\n\n  // String props\n  string_required: $ReadOnly<{|prop: string|}>,\n  string_optional: $ReadOnly<{|prop?: WithDefault<string, ''>|}>,\n\n  // Double props\n  double_required: $ReadOnly<{|prop: Double|}>,\n  double_optional: $ReadOnly<{|prop?: WithDefault<Double, 0.0>|}>,\n\n  // Float props\n  float_required: $ReadOnly<{|prop: Float|}>,\n  float_optional: $ReadOnly<{|prop?: WithDefault<Float, 0.0>|}>,\n\n  // Int32 props\n  int_required: $ReadOnly<{|prop: Int32|}>,\n  int_optional: $ReadOnly<{|prop?: WithDefault<Int32, 0>|}>,\n\n  // String enum props\n  enum_optional: $ReadOnly<{|\n    prop?: WithDefault<$ReadOnlyArray<'small' | 'large'>, 'small'>,\n  |}>,\n\n  // ImageSource props\n  image_required: $ReadOnly<{|prop: ImageSource|}>,\n  image_optional_key: $ReadOnly<{|prop?: ImageSource|}>,\n  image_optional_value: $ReadOnly<{|prop: ?ImageSource|}>,\n  image_optional_both: $ReadOnly<{|prop?: ?ImageSource|}>,\n\n  // ColorValue props\n  color_required: $ReadOnly<{|prop: ColorValue|}>,\n  color_optional_key: $ReadOnly<{|prop?: ColorValue|}>,\n  color_optional_value: $ReadOnly<{|prop: ?ColorValue|}>,\n  color_optional_both: $ReadOnly<{|prop?: ?ColorValue|}>,\n\n  // ProcessedColorValue props\n  processed_color_required: $ReadOnly<{|prop: ProcessedColorValue|}>,\n  processed_color_optional_key: $ReadOnly<{|prop?: ProcessedColorValue|}>,\n  processed_color_optional_value: $ReadOnly<{|prop: ?ProcessedColorValue|}>,\n  processed_color_optional_both: $ReadOnly<{|prop?: ?ProcessedColorValue|}>,\n\n  // PointValue props\n  point_required: $ReadOnly<{|prop: PointValue|}>,\n  point_optional_key: $ReadOnly<{|prop?: PointValue|}>,\n  point_optional_value: $ReadOnly<{|prop: ?PointValue|}>,\n  point_optional_both: $ReadOnly<{|prop?: ?PointValue|}>,\n\n  // EdgeInsetsValue props\n  insets_required: $ReadOnly<{|prop: EdgeInsetsValue|}>,\n  insets_optional_key: $ReadOnly<{|prop?: EdgeInsetsValue|}>,\n  insets_optional_value: $ReadOnly<{|prop: ?EdgeInsetsValue|}>,\n  insets_optional_both: $ReadOnly<{|prop?: ?EdgeInsetsValue|}>,\n\n  // DimensionValue props\n  dimension_required: $ReadOnly<{|prop: DimensionValue|}>,\n  dimension_optional_key: $ReadOnly<{|prop?: DimensionValue|}>,\n  dimension_optional_value: $ReadOnly<{|prop: ?DimensionValue|}>,\n  dimension_optional_both: $ReadOnly<{|prop?: ?DimensionValue|}>,\n\n  // Nested object props\n  object_required: $ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n  object_optional_key?: $ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n  object_optional_value: ?$ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n  object_optional_both?: ?$ReadOnly<{|prop: $ReadOnly<{nestedProp: string}>|}>,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst PROPS_ALIASED_LOCALLY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\ntype DeepSpread = $ReadOnly<{|\n  otherStringProp: string,\n|}>;\n\nexport type PropsInFile = $ReadOnly<{|\n  ...DeepSpread,\n  isEnabled: boolean,\n  label: string,\n|}>;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  ...PropsInFile,\n\n  localType: $ReadOnly<{|\n    ...PropsInFile\n  |}>,\n\n  localArr: $ReadOnlyArray<PropsInFile>\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst EVENTS_DEFINED_INLINE_WITH_ALL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {HostComponent} from 'react-native';\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {\n  Int32,\n  Double,\n  Float,\n  BubblingEventHandler,\n  DirectEventHandler,\n} from 'CodegenTypes';\n\nimport type {ViewProps} from 'ViewPropTypes';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n  // No Props\n\n  // Events\n  onDirectEventDefinedInline:\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineOptionalKey?:\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineOptionalValue: ?\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineOptionalBoth?: ?\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onDirectEventDefinedInlineWithPaperName?: ?\n    DirectEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n      'paperDirectEventDefinedInlineWithPaperName',\n    >,\n\n  onBubblingEventDefinedInline:\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineOptionalKey?:\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineOptionalValue: ?\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineOptionalBoth?: ?\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n    >,\n\n  onBubblingEventDefinedInlineWithPaperName?: ?\n    BubblingEventHandler<\n      $ReadOnly<{|\n        ${EVENT_DEFINITION}\n      |}>,\n      'paperBubblingEventDefinedInlineWithPaperName'\n    >,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst EVENTS_DEFINED_AS_NULL_INLINE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {BubblingEventHandler, DirectEventHandler} from 'CodegenTypese';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\ntype ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n\n  // Events defined inline\n  onDirectEventDefinedInlineNull: DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullOptionalKey?: DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullOptionalValue: ?DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullOptionalBoth?: DirectEventHandler<null>,\n  onDirectEventDefinedInlineNullWithPaperName?: ?DirectEventHandler<\n    null,\n    'paperDirectEventDefinedInlineNullWithPaperName',\n  >,\n\n  onBubblingEventDefinedInlineNull: BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullOptionalKey?: BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullOptionalValue: ?BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullOptionalBoth?: ?BubblingEventHandler<null>,\n  onBubblingEventDefinedInlineNullWithPaperName?: ?BubblingEventHandler<\n    null,\n    'paperBubblingEventDefinedInlineNullWithPaperName',\n  >,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst PROPS_AND_EVENTS_TYPES_EXPORTED = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nexport type EventInFile = $ReadOnly<{|\n  ${EVENT_DEFINITION}\n|}>;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n\n  // Events defined inline\n  onBubblingEventDefinedInline: BubblingEventHandler<EventInFile>,\n  onBubblingEventDefinedInlineWithPaperName: BubblingEventHandler<EventInFile, 'paperBubblingEventDefinedInlineWithPaperName'>,\n  onDirectEventDefinedInline: DirectEventHandler<EventInFile>,\n  onDirectEventDefinedInlineWithPaperName: DirectEventHandler<EventInFile, 'paperDirectEventDefinedInlineWithPaperName'>,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst PROPS_AS_EXTERNAL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {HostComponent} from 'react-native';\n\nexport type String = string;\nexport type AnotherArray = $ReadOnlyArray<String>;\n\nexport type ModuleProps = $ReadOnly<{|\n  disable: String,\n  array: AnotherArray,\n|}>;\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): HostComponent<ModuleProps>);\n`;\nconst COMMANDS_DEFINED_WITH_ALL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeCommands = require('codegenNativeCommands');\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32, Double, Float} from 'CodegenTypes';\nimport type {RootTag} from 'RCTExport';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n  // No props or events\n|}>;\n\ntype NativeType = HostComponent<ModuleProps>;\n\ninterface NativeCommands {\n  +handleRootTag: (viewRef: React.ElementRef<NativeType>, rootTag: RootTag) => void;\n  +hotspotUpdate: (viewRef: React.ElementRef<NativeType>, x: Int32, y: Int32) => void;\n  scrollTo(\n    viewRef: React.ElementRef<NativeType>,\n    x: Float,\n    y: Int32,\n    z: Double,\n    animated: boolean,\n  ): void;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['handleRootTag', 'hotspotUpdate', 'scrollTo'],\n});\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): NativeType);\n`;\nconst COMMANDS_WITH_EXTERNAL_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst codegenNativeCommands = require('codegenNativeCommands');\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nimport type {Int32} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nexport type Boolean = boolean;\nexport type Int = Int32;\nexport type Void = void;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n  // No props or events\n|}>;\n\ntype NativeType = HostComponent<ModuleProps>;\n\nexport type ScrollTo = (\n  viewRef: React.ElementRef<NativeType>,\n  y: Int,\n  animated: Boolean,\n) => Void;\n\ninterface NativeCommands {\n  +scrollTo: ScrollTo;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['scrollTo'],\n});\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): NativeType);\n`;\nconst COMMANDS_EVENTS_TYPES_EXPORTED = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {\n  BubblingEventHandler,\n  DirectEventHandler,\n} from 'CodegenTypes';\nimport type {ViewProps} from 'ViewPropTypes';\nimport type {HostComponent} from 'react-native';\n\nconst codegenNativeComponent = require('codegenNativeComponent');\n\nexport type EventInFile = $ReadOnly<{|\n  ${EVENT_DEFINITION}\n|}>;\n\nexport type Boolean = boolean;\nexport type Int = Int32;\nexport type Void = void;\n\nexport type ModuleProps = $ReadOnly<{|\n  ...ViewProps,\n\n  // No props\n\n  // Events defined inline\n  onBubblingEventDefinedInline: BubblingEventHandler<EventInFile>,\n  onBubblingEventDefinedInlineWithPaperName: BubblingEventHandler<EventInFile, 'paperBubblingEventDefinedInlineWithPaperName'>,\n  onDirectEventDefinedInline: DirectEventHandler<EventInFile>,\n  onDirectEventDefinedInlineWithPaperName: DirectEventHandler<EventInFile, 'paperDirectEventDefinedInlineWithPaperName'>,\n|}>;\n\ntype NativeType = HostComponent<ModuleProps>;\n\nexport type ScrollTo = (viewRef: React.ElementRef<NativeType>, y: Int, animated: Boolean) => Void;\n\ninterface NativeCommands {\n  +scrollTo: ScrollTo;\n}\n\nexport const Commands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['scrollTo']\n});\n\nexport default (codegenNativeComponent<ModuleProps>(\n  'Module',\n): NativeType);\n`;\nmodule.exports = {\n  ALL_PROP_TYPES_NO_EVENTS,\n  ARRAY_PROP_TYPES_NO_EVENTS,\n  OBJECT_PROP_TYPES_NO_EVENTS,\n  PROPS_ALIASED_LOCALLY,\n  ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS,\n  ONE_OF_EACH_PROP_EVENT_DEFAULT_AND_OPTIONS_NO_CAST,\n  NO_PROPS_EVENTS_ONLY_DEPRECATED_VIEW_CONFIG_NAME_OPTION,\n  EVENTS_DEFINED_INLINE_WITH_ALL_TYPES,\n  EVENTS_DEFINED_AS_NULL_INLINE,\n  PROPS_AND_EVENTS_TYPES_EXPORTED,\n  COMMANDS_EVENTS_TYPES_EXPORTED,\n  COMMANDS_DEFINED_WITH_ALL_TYPES,\n  PROPS_AS_EXTERNAL_TYPES,\n  COMMANDS_WITH_EXTERNAL_TYPES,\n};\n"],"mappings":"AAUA;AAEA,YAAY;;AAEZ,IAAMA,gBAAgB,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0CAA0C,GAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,kDAAkD,GAAI;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,uDAAuD,GAAI;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wBAAwB,GAAI;AAClprC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,qBAAqB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oCAAoC,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUR,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAUA,gBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMS,6BAA6B,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,+BAA+B,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIV,gBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMW,uBAAuB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,+BAA+B,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,4BAA4B,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,8BAA8B,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAId,gBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDe,MAAM,CAACC,OAAO,GAAG;EACfZ,wBAAwB,EAAxBA,wBAAwB;EACxBC,0BAA0B,EAA1BA,0BAA0B;EAC1BC,2BAA2B,EAA3BA,2BAA2B;EAC3BC,qBAAqB,EAArBA,qBAAqB;EACrBN,0CAA0C,EAA1CA,0CAA0C;EAC1CC,kDAAkD,EAAlDA,kDAAkD;EAClDC,uDAAuD,EAAvDA,uDAAuD;EACvDK,oCAAoC,EAApCA,oCAAoC;EACpCC,6BAA6B,EAA7BA,6BAA6B;EAC7BC,+BAA+B,EAA/BA,+BAA+B;EAC/BI,8BAA8B,EAA9BA,8BAA8B;EAC9BF,+BAA+B,EAA/BA,+BAA+B;EAC/BD,uBAAuB,EAAvBA,uBAAuB;EACvBE,4BAA4B,EAA5BA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}