{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserDefinedFaviconFile = getUserDefinedFaviconFile;\nexports.getVirtualFaviconAssetsAsync = getVirtualFaviconAssetsAsync;\nexports.getFaviconFromExpoConfigAsync = getFaviconFromExpoConfigAsync;\nvar _config = require(\"@expo/config\");\nvar _imageUtils = require(\"@expo/image-utils\");\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _publicFolder = require(\"./publicFolder\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:favicon\");\nfunction getUserDefinedFaviconFile(projectRoot) {\n  return (0, _publicFolder).getUserDefinedFile(projectRoot, [\"./favicon.ico\"]);\n}\nfunction getVirtualFaviconAssetsAsync(_x, _x2) {\n  return _getVirtualFaviconAssetsAsync.apply(this, arguments);\n}\nfunction _getVirtualFaviconAssetsAsync() {\n  _getVirtualFaviconAssetsAsync = _asyncToGenerator(function* (projectRoot, outputDir) {\n    var existing = getUserDefinedFaviconFile(projectRoot);\n    if (existing) {\n      debug(\"Using user-defined favicon.ico file.\");\n      return null;\n    }\n    var data = yield getFaviconFromExpoConfigAsync(projectRoot);\n    if (!data) {\n      return null;\n    }\n    yield Promise.all([data].map(function (asset) {\n      var assetPath = _path.default.join(outputDir, asset.path);\n      debug(\"Writing asset to disk: \" + assetPath);\n      return _fs.default.promises.writeFile(assetPath, asset.source);\n    }));\n    return injectFaviconTag;\n  });\n  return _getVirtualFaviconAssetsAsync.apply(this, arguments);\n}\nfunction injectFaviconTag(html) {\n  if (!html.includes(\"</head>\")) {\n    return html;\n  }\n  return html.replace(\"</head>\", `<link rel=\"shortcut icon\" href=\"/favicon.ico\" /></head>`);\n}\nfunction getFaviconFromExpoConfigAsync(_x3) {\n  return _getFaviconFromExpoConfigAsync.apply(this, arguments);\n}\nfunction _getFaviconFromExpoConfigAsync() {\n  _getFaviconFromExpoConfigAsync = _asyncToGenerator(function* (projectRoot) {\n    var ref;\n    var _getConfig = (0, _config).getConfig(projectRoot),\n      exp = _getConfig.exp;\n    var ref1;\n    var src = (ref1 = (ref = exp.web) == null ? void 0 : ref.favicon) != null ? ref1 : null;\n    if (!src) {\n      return null;\n    }\n    var dims = [16, 32, 48];\n    var cacheType = \"favicon\";\n    var size = dims[dims.length - 1];\n    var _yield$generateImageA = yield (0, _imageUtils).generateImageAsync({\n        projectRoot: projectRoot,\n        cacheType: cacheType\n      }, {\n        resizeMode: \"contain\",\n        src: src,\n        backgroundColor: \"transparent\",\n        width: size,\n        height: size,\n        name: `favicon-${size}.png`\n      }),\n      source = _yield$generateImageA.source;\n    var faviconBuffer = yield (0, _imageUtils).generateFaviconAsync(source, dims);\n    return {\n      source: faviconBuffer,\n      path: \"favicon.ico\"\n    };\n  });\n  return _getFaviconFromExpoConfigAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","getUserDefinedFaviconFile","getVirtualFaviconAssetsAsync","getFaviconFromExpoConfigAsync","_config","_imageUtils","_fs","_interopRequireDefault","_path","_publicFolder","debug","projectRoot","getUserDefinedFile","_x","_x2","_getVirtualFaviconAssetsAsync","apply","arguments","outputDir","existing","data","Promise","all","map","asset","assetPath","default","join","path","promises","writeFile","source","injectFaviconTag","html","includes","replace","_x3","_getFaviconFromExpoConfigAsync","ref","_getConfig","getConfig","exp","ref1","src","web","favicon","dims","cacheType","size","length","_yield$generateImageA","generateImageAsync","resizeMode","backgroundColor","width","height","name","faviconBuffer","generateFaviconAsync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\export\\favicon.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport { generateFaviconAsync, generateImageAsync } from '@expo/image-utils';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { getUserDefinedFile } from './publicFolder';\n\nconst debug = require('debug')('expo:favicon') as typeof console.log;\n\n/** @returns the file system path for a user-defined favicon.ico file in the public folder. */\nexport function getUserDefinedFaviconFile(projectRoot: string): string | null {\n  return getUserDefinedFile(projectRoot, ['./favicon.ico']);\n}\n\nexport async function getVirtualFaviconAssetsAsync(\n  projectRoot: string,\n  outputDir: string\n): Promise<((html: string) => string) | null> {\n  const existing = getUserDefinedFaviconFile(projectRoot);\n  if (existing) {\n    debug('Using user-defined favicon.ico file.');\n    return null;\n  }\n\n  const data = await getFaviconFromExpoConfigAsync(projectRoot);\n\n  if (!data) {\n    return null;\n  }\n\n  await Promise.all(\n    [data].map((asset) => {\n      const assetPath = path.join(outputDir, asset.path);\n      debug('Writing asset to disk: ' + assetPath);\n      return fs.promises.writeFile(assetPath, asset.source);\n    })\n  );\n\n  return injectFaviconTag;\n}\n\nfunction injectFaviconTag(html: string): string {\n  if (!html.includes('</head>')) {\n    return html;\n  }\n  return html.replace('</head>', `<link rel=\"shortcut icon\" href=\"/favicon.ico\" /></head>`);\n}\n\nexport async function getFaviconFromExpoConfigAsync(projectRoot: string) {\n  const { exp } = getConfig(projectRoot);\n\n  const src = exp.web?.favicon ?? null;\n  if (!src) {\n    return null;\n  }\n\n  const dims = [16, 32, 48];\n  const cacheType = 'favicon';\n\n  const size = dims[dims.length - 1];\n  const { source } = await generateImageAsync(\n    { projectRoot, cacheType },\n    {\n      resizeMode: 'contain',\n      src,\n      backgroundColor: 'transparent',\n      width: size,\n      height: size,\n      name: `favicon-${size}.png`,\n    }\n  );\n\n  const faviconBuffer = await generateFaviconAsync(source, dims);\n\n  return { source: faviconBuffer, path: 'favicon.ico' };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}