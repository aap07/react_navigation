{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nvar _assetCatalogIOS = require(\"./assetCatalogIOS\");\nvar _filterPlatformAssetScales = _interopRequireDefault(require(\"./filterPlatformAssetScales\"));\nvar _getAssetDestPathAndroid = _interopRequireDefault(require(\"./getAssetDestPathAndroid\"));\nvar _getAssetDestPathIOS = _interopRequireDefault(require(\"./getAssetDestPathIOS\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction saveAssets(assets, platform, assetsDest, assetCatalogDest) {\n  if (!assetsDest) {\n    _cliTools().logger.warn('Assets destination folder is not set, skipping...');\n    return;\n  }\n  var filesToCopy = Object.create(null);\n  var getAssetDestPath = platform === 'android' ? _getAssetDestPathAndroid.default : _getAssetDestPathIOS.default;\n  var addAssetToCopy = function addAssetToCopy(asset) {\n    var validScales = new Set((0, _filterPlatformAssetScales.default)(platform, asset.scales));\n    asset.scales.forEach(function (scale, idx) {\n      if (!validScales.has(scale)) {\n        return;\n      }\n      var src = asset.files[idx];\n      var dest = _path().default.join(assetsDest, getAssetDestPath(asset, scale));\n      filesToCopy[src] = dest;\n    });\n  };\n  if (platform === 'ios' && assetCatalogDest != null) {\n    var catalogDir = _path().default.join(assetCatalogDest, 'RNAssets.xcassets');\n    if (!_fs().default.existsSync(catalogDir)) {\n      _cliTools().logger.error(`Could not find asset catalog 'RNAssets.xcassets' in ${assetCatalogDest}. Make sure to create it if it does not exist.`);\n      return;\n    }\n    _cliTools().logger.info('Adding images to asset catalog', catalogDir);\n    (0, _assetCatalogIOS.cleanAssetCatalog)(catalogDir);\n    for (var asset of assets) {\n      if ((0, _assetCatalogIOS.isCatalogAsset)(asset)) {\n        var imageSet = (0, _assetCatalogIOS.getImageSet)(catalogDir, asset, (0, _filterPlatformAssetScales.default)(platform, asset.scales));\n        (0, _assetCatalogIOS.writeImageSet)(imageSet);\n      } else {\n        addAssetToCopy(asset);\n      }\n    }\n    _cliTools().logger.info('Done adding images to asset catalog');\n  } else {\n    assets.forEach(addAssetToCopy);\n  }\n  return copyAll(filesToCopy);\n}\nfunction copyAll(filesToCopy) {\n  var queue = Object.keys(filesToCopy);\n  if (queue.length === 0) {\n    return Promise.resolve();\n  }\n  _cliTools().logger.info(`Copying ${queue.length} asset files`);\n  return new Promise(function (resolve, reject) {\n    var copyNext = function copyNext(error) {\n      if (error) {\n        reject(error);\n        return;\n      }\n      if (queue.length === 0) {\n        _cliTools().logger.info('Done copying assets');\n        resolve();\n      } else {\n        var src = queue.shift();\n        var dest = filesToCopy[src];\n        copy(src, dest, copyNext);\n      }\n    };\n    copyNext();\n  });\n}\nfunction copy(src, dest, callback) {\n  var destDir = _path().default.dirname(dest);\n  _fs().default.mkdir(destDir, {\n    recursive: true\n  }, function (err) {\n    if (err) {\n      callback(err);\n      return;\n    }\n    _fs().default.createReadStream(src).pipe(_fs().default.createWriteStream(dest)).on('finish', callback);\n  });\n}\nvar _default = saveAssets;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_cliTools","data","require","_fs","_interopRequireDefault","_path","_assetCatalogIOS","_filterPlatformAssetScales","_getAssetDestPathAndroid","_getAssetDestPathIOS","obj","__esModule","saveAssets","assets","platform","assetsDest","assetCatalogDest","logger","warn","filesToCopy","create","getAssetDestPath","addAssetToCopy","asset","validScales","Set","scales","forEach","scale","idx","has","src","files","dest","join","catalogDir","existsSync","error","info","cleanAssetCatalog","isCatalogAsset","imageSet","getImageSet","writeImageSet","copyAll","queue","keys","length","Promise","resolve","reject","copyNext","shift","copy","callback","destDir","dirname","mkdir","recursive","err","createReadStream","pipe","createWriteStream","on","_default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-plugin-metro/build/commands/bundle/saveAssets.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nvar _assetCatalogIOS = require(\"./assetCatalogIOS\");\nvar _filterPlatformAssetScales = _interopRequireDefault(require(\"./filterPlatformAssetScales\"));\nvar _getAssetDestPathAndroid = _interopRequireDefault(require(\"./getAssetDestPathAndroid\"));\nvar _getAssetDestPathIOS = _interopRequireDefault(require(\"./getAssetDestPathIOS\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction saveAssets(assets, platform, assetsDest, assetCatalogDest) {\n  if (!assetsDest) {\n    _cliTools().logger.warn('Assets destination folder is not set, skipping...');\n    return;\n  }\n  const filesToCopy = Object.create(null); // Map src -> dest\n\n  const getAssetDestPath = platform === 'android' ? _getAssetDestPathAndroid.default : _getAssetDestPathIOS.default;\n  const addAssetToCopy = asset => {\n    const validScales = new Set((0, _filterPlatformAssetScales.default)(platform, asset.scales));\n    asset.scales.forEach((scale, idx) => {\n      if (!validScales.has(scale)) {\n        return;\n      }\n      const src = asset.files[idx];\n      const dest = _path().default.join(assetsDest, getAssetDestPath(asset, scale));\n      filesToCopy[src] = dest;\n    });\n  };\n  if (platform === 'ios' && assetCatalogDest != null) {\n    // Use iOS Asset Catalog for images. This will allow Apple app thinning to\n    // remove unused scales from the optimized bundle.\n    const catalogDir = _path().default.join(assetCatalogDest, 'RNAssets.xcassets');\n    if (!_fs().default.existsSync(catalogDir)) {\n      _cliTools().logger.error(`Could not find asset catalog 'RNAssets.xcassets' in ${assetCatalogDest}. Make sure to create it if it does not exist.`);\n      return;\n    }\n    _cliTools().logger.info('Adding images to asset catalog', catalogDir);\n    (0, _assetCatalogIOS.cleanAssetCatalog)(catalogDir);\n    for (const asset of assets) {\n      if ((0, _assetCatalogIOS.isCatalogAsset)(asset)) {\n        const imageSet = (0, _assetCatalogIOS.getImageSet)(catalogDir, asset, (0, _filterPlatformAssetScales.default)(platform, asset.scales));\n        (0, _assetCatalogIOS.writeImageSet)(imageSet);\n      } else {\n        addAssetToCopy(asset);\n      }\n    }\n    _cliTools().logger.info('Done adding images to asset catalog');\n  } else {\n    assets.forEach(addAssetToCopy);\n  }\n  return copyAll(filesToCopy);\n}\nfunction copyAll(filesToCopy) {\n  const queue = Object.keys(filesToCopy);\n  if (queue.length === 0) {\n    return Promise.resolve();\n  }\n  _cliTools().logger.info(`Copying ${queue.length} asset files`);\n  return new Promise((resolve, reject) => {\n    const copyNext = error => {\n      if (error) {\n        reject(error);\n        return;\n      }\n      if (queue.length === 0) {\n        _cliTools().logger.info('Done copying assets');\n        resolve();\n      } else {\n        // queue.length === 0 is checked in previous branch, so this is string\n        const src = queue.shift();\n        const dest = filesToCopy[src];\n        copy(src, dest, copyNext);\n      }\n    };\n    copyNext();\n  });\n}\nfunction copy(src, dest, callback) {\n  const destDir = _path().default.dirname(dest);\n  _fs().default.mkdir(destDir, {\n    recursive: true\n  }, err => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    _fs().default.createReadStream(src).pipe(_fs().default.createWriteStream(dest)).on('finish', callback);\n  });\n}\nvar _default = saveAssets;\nexports.default = _default;\n\n//# sourceMappingURL=saveAssets.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}