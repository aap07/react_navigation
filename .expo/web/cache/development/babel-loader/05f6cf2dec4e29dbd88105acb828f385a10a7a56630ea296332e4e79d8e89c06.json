{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/plugins/android-plugins.d.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { ConfigPlugin, Mod } from '../Plugin.types';\nimport { Manifest, Paths, Properties, Resources } from '../android';\ntype OptionalPromise<T> = T | Promise<T>;\ntype MutateDataAction<T> = (expo: ExpoConfig, data: T) => OptionalPromise<T>;\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport declare function createAndroidManifestPlugin(action: MutateDataAction<Manifest.AndroidManifest>, name: string): ConfigPlugin;\nexport declare function createStringsXmlPlugin(action: MutateDataAction<Resources.ResourceXML>, name: string): ConfigPlugin;\n/**\n * Provides the AndroidManifest.xml for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withAndroidManifest: ConfigPlugin<Mod<Manifest.AndroidManifest>>;\n/**\n * Provides the strings.xml for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withStringsXml: ConfigPlugin<Mod<Resources.ResourceXML>>;\n/**\n * Provides the `android/app/src/main/res/values/colors.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport declare const withAndroidColors: ConfigPlugin<Mod<Resources.ResourceXML>>;\n/**\n * Provides the `android/app/src/main/res/values-night/colors.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport declare const withAndroidColorsNight: ConfigPlugin<Mod<Resources.ResourceXML>>;\n/**\n * Provides the `android/app/src/main/res/values/styles.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport declare const withAndroidStyles: ConfigPlugin<Mod<Resources.ResourceXML>>;\n/**\n * Provides the project MainActivity for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withMainActivity: ConfigPlugin<Mod<Paths.ApplicationProjectFile>>;\n/**\n * Provides the project MainApplication for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withMainApplication: ConfigPlugin<Mod<Paths.ApplicationProjectFile>>;\n/**\n * Provides the project /build.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withProjectBuildGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>>;\n/**\n * Provides the app/build.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withAppBuildGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>>;\n/**\n * Provides the /settings.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withSettingsGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>>;\n/**\n * Provides the /gradle.properties for modification.\n *\n * @param config\n * @param action\n */\nexport declare const withGradleProperties: ConfigPlugin<Mod<Properties.PropertiesItem[]>>;\nexport {};\n"],"mappings":"AAyFA"},"metadata":{},"sourceType":"module","externalDependencies":[]}