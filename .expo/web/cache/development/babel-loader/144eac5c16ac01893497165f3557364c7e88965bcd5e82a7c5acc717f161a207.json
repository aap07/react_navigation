{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar identity = require(\"../../nodes/identity.js\");\nvar Pair = require(\"../../nodes/Pair.js\");\nvar YAMLMap = require(\"../../nodes/YAMLMap.js\");\nvar YAMLSet = function (_YAMLMap$YAMLMap) {\n  _inherits(YAMLSet, _YAMLMap$YAMLMap);\n  var _super = _createSuper(YAMLSet);\n  function YAMLSet(schema) {\n    var _this;\n    _classCallCheck(this, YAMLSet);\n    _this = _super.call(this, schema);\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n  _createClass(YAMLSet, [{\n    key: \"add\",\n    value: function add(key) {\n      var pair;\n      if (identity.isPair(key)) pair = key;else if (key && typeof key === 'object' && 'key' in key && 'value' in key && key.value === null) pair = new Pair.Pair(key.key, null);else pair = new Pair.Pair(key, null);\n      var prev = YAMLMap.findPair(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepPair) {\n      var pair = YAMLMap.findPair(this.items, key);\n      return !keepPair && identity.isPair(pair) ? identity.isScalar(pair.key) ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof value !== 'boolean') throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n      var prev = YAMLMap.findPair(this.items, key);\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new Pair.Pair(key));\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      return _get(_getPrototypeOf(YAMLSet.prototype), \"toJSON\", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues(true)) return _get(_getPrototypeOf(YAMLSet.prototype), \"toString\", this).call(this, Object.assign({}, ctx, {\n        allNullValues: true\n      }), onComment, onChompKeep);else throw new Error('Set items must all have null values');\n    }\n  }], [{\n    key: \"from\",\n    value: function from(schema, iterable, ctx) {\n      var replacer = ctx.replacer;\n      var set = new this(schema);\n      if (iterable && Symbol.iterator in Object(iterable)) for (var value of iterable) {\n        if (typeof replacer === 'function') value = replacer.call(iterable, value, value);\n        set.items.push(Pair.createPair(value, null, ctx));\n      }\n      return set;\n    }\n  }]);\n  return YAMLSet;\n}(YAMLMap.YAMLMap);\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nvar set = {\n  collection: 'map',\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  createNode: function createNode(schema, iterable, ctx) {\n    return YAMLSet.from(schema, iterable, ctx);\n  },\n  resolve: function resolve(map, onError) {\n    if (identity.isMap(map)) {\n      if (map.hasAllNullValues(true)) return Object.assign(new YAMLSet(), map);else onError('Set items must all have null values');\n    } else onError('Expected a mapping for this tag');\n    return map;\n  }\n};\nexports.YAMLSet = YAMLSet;\nexports.set = set;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","identity","Pair","YAMLMap","YAMLSet","_YAMLMap$YAMLMap","_super","schema","_this","tag","key","value","add","pair","isPair","prev","findPair","items","push","get","keepPair","isScalar","set","Error","splice","indexOf","toJSON","_","ctx","Set","toString","onComment","onChompKeep","JSON","stringify","hasAllNullValues","Object","assign","allNullValues","from","iterable","replacer","Symbol","iterator","createPair","collection","identify","nodeClass","default","createNode","resolve","map","onError","isMap","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/schema/yaml-1.1/set.js"],"sourcesContent":["'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar Pair = require('../../nodes/Pair.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\n\nclass YAMLSet extends YAMLMap.YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (identity.isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair.Pair(key.key, null);\n        else\n            pair = new Pair.Pair(key, null);\n        const prev = YAMLMap.findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = YAMLMap.findPair(this.items, key);\n        return !keepPair && identity.isPair(pair)\n            ? identity.isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = YAMLMap.findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair.Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(Pair.createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (identity.isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexports.YAMLSet = YAMLSet;\nexports.set = set;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}