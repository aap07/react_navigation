{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport { PanGestureHandler as PanGestureHandlerNative } from 'react-native-gesture-handler';\nimport GestureHandlerRefContext from \"../utils/GestureHandlerRefContext\";\nexport function PanGestureHandler(props) {\n  var gestureRef = React.useRef(null);\n  return React.createElement(GestureHandlerRefContext.Provider, {\n    value: gestureRef\n  }, React.createElement(PanGestureHandlerNative, _extends({}, props, {\n    ref: gestureRef\n  })));\n}\nexport { GestureHandlerRootView, State as GestureState } from 'react-native-gesture-handler';","map":{"version":3,"names":["React","PanGestureHandler","PanGestureHandlerNative","GestureHandlerRefContext","props","gestureRef","useRef","createElement","Provider","value","_extends","ref","GestureHandlerRootView","State","GestureState"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@react-navigation\\stack\\src\\views\\GestureHandlerNative.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  PanGestureHandler as PanGestureHandlerNative,\n  PanGestureHandlerProperties,\n} from 'react-native-gesture-handler';\n\nimport GestureHandlerRefContext from '../utils/GestureHandlerRefContext';\n\nexport function PanGestureHandler(props: PanGestureHandlerProperties) {\n  const gestureRef = React.useRef<PanGestureHandlerNative>(null);\n\n  return (\n    <GestureHandlerRefContext.Provider value={gestureRef}>\n      <PanGestureHandlerNative {...props} ref={gestureRef} />\n    </GestureHandlerRefContext.Provider>\n  );\n}\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\nexport {\n  GestureHandlerRootView,\n  State as GestureState,\n} from 'react-native-gesture-handler';\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,iBAAiB,IAAIC,uBAAuB,QAEvC,8BAA8B;AAErC,OAAOC,wBAAwB;AAE/B,OAAO,SAASF,iBAAiBA,CAACG,KAAkC,EAAE;EACpE,IAAMC,UAAU,GAAGL,KAAK,CAACM,MAAM,CAA0B,IAAI,CAAC;EAE9D,OACEN,KAAA,CAAAO,aAAA,CAACJ,wBAAwB,CAACK,QAAQ;IAACC,KAAK,EAAEJ;EAAW,GACnDL,KAAA,CAAAO,aAAA,CAACL,uBAAuB,EAAAQ,QAAA,KAAKN,KAAK;IAAEO,GAAG,EAAEN;EAAW,GAAG,CACrB;AAExC;AAGA,SACEO,sBAAsB,EACtBC,KAAK,IAAIC,YAAY,QAChB,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}