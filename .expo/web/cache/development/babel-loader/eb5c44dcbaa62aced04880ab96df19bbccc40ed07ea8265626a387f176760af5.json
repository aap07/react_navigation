{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/errors.d.ts"],"sourcesContent":["import type { LineCounter } from './parse/line-counter';\nexport type ErrorCode = 'ALIAS_PROPS' | 'BAD_ALIAS' | 'BAD_DIRECTIVE' | 'BAD_DQ_ESCAPE' | 'BAD_INDENT' | 'BAD_PROP_ORDER' | 'BAD_SCALAR_START' | 'BLOCK_AS_IMPLICIT_KEY' | 'BLOCK_IN_FLOW' | 'DUPLICATE_KEY' | 'IMPOSSIBLE' | 'KEY_OVER_1024_CHARS' | 'MISSING_CHAR' | 'MULTILINE_IMPLICIT_KEY' | 'MULTIPLE_ANCHORS' | 'MULTIPLE_DOCS' | 'MULTIPLE_TAGS' | 'TAB_AS_INDENT' | 'TAG_RESOLVE_FAILED' | 'UNEXPECTED_TOKEN' | 'BAD_COLLECTION_TYPE';\nexport type LinePos = {\n    line: number;\n    col: number;\n};\nexport declare class YAMLError extends Error {\n    name: 'YAMLParseError' | 'YAMLWarning';\n    code: ErrorCode;\n    message: string;\n    pos: [number, number];\n    linePos?: [LinePos] | [LinePos, LinePos];\n    constructor(name: YAMLError['name'], pos: [number, number], code: ErrorCode, message: string);\n}\nexport declare class YAMLParseError extends YAMLError {\n    constructor(pos: [number, number], code: ErrorCode, message: string);\n}\nexport declare class YAMLWarning extends YAMLError {\n    constructor(pos: [number, number], code: ErrorCode, message: string);\n}\nexport declare const prettifyError: (src: string, lc: LineCounter) => (error: YAMLError) => void;\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}