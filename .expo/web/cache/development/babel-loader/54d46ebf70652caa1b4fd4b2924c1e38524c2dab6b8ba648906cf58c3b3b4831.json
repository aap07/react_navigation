{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVersionsAsync = getVersionsAsync;\nvar _errors = require(\"../utils/errors\");\nvar _client = require(\"./rest/client\");\nfunction getVersionsAsync() {\n  return _getVersionsAsync.apply(this, arguments);\n}\nfunction _getVersionsAsync() {\n  _getVersionsAsync = _asyncToGenerator(function* () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      skipCache = _ref.skipCache;\n    var fetchAsync = (0, _client).createCachedFetch({\n      skipCache: skipCache,\n      cacheDirectory: \"versions-cache\",\n      ttl: 1000 * 60 * 5\n    });\n    var results = yield fetchAsync(\"versions/latest\");\n    if (!results.ok) {\n      throw new _errors.CommandError(\"API\", `Unexpected response when fetching version info from Expo servers: ${results.statusText}.`);\n    }\n    var json = yield results.json();\n    return json.data;\n  });\n  return _getVersionsAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","getVersionsAsync","_errors","_client","_getVersionsAsync","apply","arguments","_ref","length","undefined","skipCache","fetchAsync","createCachedFetch","cacheDirectory","ttl","results","ok","CommandError","statusText","json","data"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\getVersions.ts"],"sourcesContent":["import { CommandError } from '../utils/errors';\nimport { createCachedFetch } from './rest/client';\n\n/** Represents version info for a particular SDK. */\nexport type SDKVersion = {\n  /** @example \"2.16.1\" */\n  iosVersion?: string;\n  /** @example \"https://dpq5q02fu5f55.cloudfront.net/Exponent-2.17.4.tar.gz\" */\n  iosClientUrl?: string;\n  /** @example \"https://dev.to/expo/expo-sdk-38-is-now-available-5aa0\" */\n  releaseNoteUrl?: string;\n  /** @example \"2.17.4\" */\n  iosClientVersion?: string;\n  /** @example \"https://d1ahtucjixef4r.cloudfront.net/Exponent-2.16.1.apk\" */\n  androidClientUrl?: string;\n  /** @example \"2.16.1\" */\n  androidClientVersion?: string;\n  /** @example { \"typescript\": \"~3.9.5\" } */\n  relatedPackages?: Record<string, string>;\n\n  facebookReactNativeVersion: string;\n\n  facebookReactVersion?: string;\n\n  beta?: boolean;\n};\n\nexport type SDKVersions = Record<string, SDKVersion>;\n\nexport type Versions = {\n  androidUrl: string;\n  androidVersion: string;\n  iosUrl: string;\n  iosVersion: string;\n  sdkVersions: SDKVersions;\n};\n\n/** Get versions from remote endpoint. */\nexport async function getVersionsAsync({\n  skipCache,\n}: { skipCache?: boolean } = {}): Promise<Versions> {\n  // Reconstruct the cached fetch since caching could be disabled.\n  const fetchAsync = createCachedFetch({\n    skipCache,\n    cacheDirectory: 'versions-cache',\n    // We'll use a 5 minute cache to ensure we stay relatively up to date.\n    ttl: 1000 * 60 * 5,\n  });\n\n  const results = await fetchAsync('versions/latest');\n  if (!results.ok) {\n    throw new CommandError(\n      'API',\n      `Unexpected response when fetching version info from Expo servers: ${results.statusText}.`\n    );\n  }\n  const json = await results.json();\n  return json.data;\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAsCsBC,gBAAgB,GAAhBA,gBAAgB;AAtCT,IAAAC,OAAiB,GAAAF,OAAA;AACZ,IAAAG,OAAe,GAAAH,OAAA;AAAA,SAqC3BC,gBAAgBA,CAAA;EAAA,OAAAG,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,kBAAA;EAAAA,iBAAA,GAAAL,iBAAA,CAA/B,aAE6C;IAAA,IAAAQ,IAAA,GAAAD,SAAA,CAAAE,MAAA,QAAAF,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAvB,EAAE;MAD7BI,SAAS,GAAAH,IAAA,CAATG,SAAS;IAGT,IAAMC,UAAU,GAAG,IAAAR,OAAiB,EAKlCS,iBALkC,CAAC;MACnCF,SAAS,EAATA,SAAS;MACTG,cAAc,EAAE,gBAAgB;MAEhCC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG;KAClB,CAAC;IAEF,IAAMC,OAAO,SAASJ,UAAU,CAAC,iBAAiB,CAAC;IACnD,IAAI,CAACI,OAAO,CAACC,EAAE,EAAE;MACf,MAAM,IAAId,OAAY,CAAAe,YAAA,CACpB,KAAK,EACJ,qEAAoEF,OAAO,CAACG,UAAW,GAAE,CAC3F;;IAEH,IAAMC,IAAI,SAASJ,OAAO,CAACI,IAAI,EAAE;IACjC,OAAOA,IAAI,CAACC,IAAI;GACjB;EAAA,OAAAhB,iBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}