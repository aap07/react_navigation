{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updatePackageJSONAsync = updatePackageJSONAsync;\nexports.updatePkgDependencies = updatePkgDependencies;\nexports.createDependenciesMap = createDependenciesMap;\nexports.hashForDependencyMap = hashForDependencyMap;\nexports.createFileHash = createFileHash;\nvar _config = require(\"@expo/config\");\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _semver = require(\"semver\");\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _isModuleSymlinked = require(\"../utils/isModuleSymlinked\");\nvar _ora = require(\"../utils/ora\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction updatePackageJSONAsync(_x, _x2) {\n  return _updatePackageJSONAsync.apply(this, arguments);\n}\nfunction _updatePackageJSONAsync() {\n  _updatePackageJSONAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var templateDirectory = _ref.templateDirectory,\n      pkg = _ref.pkg,\n      skipDependencyUpdate = _ref.skipDependencyUpdate;\n    var updatingPackageJsonStep = (0, _ora).logNewSection(\"Updating your package.json scripts, dependencies, and main file\");\n    var templatePkg = (0, _config).getPackageJson(templateDirectory);\n    var results = modifyPackageJson(projectRoot, {\n      templatePkg: templatePkg,\n      pkg: pkg,\n      skipDependencyUpdate: skipDependencyUpdate\n    });\n    yield _fs.default.promises.writeFile(_path.default.resolve(projectRoot, \"package.json\"), JSON.stringify(pkg, null, 2) + \"\\n\");\n    updatingPackageJsonStep.succeed(\"Updated package.json and added index.js entry point for iOS and Android\");\n    return results;\n  });\n  return _updatePackageJSONAsync.apply(this, arguments);\n}\nfunction modifyPackageJson(projectRoot, _ref2) {\n  var templatePkg = _ref2.templatePkg,\n    pkg = _ref2.pkg,\n    skipDependencyUpdate = _ref2.skipDependencyUpdate;\n  updatePkgScripts({\n    pkg: pkg\n  });\n  return updatePkgDependencies(projectRoot, {\n    pkg: pkg,\n    templatePkg: templatePkg,\n    skipDependencyUpdate: skipDependencyUpdate\n  });\n}\nfunction updatePkgDependencies(projectRoot, _ref3) {\n  var pkg1 = _ref3.pkg,\n    templatePkg = _ref3.templatePkg,\n    _ref3$skipDependencyU = _ref3.skipDependencyUpdate,\n    skipDependencyUpdate = _ref3$skipDependencyU === void 0 ? [] : _ref3$skipDependencyU;\n  if (!pkg1.devDependencies) {\n    pkg1.devDependencies = {};\n  }\n  var dependencies = templatePkg.dependencies,\n    devDependencies = templatePkg.devDependencies;\n  var defaultDependencies = createDependenciesMap(dependencies);\n  var defaultDevDependencies = createDependenciesMap(devDependencies);\n  var combinedDependencies = createDependenciesMap(_objectSpread(_objectSpread({}, defaultDependencies), pkg1.dependencies));\n  var requiredDependencies = [\"expo\", \"expo-splash-screen\", \"react\", \"react-native\"].filter(function (depKey) {\n    return !!defaultDependencies[depKey];\n  });\n  var symlinkedPackages = [];\n  var nonRecommendedPackages = [];\n  for (var dependenciesKey of requiredDependencies) {\n    var ref;\n    if ((ref = pkg1.dependencies) == null ? void 0 : ref[dependenciesKey]) {\n      if ((0, _isModuleSymlinked).isModuleSymlinked(projectRoot, {\n        moduleId: dependenciesKey,\n        isSilent: true\n      })) {\n        symlinkedPackages.push(dependenciesKey);\n        continue;\n      }\n      if (skipDependencyUpdate.includes(dependenciesKey)) {\n        continue;\n      }\n      var hasRecommendedVersion = versionRangesIntersect(pkg1.dependencies[dependenciesKey], String(defaultDependencies[dependenciesKey]));\n      if (!hasRecommendedVersion) {\n        nonRecommendedPackages.push(`${dependenciesKey}@${defaultDependencies[dependenciesKey]}`);\n      }\n    }\n  }\n  if (symlinkedPackages.length) {\n    Log.log(`\\u203A Using symlinked ${symlinkedPackages.map(function (pkg) {\n      return _chalk.default.bold(pkg);\n    }).join(\", \")} instead of recommended version(s).`);\n  }\n  if (nonRecommendedPackages.length) {\n    Log.warn(`\\u203A Using current versions instead of recommended ${nonRecommendedPackages.map(function (pkg) {\n      return _chalk.default.bold(pkg);\n    }).join(\", \")}.`);\n  }\n  var combinedDevDependencies = createDependenciesMap(_objectSpread(_objectSpread({}, defaultDevDependencies), pkg1.devDependencies));\n  var hasNewDependencies = hashForDependencyMap(pkg1.dependencies) !== hashForDependencyMap(combinedDependencies);\n  var hasNewDevDependencies = hashForDependencyMap(pkg1.devDependencies) !== hashForDependencyMap(combinedDevDependencies);\n  if (hasNewDependencies) {\n    var _dependencies;\n    pkg1.dependencies = Object.assign((_dependencies = pkg1.dependencies) != null ? _dependencies : {}, combinedDependencies);\n  }\n  if (hasNewDevDependencies) {\n    var _devDependencies;\n    pkg1.devDependencies = Object.assign((_devDependencies = pkg1.devDependencies) != null ? _devDependencies : {}, combinedDevDependencies);\n  }\n  return {\n    hasNewDependencies: hasNewDependencies,\n    hasNewDevDependencies: hasNewDevDependencies\n  };\n}\nfunction createDependenciesMap(dependencies) {\n  if (typeof dependencies !== \"object\") {\n    throw new Error(`Dependency map is invalid, expected object but got ${typeof dependencies}`);\n  } else if (!dependencies) {\n    return {};\n  }\n  var outputMap = {};\n  for (var key of Object.keys(dependencies)) {\n    var value = dependencies[key];\n    if (typeof value === \"string\") {\n      outputMap[key] = value;\n    } else {\n      throw new Error(`Dependency for key \\`${key}\\` should be a \\`string\\`, instead got: \\`{ ${key}: ${JSON.stringify(value)} }\\``);\n    }\n  }\n  return outputMap;\n}\nfunction updatePkgScripts(_ref4) {\n  var pkg = _ref4.pkg;\n  var ref, ref1;\n  if (!pkg.scripts) {\n    pkg.scripts = {};\n  }\n  if (!((ref = pkg.scripts.android) == null ? void 0 : ref.includes(\"run\"))) {\n    pkg.scripts.android = \"expo run:android\";\n  }\n  if (!((ref1 = pkg.scripts.ios) == null ? void 0 : ref1.includes(\"run\"))) {\n    pkg.scripts.ios = \"expo run:ios\";\n  }\n}\nfunction normalizeDependencyMap(deps) {\n  return Object.keys(deps).map(function (dependency) {\n    return `${dependency}@${deps[dependency]}`;\n  }).sort();\n}\nfunction hashForDependencyMap() {\n  var deps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var depsList = normalizeDependencyMap(deps);\n  var depsString = depsList.join(\"\\n\");\n  return createFileHash(depsString);\n}\nfunction createFileHash(contents) {\n  return _crypto.default.createHash(\"sha1\").update(contents).digest(\"hex\");\n}\nfunction versionRangesIntersect(rangeA, rangeB) {\n  try {\n    return (0, _semver).intersects(rangeA, rangeB);\n  } catch (_unused) {\n    return false;\n  }\n}","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","updatePackageJSONAsync","updatePkgDependencies","createDependenciesMap","hashForDependencyMap","createFileHash","_config","_chalk","_interopRequireDefault","_crypto","_fs","_path","_semver","Log","_interopRequireWildcard","_isModuleSymlinked","_ora","_x","_x2","_updatePackageJSONAsync","projectRoot","_ref","templateDirectory","pkg","skipDependencyUpdate","updatingPackageJsonStep","logNewSection","templatePkg","getPackageJson","results","modifyPackageJson","default","promises","writeFile","resolve","JSON","stringify","succeed","_ref2","updatePkgScripts","_ref3","pkg1","_ref3$skipDependencyU","devDependencies","dependencies","defaultDependencies","defaultDevDependencies","combinedDependencies","requiredDependencies","depKey","symlinkedPackages","nonRecommendedPackages","dependenciesKey","ref","isModuleSymlinked","moduleId","isSilent","includes","hasRecommendedVersion","versionRangesIntersect","String","log","map","bold","join","warn","combinedDevDependencies","hasNewDependencies","hasNewDevDependencies","_dependencies","assign","_devDependencies","Error","outputMap","key","value","_ref4","ref1","scripts","android","ios","normalizeDependencyMap","deps","dependency","sort","undefined","depsList","depsString","contents","createHash","update","digest","rangeA","rangeB","intersects","_unused"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\prebuild\\updatePackageJson.ts"],"sourcesContent":["import { getPackageJson, PackageJSONConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport crypto from 'crypto';\nimport fs from 'fs';\nimport path from 'path';\nimport { intersects as semverIntersects, Range as SemverRange } from 'semver';\n\nimport * as Log from '../log';\nimport { isModuleSymlinked } from '../utils/isModuleSymlinked';\nimport { logNewSection } from '../utils/ora';\n\nexport type DependenciesMap = { [key: string]: string | number };\n\nexport type DependenciesModificationResults = {\n  /** Indicates that new values were added to the `dependencies` object in the `package.json`. */\n  hasNewDependencies: boolean;\n  /** Indicates that new values were added to the `devDependencies` object in the `package.json`. */\n  hasNewDevDependencies: boolean;\n};\n\n/** Modifies the `package.json` with `modifyPackageJson` and format/displays the results. */\nexport async function updatePackageJSONAsync(\n  projectRoot: string,\n  {\n    templateDirectory,\n    pkg,\n    skipDependencyUpdate,\n  }: {\n    templateDirectory: string;\n    pkg: PackageJSONConfig;\n    skipDependencyUpdate?: string[];\n  }\n): Promise<DependenciesModificationResults> {\n  const updatingPackageJsonStep = logNewSection(\n    'Updating your package.json scripts, dependencies, and main file'\n  );\n\n  const templatePkg = getPackageJson(templateDirectory);\n\n  const results = modifyPackageJson(projectRoot, {\n    templatePkg,\n    pkg,\n    skipDependencyUpdate,\n  });\n\n  await fs.promises.writeFile(\n    path.resolve(projectRoot, 'package.json'),\n    // Add new line to match the format of running yarn.\n    // This prevents the `package.json` from changing when running `prebuild --no-install` multiple times.\n    JSON.stringify(pkg, null, 2) + '\\n'\n  );\n\n  updatingPackageJsonStep.succeed(\n    'Updated package.json and added index.js entry point for iOS and Android'\n  );\n\n  return results;\n}\n\n/**\n * Make required modifications to the `package.json` file as a JSON object.\n *\n * 1. Update `package.json` `scripts`.\n * 2. Update `package.json` `dependencies` and `devDependencies`.\n * 3. Update `package.json` `main`.\n *\n * @param projectRoot The root directory of the project.\n * @param props.templatePkg Template project package.json as JSON.\n * @param props.pkg Current package.json as JSON.\n * @param props.skipDependencyUpdate Array of dependencies to skip updating.\n * @returns\n */\nfunction modifyPackageJson(\n  projectRoot: string,\n  {\n    templatePkg,\n    pkg,\n    skipDependencyUpdate,\n  }: {\n    templatePkg: PackageJSONConfig;\n    pkg: PackageJSONConfig;\n    skipDependencyUpdate?: string[];\n  }\n) {\n  updatePkgScripts({ pkg });\n\n  // TODO: Move to `npx expo-doctor`\n  return updatePkgDependencies(projectRoot, {\n    pkg,\n    templatePkg,\n    skipDependencyUpdate,\n  });\n}\n\n/**\n * Update package.json dependencies by combining the dependencies in the project we are ejecting\n * with the dependencies in the template project. Does the same for devDependencies.\n *\n * - The template may have some dependencies beyond react/react-native/react-native-unimodules,\n *   for example RNGH and Reanimated. We should prefer the version that is already being used\n *   in the project for those, but swap the react/react-native/react-native-unimodules versions\n *   with the ones in the template.\n * - The same applies to expo-updates -- since some native project configuration may depend on the\n *   version, we should always use the version of expo-updates in the template.\n *\n * > Exposed for testing.\n */\nexport function updatePkgDependencies(\n  projectRoot: string,\n  {\n    pkg,\n    templatePkg,\n    skipDependencyUpdate = [],\n  }: {\n    pkg: PackageJSONConfig;\n    templatePkg: PackageJSONConfig;\n    /** @deprecated Required packages are not overwritten, only added when missing */\n    skipDependencyUpdate?: string[];\n  }\n): DependenciesModificationResults {\n  if (!pkg.devDependencies) {\n    pkg.devDependencies = {};\n  }\n  const { dependencies, devDependencies } = templatePkg;\n  const defaultDependencies = createDependenciesMap(dependencies);\n  const defaultDevDependencies = createDependenciesMap(devDependencies);\n\n  const combinedDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDependencies,\n    ...pkg.dependencies,\n  });\n\n  // These dependencies are only added, not overwritten from the project\n  const requiredDependencies = ['expo', 'expo-splash-screen', 'react', 'react-native'].filter(\n    (depKey) => !!defaultDependencies[depKey]\n  );\n\n  const symlinkedPackages: string[] = [];\n  const nonRecommendedPackages: string[] = [];\n\n  for (const dependenciesKey of requiredDependencies) {\n    // If the local package.json defined the dependency that we want to overwrite...\n    if (pkg.dependencies?.[dependenciesKey]) {\n      // Then ensure it isn't symlinked (i.e. the user has a custom version in their yarn workspace).\n      if (isModuleSymlinked(projectRoot, { moduleId: dependenciesKey, isSilent: true })) {\n        // If the package is in the project's package.json and it's symlinked, then skip overwriting it.\n        symlinkedPackages.push(dependenciesKey);\n        continue;\n      }\n\n      // Do not modify manually skipped dependencies\n      if (skipDependencyUpdate.includes(dependenciesKey)) {\n        continue;\n      }\n\n      // Warn users for outdated dependencies when prebuilding\n      const hasRecommendedVersion = versionRangesIntersect(\n        pkg.dependencies[dependenciesKey],\n        String(defaultDependencies[dependenciesKey])\n      );\n      if (!hasRecommendedVersion) {\n        nonRecommendedPackages.push(`${dependenciesKey}@${defaultDependencies[dependenciesKey]}`);\n      }\n    }\n  }\n\n  if (symlinkedPackages.length) {\n    Log.log(\n      `\\u203A Using symlinked ${symlinkedPackages\n        .map((pkg) => chalk.bold(pkg))\n        .join(', ')} instead of recommended version(s).`\n    );\n  }\n\n  if (nonRecommendedPackages.length) {\n    Log.warn(\n      `\\u203A Using current versions instead of recommended ${nonRecommendedPackages\n        .map((pkg) => chalk.bold(pkg))\n        .join(', ')}.`\n    );\n  }\n\n  const combinedDevDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDevDependencies,\n    ...pkg.devDependencies,\n  });\n\n  // Only change the dependencies if the normalized hash changes, this helps to reduce meaningless changes.\n  const hasNewDependencies =\n    hashForDependencyMap(pkg.dependencies) !== hashForDependencyMap(combinedDependencies);\n  const hasNewDevDependencies =\n    hashForDependencyMap(pkg.devDependencies) !== hashForDependencyMap(combinedDevDependencies);\n  // Save the dependencies\n  if (hasNewDependencies) {\n    // Use Object.assign to preserve the original order of dependencies, this makes it easier to see what changed in the git diff.\n    pkg.dependencies = Object.assign(pkg.dependencies ?? {}, combinedDependencies);\n  }\n  if (hasNewDevDependencies) {\n    // Same as with dependencies\n    pkg.devDependencies = Object.assign(pkg.devDependencies ?? {}, combinedDevDependencies);\n  }\n\n  return {\n    hasNewDependencies,\n    hasNewDevDependencies,\n  };\n}\n\n/**\n * Create an object of type DependenciesMap a dependencies object or throw if not valid.\n *\n * @param dependencies - ideally an object of type {[key]: string} - if not then this will error.\n */\nexport function createDependenciesMap(dependencies: any): DependenciesMap {\n  if (typeof dependencies !== 'object') {\n    throw new Error(`Dependency map is invalid, expected object but got ${typeof dependencies}`);\n  } else if (!dependencies) {\n    return {};\n  }\n\n  const outputMap: DependenciesMap = {};\n\n  for (const key of Object.keys(dependencies)) {\n    const value = dependencies[key];\n    if (typeof value === 'string') {\n      outputMap[key] = value;\n    } else {\n      throw new Error(\n        `Dependency for key \\`${key}\\` should be a \\`string\\`, instead got: \\`{ ${key}: ${JSON.stringify(\n          value\n        )} }\\``\n      );\n    }\n  }\n  return outputMap;\n}\n\n/**\n * Update package.json scripts - `npm start` should default to `expo\n * start --dev-client` rather than `expo start` after ejecting, for example.\n */\nfunction updatePkgScripts({ pkg }: { pkg: PackageJSONConfig }) {\n  if (!pkg.scripts) {\n    pkg.scripts = {};\n  }\n  if (!pkg.scripts.android?.includes('run')) {\n    pkg.scripts.android = 'expo run:android';\n  }\n  if (!pkg.scripts.ios?.includes('run')) {\n    pkg.scripts.ios = 'expo run:ios';\n  }\n}\n\nfunction normalizeDependencyMap(deps: DependenciesMap): string[] {\n  return Object.keys(deps)\n    .map((dependency) => `${dependency}@${deps[dependency]}`)\n    .sort();\n}\n\nexport function hashForDependencyMap(deps: DependenciesMap = {}): string {\n  const depsList = normalizeDependencyMap(deps);\n  const depsString = depsList.join('\\n');\n  return createFileHash(depsString);\n}\n\nexport function createFileHash(contents: string): string {\n  // this doesn't need to be secure, the shorter the better.\n  return crypto.createHash('sha1').update(contents).digest('hex');\n}\n\n/**\n * Determine if two semver ranges are overlapping or intersecting.\n * This is a safe version of `semver.intersects` that does not throw.\n */\nfunction versionRangesIntersect(rangeA: string | SemverRange, rangeB: string | SemverRange) {\n  try {\n    return semverIntersects(rangeA, rangeB);\n  } catch {\n    return false;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}