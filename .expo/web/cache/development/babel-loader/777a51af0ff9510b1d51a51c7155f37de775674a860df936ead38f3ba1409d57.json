{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _debug = _interopRequireDefault(require(\"debug\"));\nvar path = _interopRequireWildcard(require(\"path\"));\nvar _gdbprotocol = require(\"../protocol/GDBProtocol\");\nvar _serviceClient = require(\"./ServiceClient\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = (0, _debug).default(\"expo:apple-device:client:debugserver\");\nvar DebugserverClient = function (_serviceClient$Servic) {\n  _inherits(DebugserverClient, _serviceClient$Servic);\n  var _super = _createSuper(DebugserverClient);\n  function DebugserverClient(socket) {\n    var _this;\n    _classCallCheck(this, DebugserverClient);\n    _this = _super.call(this, socket, new _gdbprotocol.GDBProtocolClient(socket));\n    _this.socket = socket;\n    return _this;\n  }\n  _createClass(DebugserverClient, [{\n    key: \"setMaxPacketSize\",\n    value: function () {\n      var _setMaxPacketSize = _asyncToGenerator(function* (size) {\n        return this.sendCommand(\"QSetMaxPacketSize:\", [size.toString()]);\n      });\n      function setMaxPacketSize(_x) {\n        return _setMaxPacketSize.apply(this, arguments);\n      }\n      return setMaxPacketSize;\n    }()\n  }, {\n    key: \"setWorkingDir\",\n    value: function () {\n      var _setWorkingDir = _asyncToGenerator(function* (workingDir) {\n        return this.sendCommand(\"QSetWorkingDir:\", [workingDir]);\n      });\n      function setWorkingDir(_x2) {\n        return _setWorkingDir.apply(this, arguments);\n      }\n      return setWorkingDir;\n    }()\n  }, {\n    key: \"checkLaunchSuccess\",\n    value: function () {\n      var _checkLaunchSuccess = _asyncToGenerator(function* () {\n        return this.sendCommand(\"qLaunchSuccess\", []);\n      });\n      function checkLaunchSuccess() {\n        return _checkLaunchSuccess.apply(this, arguments);\n      }\n      return checkLaunchSuccess;\n    }()\n  }, {\n    key: \"attachByName\",\n    value: function () {\n      var _attachByName = _asyncToGenerator(function* (name) {\n        var hexName = Buffer.from(name).toString(\"hex\");\n        return this.sendCommand(`vAttachName;${hexName}`, []);\n      });\n      function attachByName(_x3) {\n        return _attachByName.apply(this, arguments);\n      }\n      return attachByName;\n    }()\n  }, {\n    key: \"continue\",\n    value: function () {\n      var _continue2 = _asyncToGenerator(function* () {\n        return this.sendCommand(\"c\", []);\n      });\n      function _continue() {\n        return _continue2.apply(this, arguments);\n      }\n      return _continue;\n    }()\n  }, {\n    key: \"halt\",\n    value: function halt() {\n      debug(\"Sending ^C to debugserver\");\n      return this.protocolClient.socket.write(\"\\x03\");\n    }\n  }, {\n    key: \"kill\",\n    value: function () {\n      var _kill = _asyncToGenerator(function* () {\n        var _this2 = this;\n        debug(`kill`);\n        var msg = {\n          cmd: \"k\",\n          args: []\n        };\n        return this.protocolClient.sendMessage(msg, function (resp, resolve) {\n          debug(`kill:response: ${resp}`);\n          _this2.protocolClient.socket.write(\"+\");\n          var parts = resp.split(\";\");\n          for (var part of parts) {\n            if (part.includes(\"description\")) {\n              resolve(Buffer.from(part.split(\":\")[1], \"hex\").toString(\"ascii\"));\n            }\n          }\n        });\n      });\n      function kill() {\n        return _kill.apply(this, arguments);\n      }\n      return kill;\n    }()\n  }, {\n    key: \"launchApp\",\n    value: function () {\n      var _launchApp = _asyncToGenerator(function* (appPath, executableName) {\n        var fullPath = path.join(appPath, executableName);\n        var hexAppPath = Buffer.from(fullPath).toString(\"hex\");\n        var appCommand = `A${hexAppPath.length},0,${hexAppPath}`;\n        return this.sendCommand(appCommand, []);\n      });\n      function launchApp(_x4, _x5) {\n        return _launchApp.apply(this, arguments);\n      }\n      return launchApp;\n    }()\n  }, {\n    key: \"sendCommand\",\n    value: function () {\n      var _sendCommand = _asyncToGenerator(function* (cmd, args) {\n        var msg = {\n          cmd: cmd,\n          args: args\n        };\n        debug(`Sending command: ${cmd}, args: ${args}`);\n        var resp = yield this.protocolClient.sendMessage(msg);\n        this.protocolClient.socket.write(\"+\");\n        return resp;\n      });\n      function sendCommand(_x6, _x7) {\n        return _sendCommand.apply(this, arguments);\n      }\n      return sendCommand;\n    }()\n  }]);\n  return DebugserverClient;\n}(_serviceClient.ServiceClient);\nexports.DebugserverClient = DebugserverClient;","map":{"version":3,"names":["_asyncToGenerator","require","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_debug","_interopRequireDefault","path","_interopRequireWildcard","_gdbprotocol","_serviceClient","debug","default","DebugserverClient","_serviceClient$Servic","_super","socket","_this","GDBProtocolClient","key","value","_setMaxPacketSize","size","sendCommand","toString","setMaxPacketSize","_x","_setWorkingDir","workingDir","setWorkingDir","_x2","_checkLaunchSuccess","checkLaunchSuccess","_attachByName","name","hexName","Buffer","from","attachByName","_x3","_continue2","_continue","halt","protocolClient","write","_kill","_this2","msg","cmd","args","sendMessage","resp","resolve","parts","split","part","includes","kill","_launchApp","appPath","executableName","fullPath","join","hexAppPath","appCommand","length","launchApp","_x4","_x5","_sendCommand","_x6","_x7","ServiceClient"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\ios\\appleDevice\\client\\DebugserverClient.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport { Socket } from 'net';\nimport * as path from 'path';\n\nimport { GDBProtocolClient } from '../protocol/GDBProtocol';\nimport { ServiceClient } from './ServiceClient';\n\nconst debug = Debug('expo:apple-device:client:debugserver');\n\nexport class DebugserverClient extends ServiceClient<GDBProtocolClient> {\n  constructor(public socket: Socket) {\n    super(socket, new GDBProtocolClient(socket));\n  }\n\n  async setMaxPacketSize(size: number) {\n    return this.sendCommand('QSetMaxPacketSize:', [size.toString()]);\n  }\n\n  async setWorkingDir(workingDir: string) {\n    return this.sendCommand('QSetWorkingDir:', [workingDir]);\n  }\n\n  async checkLaunchSuccess() {\n    return this.sendCommand('qLaunchSuccess', []);\n  }\n\n  async attachByName(name: string) {\n    const hexName = Buffer.from(name).toString('hex');\n    return this.sendCommand(`vAttachName;${hexName}`, []);\n  }\n\n  async continue() {\n    return this.sendCommand('c', []);\n  }\n\n  halt() {\n    // ^C\n    debug('Sending ^C to debugserver');\n    return this.protocolClient.socket.write('\\u0003');\n  }\n\n  async kill() {\n    debug(`kill`);\n    const msg: any = { cmd: 'k', args: [] };\n    return this.protocolClient.sendMessage(msg, (resp: string, resolve: any) => {\n      debug(`kill:response: ${resp}`);\n      this.protocolClient.socket.write('+');\n      const parts = resp.split(';');\n      for (const part of parts) {\n        if (part.includes('description')) {\n          // description:{hex encoded message like: \"Terminated with signal 9\"}\n          resolve(Buffer.from(part.split(':')[1], 'hex').toString('ascii'));\n        }\n      }\n    });\n  }\n\n  // TODO support app args\n  // https://sourceware.org/gdb/onlinedocs/gdb/Packets.html#Packets\n  // A arglen,argnum,arg,\n  async launchApp(appPath: string, executableName: string) {\n    const fullPath = path.join(appPath, executableName);\n    const hexAppPath = Buffer.from(fullPath).toString('hex');\n    const appCommand = `A${hexAppPath.length},0,${hexAppPath}`;\n    return this.sendCommand(appCommand, []);\n  }\n\n  async sendCommand(cmd: string, args: string[]) {\n    const msg = { cmd, args };\n    debug(`Sending command: ${cmd}, args: ${args}`);\n    const resp = await this.protocolClient.sendMessage(msg);\n    // we need to ACK as well\n    this.protocolClient.socket.write('+');\n    return resp;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}