{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.configureProjectAsync = configureProjectAsync;\nvar _config = require(\"@expo/config\");\nvar _configPlugins = require(\"@expo/config-plugins\");\nvar _prebuildConfig = require(\"@expo/prebuild-config\");\nvar _configAsync = require(\"../config/configAsync\");\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _env = require(\"../utils/env\");\nvar _getOrPromptApplicationId = require(\"../utils/getOrPromptApplicationId\");\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction configureProjectAsync(_x, _x2) {\n  return _configureProjectAsync.apply(this, arguments);\n}\nfunction _configureProjectAsync() {\n  _configureProjectAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var platforms = _ref.platforms;\n    var bundleIdentifier;\n    if (platforms.includes(\"ios\")) {\n      bundleIdentifier = yield (0, _getOrPromptApplicationId).getOrPromptForBundleIdentifier(projectRoot);\n    }\n    var packageName;\n    if (platforms.includes(\"android\")) {\n      packageName = yield (0, _getOrPromptApplicationId).getOrPromptForPackage(projectRoot);\n    }\n    var _yield$getPrebuildCon = yield (0, _prebuildConfig).getPrebuildConfigAsync(projectRoot, {\n        platforms: platforms,\n        packageName: packageName,\n        bundleIdentifier: bundleIdentifier,\n        expoUsername: function expoUsername(config) {\n          return (0, _config).getAccountUsername(config);\n        }\n      }),\n      config1 = _yield$getPrebuildCon.exp;\n    config1 = yield (0, _configPlugins).compileModsAsync(config1, {\n      projectRoot: projectRoot,\n      platforms: platforms,\n      assertMissingModProviders: false\n    });\n    if (_env.env.EXPO_DEBUG) {\n      Log.log();\n      Log.log(\"Evaluated config:\");\n      (0, _configAsync).logConfig(config1);\n      Log.log();\n    }\n    return config1;\n  });\n  return _configureProjectAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","configureProjectAsync","_config","_configPlugins","_prebuildConfig","_configAsync","Log","_interopRequireWildcard","_env","_getOrPromptApplicationId","_x","_x2","_configureProjectAsync","apply","arguments","projectRoot","_ref","platforms","bundleIdentifier","includes","getOrPromptForBundleIdentifier","packageName","getOrPromptForPackage","_yield$getPrebuildCon","getPrebuildConfigAsync","expoUsername","config","getAccountUsername","config1","exp","compileModsAsync","assertMissingModProviders","env","EXPO_DEBUG","log","logConfig"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\prebuild\\configureProjectAsync.ts"],"sourcesContent":["import { ExpoConfig, getAccountUsername } from '@expo/config';\nimport { compileModsAsync, ModPlatform } from '@expo/config-plugins';\nimport { getPrebuildConfigAsync } from '@expo/prebuild-config';\n\nimport { logConfig } from '../config/configAsync';\nimport * as Log from '../log';\nimport { env } from '../utils/env';\nimport {\n  getOrPromptForBundleIdentifier,\n  getOrPromptForPackage,\n} from '../utils/getOrPromptApplicationId';\n\nexport async function configureProjectAsync(\n  projectRoot: string,\n  {\n    platforms,\n  }: {\n    platforms: ModPlatform[];\n  }\n): Promise<ExpoConfig> {\n  let bundleIdentifier: string | undefined;\n  if (platforms.includes('ios')) {\n    // Check bundle ID before reading the config because it may mutate the config if the user is prompted to define it.\n    bundleIdentifier = await getOrPromptForBundleIdentifier(projectRoot);\n  }\n  let packageName: string | undefined;\n  if (platforms.includes('android')) {\n    // Check package before reading the config because it may mutate the config if the user is prompted to define it.\n    packageName = await getOrPromptForPackage(projectRoot);\n  }\n\n  let { exp: config } = await getPrebuildConfigAsync(projectRoot, {\n    platforms,\n    packageName,\n    bundleIdentifier,\n    expoUsername(config) {\n      return getAccountUsername(config);\n    },\n  });\n\n  // compile all plugins and mods\n  config = await compileModsAsync(config, {\n    projectRoot,\n    platforms,\n    assertMissingModProviders: false,\n  });\n\n  if (env.EXPO_DEBUG) {\n    Log.log();\n    Log.log('Evaluated config:');\n    logConfig(config);\n    Log.log();\n  }\n\n  return config;\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAYsBC,qBAAqB,GAArBA,qBAAqB;AAZI,IAAAC,OAAc,GAAAF,OAAA,CAAd,cAAc;AACf,IAAAG,cAAsB,GAAAH,OAAA,CAAtB,sBAAsB;AAC7B,IAAAI,eAAuB,GAAAJ,OAAA,CAAvB,uBAAuB;AAEpC,IAAAK,YAAuB,GAAAL,OAAA;AACrC,IAAAM,GAAG,GAAAC,uBAAA,CAAAP,OAAA,SAAc,EAAd;AACK,IAAAQ,IAAc,GAAAR,OAAA;AAI3B,IAAAS,yBAAmC,GAAAT,OAAA;;;;;;;;;;;;;;;;;;;;;;SAEpBC,qBAAqBA,CAAAS,EAAA,EAAAC,GAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,uBAAA;EAAAA,sBAAA,GAAAb,iBAAA,CAApC,WACLgB,WAAmB,EAAAC,IAAA,EAME;IAAA,IAJnBC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAKX,IAAIC,gBAAgB;IACpB,IAAID,SAAS,CAACE,QAAQ,CAAC,KAAK,CAAC,EAAE;MAE7BD,gBAAgB,SAAS,IAAAT,yBAA8B,EAAaW,8BAAb,CAACL,WAAW,CAAC;;IAEtE,IAAIM,WAAW;IACf,IAAIJ,SAAS,CAACE,QAAQ,CAAC,SAAS,CAAC,EAAE;MAEjCE,WAAW,SAAS,IAAAZ,yBAAqB,EAAaa,qBAAb,CAACP,WAAW,CAAC;;IAGxD,IAAAQ,qBAAA,SAA4B,IAAAnB,eAAsB,EAOhDoB,sBAPgD,CAACT,WAAW,EAAE;QAC9DE,SAAS,EAATA,SAAS;QACTI,WAAW,EAAXA,WAAW;QACXH,gBAAgB,EAAhBA,gBAAgB;QAChBO,YAAY,WAAAA,aAACC,MAAM,EAAE;UACnB,OAAO,IAAAxB,OAAkB,EAAQyB,kBAAR,CAACD,MAAM,CAAC;;OAEpC,CAAC;MAPSE,OAAM,GAAAL,qBAAA,CAAXM,GAAG;IAUTD,OAAM,SAAS,IAAAzB,cAAgB,EAI7B2B,gBAJ6B,CAACF,OAAM,EAAE;MACtCb,WAAW,EAAXA,WAAW;MACXE,SAAS,EAATA,SAAS;MACTc,yBAAyB,EAAE;KAC5B,CAAC;IAEF,IAAIvB,IAAG,CAAAwB,GAAA,CAACC,UAAU,EAAE;MAClB3B,GAAG,CAAC4B,GAAG,EAAE;MACT5B,GAAG,CAAC4B,GAAG,CAAC,mBAAmB,CAAC;MAC5B,IAAA7B,YAAS,EAAQ8B,SAAR,CAACP,OAAM,CAAC;MACjBtB,GAAG,CAAC4B,GAAG,EAAE;;IAGX,OAAON,OAAM;GACd;EAAA,OAAAhB,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}