{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDebuggerTelemetryMiddleware = createDebuggerTelemetryMiddleware;\nexports.findDebugTool = findDebugTool;\nvar _env = require(\"../env\");\nvar _getMetroDebugProperties = require(\"./getMetroDebugProperties\");\nvar _rudderstackClient = require(\"./rudderstackClient\");\nfunction createDebuggerTelemetryMiddleware(projectRoot, exp) {\n  var hasReported = false;\n  if (_env.env.EXPO_NO_TELEMETRY || exp.jsEngine !== \"hermes\") {\n    return function (req, res, next) {\n      if (typeof next === \"function\") {\n        next(undefined);\n      }\n    };\n  }\n  return function (req, res, next) {\n    if (hasReported && typeof next === \"function\") {\n      return next(undefined);\n    }\n    var debugTool = findDebugTool(req);\n    if (debugTool) {\n      hasReported = true;\n      (0, _rudderstackClient).logEventAsync(\"metro debug\", (0, _getMetroDebugProperties).getMetroDebugProperties(projectRoot, exp, debugTool));\n    }\n    if (typeof next === \"function\") {\n      return next(undefined);\n    }\n  };\n}\nfunction findDebugTool(req) {\n  var ref, ref1;\n  if ((ref = req.headers[\"origin\"]) == null ? void 0 : ref.includes(\"chrome-devtools\")) {\n    return {\n      name: \"chrome\"\n    };\n  }\n  if ((ref1 = req.url) == null ? void 0 : ref1.startsWith(\"/json\")) {\n    var ref2;\n    var flipperUserAgent = (ref2 = req.headers[\"user-agent\"]) == null ? void 0 : ref2.match(/(Flipper)\\/([^\\s]+)/);\n    if (flipperUserAgent) {\n      return {\n        name: flipperUserAgent[1].toLowerCase(),\n        version: flipperUserAgent[2]\n      };\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["createDebuggerTelemetryMiddleware","findDebugTool","_env","require","_getMetroDebugProperties","_rudderstackClient","projectRoot","exp","hasReported","env","EXPO_NO_TELEMETRY","jsEngine","req","res","next","undefined","debugTool","logEventAsync","getMetroDebugProperties","ref","ref1","headers","includes","name","url","startsWith","ref2","flipperUserAgent","match","toLowerCase","version"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\analytics\\metroDebuggerMiddleware.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport { Middleware } from 'metro-config';\n\nimport { env } from '../env';\nimport { DebugTool, getMetroDebugProperties } from './getMetroDebugProperties';\nimport { logEventAsync } from './rudderstackClient';\n\ntype Request = Parameters<Middleware>[0];\ntype Response = Parameters<Middleware>[1];\ntype Next = Parameters<Middleware>[2];\n\n/**\n * Create a Metro middleware that reports when a debugger request was found.\n * This will only be reported once, if the app uses Hermes and telemetry is not enabled.\n */\nexport function createDebuggerTelemetryMiddleware(\n  projectRoot: string,\n  exp: ExpoConfig\n): Middleware {\n  let hasReported = false;\n\n  // This only works for Hermes apps, disable when telemetry is turned off\n  if (env.EXPO_NO_TELEMETRY || exp.jsEngine !== 'hermes') {\n    return (req: Request, res: Response, next: Next) => {\n      if (typeof next === 'function') {\n        next(undefined);\n      }\n    };\n  }\n\n  return (req: Request, res: Response, next: Next) => {\n    // Only report once\n    if (hasReported && typeof next === 'function') {\n      return next(undefined);\n    }\n\n    const debugTool = findDebugTool(req);\n    if (debugTool) {\n      hasReported = true;\n      logEventAsync('metro debug', getMetroDebugProperties(projectRoot, exp, debugTool));\n    }\n\n    if (typeof next === 'function') {\n      return next(undefined);\n    }\n  };\n}\n\n/** Exposed for testing */\nexport function findDebugTool(\n  req: Pick<Parameters<Middleware>[0], 'headers' | 'url'>\n): DebugTool | null {\n  if (req.headers['origin']?.includes('chrome-devtools')) {\n    return { name: 'chrome' };\n  }\n\n  if (req.url?.startsWith('/json')) {\n    const flipperUserAgent = req.headers['user-agent']?.match(/(Flipper)\\/([^\\s]+)/);\n    if (flipperUserAgent) {\n      return {\n        name: flipperUserAgent[1].toLowerCase(),\n        version: flipperUserAgent[2],\n      };\n    }\n  }\n\n  return null;\n}\n"],"mappings":"AAAA;;;;;QAegBA,iCAAiC,GAAjCA,iCAAiC;QAkCjCC,aAAa,GAAbA,aAAa;AA9CT,IAAAC,IAAQ,GAAAC,OAAA;AACuB,IAAAC,wBAA2B,GAAAD,OAAA;AAChD,IAAAE,kBAAqB,GAAAF,OAAA;AAU5C,SAASH,iCAAiCA,CAC/CM,WAAmB,EACnBC,GAAe,EACH;EACZ,IAAIC,WAAW,GAAG,KAAK;EAGvB,IAAIN,IAAG,CAAAO,GAAA,CAACC,iBAAiB,IAAIH,GAAG,CAACI,QAAQ,KAAK,QAAQ,EAAE;IACtD,OAAO,UAACC,GAAY,EAAEC,GAAa,EAAEC,IAAU,EAAK;MAClD,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;QAC9BA,IAAI,CAACC,SAAS,CAAC;;KAElB;;EAGH,OAAO,UAACH,GAAY,EAAEC,GAAa,EAAEC,IAAU,EAAK;IAElD,IAAIN,WAAW,IAAI,OAAOM,IAAI,KAAK,UAAU,EAAE;MAC7C,OAAOA,IAAI,CAACC,SAAS,CAAC;;IAGxB,IAAMC,SAAS,GAAGf,aAAa,CAACW,GAAG,CAAC;IACpC,IAAII,SAAS,EAAE;MACbR,WAAW,GAAG,IAAI;MAClB,IAAAH,kBAAa,EAAqEY,aAArE,CAAC,aAAa,EAAE,IAAAb,wBAAuB,EAA6Bc,uBAA7B,CAACZ,WAAW,EAAEC,GAAG,EAAES,SAAS,CAAC,CAAC;;IAGpF,IAAI,OAAOF,IAAI,KAAK,UAAU,EAAE;MAC9B,OAAOA,IAAI,CAACC,SAAS,CAAC;;GAEzB;;AAII,SAASd,aAAaA,CAC3BW,GAAuD,EACrC;MACdO,GAAqB,EAIrBC,IAAO;EAJX,IAAI,CAAAD,GAAqB,GAArBP,GAAG,CAACS,OAAO,CAAC,QAAQ,CAAC,SAAU,GAA/B,MAA+B,GAA/BF,GAAqB,CAAEG,QAAQ,CAAC,iBAAiB,CAAC,EAAE;IACtD,OAAO;MAAEC,IAAI,EAAE;KAAU;;EAG3B,IAAI,CAAAH,IAAO,GAAPR,GAAG,CAACY,GAAG,SAAY,GAAnB,MAAmB,GAAnBJ,IAAO,CAAEK,UAAU,CAAC,OAAO,CAAC,EAAE;QACPC,IAAyB;IAAlD,IAAMC,gBAAgB,GAAG,CAAAD,IAAyB,GAAzBd,GAAG,CAACS,OAAO,CAAC,YAAY,CAAC,SAAO,GAAhC,MAAgC,GAAhCK,IAAyB,CAAEE,KAAK,uBAAuB;IAChF,IAAID,gBAAgB,EAAE;MACpB,OAAO;QACLJ,IAAI,EAAEI,gBAAgB,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;QACvCC,OAAO,EAAEH,gBAAgB,CAAC,CAAC;OAC5B;;;EAIL,OAAO,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}