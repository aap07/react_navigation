{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar identity = require(\"../../nodes/identity.js\");\nvar toJS = require(\"../../nodes/toJS.js\");\nvar YAMLMap = require(\"../../nodes/YAMLMap.js\");\nvar YAMLSeq = require(\"../../nodes/YAMLSeq.js\");\nvar pairs = require(\"./pairs.js\");\nvar YAMLOMap = function (_YAMLSeq$YAMLSeq) {\n  _inherits(YAMLOMap, _YAMLSeq$YAMLSeq);\n  var _super = _createSuper(YAMLOMap);\n  function YAMLOMap() {\n    var _this;\n    _classCallCheck(this, YAMLOMap);\n    _this = _super.call(this);\n    _this.add = YAMLMap.YAMLMap.prototype.add.bind(_assertThisInitialized(_this));\n    _this.delete = YAMLMap.YAMLMap.prototype.delete.bind(_assertThisInitialized(_this));\n    _this.get = YAMLMap.YAMLMap.prototype.get.bind(_assertThisInitialized(_this));\n    _this.has = YAMLMap.YAMLMap.prototype.has.bind(_assertThisInitialized(_this));\n    _this.set = YAMLMap.YAMLMap.prototype.set.bind(_assertThisInitialized(_this));\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n  _createClass(YAMLOMap, [{\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      if (!ctx) return _get(_getPrototypeOf(YAMLOMap.prototype), \"toJSON\", this).call(this, _);\n      var map = new Map();\n      if (ctx != null && ctx.onCreate) ctx.onCreate(map);\n      for (var pair of this.items) {\n        var key = void 0,\n          value = void 0;\n        if (identity.isPair(pair)) {\n          key = toJS.toJS(pair.key, '', ctx);\n          value = toJS.toJS(pair.value, key, ctx);\n        } else {\n          key = toJS.toJS(pair, '', ctx);\n        }\n        if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n        map.set(key, value);\n      }\n      return map;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(schema, iterable, ctx) {\n      var pairs$1 = pairs.createPairs(schema, iterable, ctx);\n      var omap = new this();\n      omap.items = pairs$1.items;\n      return omap;\n    }\n  }]);\n  return YAMLOMap;\n}(YAMLSeq.YAMLSeq);\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nvar omap = {\n  collection: 'seq',\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: function resolve(seq, onError) {\n    var pairs$1 = pairs.resolvePairs(seq, onError);\n    var seenKeys = [];\n    for (var _ref of pairs$1.items) {\n      var key = _ref.key;\n      if (identity.isScalar(key)) {\n        if (seenKeys.includes(key.value)) {\n          onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n    return Object.assign(new YAMLOMap(), pairs$1);\n  },\n  createNode: function createNode(schema, iterable, ctx) {\n    return YAMLOMap.from(schema, iterable, ctx);\n  }\n};\nexports.YAMLOMap = YAMLOMap;\nexports.omap = omap;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_assertThisInitialized","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","identity","toJS","YAMLMap","YAMLSeq","pairs","YAMLOMap","_YAMLSeq$YAMLSeq","_super","_this","add","bind","delete","get","has","set","tag","key","value","toJSON","_","ctx","map","Map","onCreate","pair","items","isPair","Error","from","schema","iterable","pairs$1","createPairs","omap","collection","identify","nodeClass","default","resolve","seq","onError","resolvePairs","seenKeys","_ref","isScalar","includes","push","Object","assign","createNode","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/schema/yaml-1.1/omap.js"],"sourcesContent":["'use strict';\n\nvar identity = require('../../nodes/identity.js');\nvar toJS = require('../../nodes/toJS.js');\nvar YAMLMap = require('../../nodes/YAMLMap.js');\nvar YAMLSeq = require('../../nodes/YAMLSeq.js');\nvar pairs = require('./pairs.js');\n\nclass YAMLOMap extends YAMLSeq.YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (identity.isPair(pair)) {\n                key = toJS.toJS(pair.key, '', ctx);\n                value = toJS.toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS.toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs$1 = pairs.createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs$1.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs$1 = pairs.resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs$1.items) {\n            if (identity.isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs$1);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexports.YAMLOMap = YAMLOMap;\nexports.omap = omap;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAAA,IAAAE,sBAAA,GAAAF,OAAA;AAAA,IAAAG,IAAA,GAAAH,OAAA;AAAA,IAAAI,SAAA,GAAAJ,OAAA;AAAA,IAAAK,0BAAA,GAAAL,OAAA;AAAA,IAAAM,eAAA,GAAAN,OAAA;AAAA,SAAAO,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAN,eAAA,CAAAE,OAAA,GAAAK,MAAA,MAAAJ,yBAAA,QAAAK,SAAA,GAAAR,eAAA,OAAAS,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAD,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAb,0BAAA,OAAAQ,MAAA;AAAA,SAAAH,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAI,CAAA;AAEb,IAAIC,QAAQ,GAAG3B,OAAO,0BAA0B,CAAC;AACjD,IAAI4B,IAAI,GAAG5B,OAAO,sBAAsB,CAAC;AACzC,IAAI6B,OAAO,GAAG7B,OAAO,yBAAyB,CAAC;AAC/C,IAAI8B,OAAO,GAAG9B,OAAO,yBAAyB,CAAC;AAC/C,IAAI+B,KAAK,GAAG/B,OAAO,aAAa,CAAC;AAAC,IAE5BgC,QAAQ,aAAAC,gBAAA;EAAA7B,SAAA,CAAA4B,QAAA,EAAAC,gBAAA;EAAA,IAAAC,MAAA,GAAA3B,YAAA,CAAAyB,QAAA;EACV,SAAAA,SAAA,EAAc;IAAA,IAAAG,KAAA;IAAApC,eAAA,OAAAiC,QAAA;IACVG,KAAA,GAAAD,MAAA,CAAAT,IAAA;IACAU,KAAA,CAAKC,GAAG,GAAGP,OAAO,CAACA,OAAO,CAACN,SAAS,CAACa,GAAG,CAACC,IAAI,CAAAnC,sBAAA,CAAAiC,KAAA,CAAK,CAAC;IACnDA,KAAA,CAAKG,MAAM,GAAGT,OAAO,CAACA,OAAO,CAACN,SAAS,CAACe,MAAM,CAACD,IAAI,CAAAnC,sBAAA,CAAAiC,KAAA,CAAK,CAAC;IACzDA,KAAA,CAAKI,GAAG,GAAGV,OAAO,CAACA,OAAO,CAACN,SAAS,CAACgB,GAAG,CAACF,IAAI,CAAAnC,sBAAA,CAAAiC,KAAA,CAAK,CAAC;IACnDA,KAAA,CAAKK,GAAG,GAAGX,OAAO,CAACA,OAAO,CAACN,SAAS,CAACiB,GAAG,CAACH,IAAI,CAAAnC,sBAAA,CAAAiC,KAAA,CAAK,CAAC;IACnDA,KAAA,CAAKM,GAAG,GAAGZ,OAAO,CAACA,OAAO,CAACN,SAAS,CAACkB,GAAG,CAACJ,IAAI,CAAAnC,sBAAA,CAAAiC,KAAA,CAAK,CAAC;IACnDA,KAAA,CAAKO,GAAG,GAAGV,QAAQ,CAACU,GAAG;IAAC,OAAAP,KAAA;EAC5B;EAAClC,YAAA,CAAA+B,QAAA;IAAAW,GAAA;IAAAC,KAAA,EAKD,SAAAC,OAAOC,CAAC,EAAEC,GAAG,EAAE;MACX,IAAI,CAACA,GAAG,EACJ,OAAA5C,IAAA,CAAAG,eAAA,CAAA0B,QAAA,CAAAT,SAAA,mBAAAE,IAAA,OAAoBqB,CAAC;MACzB,IAAME,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;MACrB,IAAIF,GAAG,YAAHA,GAAG,CAAEG,QAAQ,EACbH,GAAG,CAACG,QAAQ,CAACF,GAAG,CAAC;MACrB,KAAK,IAAMG,IAAI,IAAI,IAAI,CAACC,KAAK,EAAE;QAC3B,IAAIT,GAAG;UAAEC,KAAK;QACd,IAAIjB,QAAQ,CAAC0B,MAAM,CAACF,IAAI,CAAC,EAAE;UACvBR,GAAG,GAAGf,IAAI,CAACA,IAAI,CAACuB,IAAI,CAACR,GAAG,EAAE,EAAE,EAAEI,GAAG,CAAC;UAClCH,KAAK,GAAGhB,IAAI,CAACA,IAAI,CAACuB,IAAI,CAACP,KAAK,EAAED,GAAG,EAAEI,GAAG,CAAC;QAC3C,CAAC,MACI;UACDJ,GAAG,GAAGf,IAAI,CAACA,IAAI,CAACuB,IAAI,EAAE,EAAE,EAAEJ,GAAG,CAAC;QAClC;QACA,IAAIC,GAAG,CAACR,GAAG,CAACG,GAAG,CAAC,EACZ,MAAM,IAAIW,KAAK,CAAC,8CAA8C,CAAC;QACnEN,GAAG,CAACP,GAAG,CAACE,GAAG,EAAEC,KAAK,CAAC;MACvB;MACA,OAAOI,GAAG;IACd;EAAC;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAW,KAAYC,MAAM,EAAEC,QAAQ,EAAEV,GAAG,EAAE;MAC/B,IAAMW,OAAO,GAAG3B,KAAK,CAAC4B,WAAW,CAACH,MAAM,EAAEC,QAAQ,EAAEV,GAAG,CAAC;MACxD,IAAMa,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;MACvBA,IAAI,CAACR,KAAK,GAAGM,OAAO,CAACN,KAAK;MAC1B,OAAOQ,IAAI;IACf;EAAC;EAAA,OAAA5B,QAAA;AAAA,EAxCkBF,OAAO,CAACA,OAAO;AA0CtCE,QAAQ,CAACU,GAAG,GAAG,wBAAwB;AACvC,IAAMkB,IAAI,GAAG;EACTC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAE,SAAAA,SAAAlB,KAAK;IAAA,OAAIA,KAAK,YAAYK,GAAG;EAAA;EACvCc,SAAS,EAAE/B,QAAQ;EACnBgC,OAAO,EAAE,KAAK;EACdtB,GAAG,EAAE,wBAAwB;EAC7BuB,OAAO,WAAAA,QAACC,GAAG,EAAEC,OAAO,EAAE;IAClB,IAAMT,OAAO,GAAG3B,KAAK,CAACqC,YAAY,CAACF,GAAG,EAAEC,OAAO,CAAC;IAChD,IAAME,QAAQ,GAAG,EAAE;IACnB,SAAAC,IAAA,IAAsBZ,OAAO,CAACN,KAAK,EAAE;MAAA,IAAxBT,GAAG,GAAA2B,IAAA,CAAH3B,GAAG;MACZ,IAAIhB,QAAQ,CAAC4C,QAAQ,CAAC5B,GAAG,CAAC,EAAE;QACxB,IAAI0B,QAAQ,CAACG,QAAQ,CAAC7B,GAAG,CAACC,KAAK,CAAC,EAAE;UAC9BuB,OAAO,CAAE,iDAAgDxB,GAAG,CAACC,KAAM,EAAC,CAAC;QACzE,CAAC,MACI;UACDyB,QAAQ,CAACI,IAAI,CAAC9B,GAAG,CAACC,KAAK,CAAC;QAC5B;MACJ;IACJ;IACA,OAAO8B,MAAM,CAACC,MAAM,CAAC,IAAI3C,QAAQ,CAAC,CAAC,EAAE0B,OAAO,CAAC;EACjD,CAAC;EACDkB,UAAU,EAAE,SAAAA,WAACpB,MAAM,EAAEC,QAAQ,EAAEV,GAAG;IAAA,OAAKf,QAAQ,CAACuB,IAAI,CAACC,MAAM,EAAEC,QAAQ,EAAEV,GAAG,CAAC;EAAA;AAC/E,CAAC;AAED8B,OAAO,CAAC7C,QAAQ,GAAGA,QAAQ;AAC3B6C,OAAO,CAACjB,IAAI,GAAGA,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}