{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSessionInfo = createSessionInfo;\nexports.updateDevelopmentSessionAsync = updateDevelopmentSessionAsync;\nexports.closeDevelopmentSessionAsync = closeDevelopmentSessionAsync;\nvar _os = _interopRequireDefault(require(\"os\"));\nvar _url = require(\"url\");\nvar _errors = require(\"../utils/errors\");\nvar _client = require(\"./rest/client\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction createSessionInfo(_ref) {\n  var exp = _ref.exp,\n    runtime = _ref.runtime,\n    url = _ref.url;\n  return {\n    session: {\n      description: `${exp.name} on ${_os.default.hostname()}`,\n      hostname: _os.default.hostname(),\n      platform: runtime,\n      config: {\n        description: exp.description,\n        name: exp.name,\n        slug: exp.slug,\n        primaryColor: exp.primaryColor\n      },\n      url: url,\n      source: \"desktop\"\n    }\n  };\n}\nfunction updateDevelopmentSessionAsync(_x) {\n  return _updateDevelopmentSessionAsync.apply(this, arguments);\n}\nfunction _updateDevelopmentSessionAsync() {\n  _updateDevelopmentSessionAsync = _asyncToGenerator(function* (_ref2) {\n    var deviceIds = _ref2.deviceIds,\n      exp = _ref2.exp,\n      runtime = _ref2.runtime,\n      url = _ref2.url;\n    var searchParams = new _url.URLSearchParams();\n    deviceIds.forEach(function (id) {\n      searchParams.append(\"deviceId\", id);\n    });\n    var results = yield (0, _client).fetchAsync(\"development-sessions/notify-alive\", {\n      searchParams: searchParams,\n      method: \"POST\",\n      body: JSON.stringify({\n        data: createSessionInfo({\n          exp: exp,\n          runtime: runtime,\n          url: url\n        })\n      })\n    });\n    if (!results.ok) {\n      throw new _errors.CommandError(\"API\", `Unexpected response when updating the development session on Expo servers: ${results.statusText}.`);\n    }\n  });\n  return _updateDevelopmentSessionAsync.apply(this, arguments);\n}\nfunction closeDevelopmentSessionAsync(_x2) {\n  return _closeDevelopmentSessionAsync.apply(this, arguments);\n}\nfunction _closeDevelopmentSessionAsync() {\n  _closeDevelopmentSessionAsync = _asyncToGenerator(function* (_ref3) {\n    var deviceIds = _ref3.deviceIds,\n      url = _ref3.url;\n    var searchParams = new _url.URLSearchParams();\n    deviceIds.forEach(function (id) {\n      searchParams.append(\"deviceId\", id);\n    });\n    var results = yield (0, _client).fetchAsync(\"development-sessions/notify-close\", {\n      searchParams: searchParams,\n      method: \"POST\",\n      body: JSON.stringify({\n        session: {\n          url: url\n        }\n      })\n    });\n    if (!results.ok) {\n      throw new _errors.CommandError(\"API\", `Unexpected response when closing the development session on Expo servers: ${results.statusText}.`);\n    }\n  });\n  return _closeDevelopmentSessionAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","createSessionInfo","updateDevelopmentSessionAsync","closeDevelopmentSessionAsync","_os","_interopRequireDefault","_url","_errors","_client","_ref","exp","runtime","url","session","description","name","default","hostname","platform","config","slug","primaryColor","source","_x","_updateDevelopmentSessionAsync","apply","arguments","_ref2","deviceIds","searchParams","URLSearchParams","forEach","id","append","results","fetchAsync","method","body","JSON","stringify","data","ok","CommandError","statusText","_x2","_closeDevelopmentSessionAsync","_ref3"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\updateDevelopmentSession.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport os from 'os';\nimport { URLSearchParams } from 'url';\n\nimport { CommandError } from '../utils/errors';\nimport { fetchAsync } from './rest/client';\n\n/** Create the expected session info. */\nexport function createSessionInfo({\n  exp,\n  runtime,\n  url,\n}: {\n  exp: Pick<ExpoConfig, 'name' | 'description' | 'slug' | 'primaryColor'>;\n  runtime: 'native' | 'web';\n  url: string;\n}) {\n  return {\n    session: {\n      description: `${exp.name} on ${os.hostname()}`,\n      hostname: os.hostname(),\n      platform: runtime,\n      config: {\n        // TODO: if icons are specified, upload a url for them too so people can distinguish\n        description: exp.description,\n        name: exp.name,\n        slug: exp.slug,\n        primaryColor: exp.primaryColor,\n      },\n      url,\n      source: 'desktop',\n    },\n  };\n}\n\n/** Send a request to Expo API to keep the 'development session' alive for the provided devices. */\nexport async function updateDevelopmentSessionAsync({\n  deviceIds,\n  exp,\n  runtime,\n  url,\n}: {\n  deviceIds: string[];\n  exp: Pick<ExpoConfig, 'name' | 'description' | 'slug' | 'primaryColor'>;\n  runtime: 'native' | 'web';\n  url: string;\n}) {\n  const searchParams = new URLSearchParams();\n  deviceIds.forEach((id) => {\n    searchParams.append('deviceId', id);\n  });\n\n  const results = await fetchAsync('development-sessions/notify-alive', {\n    searchParams,\n    method: 'POST',\n    body: JSON.stringify({\n      data: createSessionInfo({ exp, runtime, url }),\n    }),\n  });\n\n  if (!results.ok) {\n    throw new CommandError(\n      'API',\n      `Unexpected response when updating the development session on Expo servers: ${results.statusText}.`\n    );\n  }\n}\n\n/** Send a request to Expo API to close the 'development session' for the provided devices. */\nexport async function closeDevelopmentSessionAsync({\n  deviceIds,\n  url,\n}: {\n  deviceIds: string[];\n  url: string;\n}) {\n  const searchParams = new URLSearchParams();\n  deviceIds.forEach((id) => {\n    searchParams.append('deviceId', id);\n  });\n\n  const results = await fetchAsync('development-sessions/notify-close', {\n    searchParams,\n    method: 'POST',\n    body: JSON.stringify({\n      session: { url },\n    }),\n  });\n\n  if (!results.ok) {\n    throw new CommandError(\n      'API',\n      `Unexpected response when closing the development session on Expo servers: ${results.statusText}.`\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}