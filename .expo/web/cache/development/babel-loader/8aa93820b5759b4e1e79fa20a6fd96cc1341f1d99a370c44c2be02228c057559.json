{"ast":null,"code":"import { NodeBase } from \"./Node.js\";","map":{"version":3,"names":["NodeBase"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/nodes/Alias.d.ts"],"sourcesContent":["import type { Document } from '../doc/Document.js';\nimport type { FlowScalar } from '../parse/cst.js';\nimport type { StringifyContext } from '../stringify/stringify.js';\nimport { NodeBase, Range } from './Node.js';\nimport type { Scalar } from './Scalar';\nimport { ToJSContext } from './toJS.js';\nimport type { YAMLMap } from './YAMLMap.js';\nimport type { YAMLSeq } from './YAMLSeq.js';\nexport declare namespace Alias {\n    interface Parsed extends Alias {\n        range: Range;\n        srcToken?: FlowScalar & {\n            type: 'alias';\n        };\n    }\n}\nexport declare class Alias extends NodeBase {\n    source: string;\n    anchor?: never;\n    constructor(source: string);\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc: Document): Scalar | YAMLMap | YAMLSeq | undefined;\n    toJSON(_arg?: unknown, ctx?: ToJSContext): {} | null;\n    toString(ctx?: StringifyContext, _onComment?: () => void, _onChompKeep?: () => void): string;\n}\n"],"mappings":"AAGA,SAASA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}