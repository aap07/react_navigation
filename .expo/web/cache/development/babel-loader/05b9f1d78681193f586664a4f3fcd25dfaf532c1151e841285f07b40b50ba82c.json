{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar path = require('path');\nvar locatePath = require('locate-path');\nvar pathExists = require('path-exists');\nvar stop = Symbol('findUp.stop');\nmodule.exports = function () {\n  var _ref = _asyncToGenerator(function* (name) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var directory = path.resolve(options.cwd || '');\n    var _path$parse = path.parse(directory),\n      root = _path$parse.root;\n    var paths = [].concat(name);\n    var runMatcher = function () {\n      var _ref2 = _asyncToGenerator(function* (locateOptions) {\n        if (typeof name !== 'function') {\n          return locatePath(paths, locateOptions);\n        }\n        var foundPath = yield name(locateOptions.cwd);\n        if (typeof foundPath === 'string') {\n          return locatePath([foundPath], locateOptions);\n        }\n        return foundPath;\n      });\n      return function runMatcher(_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    while (true) {\n      var foundPath = yield runMatcher(_objectSpread(_objectSpread({}, options), {}, {\n        cwd: directory\n      }));\n      if (foundPath === stop) {\n        return;\n      }\n      if (foundPath) {\n        return path.resolve(directory, foundPath);\n      }\n      if (directory === root) {\n        return;\n      }\n      directory = path.dirname(directory);\n    }\n  });\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports.sync = function (name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var directory = path.resolve(options.cwd || '');\n  var _path$parse2 = path.parse(directory),\n    root = _path$parse2.root;\n  var paths = [].concat(name);\n  var runMatcher = function runMatcher(locateOptions) {\n    if (typeof name !== 'function') {\n      return locatePath.sync(paths, locateOptions);\n    }\n    var foundPath = name(locateOptions.cwd);\n    if (typeof foundPath === 'string') {\n      return locatePath.sync([foundPath], locateOptions);\n    }\n    return foundPath;\n  };\n  while (true) {\n    var foundPath = runMatcher(_objectSpread(_objectSpread({}, options), {}, {\n      cwd: directory\n    }));\n    if (foundPath === stop) {\n      return;\n    }\n    if (foundPath) {\n      return path.resolve(directory, foundPath);\n    }\n    if (directory === root) {\n      return;\n    }\n    directory = path.dirname(directory);\n  }\n};\nmodule.exports.exists = pathExists;\nmodule.exports.sync.exists = pathExists.sync;\nmodule.exports.stop = stop;","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","path","locatePath","pathExists","stop","Symbol","module","exports","_ref","name","options","undefined","directory","resolve","cwd","_path$parse","parse","root","paths","concat","runMatcher","_ref2","locateOptions","foundPath","_x2","dirname","_x","sync","_path$parse2","exists"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli/node_modules/find-up/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst locatePath = require('locate-path');\nconst pathExists = require('path-exists');\n\nconst stop = Symbol('findUp.stop');\n\nmodule.exports = async (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = async locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = await name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\t// eslint-disable-next-line no-await-in-loop\n\t\tconst foundPath = await runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.sync = (name, options = {}) => {\n\tlet directory = path.resolve(options.cwd || '');\n\tconst {root} = path.parse(directory);\n\tconst paths = [].concat(name);\n\n\tconst runMatcher = locateOptions => {\n\t\tif (typeof name !== 'function') {\n\t\t\treturn locatePath.sync(paths, locateOptions);\n\t\t}\n\n\t\tconst foundPath = name(locateOptions.cwd);\n\t\tif (typeof foundPath === 'string') {\n\t\t\treturn locatePath.sync([foundPath], locateOptions);\n\t\t}\n\n\t\treturn foundPath;\n\t};\n\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true) {\n\t\tconst foundPath = runMatcher({...options, cwd: directory});\n\n\t\tif (foundPath === stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (foundPath) {\n\t\t\treturn path.resolve(directory, foundPath);\n\t\t}\n\n\t\tif (directory === root) {\n\t\t\treturn;\n\t\t}\n\n\t\tdirectory = path.dirname(directory);\n\t}\n};\n\nmodule.exports.exists = pathExists;\n\nmodule.exports.sync.exists = pathExists.sync;\n\nmodule.exports.stop = stop;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}