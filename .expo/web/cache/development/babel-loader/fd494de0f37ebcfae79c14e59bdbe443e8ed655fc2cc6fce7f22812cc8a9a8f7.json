{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveAssetBundlePatternsAsync = resolveAssetBundlePatternsAsync;\nexports.exportAssetsAsync = exportAssetsAsync;\nexports.exportCssAssetsAsync = exportCssAssetsAsync;\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _minimatch = _interopRequireDefault(require(\"minimatch\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _resolveAssets = require(\"../start/server/middleware/resolveAssets\");\nvar _array = require(\"../utils/array\");\nvar _saveAssets = require(\"./saveAssets\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:export:exportAssets\");\nfunction resolveAssetBundlePatternsAsync(_x, _x2, _x3) {\n  return _resolveAssetBundlePatternsAsync.apply(this, arguments);\n}\nfunction _resolveAssetBundlePatternsAsync() {\n  _resolveAssetBundlePatternsAsync = _asyncToGenerator(function* (projectRoot, exp, assets) {\n    var ref1;\n    if (!((ref1 = exp.assetBundlePatterns) == null ? void 0 : ref1.length) || !assets.length) {\n      delete exp.assetBundlePatterns;\n      return exp;\n    }\n    var fullPatterns = exp.assetBundlePatterns.map(function (p) {\n      return _path.default.join(projectRoot, p);\n    });\n    logPatterns(fullPatterns);\n    var allBundledAssets = assets.map(function (asset) {\n      var shouldBundle = shouldBundleAsset(asset, fullPatterns);\n      if (shouldBundle) {\n        var ref;\n        debug(`${shouldBundle ? \"Include\" : \"Exclude\"} asset ${(ref = asset.files) == null ? void 0 : ref[0]}`);\n        return asset.fileHashes.map(function (hash) {\n          return \"asset_\" + hash + (\"type\" in asset && asset.type ? \".\" + asset.type : \"\");\n        });\n      }\n      return [];\n    }).flat();\n    exp.bundledAssets = _toConsumableArray(new Set(allBundledAssets));\n    delete exp.assetBundlePatterns;\n    return exp;\n  });\n  return _resolveAssetBundlePatternsAsync.apply(this, arguments);\n}\nfunction logPatterns(patterns) {\n  Log.log(\"\\nProcessing asset bundle patterns:\");\n  patterns.forEach(function (p) {\n    return Log.log(\"- \" + p);\n  });\n}\nfunction shouldBundleAsset(asset, patterns) {\n  var ref;\n  var file = (ref = asset.files) == null ? void 0 : ref[0];\n  return !!(\"__packager_asset\" in asset && asset.__packager_asset && file && patterns.some(function (pattern) {\n    return (0, _minimatch).default(file, pattern);\n  }));\n}\nfunction exportAssetsAsync(_x4, _x5) {\n  return _exportAssetsAsync.apply(this, arguments);\n}\nfunction _exportAssetsAsync() {\n  _exportAssetsAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var exp = _ref.exp,\n      outputDir = _ref.outputDir,\n      bundles = _ref.bundles;\n    var ref;\n    var assets = (0, _array).uniqBy(Object.values(bundles).flatMap(function (bundle) {\n      return bundle.assets;\n    }), function (asset) {\n      return asset.hash;\n    });\n    if ((ref = assets[0]) == null ? void 0 : ref.fileHashes) {\n      Log.log(\"Saving assets\");\n      yield (0, _saveAssets).saveAssetsAsync(projectRoot, {\n        assets: assets,\n        outputDir: outputDir\n      });\n    }\n    yield (0, _resolveAssets).resolveGoogleServicesFile(projectRoot, exp);\n    yield resolveAssetBundlePatternsAsync(projectRoot, exp, assets);\n    return {\n      exp: exp,\n      assets: assets\n    };\n  });\n  return _exportAssetsAsync.apply(this, arguments);\n}\nfunction exportCssAssetsAsync(_x6) {\n  return _exportCssAssetsAsync.apply(this, arguments);\n}\nfunction _exportCssAssetsAsync() {\n  _exportCssAssetsAsync = _asyncToGenerator(function* (_ref2) {\n    var outputDir = _ref2.outputDir,\n      bundles = _ref2.bundles;\n    var ref;\n    var assets = (0, _array).uniqBy(Object.values(bundles).flatMap(function (bundle) {\n      return bundle.css;\n    }), function (asset) {\n      return asset.filename;\n    });\n    var cssDirectory = (ref = assets[0]) == null ? void 0 : ref.filename;\n    if (!cssDirectory) return [];\n    yield _fs.default.promises.mkdir(_path.default.join(outputDir, _path.default.dirname(cssDirectory)), {\n      recursive: true\n    });\n    yield Promise.all(assets.map(function (v) {\n      return _fs.default.promises.writeFile(_path.default.join(outputDir, v.filename), v.source);\n    }));\n    return assets.map(function (v) {\n      return \"/\" + v.filename;\n    });\n  });\n  return _exportCssAssetsAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_toConsumableArray","require","_asyncToGenerator","resolveAssetBundlePatternsAsync","exportAssetsAsync","exportCssAssetsAsync","_fs","_interopRequireDefault","_minimatch","_path","Log","_interopRequireWildcard","_resolveAssets","_array","_saveAssets","debug","_x","_x2","_x3","_resolveAssetBundlePatternsAsync","apply","arguments","projectRoot","exp","assets","ref1","assetBundlePatterns","length","fullPatterns","map","p","default","join","logPatterns","allBundledAssets","asset","shouldBundle","shouldBundleAsset","ref","files","fileHashes","hash","type","flat","bundledAssets","Set","patterns","log","forEach","file","__packager_asset","some","pattern","_x4","_x5","_exportAssetsAsync","_ref","outputDir","bundles","uniqBy","Object","values","flatMap","bundle","saveAssetsAsync","resolveGoogleServicesFile","_x6","_exportCssAssetsAsync","_ref2","css","filename","cssDirectory","promises","mkdir","dirname","recursive","Promise","all","v","writeFile","source"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\export\\exportAssets.ts"],"sourcesContent":["import { ExpoAppManifest } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport fs from 'fs';\nimport minimatch from 'minimatch';\nimport path from 'path';\n\nimport * as Log from '../log';\nimport { resolveGoogleServicesFile } from '../start/server/middleware/resolveAssets';\nimport { uniqBy } from '../utils/array';\nimport { BundleOutput } from './fork-bundleAsync';\nimport { Asset, saveAssetsAsync } from './saveAssets';\n\nconst debug = require('debug')('expo:export:exportAssets') as typeof console.log;\n\n/**\n * Resolves the assetBundlePatterns from the manifest and returns a list of assets to bundle.\n *\n * @modifies {exp}\n */\nexport async function resolveAssetBundlePatternsAsync(\n  projectRoot: string,\n  exp: Pick<ExpoAppManifest, 'bundledAssets' | 'assetBundlePatterns'>,\n  assets: Asset[]\n) {\n  if (!exp.assetBundlePatterns?.length || !assets.length) {\n    delete exp.assetBundlePatterns;\n    return exp;\n  }\n  // Convert asset patterns to a list of asset strings that match them.\n  // Assets strings are formatted as `asset_<hash>.<type>` and represent\n  // the name that the file will have in the app bundle. The `asset_` prefix is\n  // needed because android doesn't support assets that start with numbers.\n\n  const fullPatterns: string[] = exp.assetBundlePatterns.map((p: string) =>\n    path.join(projectRoot, p)\n  );\n\n  logPatterns(fullPatterns);\n\n  const allBundledAssets = assets\n    .map((asset) => {\n      const shouldBundle = shouldBundleAsset(asset, fullPatterns);\n      if (shouldBundle) {\n        debug(`${shouldBundle ? 'Include' : 'Exclude'} asset ${asset.files?.[0]}`);\n        return asset.fileHashes.map(\n          (hash) => 'asset_' + hash + ('type' in asset && asset.type ? '.' + asset.type : '')\n        );\n      }\n      return [];\n    })\n    .flat();\n\n  // The assets returned by the RN packager has duplicates so make sure we\n  // only bundle each once.\n  exp.bundledAssets = [...new Set(allBundledAssets)];\n  delete exp.assetBundlePatterns;\n\n  return exp;\n}\n\nfunction logPatterns(patterns: string[]) {\n  // Only log the patterns in debug mode, if they aren't already defined in the app.json, then all files will be targeted.\n  Log.log('\\nProcessing asset bundle patterns:');\n  patterns.forEach((p) => Log.log('- ' + p));\n}\n\nfunction shouldBundleAsset(asset: Asset, patterns: string[]) {\n  const file = asset.files?.[0];\n  return !!(\n    '__packager_asset' in asset &&\n    asset.__packager_asset &&\n    file &&\n    patterns.some((pattern) => minimatch(file, pattern))\n  );\n}\n\nexport async function exportAssetsAsync(\n  projectRoot: string,\n  {\n    exp,\n    outputDir,\n    bundles,\n  }: {\n    exp: ExpoAppManifest;\n    bundles: Partial<Record<ModPlatform, BundleOutput>>;\n    outputDir: string;\n  }\n) {\n  const assets: Asset[] = uniqBy(\n    Object.values(bundles).flatMap((bundle) => bundle!.assets),\n    (asset) => asset.hash\n  );\n\n  if (assets[0]?.fileHashes) {\n    Log.log('Saving assets');\n    await saveAssetsAsync(projectRoot, { assets, outputDir });\n  }\n\n  // Add google services file if it exists\n  await resolveGoogleServicesFile(projectRoot, exp);\n\n  // Updates the manifest to reflect additional asset bundling + configs\n  await resolveAssetBundlePatternsAsync(projectRoot, exp, assets);\n\n  return { exp, assets };\n}\n\nexport async function exportCssAssetsAsync({\n  outputDir,\n  bundles,\n}: {\n  bundles: Partial<Record<ModPlatform, BundleOutput>>;\n  outputDir: string;\n}) {\n  const assets = uniqBy(\n    Object.values(bundles).flatMap((bundle) => bundle!.css),\n    (asset) => asset.filename\n  );\n\n  const cssDirectory = assets[0]?.filename;\n  if (!cssDirectory) return [];\n\n  await fs.promises.mkdir(path.join(outputDir, path.dirname(cssDirectory)), { recursive: true });\n\n  await Promise.all(\n    assets.map((v) => fs.promises.writeFile(path.join(outputDir, v.filename), v.source))\n  );\n\n  return assets.map((v) => '/' + v.filename);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}