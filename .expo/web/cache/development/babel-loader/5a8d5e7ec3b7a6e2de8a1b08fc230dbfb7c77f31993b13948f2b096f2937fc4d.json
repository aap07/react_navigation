{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearNodeModulesAsync = clearNodeModulesAsync;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _ora = require(\"./ora\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction clearNodeModulesAsync(_x) {\n  return _clearNodeModulesAsync.apply(this, arguments);\n}\nfunction _clearNodeModulesAsync() {\n  _clearNodeModulesAsync = _asyncToGenerator(function* (projectRoot) {\n    var cleanJsDepsStep = (0, _ora).logNewSection(\"Cleaning JavaScript dependencies\");\n    var time = Date.now();\n    yield _fs.default.promises.rm(_path.default.join(projectRoot, \"node_modules\"), {\n      recursive: true,\n      force: true\n    });\n    cleanJsDepsStep.succeed(`Cleaned JavaScript dependencies ${_chalk.default.gray(Date.now() - time + \"ms\")}`);\n  });\n  return _clearNodeModulesAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","clearNodeModulesAsync","_chalk","_interopRequireDefault","_fs","_path","_ora","_x","_clearNodeModulesAsync","apply","arguments","projectRoot","cleanJsDepsStep","logNewSection","time","Date","now","default","promises","rm","join","recursive","force","succeed","gray"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\nodeModules.ts"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { logNewSection } from './ora';\n\nexport async function clearNodeModulesAsync(projectRoot: string) {\n  // This step can take a couple seconds, if the installation logs are enabled (with EXPO_DEBUG) then it\n  // ends up looking odd to see \"Installing JavaScript dependencies\" for ~5 seconds before the logs start showing up.\n  const cleanJsDepsStep = logNewSection('Cleaning JavaScript dependencies');\n  const time = Date.now();\n  // nuke the node modules\n  // TODO: this is substantially slower, we should find a better alternative to ensuring the modules are installed.\n  await fs.promises.rm(path.join(projectRoot, 'node_modules'), { recursive: true, force: true });\n  cleanJsDepsStep.succeed(\n    `Cleaned JavaScript dependencies ${chalk.gray(Date.now() - time + 'ms')}`\n  );\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAMsBC,qBAAqB,GAArBA,qBAAqB;AANzB,IAAAC,MAAO,GAAAC,sBAAA,CAAAH,OAAA,CAAP,OAAO;AACV,IAAAI,GAAI,GAAAD,sBAAA,CAAAH,OAAA,CAAJ,IAAI;AACF,IAAAK,KAAM,GAAAF,sBAAA,CAAAH,OAAA,CAAN,MAAM;AAEO,IAAAM,IAAO,GAAAN,OAAA;;;;;;SAEfC,qBAAqBA,CAAAM,EAAA;EAAA,OAAAC,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,uBAAA;EAAAA,sBAAA,GAAAT,iBAAA,CAApC,WAAqCY,WAAmB,EAAE;IAG/D,IAAMC,eAAe,GAAG,IAAAN,IAAa,EAAoCO,aAApC,CAAC,kCAAkC,CAAC;IACzE,IAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE;IAGvB,MAAMZ,GAAE,CAAAa,OAAA,CAACC,QAAQ,CAACC,EAAE,CAACd,KAAI,CAAAY,OAAA,CAACG,IAAI,CAACT,WAAW,EAAE,cAAc,CAAC,EAAE;MAAEU,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;KAAM,CAAC;IAC9FV,eAAe,CAACW,OAAO,CACpB,mCAAkCrB,MAAK,CAAAe,OAAA,CAACO,IAAI,CAACT,IAAI,CAACC,GAAG,EAAE,GAAGF,IAAI,GAAG,IAAI,CAAE,EAAC,CAC1E;GACF;EAAA,OAAAN,sBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}