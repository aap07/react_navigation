{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = GestureHandlerRootView;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _init = require(\"../init\");\nvar _GestureHandlerRootViewContext = _interopRequireDefault(require(\"../GestureHandlerRootViewContext\"));\nvar _RNGestureHandlerRootViewNativeComponent = _interopRequireDefault(require(\"../specs/RNGestureHandlerRootViewNativeComponent\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction GestureHandlerRootView(props) {\n  (0, _init.maybeInitializeFabric)();\n  return React.createElement(_GestureHandlerRootViewContext.default.Provider, {\n    value: true\n  }, React.createElement(_RNGestureHandlerRootViewNativeComponent.default, props));\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_init","_GestureHandlerRootViewContext","_interopRequireDefault","_RNGestureHandlerRootViewNativeComponent","GestureHandlerRootView","props","maybeInitializeFabric","createElement","default","Provider","value"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\commonjs\\components\\GestureHandlerRootView.android.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { ViewProps } from 'react-native';\nimport { maybeInitializeFabric } from '../init';\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\nimport GestureHandlerRootViewNativeComponent from '../specs/RNGestureHandlerRootViewNativeComponent';\n\nexport interface GestureHandlerRootViewProps\n  extends PropsWithChildren<ViewProps> {}\n\nexport default function GestureHandlerRootView(\n  props: GestureHandlerRootViewProps\n) {\n  // try initialize fabric on the first render, at this point we can\n  // reliably check if fabric is enabled (the function contains a flag\n  // to make sure it's called only once)\n  maybeInitializeFabric();\n\n  return (\n    <GestureHandlerRootViewContext.Provider value>\n      <GestureHandlerRootViewNativeComponent {...props} />\n    </GestureHandlerRootViewContext.Provider>\n  );\n}\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAGA,IAAAC,KAAA,GAAAD,OAAA;AACA,IAAAE,8BAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,wCAAA,GAAAD,sBAAA,CAAAH,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKe,SAASK,sBAATA,CACbC,KADa,EAEb;EAIA,IAAAL,KAAA,CAAAM,qBAAA;EAEA,OACET,KAAA,CAAAU,aAAA,CAACN,8BAAA,CAAAO,OAAD,CAA+BC,QAA/B;IAAwCC,KAAK;EAA7C,GACEb,KAAA,CAAAU,aAAA,CAACJ,wCAAA,CAAAK,OAAD,EAA2CH,KAA3C,CADF,CADF;AAKD"},"metadata":{},"sourceType":"script","externalDependencies":[]}