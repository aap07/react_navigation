{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"com.apple.developer.associated-domains\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureApplicationTargetEntitlementsFileConfigured = ensureApplicationTargetEntitlementsFileConfigured;\nexports.getEntitlementsPath = getEntitlementsPath;\nexports.setAssociatedDomains = setAssociatedDomains;\nexports.withAssociatedDomains = void 0;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _slash() {\n  var data = _interopRequireDefault(require(\"slash\"));\n  _slash = function _slash() {\n    return data;\n  };\n  return data;\n}\nfunction _iosPlugins() {\n  var data = require(\"../plugins/ios-plugins\");\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Target() {\n  var data = require(\"./Target\");\n  _Target = function _Target() {\n    return data;\n  };\n  return data;\n}\nfunction _Xcodeproj() {\n  var data = require(\"./utils/Xcodeproj\");\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n  return data;\n}\nfunction _string() {\n  var data = require(\"./utils/string\");\n  _string = function _string() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar withAssociatedDomains = (0, _iosPlugins().createEntitlementsPlugin)(setAssociatedDomains, 'withAssociatedDomains');\nexports.withAssociatedDomains = withAssociatedDomains;\nfunction setAssociatedDomains(config, _ref) {\n  var _ = _ref['com.apple.developer.associated-domains'],\n    entitlementsPlist = _objectWithoutProperties(_ref, _excluded);\n  var _config$ios;\n  if ((_config$ios = config.ios) !== null && _config$ios !== void 0 && _config$ios.associatedDomains) {\n    return _objectSpread(_objectSpread({}, entitlementsPlist), {}, {\n      'com.apple.developer.associated-domains': config.ios.associatedDomains\n    });\n  }\n  return entitlementsPlist;\n}\nfunction getEntitlementsPath(projectRoot) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    targetName = _ref2.targetName,\n    _ref2$buildConfigurat = _ref2.buildConfiguration,\n    buildConfiguration = _ref2$buildConfigurat === void 0 ? 'Release' : _ref2$buildConfigurat;\n  var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n  var xcBuildConfiguration = (0, _Target().getXCBuildConfigurationFromPbxproj)(project, {\n    targetName: targetName,\n    buildConfiguration: buildConfiguration\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  var entitlementsPath = getEntitlementsPathFromBuildConfiguration(projectRoot, xcBuildConfiguration);\n  return entitlementsPath && _fs().default.existsSync(entitlementsPath) ? entitlementsPath : null;\n}\nfunction getEntitlementsPathFromBuildConfiguration(projectRoot, xcBuildConfiguration) {\n  var _xcBuildConfiguration;\n  var entitlementsPathRaw = xcBuildConfiguration === null || xcBuildConfiguration === void 0 ? void 0 : (_xcBuildConfiguration = xcBuildConfiguration.buildSettings) === null || _xcBuildConfiguration === void 0 ? void 0 : _xcBuildConfiguration.CODE_SIGN_ENTITLEMENTS;\n  if (entitlementsPathRaw) {\n    return _path().default.normalize(_path().default.join(projectRoot, 'ios', (0, _string().trimQuotes)(entitlementsPathRaw)));\n  } else {\n    return null;\n  }\n}\nfunction ensureApplicationTargetEntitlementsFileConfigured(projectRoot) {\n  var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n  var projectName = (0, _Xcodeproj().getProjectName)(projectRoot);\n  var productName = (0, _Xcodeproj().getProductName)(project);\n  var _ref3 = (0, _Target().findFirstNativeTarget)(project),\n    _ref4 = _slicedToArray(_ref3, 2),\n    applicationTarget = _ref4[1];\n  var buildConfigurations = (0, _Xcodeproj().getBuildConfigurationsForListId)(project, applicationTarget.buildConfigurationList);\n  var hasChangesToWrite = false;\n  for (var _ref5 of buildConfigurations) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n    var xcBuildConfiguration = _ref6[1];\n    var oldEntitlementPath = getEntitlementsPathFromBuildConfiguration(projectRoot, xcBuildConfiguration);\n    if (oldEntitlementPath && _fs().default.existsSync(oldEntitlementPath)) {\n      return;\n    }\n    hasChangesToWrite = true;\n    var entitlementsRelativePath = (0, _slash().default)(_path().default.join(projectName, `${productName}.entitlements`));\n    var entitlementsPath = _path().default.normalize(_path().default.join(projectRoot, 'ios', entitlementsRelativePath));\n    _fs().default.mkdirSync(_path().default.dirname(entitlementsPath), {\n      recursive: true\n    });\n    if (!_fs().default.existsSync(entitlementsPath)) {\n      _fs().default.writeFileSync(entitlementsPath, ENTITLEMENTS_TEMPLATE);\n    }\n    xcBuildConfiguration.buildSettings.CODE_SIGN_ENTITLEMENTS = entitlementsRelativePath;\n  }\n  if (hasChangesToWrite) {\n    _fs().default.writeFileSync(project.filepath, project.writeSync());\n  }\n}\nvar ENTITLEMENTS_TEMPLATE = `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n</dict>\n</plist>\n`;","map":{"version":3,"names":["_fs","data","_interopRequireDefault","require","_path","_slash","_iosPlugins","_Target","_Xcodeproj","_string","obj","__esModule","default","withAssociatedDomains","createEntitlementsPlugin","setAssociatedDomains","exports","config","_ref","_","entitlementsPlist","_objectWithoutProperties","_excluded","_config$ios","ios","associatedDomains","_objectSpread","getEntitlementsPath","projectRoot","_ref2","arguments","length","undefined","targetName","_ref2$buildConfigurat","buildConfiguration","project","getPbxproj","xcBuildConfiguration","getXCBuildConfigurationFromPbxproj","entitlementsPath","getEntitlementsPathFromBuildConfiguration","existsSync","_xcBuildConfiguration","entitlementsPathRaw","buildSettings","CODE_SIGN_ENTITLEMENTS","normalize","join","trimQuotes","ensureApplicationTargetEntitlementsFileConfigured","projectName","getProjectName","productName","getProductName","_ref3","findFirstNativeTarget","_ref4","_slicedToArray","applicationTarget","buildConfigurations","getBuildConfigurationsForListId","buildConfigurationList","hasChangesToWrite","_ref5","_ref6","oldEntitlementPath","entitlementsRelativePath","mkdirSync","dirname","recursive","writeFileSync","ENTITLEMENTS_TEMPLATE","filepath","writeSync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\ios\\Entitlements.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { JSONObject } from '@expo/json-file';\nimport fs from 'fs';\nimport path from 'path';\nimport slash from 'slash';\nimport { XCBuildConfiguration } from 'xcode';\n\nimport { createEntitlementsPlugin } from '../plugins/ios-plugins';\nimport { findFirstNativeTarget, getXCBuildConfigurationFromPbxproj } from './Target';\nimport {\n  getBuildConfigurationsForListId,\n  getPbxproj,\n  getProductName,\n  getProjectName,\n} from './utils/Xcodeproj';\nimport { trimQuotes } from './utils/string';\n\nexport const withAssociatedDomains = createEntitlementsPlugin(\n  setAssociatedDomains,\n  'withAssociatedDomains'\n);\n\nexport function setAssociatedDomains(\n  config: ExpoConfig,\n  { 'com.apple.developer.associated-domains': _, ...entitlementsPlist }: JSONObject\n): JSONObject {\n  if (config.ios?.associatedDomains) {\n    return {\n      ...entitlementsPlist,\n      'com.apple.developer.associated-domains': config.ios.associatedDomains,\n    };\n  }\n\n  return entitlementsPlist;\n}\n\nexport function getEntitlementsPath(\n  projectRoot: string,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string } = {}\n): string | null {\n  const project = getPbxproj(projectRoot);\n  const xcBuildConfiguration = getXCBuildConfigurationFromPbxproj(project, {\n    targetName,\n    buildConfiguration,\n  });\n  if (!xcBuildConfiguration) {\n    return null;\n  }\n  const entitlementsPath = getEntitlementsPathFromBuildConfiguration(\n    projectRoot,\n    xcBuildConfiguration\n  );\n  return entitlementsPath && fs.existsSync(entitlementsPath) ? entitlementsPath : null;\n}\n\nfunction getEntitlementsPathFromBuildConfiguration(\n  projectRoot: string,\n  xcBuildConfiguration: XCBuildConfiguration\n): string | null {\n  const entitlementsPathRaw = xcBuildConfiguration?.buildSettings?.CODE_SIGN_ENTITLEMENTS as\n    | string\n    | undefined;\n  if (entitlementsPathRaw) {\n    return path.normalize(path.join(projectRoot, 'ios', trimQuotes(entitlementsPathRaw)));\n  } else {\n    return null;\n  }\n}\n\nexport function ensureApplicationTargetEntitlementsFileConfigured(projectRoot: string): void {\n  const project = getPbxproj(projectRoot);\n  const projectName = getProjectName(projectRoot);\n  const productName = getProductName(project);\n\n  const [, applicationTarget] = findFirstNativeTarget(project);\n  const buildConfigurations = getBuildConfigurationsForListId(\n    project,\n    applicationTarget.buildConfigurationList\n  );\n  let hasChangesToWrite = false;\n  for (const [, xcBuildConfiguration] of buildConfigurations) {\n    const oldEntitlementPath = getEntitlementsPathFromBuildConfiguration(\n      projectRoot,\n      xcBuildConfiguration\n    );\n    if (oldEntitlementPath && fs.existsSync(oldEntitlementPath)) {\n      return;\n    }\n    hasChangesToWrite = true;\n    // Use posix formatted path, even on Windows\n    const entitlementsRelativePath = slash(path.join(projectName, `${productName}.entitlements`));\n    const entitlementsPath = path.normalize(\n      path.join(projectRoot, 'ios', entitlementsRelativePath)\n    );\n    fs.mkdirSync(path.dirname(entitlementsPath), { recursive: true });\n    if (!fs.existsSync(entitlementsPath)) {\n      fs.writeFileSync(entitlementsPath, ENTITLEMENTS_TEMPLATE);\n    }\n    xcBuildConfiguration.buildSettings.CODE_SIGN_ENTITLEMENTS = entitlementsRelativePath;\n  }\n  if (hasChangesToWrite) {\n    fs.writeFileSync(project.filepath, project.writeSync());\n  }\n}\n\nconst ENTITLEMENTS_TEMPLATE = `\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n</dict>\n</plist>\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}