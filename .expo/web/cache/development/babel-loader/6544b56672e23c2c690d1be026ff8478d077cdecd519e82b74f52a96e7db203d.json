{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureDependenciesAsync = ensureDependenciesAsync;\nexports.createInstallCommand = createInstallCommand;\nvar _config = require(\"@expo/config\");\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _wrapAnsi = _interopRequireDefault(require(\"wrap-ansi\"));\nvar _installAsync = require(\"../../../install/installAsync\");\nvar Log = _interopRequireWildcard(require(\"../../../log\"));\nvar _errors = require(\"../../../utils/errors\");\nvar _interactive = require(\"../../../utils/interactive\");\nvar _ora = require(\"../../../utils/ora\");\nvar _prompts = require(\"../../../utils/prompts\");\nvar _getMissingPackages = require(\"./getMissingPackages\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction ensureDependenciesAsync(_x, _x2) {\n  return _ensureDependenciesAsync.apply(this, arguments);\n}\nfunction _ensureDependenciesAsync() {\n  _ensureDependenciesAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var _ref$exp = _ref.exp,\n      exp = _ref$exp === void 0 ? (0, _config).getConfig(projectRoot).exp : _ref$exp,\n      requiredPackages = _ref.requiredPackages,\n      warningMessage = _ref.warningMessage,\n      installMessage = _ref.installMessage,\n      _ref$skipPrompt = _ref.skipPrompt,\n      skipPrompt = _ref$skipPrompt === void 0 ? !(0, _interactive).isInteractive() : _ref$skipPrompt,\n      _ref$isProjectMutable = _ref.isProjectMutable,\n      isProjectMutable = _ref$isProjectMutable === void 0 ? (0, _interactive).isInteractive() : _ref$isProjectMutable;\n    var _yield$getMissingPack = yield (0, _getMissingPackages).getMissingPackagesAsync(projectRoot, {\n        sdkVersion: exp.sdkVersion,\n        requiredPackages: requiredPackages\n      }),\n      missing = _yield$getMissingPack.missing;\n    if (!missing.length) {\n      return true;\n    }\n    var readableMissingPackages = missing.map(function (_ref5) {\n      var pkg = _ref5.pkg,\n        version = _ref5.version;\n      return version ? [pkg, version].join(\"@\") : pkg;\n    }).join(\", \");\n    var title = installMessage;\n    if (skipPrompt && !isProjectMutable) {\n      title += \"\\n\\n\";\n    } else {\n      var confirm = skipPrompt;\n      if (skipPrompt) {\n        Log.log(wrapForTerminal(title + ` Installing ${_chalk.default.cyan(readableMissingPackages)}`));\n      } else {\n        confirm = yield (0, _prompts).confirmAsync({\n          message: wrapForTerminal(title + ` Would you like to install ${_chalk.default.cyan(readableMissingPackages)}?`),\n          initial: true\n        });\n      }\n      if (confirm) {\n        var packages = missing.map(function (_ref6) {\n          var pkg = _ref6.pkg,\n            version = _ref6.version;\n          return version ? [pkg, version].join(\"@\") : pkg;\n        });\n        yield installPackagesAsync(projectRoot, {\n          packages: packages\n        });\n        return yield ensureDependenciesAsync(projectRoot, {\n          skipPrompt: true,\n          installMessage: installMessage,\n          warningMessage: warningMessage,\n          requiredPackages: requiredPackages\n        });\n      }\n      title = \"\";\n    }\n    var installCommand = createInstallCommand({\n      packages: missing\n    });\n    var disableMessage = warningMessage;\n    var solution = `Please install ${_chalk.default.bold(readableMissingPackages)} by running:\\n\\n  ${_chalk.default.reset.bold(installCommand)}\\n\\n`;\n    throw new _errors.CommandError(wrapForTerminal(title + solution + disableMessage + \"\\n\"));\n  });\n  return _ensureDependenciesAsync.apply(this, arguments);\n}\nfunction wrapForTerminal(message) {\n  return (0, _wrapAnsi).default(message, process.stdout.columns || 80);\n}\nfunction createInstallCommand(_ref2) {\n  var packages = _ref2.packages;\n  return \"npx expo install \" + packages.map(function (_ref3) {\n    var pkg = _ref3.pkg,\n      version = _ref3.version;\n    if (version) {\n      return [pkg, version].join(\"@\");\n    }\n    return pkg;\n  }).join(\" \");\n}\nfunction installPackagesAsync(_x3, _x4) {\n  return _installPackagesAsync.apply(this, arguments);\n}\nfunction _installPackagesAsync() {\n  _installPackagesAsync = _asyncToGenerator(function* (projectRoot, _ref4) {\n    var packages = _ref4.packages;\n    var packagesStr = _chalk.default.bold(packages.join(\", \"));\n    Log.log();\n    var installingPackageStep = (0, _ora).logNewSection(`Installing ${packagesStr}`);\n    try {\n      yield (0, _installAsync).installAsync(packages, {\n        projectRoot: projectRoot\n      });\n    } catch (e) {\n      installingPackageStep.fail(`Failed to install ${packagesStr} with error: ${e.message}`);\n      throw e;\n    }\n    installingPackageStep.succeed(`Installed ${packagesStr}`);\n  });\n  return _installPackagesAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","ensureDependenciesAsync","createInstallCommand","_config","_chalk","_interopRequireDefault","_wrapAnsi","_installAsync","Log","_interopRequireWildcard","_errors","_interactive","_ora","_prompts","_getMissingPackages","_x","_x2","_ensureDependenciesAsync","apply","arguments","projectRoot","_ref","_ref$exp","exp","getConfig","requiredPackages","warningMessage","installMessage","_ref$skipPrompt","skipPrompt","isInteractive","_ref$isProjectMutable","isProjectMutable","_yield$getMissingPack","getMissingPackagesAsync","sdkVersion","missing","length","readableMissingPackages","map","_ref5","pkg","version","join","title","confirm","log","wrapForTerminal","default","cyan","confirmAsync","message","initial","packages","_ref6","installPackagesAsync","installCommand","disableMessage","solution","bold","reset","CommandError","process","stdout","columns","_ref2","_ref3","_x3","_x4","_installPackagesAsync","_ref4","packagesStr","installingPackageStep","logNewSection","installAsync","e","fail","succeed"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\doctor\\dependencies\\ensureDependenciesAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport wrapAnsi from 'wrap-ansi';\n\nimport { installAsync } from '../../../install/installAsync';\nimport * as Log from '../../../log';\nimport { CommandError } from '../../../utils/errors';\nimport { isInteractive } from '../../../utils/interactive';\nimport { logNewSection } from '../../../utils/ora';\nimport { confirmAsync } from '../../../utils/prompts';\nimport { getMissingPackagesAsync, ResolvedPackage } from './getMissingPackages';\n\nexport async function ensureDependenciesAsync(\n  projectRoot: string,\n  {\n    exp = getConfig(projectRoot).exp,\n    requiredPackages,\n    warningMessage,\n    installMessage,\n    // Don't prompt in CI\n    skipPrompt = !isInteractive(),\n    isProjectMutable = isInteractive(),\n  }: {\n    exp?: ExpoConfig;\n    installMessage: string;\n    warningMessage: string;\n    requiredPackages: ResolvedPackage[];\n    skipPrompt?: boolean;\n    /** Project can be mutated in the current environment. */\n    isProjectMutable?: boolean;\n  }\n): Promise<boolean> {\n  const { missing } = await getMissingPackagesAsync(projectRoot, {\n    sdkVersion: exp.sdkVersion,\n    requiredPackages,\n  });\n  if (!missing.length) {\n    return true;\n  }\n\n  // Prompt to install or bail out...\n  const readableMissingPackages = missing\n    .map(({ pkg, version }) => (version ? [pkg, version].join('@') : pkg))\n    .join(', ');\n\n  let title = installMessage;\n\n  if (skipPrompt && !isProjectMutable) {\n    title += '\\n\\n';\n  } else {\n    let confirm = skipPrompt;\n    if (skipPrompt) {\n      // Automatically install packages without prompting.\n      Log.log(wrapForTerminal(title + ` Installing ${chalk.cyan(readableMissingPackages)}`));\n    } else {\n      confirm = await confirmAsync({\n        message: wrapForTerminal(\n          title + ` Would you like to install ${chalk.cyan(readableMissingPackages)}?`\n        ),\n        initial: true,\n      });\n    }\n\n    if (confirm) {\n      // Format with version if available.\n      const packages = missing.map(({ pkg, version }) =>\n        version ? [pkg, version].join('@') : pkg\n      );\n      // Install packages with versions\n      await installPackagesAsync(projectRoot, {\n        packages,\n      });\n      // Try again but skip prompting twice, simply fail if the packages didn't install correctly.\n      return await ensureDependenciesAsync(projectRoot, {\n        skipPrompt: true,\n        installMessage,\n        warningMessage,\n        requiredPackages,\n      });\n    }\n\n    // Reset the title so it doesn't print twice in interactive mode.\n    title = '';\n  }\n\n  const installCommand = createInstallCommand({\n    packages: missing,\n  });\n\n  const disableMessage = warningMessage;\n\n  const solution = `Please install ${chalk.bold(\n    readableMissingPackages\n  )} by running:\\n\\n  ${chalk.reset.bold(installCommand)}\\n\\n`;\n\n  // This prevents users from starting a misconfigured JS or TS project by default.\n  throw new CommandError(wrapForTerminal(title + solution + disableMessage + '\\n'));\n}\n\n/**  Wrap long messages to fit smaller terminals. */\nfunction wrapForTerminal(message: string): string {\n  return wrapAnsi(message, process.stdout.columns || 80);\n}\n\n/** Create the bash install command from a given set of packages and settings. */\nexport function createInstallCommand({\n  packages,\n}: {\n  packages: {\n    file: string;\n    pkg: string;\n    version?: string | undefined;\n  }[];\n}) {\n  return (\n    'npx expo install ' +\n    packages\n      .map(({ pkg, version }) => {\n        if (version) {\n          return [pkg, version].join('@');\n        }\n        return pkg;\n      })\n      .join(' ')\n  );\n}\n\n/** Install packages in the project. */\nasync function installPackagesAsync(projectRoot: string, { packages }: { packages: string[] }) {\n  const packagesStr = chalk.bold(packages.join(', '));\n  Log.log();\n  const installingPackageStep = logNewSection(`Installing ${packagesStr}`);\n  try {\n    await installAsync(packages, { projectRoot });\n  } catch (e: any) {\n    installingPackageStep.fail(`Failed to install ${packagesStr} with error: ${e.message}`);\n    throw e;\n  }\n  installingPackageStep.succeed(`Installed ${packagesStr}`);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}