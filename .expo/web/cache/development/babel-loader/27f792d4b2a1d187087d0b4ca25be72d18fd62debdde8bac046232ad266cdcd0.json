{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ExpoInspectorProxy\", {\n  enumerable: true,\n  get: function get() {\n    return _proxy.ExpoInspectorProxy;\n  }\n});\nexports.createInspectorProxy = createInspectorProxy;\nvar _resolveFromProject = require(\"../resolveFromProject\");\nvar _device = require(\"./device\");\nvar _proxy = require(\"./proxy\");\nvar debug = require(\"debug\")(\"expo:metro:inspector-proxy\");\nfunction createInspectorProxy(metroBundler, projectRoot) {\n  debug(\"Expo inspector proxy enabled\");\n  var _importMetroInspector = (0, _resolveFromProject).importMetroInspectorProxyFromProject(projectRoot),\n    MetroInspectorProxy = _importMetroInspector.InspectorProxy;\n  var ExpoInspectorDevice = (0, _device).createInspectorDeviceClass(metroBundler, (0, _resolveFromProject).importMetroInspectorDeviceFromProject(projectRoot));\n  var inspectorProxy = new _proxy.ExpoInspectorProxy(new MetroInspectorProxy(projectRoot), ExpoInspectorDevice);\n  return inspectorProxy;\n}","map":{"version":3,"names":["_proxy","ExpoInspectorProxy","createInspectorProxy","_resolveFromProject","require","_device","debug","metroBundler","projectRoot","_importMetroInspector","importMetroInspectorProxyFromProject","MetroInspectorProxy","InspectorProxy","ExpoInspectorDevice","createInspectorDeviceClass","importMetroInspectorDeviceFromProject","inspectorProxy"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\metro\\inspector-proxy\\index.ts"],"sourcesContent":["import { MetroBundlerDevServer } from '../MetroBundlerDevServer';\nimport {\n  importMetroInspectorDeviceFromProject,\n  importMetroInspectorProxyFromProject,\n} from '../resolveFromProject';\nimport { createInspectorDeviceClass } from './device';\nimport { ExpoInspectorProxy } from './proxy';\n\nexport { ExpoInspectorProxy } from './proxy';\n\nconst debug = require('debug')('expo:metro:inspector-proxy') as typeof console.log;\n\nexport function createInspectorProxy(metroBundler: MetroBundlerDevServer, projectRoot: string) {\n  debug('Expo inspector proxy enabled');\n\n  // Import the installed `metro-inspector-proxy` from the project\n  // We use these base classes to extend functionality\n  const { InspectorProxy: MetroInspectorProxy } = importMetroInspectorProxyFromProject(projectRoot);\n  // The device is slightly more complicated, we need to extend that class\n  const ExpoInspectorDevice = createInspectorDeviceClass(\n    metroBundler,\n    importMetroInspectorDeviceFromProject(projectRoot)\n  );\n\n  const inspectorProxy = new ExpoInspectorProxy(\n    new MetroInspectorProxy(projectRoot),\n    ExpoInspectorDevice\n  );\n\n  return inspectorProxy;\n}\n"],"mappings":"AAAA;;;;;+BAQS,oBAAkB;;;WAFQA,MAAS,CAEnCC,kBAAkB;;;QAIXC,oBAAoB,GAApBA,oBAAoB;AAR7B,IAAAC,mBAAuB,GAAAC,OAAA;AACa,IAAAC,OAAU,GAAAD,OAAA;AAClB,IAAAJ,MAAS,GAAAI,OAAA;AAI5C,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC,CAAC,4BAA4B,CAAC;AAErD,SAASF,oBAAoBA,CAACK,YAAmC,EAAEC,WAAmB,EAAE;EAC7FF,KAAK,CAAC,8BAA8B,CAAC;EAIrC,IAAAG,qBAAA,GAAgD,IAAAN,mBAAoC,EAAaO,oCAAb,CAACF,WAAW,CAAC;IAAzEG,mBAAmB,GAAAF,qBAAA,CAAnCG,cAAc;EAEtB,IAAMC,mBAAmB,GAAG,IAAAR,OAA0B,EAGrDS,0BAHqD,CACpDP,YAAY,EACZ,IAAAJ,mBAAqC,EAAaY,qCAAb,CAACP,WAAW,CAAC,CACnD;EAED,IAAMQ,cAAc,GAAG,IAAIhB,MAAkB,CAAAC,kBAAA,CAC3C,IAAIU,mBAAmB,CAACH,WAAW,CAAC,EACpCK,mBAAmB,CACpB;EAED,OAAOG,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}