{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _fetch = require(\"./fetch\");\nfunction isPackagerRunning() {\n  return _isPackagerRunning.apply(this, arguments);\n}\nfunction _isPackagerRunning() {\n  _isPackagerRunning = _asyncToGenerator(function* () {\n    var packagerPort = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : process.env.RCT_METRO_PORT || '8081';\n    try {\n      var _yield = yield (0, _fetch.fetch)(`http://localhost:${packagerPort}/status`),\n        data = _yield.data;\n      return data === 'packager-status:running' ? 'running' : 'unrecognized';\n    } catch (_error) {\n      return 'not_running';\n    }\n  });\n  return _isPackagerRunning.apply(this, arguments);\n}\nvar _default = isPackagerRunning;\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_fetch","isPackagerRunning","_isPackagerRunning","apply","arguments","packagerPort","length","undefined","process","env","RCT_METRO_PORT","_yield","fetch","data","_error","_default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-tools/build/isPackagerRunning.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _fetch = require(\"./fetch\");\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Indicates whether or not the packager is running. It returns a promise that\n * returns one of these possible values:\n *   - `running`: the packager is running\n *   - `not_running`: the packager nor any process is running on the expected port.\n *   - `unrecognized`: one other process is running on the port we expect the packager to be running.\n */\nasync function isPackagerRunning(packagerPort = process.env.RCT_METRO_PORT || '8081') {\n  try {\n    const {\n      data\n    } = await (0, _fetch.fetch)(`http://localhost:${packagerPort}/status`);\n    return data === 'packager-status:running' ? 'running' : 'unrecognized';\n  } catch (_error) {\n    return 'not_running';\n  }\n}\nvar _default = isPackagerRunning;\nexports.default = _default;\n\n//# sourceMappingURL=isPackagerRunning.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,MAAM,GAAGN,OAAO,UAAU,CAAC;AAAC,SAgBjBO,iBAAiBA,CAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,mBAAA;EAAAA,kBAAA,GAAAT,iBAAA,CAAhC,aAAsF;IAAA,IAArDY,YAAY,GAAAD,SAAA,CAAAE,MAAA,QAAAF,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAGI,OAAO,CAACC,GAAG,CAACC,cAAc,IAAI,MAAM;IAClF,IAAI;MACF,IAAAC,MAAA,SAEU,CAAC,CAAC,EAAEX,MAAM,CAACY,KAAK,EAAG,oBAAmBP,YAAa,SAAQ,CAAC;QADpEQ,IAAI,GAAAF,MAAA,CAAJE,IAAI;MAEN,OAAOA,IAAI,KAAK,yBAAyB,GAAG,SAAS,GAAG,cAAc;IACxE,CAAC,CAAC,OAAOC,MAAM,EAAE;MACf,OAAO,aAAa;IACtB;EACF,CAAC;EAAA,OAAAZ,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,IAAIW,QAAQ,GAAGd,iBAAiB;AAChCJ,OAAO,CAACE,OAAO,GAAGgB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}