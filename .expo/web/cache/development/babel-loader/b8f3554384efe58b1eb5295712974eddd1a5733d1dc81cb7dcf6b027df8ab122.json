{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/utils/BuildProperties.types.d.ts"],"sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\n/**\n * Rule to transform from config to build properties\n *\n * @example\n * ```ts\n * {\n *   propName: 'expo.jsEngine',\n *   propValueGetter: (config) => config.ios?.jsEngine ?? config.jsEngine ?? 'hermes',\n * }\n * ```\n * Will lookup a value through the `propValueGetter`, and update to `hermesEnabled` key-value in **android/gradle.properties**\n * or `expo.jsEngine` key-value in **ios/Podfile.properties.json**.\n *\n */\n/**\n * Source config can be either expo config or generic config\n */\nexport type BuildPropertiesConfig = ExpoConfig | Record<string, any>;\nexport interface ConfigToPropertyRuleType<SourceConfigType extends BuildPropertiesConfig> {\n    /** Property name in `android/gradle.properties` or `ios/Podfile.properties.json` */\n    propName: string;\n    /** Passing config and get the property value */\n    propValueGetter: (config: SourceConfigType) => string | null | undefined;\n}\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}