{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar VscodeRuntimeGetPropertiesHandler = function () {\n  function VscodeRuntimeGetPropertiesHandler() {\n    _classCallCheck(this, VscodeRuntimeGetPropertiesHandler);\n    this.interceptGetProperties = new Set();\n  }\n  _createClass(VscodeRuntimeGetPropertiesHandler, [{\n    key: \"onDebuggerMessage\",\n    value: function onDebuggerMessage(message, _ref) {\n      var debuggerType = _ref.debuggerType;\n      if (debuggerType === \"vscode\" && message.method === \"Runtime.getProperties\") {\n        this.interceptGetProperties.add(message.id);\n      }\n      return false;\n    }\n  }, {\n    key: \"onDeviceMessage\",\n    value: function onDeviceMessage(message, _ref2) {\n      var debuggerType = _ref2.debuggerType;\n      if (debuggerType === \"vscode\" && \"id\" in message && this.interceptGetProperties.has(message.id)) {\n        this.interceptGetProperties.delete(message.id);\n        var _result;\n        for (var item of (_result = message.result.result) != null ? _result : []) {\n          var ref;\n          if (item.value) {\n            var _description;\n            item.value.description = (_description = item.value.description) != null ? _description : \"\";\n          }\n          if (((ref = item.value) == null ? void 0 : ref.type) === \"symbol\" && item.value.objectId) {\n            delete item.value.objectId;\n          }\n        }\n      }\n      return false;\n    }\n  }]);\n  return VscodeRuntimeGetPropertiesHandler;\n}();\nexports.VscodeRuntimeGetPropertiesHandler = VscodeRuntimeGetPropertiesHandler;","map":{"version":3,"names":["_classCallCheck","require","_createClass","VscodeRuntimeGetPropertiesHandler","interceptGetProperties","Set","key","value","onDebuggerMessage","message","_ref","debuggerType","method","add","id","onDeviceMessage","_ref2","has","delete","_result","item","result","ref","_description","description","type","objectId"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\metro\\inspector-proxy\\handlers\\VscodeRuntimeGetProperties.ts"],"sourcesContent":["import Protocol from 'devtools-protocol';\n\nimport { ExpoDebuggerInfo } from '../device';\nimport { CdpMessage, DebuggerRequest, DeviceResponse, InspectorHandler } from './types';\n\n/**\n * Vscode doesn't seem to work nicely with missing `description` fields on `RemoteObject` instances.\n * It also tries to invoke `Runtime.callFunctionOn` on `Symbol` types, which crashes Hermes.\n * This handler tries to compensate for these two separate issues.\n *\n * @see https://github.com/facebook/hermes/issues/114\n * @see https://github.com/microsoft/vscode-js-debug/issues/1583\n */\nexport class VscodeRuntimeGetPropertiesHandler implements InspectorHandler {\n  /** Keep track of `Runtime.getProperties` responses to intercept, by request id */\n  interceptGetProperties = new Set<number>();\n\n  onDebuggerMessage(\n    message: DebuggerRequest<RuntimeGetProperties>,\n    { debuggerType }: ExpoDebuggerInfo\n  ): boolean {\n    if (debuggerType === 'vscode' && message.method === 'Runtime.getProperties') {\n      this.interceptGetProperties.add(message.id);\n    }\n\n    // Do not block propagation of this message\n    return false;\n  }\n\n  onDeviceMessage(\n    message: DeviceResponse<RuntimeGetProperties>,\n    { debuggerType }: ExpoDebuggerInfo\n  ) {\n    if (\n      debuggerType === 'vscode' &&\n      'id' in message &&\n      this.interceptGetProperties.has(message.id)\n    ) {\n      this.interceptGetProperties.delete(message.id);\n\n      for (const item of message.result.result ?? []) {\n        // Force-fully format the properties description to be an empty string\n        if (item.value) {\n          item.value.description = item.value.description ?? '';\n        }\n\n        // Avoid passing the `objectId` for symbol types.\n        // When collapsing in vscode, it will fetch information about the symbol using the `objectId`.\n        // The `Runtime.getProperties` request of the symbol hard-crashes Hermes.\n        if (item.value?.type === 'symbol' && item.value.objectId) {\n          delete item.value.objectId;\n        }\n      }\n    }\n\n    // Do not block propagation of this message\n    return false;\n  }\n}\n\n/** @see https://chromedevtools.github.io/devtools-protocol/v8/Runtime/#method-getProperties */\nexport type RuntimeGetProperties = CdpMessage<\n  'Runtime.getProperties',\n  Protocol.Runtime.GetPropertiesRequest,\n  Protocol.Runtime.GetPropertiesResponse\n>;\n"],"mappings":"AAAA;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;;;;IAaaE,iCAAiC;EAAA,SAAAA,kCAAA;IAAAH,eAAA,OAAAG,iCAAA;IAAA,KAE5CC,sBAAsB,GAAG,IAAIC,GAAG,EAAU;EAAA;EAAAH,YAAA,CAAAC,iCAAA;IAAAG,GAAA;IAAAC,KAAA,EAE1C,SAAAC,kBACEC,OAA8C,EAAAC,IAAA,EAErC;MAAA,IADPC,YAAY,GAAAD,IAAA,CAAZC,YAAY;MAEd,IAAIA,YAAY,KAAK,QAAQ,IAAIF,OAAO,CAACG,MAAM,KAAK,uBAAuB,EAAE;QAC3E,IAAI,CAACR,sBAAsB,CAACS,GAAG,CAACJ,OAAO,CAACK,EAAE,CAAC;;MAI7C,OAAO,KAAK;;EACb;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAQ,gBACEN,OAA6C,EAAAO,KAAA,EAE7C;MAAA,IADEL,YAAY,GAAAK,KAAA,CAAZL,YAAY;MAEd,IACEA,YAAY,KAAK,QAAQ,IACzB,IAAI,IAAIF,OAAO,IACf,IAAI,CAACL,sBAAsB,CAACa,GAAG,CAACR,OAAO,CAACK,EAAE,CAAC,EAC3C;QACA,IAAI,CAACV,sBAAsB,CAACc,MAAM,CAACT,OAAO,CAACK,EAAE,CAAC;YAE3BK,OAAqB;QAAxC,KAAK,IAAMC,IAAI,IAAI,CAAAD,OAAqB,GAArBV,OAAO,CAACY,MAAM,CAACA,MAAM,YAArBF,OAAqB,GAAI,EAAE,EAAE;cAS1CG,GAAU;UAPd,IAAIF,IAAI,CAACb,KAAK,EAAE;gBACWgB,YAAsB;YAA/CH,IAAI,CAACb,KAAK,CAACiB,WAAW,GAAG,CAAAD,YAAsB,GAAtBH,IAAI,CAACb,KAAK,CAACiB,WAAW,YAAtBD,YAAsB,GAAI,EAAE;;UAMvD,IAAI,EAAAD,GAAU,GAAVF,IAAI,CAACb,KAAK,SAAM,GAAhB,MAAgB,GAAhBe,GAAU,CAAEG,IAAI,MAAK,QAAQ,IAAIL,IAAI,CAACb,KAAK,CAACmB,QAAQ,EAAE;YACxD,OAAON,IAAI,CAACb,KAAK,CAACmB,QAAQ;;;;MAMhC,OAAO,KAAK;;EACb;EAAA,OAAAvB,iCAAA;AAAA;QA5CUA,iCAAiC,GAAjCA,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}