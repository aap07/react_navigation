{"ast":null,"code":"#!/usr/bin/env node\nvar argv = process.argv.slice(2);\nvar versions = [];\nvar range = [];\nvar inc = null;\nvar version = require(\"../package.json\").version;\nvar loose = false;\nvar includePrerelease = false;\nvar coerce = false;\nvar rtl = false;\nvar identifier;\nvar identifierBase;\nvar semver = require(\"../\");\nvar parseOptions = require(\"../internal/parse-options\");\nvar reverse = false;\nvar options = {};\nvar main = function main() {\n  if (!argv.length) {\n    return help();\n  }\n  while (argv.length) {\n    var a = argv.shift();\n    var indexOfEqualSign = a.indexOf('=');\n    if (indexOfEqualSign !== -1) {\n      var value = a.slice(indexOfEqualSign + 1);\n      a = a.slice(0, indexOfEqualSign);\n      argv.unshift(value);\n    }\n    switch (a) {\n      case '-rv':\n      case '-rev':\n      case '--rev':\n      case '--reverse':\n        reverse = true;\n        break;\n      case '-l':\n      case '--loose':\n        loose = true;\n        break;\n      case '-p':\n      case '--include-prerelease':\n        includePrerelease = true;\n        break;\n      case '-v':\n      case '--version':\n        versions.push(argv.shift());\n        break;\n      case '-i':\n      case '--inc':\n      case '--increment':\n        switch (argv[0]) {\n          case 'major':\n          case 'minor':\n          case 'patch':\n          case 'prerelease':\n          case 'premajor':\n          case 'preminor':\n          case 'prepatch':\n            inc = argv.shift();\n            break;\n          default:\n            inc = 'patch';\n            break;\n        }\n        break;\n      case '--preid':\n        identifier = argv.shift();\n        break;\n      case '-r':\n      case '--range':\n        range.push(argv.shift());\n        break;\n      case '-n':\n        identifierBase = argv.shift();\n        if (identifierBase === 'false') {\n          identifierBase = false;\n        }\n        break;\n      case '-c':\n      case '--coerce':\n        coerce = true;\n        break;\n      case '--rtl':\n        rtl = true;\n        break;\n      case '--ltr':\n        rtl = false;\n        break;\n      case '-h':\n      case '--help':\n      case '-?':\n        return help();\n      default:\n        versions.push(a);\n        break;\n    }\n  }\n  options = parseOptions({\n    loose: loose,\n    includePrerelease: includePrerelease,\n    rtl: rtl\n  });\n  versions = versions.map(function (v) {\n    return coerce ? (semver.coerce(v, options) || {\n      version: v\n    }).version : v;\n  }).filter(function (v) {\n    return semver.valid(v);\n  });\n  if (!versions.length) {\n    return fail();\n  }\n  if (inc && (versions.length !== 1 || range.length)) {\n    return failInc();\n  }\n  var _loop = function _loop(i) {\n      versions = versions.filter(function (v) {\n        return semver.satisfies(v, range[i], options);\n      });\n      if (!versions.length) {\n        return {\n          v: fail()\n        };\n      }\n    },\n    _ret;\n  for (var i = 0, l = range.length; i < l; i++) {\n    _ret = _loop(i);\n    if (_ret) return _ret.v;\n  }\n  return success(versions);\n};\nvar failInc = function failInc() {\n  console.error('--inc can only be used on a single version with no range');\n  fail();\n};\nvar fail = function fail() {\n  return process.exit(1);\n};\nvar success = function success() {\n  var compare = reverse ? 'rcompare' : 'compare';\n  versions.sort(function (a, b) {\n    return semver[compare](a, b, options);\n  }).map(function (v) {\n    return semver.clean(v, options);\n  }).map(function (v) {\n    return inc ? semver.inc(v, inc, options, identifier, identifierBase) : v;\n  }).forEach(function (v, i, _) {\n    console.log(v);\n  });\n};\nvar help = function help() {\n  return console.log(`SemVer ${version}\n\nA JavaScript implementation of the https://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\n--rtl\n        Coerce version strings right to left\n\n--ltr\n        Coerce version strings left to right (default)\n\n-n <base>\n        Base number to be used for the prerelease identifier.\n        Can be either 0 or 1, or false to omit the number altogether.\n        Defaults to 0.\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.`);\n};\nmain();","map":{"version":3,"names":["argv","process","slice","versions","range","inc","version","require","loose","includePrerelease","coerce","rtl","identifier","identifierBase","semver","parseOptions","reverse","options","main","length","help","a","shift","indexOfEqualSign","indexOf","value","unshift","push","map","v","filter","valid","fail","failInc","_loop","i","satisfies","_ret","l","success","console","error","exit","compare","sort","b","clean","forEach","_","log"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/semver/bin/semver.js"],"sourcesContent":["#!/usr/bin/env node\n// Standalone semver comparison program.\n// Exits successfully and prints matching version(s) if\n// any supplied version is valid and passes all tests.\n\nconst argv = process.argv.slice(2)\n\nlet versions = []\n\nconst range = []\n\nlet inc = null\n\nconst version = require('../package.json').version\n\nlet loose = false\n\nlet includePrerelease = false\n\nlet coerce = false\n\nlet rtl = false\n\nlet identifier\n\nlet identifierBase\n\nconst semver = require('../')\nconst parseOptions = require('../internal/parse-options')\n\nlet reverse = false\n\nlet options = {}\n\nconst main = () => {\n  if (!argv.length) {\n    return help()\n  }\n  while (argv.length) {\n    let a = argv.shift()\n    const indexOfEqualSign = a.indexOf('=')\n    if (indexOfEqualSign !== -1) {\n      const value = a.slice(indexOfEqualSign + 1)\n      a = a.slice(0, indexOfEqualSign)\n      argv.unshift(value)\n    }\n    switch (a) {\n      case '-rv': case '-rev': case '--rev': case '--reverse':\n        reverse = true\n        break\n      case '-l': case '--loose':\n        loose = true\n        break\n      case '-p': case '--include-prerelease':\n        includePrerelease = true\n        break\n      case '-v': case '--version':\n        versions.push(argv.shift())\n        break\n      case '-i': case '--inc': case '--increment':\n        switch (argv[0]) {\n          case 'major': case 'minor': case 'patch': case 'prerelease':\n          case 'premajor': case 'preminor': case 'prepatch':\n            inc = argv.shift()\n            break\n          default:\n            inc = 'patch'\n            break\n        }\n        break\n      case '--preid':\n        identifier = argv.shift()\n        break\n      case '-r': case '--range':\n        range.push(argv.shift())\n        break\n      case '-n':\n        identifierBase = argv.shift()\n        if (identifierBase === 'false') {\n          identifierBase = false\n        }\n        break\n      case '-c': case '--coerce':\n        coerce = true\n        break\n      case '--rtl':\n        rtl = true\n        break\n      case '--ltr':\n        rtl = false\n        break\n      case '-h': case '--help': case '-?':\n        return help()\n      default:\n        versions.push(a)\n        break\n    }\n  }\n\n  options = parseOptions({ loose, includePrerelease, rtl })\n\n  versions = versions.map((v) => {\n    return coerce ? (semver.coerce(v, options) || { version: v }).version : v\n  }).filter((v) => {\n    return semver.valid(v)\n  })\n  if (!versions.length) {\n    return fail()\n  }\n  if (inc && (versions.length !== 1 || range.length)) {\n    return failInc()\n  }\n\n  for (let i = 0, l = range.length; i < l; i++) {\n    versions = versions.filter((v) => {\n      return semver.satisfies(v, range[i], options)\n    })\n    if (!versions.length) {\n      return fail()\n    }\n  }\n  return success(versions)\n}\n\nconst failInc = () => {\n  console.error('--inc can only be used on a single version with no range')\n  fail()\n}\n\nconst fail = () => process.exit(1)\n\nconst success = () => {\n  const compare = reverse ? 'rcompare' : 'compare'\n  versions.sort((a, b) => {\n    return semver[compare](a, b, options)\n  }).map((v) => {\n    return semver.clean(v, options)\n  }).map((v) => {\n    return inc ? semver.inc(v, inc, options, identifier, identifierBase) : v\n  }).forEach((v, i, _) => {\n    console.log(v)\n  })\n}\n\nconst help = () => console.log(\n`SemVer ${version}\n\nA JavaScript implementation of the https://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\n--rtl\n        Coerce version strings right to left\n\n--ltr\n        Coerce version strings left to right (default)\n\n-n <base>\n        Base number to be used for the prerelease identifier.\n        Can be either 0 or 1, or false to omit the number altogether.\n        Defaults to 0.\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.`)\n\nmain()\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}