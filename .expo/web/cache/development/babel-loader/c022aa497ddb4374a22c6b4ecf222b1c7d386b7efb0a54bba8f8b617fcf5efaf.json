{"ast":null,"code":"import PressGestureHandler from \"./PressGestureHandler\";","map":{"version":3,"names":["PressGestureHandler"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/LongPressGestureHandler.d.ts"],"sourcesContent":["import PressGestureHandler from './PressGestureHandler';\nimport { Config } from './GestureHandler';\nimport { HammerInputNames } from './constants';\ndeclare class LongPressGestureHandler extends PressGestureHandler {\n    get minDurationMs(): number;\n    get maxDist(): number | undefined;\n    updateHasCustomActivationCriteria({ maxDistSq }: Config): boolean;\n    getConfig(): Partial<{\n        enabled: boolean;\n        minPointers: number;\n        maxPointers: number;\n        minDist: number;\n        minDistSq: number;\n        minVelocity: number;\n        minVelocitySq: number;\n        maxDist: number;\n        maxDistSq: number;\n        failOffsetXStart: number;\n        failOffsetYStart: number;\n        failOffsetXEnd: number;\n        failOffsetYEnd: number;\n        activeOffsetXStart: number;\n        activeOffsetXEnd: number;\n        activeOffsetYStart: number;\n        activeOffsetYEnd: number;\n        waitFor: any[] | null;\n        simultaneousHandlers: any[] | null;\n    }> | {\n        shouldCancelWhenOutside: boolean;\n        maxDistSq: number;\n    };\n    getHammerConfig(): {\n        time: number;\n        pointers: number | undefined;\n    };\n    getState(type: keyof typeof HammerInputNames): 1 | 4 | 5;\n}\nexport default LongPressGestureHandler;\n"],"mappings":"AAAA,OAAOA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}