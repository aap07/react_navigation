{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { State } from \"../../State\";\nimport { PointerType, TouchEventType, EventTypes } from \"../interfaces\";\nimport GestureHandlerOrchestrator from \"../tools/GestureHandlerOrchestrator\";\nimport InteractionManager from \"../tools/InteractionManager\";\nimport PointerEventManager from \"../tools/PointerEventManager\";\nimport PointerTracker from \"../tools/PointerTracker\";\nimport TouchEventManager from \"../tools/TouchEventManager\";\nimport { isPointerInBounds } from \"../utils\";\nvar GestureHandler = function () {\n  function GestureHandler() {\n    var _this = this;\n    _classCallCheck(this, GestureHandler);\n    this.lastSentState = null;\n    this.currentState = State.UNDETERMINED;\n    this.shouldCancellWhenOutside = false;\n    this.enabled = false;\n    this.config = {\n      enabled: false\n    };\n    this.eventManagers = [];\n    this.tracker = new PointerTracker();\n    this.activationIndex = 0;\n    this.awaiting = false;\n    this.active = false;\n    this.shouldResetProgress = false;\n    this.pointerType = PointerType.NONE;\n    this.sendEvent = function (newState, oldState) {\n      var _ref = _this.propsRef.current,\n        onGestureHandlerEvent = _ref.onGestureHandlerEvent,\n        onGestureHandlerStateChange = _ref.onGestureHandlerStateChange;\n      var resultEvent = _this.transformEventData(newState, oldState);\n      if (_this.lastSentState !== newState) {\n        _this.lastSentState = newState;\n        invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n      }\n      if (_this.currentState === State.ACTIVE) {\n        resultEvent.nativeEvent.oldState = undefined;\n        invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n      }\n    };\n    this.hasCustomActivationCriteria = false;\n  }\n  _createClass(GestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      this.propsRef = propsRef;\n      this.ref = ref;\n      this.currentState = State.UNDETERMINED;\n      this.setView();\n      this.addEventManager(new PointerEventManager(this.view));\n      this.addEventManager(new TouchEventManager(this.view));\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      if (!this.ref) {\n        throw new Error(`Cannot find HTML Element for handler ${this.handlerTag}`);\n      }\n      this.view = findNodeHandle(this.ref);\n      this.view.style['touchAction'] = 'none';\n      this.view.style['WebkitTouchCallout'] = 'none';\n      if (!this.config.userSelect) {\n        this.view.style['webkitUserSelect'] = 'none';\n        this.view.style['userSelect'] = 'none';\n      } else {\n        this.view.style['webkitUserSelect'] = this.config.userSelect;\n        this.view.style['userSelect'] = this.config.userSelect;\n      }\n    }\n  }, {\n    key: \"addEventManager\",\n    value: function addEventManager(manager) {\n      manager.setOnPointerDown(this.onPointerDown.bind(this));\n      manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n      manager.setOnPointerUp(this.onPointerUp.bind(this));\n      manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n      manager.setOnPointerMove(this.onPointerMove.bind(this));\n      manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n      manager.setOnPointerOut(this.onPointerOut.bind(this));\n      manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n      manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n      manager.setListeners();\n      this.eventManagers.push(manager);\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {}\n  }, {\n    key: \"onReset\",\n    value: function onReset() {}\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {}\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.tracker.resetTracker();\n      this.onReset();\n      this.resetProgress();\n      this.eventManagers.forEach(function (manager) {\n        return manager.resetManager();\n      });\n      this.currentState = State.UNDETERMINED;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState, sendIfDisabled) {\n      if (this.currentState === newState) {\n        return;\n      }\n      var oldState = this.currentState;\n      this.currentState = newState;\n      if (this.tracker.getTrackedPointersCount() > 0 && this.config.needsPointerData && this.isFinished()) {\n        this.cancelTouches();\n      }\n      GestureHandlerOrchestrator.getInstance().onHandlerStateChange(this, newState, oldState, sendIfDisabled);\n      this.onStateChange(newState, oldState);\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {}\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      if (!this.checkHitSlop()) {\n        return;\n      }\n      if (this.currentState === State.UNDETERMINED) {\n        this.moveToState(State.BEGAN);\n      }\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(sendIfDisabled) {\n      if (this.currentState === State.ACTIVE || this.currentState === State.BEGAN) {\n        this.moveToState(State.FAILED, sendIfDisabled);\n        this.view.style.cursor = 'auto';\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(sendIfDisabled) {\n      if (this.currentState === State.ACTIVE || this.currentState === State.UNDETERMINED || this.currentState === State.BEGAN) {\n        this.onCancel();\n        this.moveToState(State.CANCELLED, sendIfDisabled);\n        this.view.style.cursor = 'auto';\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.currentState === State.UNDETERMINED || this.currentState === State.BEGAN) {\n        this.moveToState(State.ACTIVE);\n        this.view.style.cursor = 'grab';\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.currentState === State.BEGAN || this.currentState === State.ACTIVE) {\n        this.moveToState(State.END);\n        this.view.style.cursor = 'auto';\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"isAwaiting\",\n    value: function isAwaiting() {\n      return this.awaiting;\n    }\n  }, {\n    key: \"setAwaiting\",\n    value: function setAwaiting(value) {\n      this.awaiting = value;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }, {\n    key: \"setActive\",\n    value: function setActive(value) {\n      this.active = value;\n    }\n  }, {\n    key: \"getShouldResetProgress\",\n    value: function getShouldResetProgress() {\n      return this.shouldResetProgress;\n    }\n  }, {\n    key: \"setShouldResetProgress\",\n    value: function setShouldResetProgress(value) {\n      this.shouldResetProgress = value;\n    }\n  }, {\n    key: \"getActivationIndex\",\n    value: function getActivationIndex() {\n      return this.activationIndex;\n    }\n  }, {\n    key: \"setActivationIndex\",\n    value: function setActivationIndex(value) {\n      this.activationIndex = value;\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.getInstance().shouldWaitForHandlerFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRequireToWaitForFailure\",\n    value: function shouldRequireToWaitForFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if (handler === this) {\n        return true;\n      }\n      return InteractionManager.getInstance().shouldRecognizeSimultaneously(this, handler);\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return InteractionManager.getInstance().shouldHandlerBeCancelledBy(this, handler);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n      this.pointerType = event.pointerType;\n      if (this.pointerType === PointerType.TOUCH) {\n        GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n      }\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tryToSendMoveEvent(false);\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerOut\",\n    value: function onPointerOut(event) {\n      if (this.shouldCancellWhenOutside) {\n        switch (this.currentState) {\n          case State.ACTIVE:\n            this.cancel();\n            break;\n          case State.BEGAN:\n            this.fail();\n            break;\n        }\n        return;\n      }\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerEnter\",\n    value: function onPointerEnter(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n      this.cancel();\n      this.reset();\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.tryToSendMoveEvent(true);\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"tryToSendMoveEvent\",\n    value: function tryToSendMoveEvent(out) {\n      if (this.enabled && this.active && (!out || out && !this.shouldCancellWhenOutside)) {\n        this.sendEvent(this.currentState, this.currentState);\n      }\n    }\n  }, {\n    key: \"sendTouchEvent\",\n    value: function sendTouchEvent(event) {\n      if (!this.enabled) {\n        return;\n      }\n      var _ref2 = this.propsRef.current,\n        onGestureHandlerEvent = _ref2.onGestureHandlerEvent;\n      var touchEvent = this.transformTouchEvent(event);\n      if (touchEvent) {\n        invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n      }\n    }\n  }, {\n    key: \"transformEventData\",\n    value: function transformEventData(newState, oldState) {\n      return {\n        nativeEvent: _objectSpread(_objectSpread({\n          numberOfPointers: this.tracker.getTrackedPointersCount(),\n          state: newState,\n          pointerInside: isPointerInBounds(this.view, {\n            x: this.tracker.getLastAvgX(),\n            y: this.tracker.getLastAvgY()\n          })\n        }, this.transformNativeEvent()), {}, {\n          handlerTag: this.handlerTag,\n          target: this.ref,\n          oldState: newState !== oldState ? oldState : undefined\n        }),\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"transformTouchEvent\",\n    value: function transformTouchEvent(event) {\n      var _this2 = this,\n        _event$touchEventType;\n      var rect = this.view.getBoundingClientRect();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.getData();\n      if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this2.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n      });\n      if (event.eventType !== EventTypes.CANCEL) {\n        changed.push({\n          id: this.tracker.getMappedTouchEventId(event.pointerId),\n          x: event.x - rect.left,\n          y: event.y - rect.top,\n          absoluteX: event.x,\n          absoluteY: event.y\n        });\n      } else {\n        trackerData.forEach(function (element, key) {\n          var id = _this2.tracker.getMappedTouchEventId(key);\n          changed.push({\n            id: id,\n            x: element.lastX - rect.left,\n            y: element.lastY - rect.top,\n            absoluteX: element.lastX,\n            absoluteY: element.lastY\n          });\n        });\n      }\n      var eventType = TouchEventType.UNDETERMINED;\n      switch (event.eventType) {\n        case EventTypes.DOWN:\n        case EventTypes.ADDITIONAL_POINTER_DOWN:\n          eventType = TouchEventType.DOWN;\n          break;\n        case EventTypes.UP:\n        case EventTypes.ADDITIONAL_POINTER_UP:\n          eventType = TouchEventType.UP;\n          break;\n        case EventTypes.MOVE:\n          eventType = TouchEventType.MOVE;\n          break;\n        case EventTypes.CANCEL:\n          eventType = TouchEventType.CANCELLED;\n          break;\n      }\n      var numberOfTouches = all.length;\n      if (event.eventType === EventTypes.UP || event.eventType === EventTypes.ADDITIONAL_POINTER_UP) {\n        --numberOfTouches;\n      }\n      return {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.currentState,\n          eventType: (_event$touchEventType = event.touchEventType) != null ? _event$touchEventType : eventType,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: numberOfTouches\n        },\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"cancelTouches\",\n    value: function cancelTouches() {\n      var _this3 = this;\n      var rect = this.view.getBoundingClientRect();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.getData();\n      if (trackerData.size === 0) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this3.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n        changed.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n      });\n      var cancelEvent = {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.currentState,\n          eventType: TouchEventType.CANCELLED,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: all.length\n        },\n        timeStamp: Date.now()\n      };\n      var _ref3 = this.propsRef.current,\n        onGestureHandlerEvent = _ref3.onGestureHandlerEvent;\n      invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {};\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref4) {\n      var _ref4$enabled = _ref4.enabled,\n        enabled = _ref4$enabled === void 0 ? true : _ref4$enabled,\n        props = _objectWithoutProperties(_ref4, _excluded);\n      this.config = _objectSpread({\n        enabled: enabled\n      }, props);\n      this.enabled = enabled;\n      if (this.config.shouldCancelWhenOutside !== undefined) {\n        this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n      }\n      this.validateHitSlops();\n      if (this.enabled) {\n        return;\n      }\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.fail(true);\n          break;\n        case State.UNDETERMINED:\n          GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(this);\n          break;\n        default:\n          this.cancel(true);\n          break;\n      }\n    }\n  }, {\n    key: \"checkCustomActivationCriteria\",\n    value: function checkCustomActivationCriteria(criterias) {\n      for (var key in this.config) {\n        if (criterias.indexOf(key) >= 0) {\n          this.hasCustomActivationCriteria = true;\n        }\n      }\n    }\n  }, {\n    key: \"validateHitSlops\",\n    value: function validateHitSlops() {\n      if (!this.config.hitSlop) {\n        return;\n      }\n      if (this.config.hitSlop.left !== undefined && this.config.hitSlop.right !== undefined && this.config.hitSlop.width !== undefined) {\n        throw new Error('HitSlop Error: Cannot define left, right and width at the same time');\n      }\n      if (this.config.hitSlop.width !== undefined && this.config.hitSlop.left === undefined && this.config.hitSlop.right === undefined) {\n        throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top !== undefined && this.config.hitSlop.bottom !== undefined) {\n        throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top === undefined && this.config.hitSlop.bottom === undefined) {\n        throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');\n      }\n    }\n  }, {\n    key: \"checkHitSlop\",\n    value: function checkHitSlop() {\n      if (!this.config.hitSlop) {\n        return true;\n      }\n      var width = this.view.getBoundingClientRect().width;\n      var height = this.view.getBoundingClientRect().height;\n      var left = 0;\n      var top = 0;\n      var right = width;\n      var bottom = height;\n      if (this.config.hitSlop.horizontal !== undefined) {\n        left -= this.config.hitSlop.horizontal;\n        right += this.config.hitSlop.horizontal;\n      }\n      if (this.config.hitSlop.vertical !== undefined) {\n        top -= this.config.hitSlop.vertical;\n        bottom += this.config.hitSlop.vertical;\n      }\n      if (this.config.hitSlop.left !== undefined) {\n        left = -this.config.hitSlop.left;\n      }\n      if (this.config.hitSlop.right !== undefined) {\n        right = width + this.config.hitSlop.right;\n      }\n      if (this.config.hitSlop.top !== undefined) {\n        top = -this.config.hitSlop.top;\n      }\n      if (this.config.hitSlop.bottom !== undefined) {\n        bottom = width + this.config.hitSlop.bottom;\n      }\n      if (this.config.hitSlop.width !== undefined) {\n        if (this.config.hitSlop.left !== undefined) {\n          right = left + this.config.hitSlop.width;\n        } else if (this.config.hitSlop.right !== undefined) {\n          left = right - this.config.hitSlop.width;\n        }\n      }\n      if (this.config.hitSlop.height !== undefined) {\n        if (this.config.hitSlop.top !== undefined) {\n          bottom = top + this.config.hitSlop.height;\n        } else if (this.config.hitSlop.bottom !== undefined) {\n          top = bottom - this.config.hitSlop.height;\n        }\n      }\n      var rect = this.view.getBoundingClientRect();\n      var offsetX = this.tracker.getLastX() - rect.left;\n      var offsetY = this.tracker.getLastY() - rect.top;\n      if (offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"isPointerInBounds\",\n    value: function isPointerInBounds(_ref5) {\n      var x = _ref5.x,\n        y = _ref5.y;\n      var rect = this.view.getBoundingClientRect();\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {}\n  }, {\n    key: \"getTag\",\n    value: function getTag() {\n      return this.handlerTag;\n    }\n  }, {\n    key: \"setTag\",\n    value: function setTag(tag) {\n      this.handlerTag = tag;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n  }, {\n    key: \"getShouldEnableGestureOnSetup\",\n    value: function getShouldEnableGestureOnSetup() {\n      throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n    }\n  }, {\n    key: \"getView\",\n    value: function getView() {\n      return this.view;\n    }\n  }, {\n    key: \"getEventManagers\",\n    value: function getEventManagers() {\n      return this.eventManagers;\n    }\n  }, {\n    key: \"getTracker\",\n    value: function getTracker() {\n      return this.tracker;\n    }\n  }, {\n    key: \"getTrackedPointersID\",\n    value: function getTrackedPointersID() {\n      return this.tracker.getTrackedPointersID();\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.currentState;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.currentState === State.END || this.currentState === State.FAILED || this.currentState === State.CANCELLED;\n    }\n  }, {\n    key: \"setShouldCancelWhenOutside\",\n    value: function setShouldCancelWhenOutside(shouldCancel) {\n      this.shouldCancellWhenOutside = shouldCancel;\n    }\n  }, {\n    key: \"getShouldCancelWhenOutside\",\n    value: function getShouldCancelWhenOutside() {\n      return this.shouldCancellWhenOutside;\n    }\n  }, {\n    key: \"getPointerType\",\n    value: function getPointerType() {\n      return this.pointerType;\n    }\n  }]);\n  return GestureHandler;\n}();\nexport { GestureHandler as default };\nfunction invokeNullableMethod(method, event) {\n  if (!method) {\n    return;\n  }\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    var handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n  var argMapping = method.__nodeConfig.argMapping;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n  for (var _ref6 of argMapping.entries()) {\n    var _ref7 = _slicedToArray(_ref6, 2);\n    var index = _ref7[0];\n    var _ref7$ = _slicedToArray(_ref7[1], 2);\n    var key = _ref7$[0];\n    var value = _ref7$[1];\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n    var nativeValue = event.nativeEvent[key];\n    if (value != null && value.setValue) {\n      value.setValue(nativeValue);\n    } else {\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n  return;\n}","map":{"version":3,"names":["State","PointerType","TouchEventType","EventTypes","GestureHandlerOrchestrator","InteractionManager","PointerEventManager","PointerTracker","TouchEventManager","isPointerInBounds","GestureHandler","_this","_classCallCheck","lastSentState","currentState","UNDETERMINED","shouldCancellWhenOutside","enabled","config","eventManagers","tracker","activationIndex","awaiting","active","shouldResetProgress","pointerType","NONE","sendEvent","newState","oldState","_ref","propsRef","current","onGestureHandlerEvent","onGestureHandlerStateChange","resultEvent","transformEventData","invokeNullableMethod","ACTIVE","nativeEvent","undefined","hasCustomActivationCriteria","_createClass","key","value","init","ref","setView","addEventManager","view","Error","handlerTag","findNodeHandle","style","userSelect","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerOut","onPointerOut","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setListeners","push","onCancel","onReset","resetProgress","reset","resetTracker","forEach","resetManager","moveToState","sendIfDisabled","getTrackedPointersCount","needsPointerData","isFinished","cancelTouches","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","FAILED","cursor","cancel","CANCELLED","activate","_force","arguments","length","end","END","isAwaiting","setAwaiting","isActive","setActive","getShouldResetProgress","setShouldResetProgress","getActivationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","TOUCH","cancelMouseAndPenGestures","sendTouchEvent","tryToSendMoveEvent","out","_ref2","touchEvent","transformTouchEvent","_objectSpread","numberOfPointers","state","pointerInside","x","getLastAvgX","y","getLastAvgY","transformNativeEvent","target","timeStamp","Date","now","_this2","_event$touchEventType","rect","getBoundingClientRect","all","changed","trackerData","getData","size","has","pointerId","element","id","getMappedTouchEventId","lastX","left","lastY","top","absoluteX","absoluteY","eventType","CANCEL","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","touchEventType","changedTouches","allTouches","_this3","cancelEvent","_ref3","updateGestureConfig","_ref4","_ref4$enabled","props","_objectWithoutProperties","_excluded","shouldCancelWhenOutside","setShouldCancelWhenOutside","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hitSlop","right","width","height","bottom","horizontal","vertical","offsetX","getLastX","offsetY","getLastY","_ref5","resetConfig","getTag","setTag","tag","getConfig","getShouldEnableGestureOnSetup","getView","getEventManagers","getTracker","getTrackedPointersID","getState","isEnabled","shouldCancel","getShouldCancelWhenOutside","getPointerType","default","method","__getHandler","argMapping","__nodeConfig","Array","isArray","_ref6","entries","_ref7","_slicedToArray","index","_ref7$","nativeValue","setValue"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/web/handlers/GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { findNodeHandle } from 'react-native';\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  PointerType,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerEventManager from '../tools/PointerEventManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport TouchEventManager from '../tools/TouchEventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria: boolean;\n  protected enabled = false;\n\n  private ref!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n  protected view!: HTMLElement;\n\n  protected eventManagers: EventManager[] = [];\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.NONE;\n\n  public constructor() {\n    this.hasCustomActivationCriteria = false;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(ref: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.ref = ref;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.setView();\n    this.addEventManager(new PointerEventManager(this.view));\n    this.addEventManager(new TouchEventManager(this.view));\n  }\n\n  private setView() {\n    if (!this.ref) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${this.handlerTag}`\n      );\n    }\n\n    this.view = findNodeHandle(this.ref) as unknown as HTMLElement;\n    this.view.style['touchAction'] = 'none';\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n\n    if (!this.config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = this.config.userSelect;\n      this.view.style['userSelect'] = this.config.userSelect;\n    }\n  }\n\n  private addEventManager(manager: EventManager): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerOut(this.onPointerOut.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setListeners();\n\n    this.eventManagers.push(manager);\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.eventManagers.forEach((manager: EventManager) =>\n      manager.resetManager()\n    );\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    if (\n      this.tracker.getTrackedPointersCount() > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.FAILED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  public activate(_force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.ACTIVE);\n      this.view.style.cursor = 'grab';\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.moveToState(State.END);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOut(event: AdaptedEvent): void {\n    if (this.shouldCancellWhenOutside) {\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n\n    this.cancel();\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  private tryToSendMoveEvent(out: boolean): void {\n    if (\n      this.enabled &&\n      this.active &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: isPointerInBounds(this.view, {\n          x: this.tracker.getLastAvgX(),\n          y: this.tracker.getLastAvgY(),\n        }),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.left,\n        y: event.y - rect.top,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: event.touchEventType ?? eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n\n      changed.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent() {\n    return {};\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const width = this.view.getBoundingClientRect().width;\n    const height = this.view.getBoundingClientRect().height;\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect: DOMRect = this.view.getBoundingClientRect();\n    const offsetX: number = this.tracker.getLastX() - rect.left;\n    const offsetY: number = this.tracker.getLastY() - rect.top;\n\n    if (\n      offsetX >= left &&\n      offsetX <= right &&\n      offsetY >= top &&\n      offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  public isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return (\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  protected getConfig() {\n    return this.config;\n  }\n\n  public getShouldEnableGestureOnSetup(): boolean {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  public getView(): HTMLElement {\n    return this.view;\n  }\n\n  public getEventManagers(): EventManager[] {\n    return this.eventManagers;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.currentState === State.END ||\n      this.currentState === State.FAILED ||\n      this.currentState === State.CANCELLED\n    );\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancellWhenOutside = shouldCancel;\n  }\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}