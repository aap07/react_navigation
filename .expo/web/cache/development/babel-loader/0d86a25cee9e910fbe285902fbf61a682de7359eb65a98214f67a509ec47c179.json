{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/xcpretty/build/Parser.d.ts"],"sourcesContent":["import { Formatter } from './Formatter';\nexport declare type Failure = {\n    filePath: string;\n    testCase: string;\n    reason: string;\n};\ninterface TestIssue {\n    reason?: string;\n    cursor?: string;\n    line?: string;\n    filePath?: string;\n    fileName?: string;\n}\ninterface LinkerFailure {\n    message?: string;\n    symbol?: string;\n    reference?: string;\n    files: string[];\n    isWarning?: boolean;\n}\nexport declare class Parser {\n    formatter: Formatter;\n    testSuite?: string;\n    testCase?: string;\n    testsDone?: boolean;\n    formattedSummary: boolean;\n    failures: Record<string, Failure[]>;\n    formattingLinkerFailure?: boolean;\n    formattingWarning?: boolean;\n    formattingError?: boolean;\n    linkerFailure: LinkerFailure;\n    currentIssue: TestIssue;\n    constructor(formatter: Formatter);\n    parse(text: string): void | string;\n    private updateTestState;\n    private updateErrorState;\n    private updateLinkerFailureState;\n    private shouldFormatError;\n    private shouldFormatWarning;\n    private errorOrWarningIsPresent;\n    private shouldFormatUndefinedSymbols;\n    private shouldFormatDuplicateSymbols;\n    private formatCompileError;\n    private formatCompileWarning;\n    private formatUndefinedSymbols;\n    private formatDuplicateSymbols;\n    private resetLinkerFormatState;\n    private storeFailure;\n    private formatSummaryIfNeeded;\n    private shouldFormatSummary;\n}\nexport {};\n"],"mappings":"AAmDA"},"metadata":{},"sourceType":"module","externalDependencies":[]}