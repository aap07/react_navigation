{"ast":null,"code":"'use strict';\nvar FileTemplate = function FileTemplate(_ref) {\n  var imports = _ref.imports,\n    libraryName = _ref.libraryName,\n    componentClasses = _ref.componentClasses;\n  return `\n/**\n * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n *\n * Do not edit this file as changes may cause incorrect behavior and will be lost\n * once the code is regenerated.\n *\n * ${'@'}generated by codegen project: GenerateShadowNodeH.js\n */\n\n#pragma once\n\n${imports}#include <react/renderer/components/${libraryName}/Props.h>\n#include <react/renderer/components/${libraryName}/States.h>\n#include <react/renderer/components/view/ConcreteViewShadowNode.h>\n#include <jsi/jsi.h>\n\nnamespace facebook {\nnamespace react {\n\n${componentClasses}\n\n} // namespace react\n} // namespace facebook\n`;\n};\nvar ComponentTemplate = function ComponentTemplate(_ref2) {\n  var className = _ref2.className,\n    eventEmitter = _ref2.eventEmitter;\n  return `\nJSI_EXPORT extern const char ${className}ComponentName[];\n\n/*\n * \\`ShadowNode\\` for <${className}> component.\n */\nusing ${className}ShadowNode = ConcreteViewShadowNode<\n    ${className}ComponentName,\n    ${className}Props${eventEmitter},\n    ${className}State>;\n`.trim();\n};\nmodule.exports = {\n  generate: function generate(libraryName, schema, packageName) {\n    var assumeNonnull = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var fileName = 'ShadowNodes.h';\n    var moduleResults = Object.keys(schema.modules).map(function (moduleName) {\n      var module = schema.modules[moduleName];\n      if (module.type !== 'Component') {\n        return;\n      }\n      var components = module.components;\n      if (components == null) {\n        return null;\n      }\n      return Object.keys(components).map(function (componentName) {\n        var component = components[componentName];\n        if (component.interfaceOnly === true) {\n          return;\n        }\n        var eventEmitter = `,\\n    ${componentName}EventEmitter`;\n        var replacedTemplate = ComponentTemplate({\n          className: componentName,\n          eventEmitter: eventEmitter\n        });\n        return replacedTemplate;\n      }).join('\\n\\n');\n    }).filter(Boolean).join('\\n\\n');\n    var eventEmitterImport = `#include <react/renderer/components/${libraryName}/EventEmitters.h>\\n`;\n    var replacedTemplate = FileTemplate({\n      componentClasses: moduleResults,\n      libraryName: libraryName,\n      imports: eventEmitterImport\n    });\n    return new Map([[fileName, replacedTemplate]]);\n  }\n};","map":{"version":3,"names":["FileTemplate","_ref","imports","libraryName","componentClasses","ComponentTemplate","_ref2","className","eventEmitter","trim","module","exports","generate","schema","packageName","assumeNonnull","arguments","length","undefined","fileName","moduleResults","Object","keys","modules","map","moduleName","type","components","componentName","component","interfaceOnly","replacedTemplate","join","filter","Boolean","eventEmitterImport","Map"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/GenerateShadowNodeH.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\n// File path -> contents\n\nconst FileTemplate = ({imports, libraryName, componentClasses}) => `\n/**\n * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n *\n * Do not edit this file as changes may cause incorrect behavior and will be lost\n * once the code is regenerated.\n *\n * ${'@'}generated by codegen project: GenerateShadowNodeH.js\n */\n\n#pragma once\n\n${imports}#include <react/renderer/components/${libraryName}/Props.h>\n#include <react/renderer/components/${libraryName}/States.h>\n#include <react/renderer/components/view/ConcreteViewShadowNode.h>\n#include <jsi/jsi.h>\n\nnamespace facebook {\nnamespace react {\n\n${componentClasses}\n\n} // namespace react\n} // namespace facebook\n`;\nconst ComponentTemplate = ({className, eventEmitter}) =>\n  `\nJSI_EXPORT extern const char ${className}ComponentName[];\n\n/*\n * \\`ShadowNode\\` for <${className}> component.\n */\nusing ${className}ShadowNode = ConcreteViewShadowNode<\n    ${className}ComponentName,\n    ${className}Props${eventEmitter},\n    ${className}State>;\n`.trim();\nmodule.exports = {\n  generate(libraryName, schema, packageName, assumeNonnull = false) {\n    const fileName = 'ShadowNodes.h';\n    const moduleResults = Object.keys(schema.modules)\n      .map(moduleName => {\n        const module = schema.modules[moduleName];\n        if (module.type !== 'Component') {\n          return;\n        }\n        const components = module.components;\n        // No components in this module\n        if (components == null) {\n          return null;\n        }\n        return Object.keys(components)\n          .map(componentName => {\n            const component = components[componentName];\n            if (component.interfaceOnly === true) {\n              return;\n            }\n            const eventEmitter = `,\\n    ${componentName}EventEmitter`;\n            const replacedTemplate = ComponentTemplate({\n              className: componentName,\n              eventEmitter,\n            });\n            return replacedTemplate;\n          })\n          .join('\\n\\n');\n      })\n      .filter(Boolean)\n      .join('\\n\\n');\n    const eventEmitterImport = `#include <react/renderer/components/${libraryName}/EventEmitters.h>\\n`;\n    const replacedTemplate = FileTemplate({\n      componentClasses: moduleResults,\n      libraryName,\n      imports: eventEmitterImport,\n    });\n    return new Map([[fileName, replacedTemplate]]);\n  },\n};\n"],"mappings":"AAUA,YAAY;AAIZ,IAAMA,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA;EAAA,IAAKC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IAAEC,gBAAgB,GAAAH,IAAA,CAAhBG,gBAAgB;EAAA,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAI;AACT;AACA;AACA;AACA;AACA,EAAEF,OAAQ,uCAAsCC,WAAY;AAC5D,sCAAsCA,WAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,EAAEC,gBAAiB;AACnB;AACA;AACA;AACA,CAAC;AAAA;AACD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA;EAAA,IAAKC,SAAS,GAAAD,KAAA,CAATC,SAAS;IAAEC,YAAY,GAAAF,KAAA,CAAZE,YAAY;EAAA,OAChD;AACH,+BAA+BD,SAAU;AACzC;AACA;AACA,yBAAyBA,SAAU;AACnC;AACA,QAAQA,SAAU;AAClB,MAAMA,SAAU;AAChB,MAAMA,SAAU,QAAOC,YAAa;AACpC,MAAMD,SAAU;AAChB,CAAC,CAACE,IAAI,CAAC,CAAC;AAAA;AACRC,MAAM,CAACC,OAAO,GAAG;EACfC,QAAQ,WAAAA,SAACT,WAAW,EAAEU,MAAM,EAAEC,WAAW,EAAyB;IAAA,IAAvBC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;IAC9D,IAAMG,QAAQ,GAAG,eAAe;IAChC,IAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACT,MAAM,CAACU,OAAO,CAAC,CAC9CC,GAAG,CAAC,UAAAC,UAAU,EAAI;MACjB,IAAMf,MAAM,GAAGG,MAAM,CAACU,OAAO,CAACE,UAAU,CAAC;MACzC,IAAIf,MAAM,CAACgB,IAAI,KAAK,WAAW,EAAE;QAC/B;MACF;MACA,IAAMC,UAAU,GAAGjB,MAAM,CAACiB,UAAU;MAEpC,IAAIA,UAAU,IAAI,IAAI,EAAE;QACtB,OAAO,IAAI;MACb;MACA,OAAON,MAAM,CAACC,IAAI,CAACK,UAAU,CAAC,CAC3BH,GAAG,CAAC,UAAAI,aAAa,EAAI;QACpB,IAAMC,SAAS,GAAGF,UAAU,CAACC,aAAa,CAAC;QAC3C,IAAIC,SAAS,CAACC,aAAa,KAAK,IAAI,EAAE;UACpC;QACF;QACA,IAAMtB,YAAY,GAAI,UAASoB,aAAc,cAAa;QAC1D,IAAMG,gBAAgB,GAAG1B,iBAAiB,CAAC;UACzCE,SAAS,EAAEqB,aAAa;UACxBpB,YAAY,EAAZA;QACF,CAAC,CAAC;QACF,OAAOuB,gBAAgB;MACzB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM,CAAC;IACjB,CAAC,CAAC,CACDC,MAAM,CAACC,OAAO,CAAC,CACfF,IAAI,CAAC,MAAM,CAAC;IACf,IAAMG,kBAAkB,GAAI,uCAAsChC,WAAY,qBAAoB;IAClG,IAAM4B,gBAAgB,GAAG/B,YAAY,CAAC;MACpCI,gBAAgB,EAAEgB,aAAa;MAC/BjB,WAAW,EAAXA,WAAW;MACXD,OAAO,EAAEiC;IACX,CAAC,CAAC;IACF,OAAO,IAAIC,GAAG,CAAC,CAAC,CAACjB,QAAQ,EAAEY,gBAAgB,CAAC,CAAC,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}