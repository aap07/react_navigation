{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.customizeAsync = customizeAsync;\nvar _config = require(\"@expo/config\");\nvar _findUp = require(\"../utils/findUp\");\nvar _nodeEnv = require(\"../utils/nodeEnv\");\nvar _generate = require(\"./generate\");\nfunction customizeAsync(_x, _x2, _x3) {\n  return _customizeAsync.apply(this, arguments);\n}\nfunction _customizeAsync() {\n  _customizeAsync = _asyncToGenerator(function* (files, options, extras) {\n    var ref;\n    (0, _nodeEnv).setNodeEnv(\"development\");\n    var projectRoot = (0, _findUp).findUpProjectRootOrAssert(process.cwd());\n    require(\"@expo/env\").load(projectRoot);\n    var _getConfig = (0, _config).getConfig(projectRoot, {\n        skipSDKVersionRequirement: true\n      }),\n      exp = _getConfig.exp;\n    var ref1;\n    var props = {\n      webStaticPath: (ref1 = (ref = exp.web) == null ? void 0 : ref.staticPath) != null ? ref1 : \"web\"\n    };\n    if (files.length) {\n      return (0, _generate).queryAndGenerateAsync(projectRoot, {\n        files: files,\n        props: props,\n        extras: extras\n      });\n    }\n    yield (0, _generate).selectAndGenerateAsync(projectRoot, {\n      props: props,\n      extras: extras\n    });\n  });\n  return _customizeAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","customizeAsync","_config","_findUp","_nodeEnv","_generate","_x","_x2","_x3","_customizeAsync","apply","arguments","files","options","extras","ref","setNodeEnv","projectRoot","findUpProjectRootOrAssert","process","cwd","load","_getConfig","getConfig","skipSDKVersionRequirement","exp","ref1","props","webStaticPath","web","staticPath","length","queryAndGenerateAsync","selectAndGenerateAsync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\customize\\customizeAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\n\nimport { findUpProjectRootOrAssert } from '../utils/findUp';\nimport { setNodeEnv } from '../utils/nodeEnv';\nimport { queryAndGenerateAsync, selectAndGenerateAsync } from './generate';\nimport { Options } from './resolveOptions';\nimport { DestinationResolutionProps } from './templates';\n\nexport async function customizeAsync(files: string[], options: Options, extras: any[]) {\n  setNodeEnv('development');\n  // Locate the project root based on the process current working directory.\n  // This enables users to run `npx expo customize` from a subdirectory of the project.\n  const projectRoot = findUpProjectRootOrAssert(process.cwd());\n\n  require('@expo/env').load(projectRoot);\n\n  // Get the static path (defaults to 'web/')\n  // Doesn't matter if expo is installed or which mode is used.\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n\n  // Create the destination resolution props which are used in both\n  // the query and select functions.\n  const props: DestinationResolutionProps = {\n    webStaticPath: exp.web?.staticPath ?? 'web',\n  };\n\n  // If the user provided files, we'll generate them without prompting.\n  if (files.length) {\n    return queryAndGenerateAsync(projectRoot, {\n      files,\n      props,\n      extras,\n    });\n  }\n\n  // Otherwise, we'll prompt the user to select which files to generate.\n  await selectAndGenerateAsync(projectRoot, {\n    props,\n    extras,\n  });\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAQsBC,cAAc,GAAdA,cAAc;AARV,IAAAC,OAAc,GAAAF,OAAA,CAAd,cAAc;AAEE,IAAAG,OAAiB,GAAAH,OAAA;AAChC,IAAAI,QAAkB,GAAAJ,OAAA;AACiB,IAAAK,SAAY,GAAAL,OAAA;AAAA,SAIpDC,cAAcA,CAAAK,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,gBAAA;EAAAA,eAAA,GAAAV,iBAAA,CAA7B,WAA8Ba,KAAe,EAAEC,OAAgB,EAAEC,MAAa,EAAE;QAiBpEC,GAAO;IAhBxB,IAAAX,QAAU,EAAeY,UAAf,CAAC,aAAa,CAAC;IAGzB,IAAMC,WAAW,GAAG,IAAAd,OAAyB,EAAee,yBAAf,CAACC,OAAO,CAACC,GAAG,EAAE,CAAC;IAE5DpB,OAAO,CAAC,WAAW,CAAC,CAACqB,IAAI,CAACJ,WAAW,CAAC;IAItC,IAAAK,UAAA,GAAgB,IAAApB,OAAS,EAEvBqB,SAFuB,CAACN,WAAW,EAAE;QACrCO,yBAAyB,EAAE;OAC5B,CAAC;MAFMC,GAAG,GAAAH,UAAA,CAAHG,GAAG;QAOMC,IAAmB;IADpC,IAAMC,KAAK,GAA+B;MACxCC,aAAa,EAAE,CAAAF,IAAmB,GAAnB,CAAAX,GAAO,GAAPU,GAAG,CAACI,GAAG,SAAY,GAAnB,MAAmB,GAAnBd,GAAO,CAAEe,UAAU,YAAnBJ,IAAmB,GAAI;KACvC;IAGD,IAAId,KAAK,CAACmB,MAAM,EAAE;MAChB,OAAO,IAAA1B,SAAqB,EAI1B2B,qBAJ0B,CAACf,WAAW,EAAE;QACxCL,KAAK,EAALA,KAAK;QACLe,KAAK,EAALA,KAAK;QACLb,MAAM,EAANA;OACD,CAAC;;IAIJ,MAAM,IAAAT,SAAsB,EAG1B4B,sBAH0B,CAAChB,WAAW,EAAE;MACxCU,KAAK,EAALA,KAAK;MACLb,MAAM,EAANA;KACD,CAAC;GACH;EAAA,OAAAL,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}