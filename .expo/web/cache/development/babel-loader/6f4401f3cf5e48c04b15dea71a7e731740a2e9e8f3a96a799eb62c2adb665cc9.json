{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar LaunchBrowserImplLinux = _createClass(function LaunchBrowserImplLinux() {\n  _classCallCheck(this, LaunchBrowserImplLinux);\n});\nexport { LaunchBrowserImplLinux as default };","map":{"version":3,"names":["LaunchBrowserImplLinux","_createClass","_classCallCheck","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/dev-server/build/LaunchBrowserImplLinux.d.ts"],"sourcesContent":["import { LaunchBrowserTypes, type LaunchBrowserImpl, type LaunchBrowserInstance } from './LaunchBrowser.types';\n/**\n * Browser implementation for Linux\n */\nexport default class LaunchBrowserImplLinux implements LaunchBrowserImpl, LaunchBrowserInstance {\n    private _appId;\n    private _process;\n    MAP: {\n        0: string[];\n        1: string[];\n    };\n    /**\n     * On Linux, the supported appId is an array, this function finds the available appId and caches it\n     */\n    private getAppId;\n    isSupportedBrowser(browserType: LaunchBrowserTypes): Promise<boolean>;\n    createTempBrowserDir(baseDirName: string): Promise<string>;\n    launchAsync(browserType: LaunchBrowserTypes, args: string[]): Promise<LaunchBrowserInstance>;\n    close(): Promise<void>;\n}\n"],"mappings":";;IAIqBA,sBAAsB,GAAAC,YAAA,UAAAD,uBAAA;EAAAE,eAAA,OAAAF,sBAAA;AAAA;AAAA,SAAtBA,sBAAsB,IAAAG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}