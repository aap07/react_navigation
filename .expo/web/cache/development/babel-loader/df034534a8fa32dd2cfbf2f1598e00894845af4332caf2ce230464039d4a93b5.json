{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _require = require(\"./JavaHelpers\"),\n  getImports = _require.getImports,\n  toSafeJavaString = _require.toSafeJavaString,\n  getInterfaceJavaClassName = _require.getInterfaceJavaClassName;\nvar FileTemplate = function FileTemplate(_ref) {\n  var packageName = _ref.packageName,\n    imports = _ref.imports,\n    className = _ref.className,\n    extendClasses = _ref.extendClasses,\n    methods = _ref.methods;\n  return `/**\n* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n*\n* Do not edit this file as changes may cause incorrect behavior and will be lost\n* once the code is regenerated.\n*\n* ${'@'}generated by codegen project: GeneratePropsJavaInterface.js\n*/\n\npackage ${packageName};\n\n${imports}\n\npublic interface ${className}<T extends ${extendClasses}> {\n  ${methods}\n}\n`;\n};\nfunction addNullable(imports) {\n  imports.add('import androidx.annotation.Nullable;');\n}\nfunction getJavaValueForProp(prop, imports) {\n  var typeAnnotation = prop.typeAnnotation;\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n      if (typeAnnotation.default === null) {\n        addNullable(imports);\n        return '@Nullable Boolean value';\n      } else {\n        return 'boolean value';\n      }\n    case 'StringTypeAnnotation':\n      addNullable(imports);\n      return '@Nullable String value';\n    case 'Int32TypeAnnotation':\n      return 'int value';\n    case 'DoubleTypeAnnotation':\n      return 'double value';\n    case 'FloatTypeAnnotation':\n      if (typeAnnotation.default === null) {\n        addNullable(imports);\n        return '@Nullable Float value';\n      } else {\n        return 'float value';\n      }\n    case 'ReservedPropTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          addNullable(imports);\n          return '@Nullable Integer value';\n        case 'ImageSourcePrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'ImageRequestPrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'PointPrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'EdgeInsetsPrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'DimensionPrimitive':\n          addNullable(imports);\n          return '@Nullable YogaValue value';\n        default:\n          typeAnnotation.name;\n          throw new Error('Received unknown ReservedPropTypeAnnotation');\n      }\n    case 'ArrayTypeAnnotation':\n      {\n        addNullable(imports);\n        return '@Nullable ReadableArray value';\n      }\n    case 'ObjectTypeAnnotation':\n      {\n        addNullable(imports);\n        return '@Nullable ReadableMap value';\n      }\n    case 'StringEnumTypeAnnotation':\n      addNullable(imports);\n      return '@Nullable String value';\n    case 'Int32EnumTypeAnnotation':\n      addNullable(imports);\n      return '@Nullable Integer value';\n    case 'MixedTypeAnnotation':\n      return 'Dynamic value';\n    default:\n      typeAnnotation;\n      throw new Error('Received invalid typeAnnotation');\n  }\n}\nfunction generatePropsString(component, imports) {\n  if (component.props.length === 0) {\n    return '// No props';\n  }\n  return component.props.map(function (prop) {\n    return `void set${toSafeJavaString(prop.name)}(T view, ${getJavaValueForProp(prop, imports)});`;\n  }).join('\\n' + '  ');\n}\nfunction getCommandArgJavaType(param) {\n  var typeAnnotation = param.typeAnnotation;\n  switch (typeAnnotation.type) {\n    case 'ReservedTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'RootTag':\n          return 'double';\n        default:\n          typeAnnotation.name;\n          throw new Error(`Receieved invalid type: ${typeAnnotation.name}`);\n      }\n    case 'BooleanTypeAnnotation':\n      return 'boolean';\n    case 'DoubleTypeAnnotation':\n      return 'double';\n    case 'FloatTypeAnnotation':\n      return 'float';\n    case 'Int32TypeAnnotation':\n      return 'int';\n    case 'StringTypeAnnotation':\n      return 'String';\n    default:\n      typeAnnotation.type;\n      throw new Error('Receieved invalid typeAnnotation');\n  }\n}\nfunction getCommandArguments(command, componentName) {\n  return ['T view'].concat(_toConsumableArray(command.typeAnnotation.params.map(function (param) {\n    var commandArgJavaType = getCommandArgJavaType(param);\n    return `${commandArgJavaType} ${param.name}`;\n  }))).join(', ');\n}\nfunction generateCommandsString(component, componentName) {\n  return component.commands.map(function (command) {\n    var safeJavaName = toSafeJavaString(command.name, false);\n    return `void ${safeJavaName}(${getCommandArguments(command, componentName)});`;\n  }).join('\\n' + '  ');\n}\nfunction getClassExtendString(component) {\n  var extendString = component.extendsProps.map(function (extendProps) {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            return 'View';\n          default:\n            extendProps.knownTypeName;\n            throw new Error('Invalid knownTypeName');\n        }\n      default:\n        extendProps.type;\n        throw new Error('Invalid extended type');\n    }\n  }).join('');\n  return extendString;\n}\nmodule.exports = {\n  generate: function generate(libraryName, schema, packageName) {\n    var assumeNonnull = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var normalizedPackageName = 'com.facebook.react.viewmanagers';\n    var outputDir = `java/${normalizedPackageName.replace(/\\./g, '/')}`;\n    var files = new Map();\n    Object.keys(schema.modules).forEach(function (moduleName) {\n      var module = schema.modules[moduleName];\n      if (module.type !== 'Component') {\n        return;\n      }\n      var components = module.components;\n      if (components == null) {\n        return;\n      }\n      return Object.keys(components).filter(function (componentName) {\n        var component = components[componentName];\n        return !(component.excludedPlatforms && component.excludedPlatforms.includes('android'));\n      }).forEach(function (componentName) {\n        var component = components[componentName];\n        var className = getInterfaceJavaClassName(componentName);\n        var imports = getImports(component, 'interface');\n        var propsString = generatePropsString(component, imports);\n        var commandsString = generateCommandsString(component, componentName);\n        var extendString = getClassExtendString(component);\n        var replacedTemplate = FileTemplate({\n          imports: Array.from(imports).sort().join('\\n'),\n          packageName: normalizedPackageName,\n          className: className,\n          extendClasses: extendString,\n          methods: [propsString, commandsString].join('\\n' + '  ').trimRight()\n        });\n        files.set(`${outputDir}/${className}.java`, replacedTemplate);\n      });\n    });\n    return files;\n  }\n};","map":{"version":3,"names":["_toConsumableArray","require","_require","getImports","toSafeJavaString","getInterfaceJavaClassName","FileTemplate","_ref","packageName","imports","className","extendClasses","methods","addNullable","add","getJavaValueForProp","prop","typeAnnotation","type","default","name","Error","generatePropsString","component","props","length","map","join","getCommandArgJavaType","param","getCommandArguments","command","componentName","concat","params","commandArgJavaType","generateCommandsString","commands","safeJavaName","getClassExtendString","extendString","extendsProps","extendProps","knownTypeName","module","exports","generate","libraryName","schema","assumeNonnull","arguments","undefined","normalizedPackageName","outputDir","replace","files","Map","Object","keys","modules","forEach","moduleName","components","filter","excludedPlatforms","includes","propsString","commandsString","replacedTemplate","Array","from","sort","trimRight","set"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/GeneratePropsJavaInterface.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst _require = require('./JavaHelpers'),\n  getImports = _require.getImports,\n  toSafeJavaString = _require.toSafeJavaString,\n  getInterfaceJavaClassName = _require.getInterfaceJavaClassName;\n\n// File path -> contents\n\nconst FileTemplate = ({\n  packageName,\n  imports,\n  className,\n  extendClasses,\n  methods,\n}) => `/**\n* This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n*\n* Do not edit this file as changes may cause incorrect behavior and will be lost\n* once the code is regenerated.\n*\n* ${'@'}generated by codegen project: GeneratePropsJavaInterface.js\n*/\n\npackage ${packageName};\n\n${imports}\n\npublic interface ${className}<T extends ${extendClasses}> {\n  ${methods}\n}\n`;\nfunction addNullable(imports) {\n  imports.add('import androidx.annotation.Nullable;');\n}\nfunction getJavaValueForProp(prop, imports) {\n  const typeAnnotation = prop.typeAnnotation;\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n      if (typeAnnotation.default === null) {\n        addNullable(imports);\n        return '@Nullable Boolean value';\n      } else {\n        return 'boolean value';\n      }\n    case 'StringTypeAnnotation':\n      addNullable(imports);\n      return '@Nullable String value';\n    case 'Int32TypeAnnotation':\n      return 'int value';\n    case 'DoubleTypeAnnotation':\n      return 'double value';\n    case 'FloatTypeAnnotation':\n      if (typeAnnotation.default === null) {\n        addNullable(imports);\n        return '@Nullable Float value';\n      } else {\n        return 'float value';\n      }\n    case 'ReservedPropTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          addNullable(imports);\n          return '@Nullable Integer value';\n        case 'ImageSourcePrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'ImageRequestPrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'PointPrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'EdgeInsetsPrimitive':\n          addNullable(imports);\n          return '@Nullable ReadableMap value';\n        case 'DimensionPrimitive':\n          addNullable(imports);\n          return '@Nullable YogaValue value';\n        default:\n          typeAnnotation.name;\n          throw new Error('Received unknown ReservedPropTypeAnnotation');\n      }\n    case 'ArrayTypeAnnotation': {\n      addNullable(imports);\n      return '@Nullable ReadableArray value';\n    }\n    case 'ObjectTypeAnnotation': {\n      addNullable(imports);\n      return '@Nullable ReadableMap value';\n    }\n    case 'StringEnumTypeAnnotation':\n      addNullable(imports);\n      return '@Nullable String value';\n    case 'Int32EnumTypeAnnotation':\n      addNullable(imports);\n      return '@Nullable Integer value';\n    case 'MixedTypeAnnotation':\n      return 'Dynamic value';\n    default:\n      typeAnnotation;\n      throw new Error('Received invalid typeAnnotation');\n  }\n}\nfunction generatePropsString(component, imports) {\n  if (component.props.length === 0) {\n    return '// No props';\n  }\n  return component.props\n    .map(prop => {\n      return `void set${toSafeJavaString(\n        prop.name,\n      )}(T view, ${getJavaValueForProp(prop, imports)});`;\n    })\n    .join('\\n' + '  ');\n}\nfunction getCommandArgJavaType(param) {\n  const typeAnnotation = param.typeAnnotation;\n  switch (typeAnnotation.type) {\n    case 'ReservedTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'RootTag':\n          return 'double';\n        default:\n          typeAnnotation.name;\n          throw new Error(`Receieved invalid type: ${typeAnnotation.name}`);\n      }\n    case 'BooleanTypeAnnotation':\n      return 'boolean';\n    case 'DoubleTypeAnnotation':\n      return 'double';\n    case 'FloatTypeAnnotation':\n      return 'float';\n    case 'Int32TypeAnnotation':\n      return 'int';\n    case 'StringTypeAnnotation':\n      return 'String';\n    default:\n      typeAnnotation.type;\n      throw new Error('Receieved invalid typeAnnotation');\n  }\n}\nfunction getCommandArguments(command, componentName) {\n  return [\n    'T view',\n    ...command.typeAnnotation.params.map(param => {\n      const commandArgJavaType = getCommandArgJavaType(param);\n      return `${commandArgJavaType} ${param.name}`;\n    }),\n  ].join(', ');\n}\nfunction generateCommandsString(component, componentName) {\n  return component.commands\n    .map(command => {\n      const safeJavaName = toSafeJavaString(command.name, false);\n      return `void ${safeJavaName}(${getCommandArguments(\n        command,\n        componentName,\n      )});`;\n    })\n    .join('\\n' + '  ');\n}\nfunction getClassExtendString(component) {\n  const extendString = component.extendsProps\n    .map(extendProps => {\n      switch (extendProps.type) {\n        case 'ReactNativeBuiltInType':\n          switch (extendProps.knownTypeName) {\n            case 'ReactNativeCoreViewProps':\n              return 'View';\n            default:\n              extendProps.knownTypeName;\n              throw new Error('Invalid knownTypeName');\n          }\n        default:\n          extendProps.type;\n          throw new Error('Invalid extended type');\n      }\n    })\n    .join('');\n  return extendString;\n}\nmodule.exports = {\n  generate(libraryName, schema, packageName, assumeNonnull = false) {\n    // TODO: This doesn't support custom package name yet.\n    const normalizedPackageName = 'com.facebook.react.viewmanagers';\n    const outputDir = `java/${normalizedPackageName.replace(/\\./g, '/')}`;\n    const files = new Map();\n    Object.keys(schema.modules).forEach(moduleName => {\n      const module = schema.modules[moduleName];\n      if (module.type !== 'Component') {\n        return;\n      }\n      const components = module.components;\n\n      // No components in this module\n      if (components == null) {\n        return;\n      }\n      return Object.keys(components)\n        .filter(componentName => {\n          const component = components[componentName];\n          return !(\n            component.excludedPlatforms &&\n            component.excludedPlatforms.includes('android')\n          );\n        })\n        .forEach(componentName => {\n          const component = components[componentName];\n          const className = getInterfaceJavaClassName(componentName);\n          const imports = getImports(component, 'interface');\n          const propsString = generatePropsString(component, imports);\n          const commandsString = generateCommandsString(\n            component,\n            componentName,\n          );\n          const extendString = getClassExtendString(component);\n          const replacedTemplate = FileTemplate({\n            imports: Array.from(imports).sort().join('\\n'),\n            packageName: normalizedPackageName,\n            className,\n            extendClasses: extendString,\n            methods: [propsString, commandsString]\n              .join('\\n' + '  ')\n              .trimRight(),\n          });\n          files.set(`${outputDir}/${className}.java`, replacedTemplate);\n        });\n    });\n    return files;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}