{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = renderIntentFilters;\nexports.getIntentFilters = getIntentFilters;\nexports.setAndroidIntentFilters = setAndroidIntentFilters;\nexports.withAndroidIntentFilters = void 0;\nfunction _androidPlugins() {\n  var data = require(\"../plugins/android-plugins\");\n  _androidPlugins = function _androidPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _Manifest() {\n  var data = require(\"./Manifest\");\n  _Manifest = function _Manifest() {\n    return data;\n  };\n  return data;\n}\nvar GENERATED_TAG = 'data-generated';\nvar withAndroidIntentFilters = (0, _androidPlugins().createAndroidManifestPlugin)(setAndroidIntentFilters, 'withAndroidIntentFilters');\nexports.withAndroidIntentFilters = withAndroidIntentFilters;\nfunction getIntentFilters(config) {\n  var _config$android$inten, _config$android;\n  return (_config$android$inten = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.intentFilters) !== null && _config$android$inten !== void 0 ? _config$android$inten : [];\n}\nfunction setAndroidIntentFilters(config, androidManifest) {\n  var _mainActivity$intent, _mainActivity$intent2;\n  var mainActivity = (0, _Manifest().getMainActivityOrThrow)(androidManifest);\n  if ((_mainActivity$intent = mainActivity['intent-filter']) !== null && _mainActivity$intent !== void 0 && _mainActivity$intent.length) {\n    mainActivity['intent-filter'] = mainActivity['intent-filter'].filter(function (value) {\n      var _value$$;\n      return ((_value$$ = value.$) === null || _value$$ === void 0 ? void 0 : _value$$[GENERATED_TAG]) !== 'true';\n    });\n  }\n  var intentFilters = getIntentFilters(config);\n  if (!intentFilters.length) {\n    return androidManifest;\n  }\n  mainActivity['intent-filter'] = (_mainActivity$intent2 = mainActivity['intent-filter']) === null || _mainActivity$intent2 === void 0 ? void 0 : _mainActivity$intent2.concat(renderIntentFilters(intentFilters));\n  return androidManifest;\n}\nfunction renderIntentFilters(intentFilters) {\n  return intentFilters.map(function (intentFilter) {\n    return {\n      $: _defineProperty({\n        'android:autoVerify': intentFilter.autoVerify ? 'true' : undefined\n      }, GENERATED_TAG, 'true'),\n      action: [{\n        $: {\n          'android:name': `android.intent.action.${intentFilter.action}`\n        }\n      }],\n      data: renderIntentFilterData(intentFilter.data),\n      category: renderIntentFilterCategory(intentFilter.category)\n    };\n  });\n}\nfunction renderIntentFilterData(data) {\n  return (Array.isArray(data) ? data : [data]).filter(Boolean).map(function (datum) {\n    return {\n      $: Object.entries(datum !== null && datum !== void 0 ? datum : {}).reduce(function (prev, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n        return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, `android:${key}`, value));\n      }, {})\n    };\n  });\n}\nfunction renderIntentFilterCategory(category) {\n  return (Array.isArray(category) ? category : [category]).filter(Boolean).map(function (cat) {\n    return {\n      $: {\n        'android:name': `android.intent.category.${cat}`\n      }\n    };\n  });\n}","map":{"version":3,"names":["_androidPlugins","data","require","_Manifest","GENERATED_TAG","withAndroidIntentFilters","createAndroidManifestPlugin","setAndroidIntentFilters","exports","getIntentFilters","config","_config$android$inten","_config$android","android","intentFilters","androidManifest","_mainActivity$intent","_mainActivity$intent2","mainActivity","getMainActivityOrThrow","length","filter","value","_value$$","$","concat","renderIntentFilters","map","intentFilter","_defineProperty","autoVerify","undefined","action","renderIntentFilterData","category","renderIntentFilterCategory","Array","isArray","Boolean","datum","Object","entries","reduce","prev","_ref","_ref2","_slicedToArray","key","_objectSpread","cat"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\android\\IntentFilters.ts"],"sourcesContent":["import { Android, AndroidIntentFiltersData, ExpoConfig } from '@expo/config-types';\n\nimport { createAndroidManifestPlugin } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow, ManifestIntentFilter } from './Manifest';\n\ntype AndroidIntentFilters = NonNullable<Android['intentFilters']>;\n\nconst GENERATED_TAG = 'data-generated';\n\nexport const withAndroidIntentFilters = createAndroidManifestPlugin(\n  setAndroidIntentFilters,\n  'withAndroidIntentFilters'\n);\n\nexport function getIntentFilters(config: Pick<ExpoConfig, 'android'>): AndroidIntentFilters {\n  return config.android?.intentFilters ?? [];\n}\n\nexport function setAndroidIntentFilters(\n  config: Pick<ExpoConfig, 'android'>,\n  androidManifest: AndroidManifest\n): AndroidManifest {\n  // Always ensure old tags are removed.\n  const mainActivity = getMainActivityOrThrow(androidManifest);\n  // Remove all generated tags from previous runs...\n  if (mainActivity['intent-filter']?.length) {\n    mainActivity['intent-filter'] = mainActivity['intent-filter'].filter(\n      (value) => value.$?.[GENERATED_TAG] !== 'true'\n    );\n  }\n\n  const intentFilters = getIntentFilters(config);\n  if (!intentFilters.length) {\n    return androidManifest;\n  }\n\n  mainActivity['intent-filter'] = mainActivity['intent-filter']?.concat(\n    renderIntentFilters(intentFilters)\n  );\n\n  return androidManifest;\n}\n\nexport default function renderIntentFilters(\n  intentFilters: AndroidIntentFilters\n): ManifestIntentFilter[] {\n  return intentFilters.map((intentFilter) => {\n    // <intent-filter>\n    return {\n      $: {\n        'android:autoVerify': intentFilter.autoVerify ? 'true' : undefined,\n        // Add a custom \"generated\" tag that we can query later to remove.\n        [GENERATED_TAG]: 'true',\n      },\n      action: [\n        // <action android:name=\"android.intent.action.VIEW\"/>\n        {\n          $: {\n            'android:name': `android.intent.action.${intentFilter.action}`,\n          },\n        },\n      ],\n      data: renderIntentFilterData(intentFilter.data),\n      category: renderIntentFilterCategory(intentFilter.category),\n    };\n  });\n}\n\n/** Like `<data android:scheme=\"exp\"/>` */\nfunction renderIntentFilterData(data?: AndroidIntentFiltersData | AndroidIntentFiltersData[]) {\n  return (Array.isArray(data) ? data : [data]).filter(Boolean).map((datum) => ({\n    $: Object.entries(datum ?? {}).reduce(\n      (prev, [key, value]) => ({ ...prev, [`android:${key}`]: value }),\n      {}\n    ),\n  }));\n}\n\n/** Like `<category android:name=\"android.intent.category.DEFAULT\"/>` */\nfunction renderIntentFilterCategory(category?: string | string[]) {\n  return (Array.isArray(category) ? category : [category]).filter(Boolean).map((cat) => ({\n    $: {\n      'android:name': `android.intent.category.${cat}`,\n    },\n  }));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}