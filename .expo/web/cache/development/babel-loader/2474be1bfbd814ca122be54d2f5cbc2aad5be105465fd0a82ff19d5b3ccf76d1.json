{"ast":null,"code":"import Constants, { ExecutionEnvironment } from 'expo-constants';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { shouldThrowAnErrorOutsideOfExpo } from \"./validatorState\";\nfindNodeHandle;\nif (shouldThrowAnErrorOutsideOfExpo() && !(Constants != null && Constants.expoVersion) && (Constants == null ? void 0 : Constants.executionEnvironment) !== ExecutionEnvironment.Bare) {\n  throw new Error(`Expo native runtime is not available: something went wrong and we aren't sure what it was. Please post more information and get support at https://forums.expo.dev.`);\n}","map":{"version":3,"names":["Constants","ExecutionEnvironment","findNodeHandle","shouldThrowAnErrorOutsideOfExpo","expoVersion","executionEnvironment","Bare","Error"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\expo\\src\\environment\\validate.fx.ts"],"sourcesContent":["import Constants, { ExecutionEnvironment } from 'expo-constants'; // eslint-disable-line no-unused-expressions\nimport {\n  // React Native's internal InitializeCore module sets up `window` but runs only when its React\n  // renderer is loaded. We can cause this by loading one of its dependents.\n  findNodeHandle,\n} from 'react-native';\n\nimport { shouldThrowAnErrorOutsideOfExpo } from './validatorState';\n\nfindNodeHandle; // eslint-disable-line no-unused-expressions\n\nif (\n  shouldThrowAnErrorOutsideOfExpo() &&\n  !Constants?.expoVersion &&\n  Constants?.executionEnvironment !== ExecutionEnvironment.Bare\n) {\n  throw new Error(\n    `Expo native runtime is not available: something went wrong and we aren't sure what it was. Please post more information and get support at https://forums.expo.dev.`\n  );\n}\n"],"mappings":"AAAA,OAAOA,SAAS,IAAIC,oBAAoB,QAAQ,gBAAgB;AAAC,OAAAC,cAAA;AAOjE,SAASC,+BAA+B;AAExCD,cAAc;AAEd,IACEC,+BAA+B,EAAE,IACjC,EAACH,SAAS,YAATA,SAAS,CAAEI,WAAW,KACvB,CAAAJ,SAAS,oBAATA,SAAS,CAAEK,oBAAoB,MAAKJ,oBAAoB,CAACK,IAAI,EAC7D;EACA,MAAM,IAAIC,KAAK,CACb,qKAAqK,CACtK"},"metadata":{},"sourceType":"module","externalDependencies":[]}