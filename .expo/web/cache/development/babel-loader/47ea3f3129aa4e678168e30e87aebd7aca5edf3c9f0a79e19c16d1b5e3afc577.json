{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"UIUserInterfaceStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUserInterfaceStyle = getUserInterfaceStyle;\nexports.setUserInterfaceStyle = setUserInterfaceStyle;\nexports.withIosUserInterfaceStyle = void 0;\nfunction _iosPlugins() {\n  var data = require(\"@expo/config-plugins/build/plugins/ios-plugins\");\n  _iosPlugins = function _iosPlugins() {\n    return data;\n  };\n  return data;\n}\nvar withIosUserInterfaceStyle = (0, _iosPlugins().createInfoPlistPluginWithPropertyGuard)(setUserInterfaceStyle, {\n  infoPlistProperty: 'UIUserInterfaceStyle',\n  expoConfigProperty: 'userInterfaceStyle | ios.userInterfaceStyle',\n  expoPropertyGetter: getUserInterfaceStyle\n}, 'withIosUserInterfaceStyle');\nexports.withIosUserInterfaceStyle = withIosUserInterfaceStyle;\nfunction getUserInterfaceStyle(config) {\n  var _ref, _config$ios$userInter, _config$ios;\n  return (_ref = (_config$ios$userInter = (_config$ios = config.ios) === null || _config$ios === void 0 ? void 0 : _config$ios.userInterfaceStyle) !== null && _config$ios$userInter !== void 0 ? _config$ios$userInter : config.userInterfaceStyle) !== null && _ref !== void 0 ? _ref : 'light';\n}\nfunction setUserInterfaceStyle(config, _ref2) {\n  var UIUserInterfaceStyle = _ref2.UIUserInterfaceStyle,\n    infoPlist = _objectWithoutProperties(_ref2, _excluded);\n  var userInterfaceStyle = getUserInterfaceStyle(config);\n  var style = mapUserInterfaceStyleForInfoPlist(userInterfaceStyle);\n  if (!style) {\n    return infoPlist;\n  }\n  return _objectSpread(_objectSpread({}, infoPlist), {}, {\n    UIUserInterfaceStyle: style\n  });\n}\nfunction mapUserInterfaceStyleForInfoPlist(userInterfaceStyle) {\n  switch (userInterfaceStyle) {\n    case 'light':\n      return 'Light';\n    case 'dark':\n      return 'Dark';\n    case 'automatic':\n      return 'Automatic';\n  }\n  return null;\n}","map":{"version":3,"names":["_iosPlugins","data","require","withIosUserInterfaceStyle","createInfoPlistPluginWithPropertyGuard","setUserInterfaceStyle","infoPlistProperty","expoConfigProperty","expoPropertyGetter","getUserInterfaceStyle","exports","config","_ref","_config$ios$userInter","_config$ios","ios","userInterfaceStyle","_ref2","UIUserInterfaceStyle","infoPlist","_objectWithoutProperties","_excluded","style","mapUserInterfaceStyleForInfoPlist","_objectSpread"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-system-ui\\withIosUserInterfaceStyle.ts"],"sourcesContent":["import { InfoPlist } from '@expo/config-plugins';\nimport { createInfoPlistPluginWithPropertyGuard } from '@expo/config-plugins/build/plugins/ios-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nexport const withIosUserInterfaceStyle = createInfoPlistPluginWithPropertyGuard(\n  setUserInterfaceStyle,\n  {\n    infoPlistProperty: 'UIUserInterfaceStyle',\n    expoConfigProperty: 'userInterfaceStyle | ios.userInterfaceStyle',\n    expoPropertyGetter: getUserInterfaceStyle,\n  },\n  'withIosUserInterfaceStyle'\n);\n\nexport function getUserInterfaceStyle(\n  config: Pick<ExpoConfig, 'ios' | 'userInterfaceStyle'>\n): string {\n  return config.ios?.userInterfaceStyle ?? config.userInterfaceStyle ?? 'light';\n}\n\nexport function setUserInterfaceStyle(\n  config: Pick<ExpoConfig, 'ios' | 'userInterfaceStyle'>,\n  { UIUserInterfaceStyle, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const userInterfaceStyle = getUserInterfaceStyle(config);\n  const style = mapUserInterfaceStyleForInfoPlist(userInterfaceStyle);\n\n  if (!style) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    UIUserInterfaceStyle: style,\n  };\n}\n\nfunction mapUserInterfaceStyleForInfoPlist(\n  userInterfaceStyle: string\n): NonNullable<InfoPlist['UIUserInterfaceStyle']> | null {\n  switch (userInterfaceStyle) {\n    case 'light':\n      return 'Light';\n    case 'dark':\n      return 'Dark';\n    case 'automatic':\n      return 'Automatic';\n  }\n\n  return null;\n}\n"],"mappings":";;;;;;;;;;;;;AACA,SAAAA,YAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,WAAA,YAAAA,YAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGO,IAAME,yBAAyB,GAAG,IAAAH,WAAA,GAAAI,sCAAsC,EAC7EC,qBAAqB,EACrB;EACEC,iBAAiB,EAAE,sBAAsB;EACzCC,kBAAkB,EAAE,6CAA6C;EACjEC,kBAAkB,EAAEC;AACtB,CAAC,EACD,2BAA2B,CAC5B;AAACC,OAAA,CAAAP,yBAAA,GAAAA,yBAAA;AAEK,SAASM,qBAAqBA,CACnCE,MAAsD,EAC9C;EAAA,IAAAC,IAAA,EAAAC,qBAAA,EAAAC,WAAA;EACR,QAAAF,IAAA,IAAAC,qBAAA,IAAAC,WAAA,GAAOH,MAAM,CAACI,GAAG,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,kBAAkB,cAAAH,qBAAA,cAAAA,qBAAA,GAAIF,MAAM,CAACK,kBAAkB,cAAAJ,IAAA,cAAAA,IAAA,GAAI,OAAO;AAC/E;AAEO,SAASP,qBAAqBA,CACnCM,MAAsD,EAAAM,KAAA,EAE3C;EAAA,IADTC,oBAAoB,GAAAD,KAAA,CAApBC,oBAAoB;IAAKC,SAAA,GAAAC,wBAAA,CAAAH,KAAA,EAAAI,SAAA;EAE3B,IAAML,kBAAkB,GAAGP,qBAAqB,CAACE,MAAM,CAAC;EACxD,IAAMW,KAAK,GAAGC,iCAAiC,CAACP,kBAAkB,CAAC;EAEnE,IAAI,CAACM,KAAK,EAAE;IACV,OAAOH,SAAS;EAClB;EAEA,OAAAK,aAAA,CAAAA,aAAA,KACKL,SAAS;IACZD,oBAAoB,EAAEI;EAAA;AAE1B;AAEA,SAASC,iCAAiCA,CACxCP,kBAA0B,EAC6B;EACvD,QAAQA,kBAAkB;IACxB,KAAK,OAAO;MACV,OAAO,OAAO;IAChB,KAAK,MAAM;MACT,OAAO,MAAM;IACf,KAAK,WAAW;MACd,OAAO,WAAW;EAAC;EAGvB,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}