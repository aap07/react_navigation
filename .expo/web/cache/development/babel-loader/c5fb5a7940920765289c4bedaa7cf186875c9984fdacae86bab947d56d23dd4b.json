{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _require = require(\"./CppHelpers\"),\n  getImports = _require.getImports;\nvar _require2 = require(\"../Utils\"),\n  toSafeCppString = _require2.toSafeCppString;\nvar FileTemplate = function FileTemplate(_ref) {\n  var libraryName = _ref.libraryName,\n    imports = _ref.imports,\n    componentTests = _ref.componentTests;\n  return `\n/**\n * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n *\n * Do not edit this file as changes may cause incorrect behavior and will be lost\n * once the code is regenerated.\n *\n * ${'@'}generated by codegen project: GenerateTests.js\n * */\n\n#include <gtest/gtest.h>\n#include <react/renderer/core/PropsParserContext.h>\n#include <react/renderer/components/${libraryName}/Props.h>\n${imports}\n\nusing namespace facebook::react;\n${componentTests}\n`.trim();\n};\nvar TestTemplate = function TestTemplate(_ref2) {\n  var componentName = _ref2.componentName,\n    testName = _ref2.testName,\n    propName = _ref2.propName,\n    propValue = _ref2.propValue;\n  return `\nTEST(${componentName}_${testName}, etc) {\n  auto propParser = RawPropsParser();\n  propParser.prepare<${componentName}>();\n  auto const &sourceProps = ${componentName}();\n  auto const &rawProps = RawProps(folly::dynamic::object(\"${propName}\", ${propValue}));\n\n  ContextContainer contextContainer{};\n  PropsParserContext parserContext{-1, contextContainer};\n\n  rawProps.parse(propParser, parserContext);\n  ${componentName}(parserContext, sourceProps, rawProps);\n}\n`;\n};\nfunction getTestCasesForProp(propName, typeAnnotation) {\n  var cases = [];\n  if (typeAnnotation.type === 'StringEnumTypeAnnotation') {\n    typeAnnotation.options.forEach(function (option) {\n      return cases.push({\n        propName: propName,\n        testName: `${propName}_${toSafeCppString(option)}`,\n        propValue: option\n      });\n    });\n  } else if (typeAnnotation.type === 'StringTypeAnnotation') {\n    cases.push({\n      propName: propName,\n      propValue: typeAnnotation.default != null && typeAnnotation.default !== '' ? typeAnnotation.default : 'foo'\n    });\n  } else if (typeAnnotation.type === 'BooleanTypeAnnotation') {\n    cases.push({\n      propName: propName,\n      propValue: typeAnnotation.default != null ? typeAnnotation.default : true\n    });\n  } else if (typeAnnotation.type === 'IntegerTypeAnnotation') {\n    cases.push({\n      propName: propName,\n      propValue: typeAnnotation.default || 10\n    });\n  } else if (typeAnnotation.type === 'FloatTypeAnnotation') {\n    cases.push({\n      propName: propName,\n      propValue: typeAnnotation.default != null ? typeAnnotation.default : 0.1\n    });\n  } else if (typeAnnotation.type === 'ReservedPropTypeAnnotation') {\n    if (typeAnnotation.name === 'ColorPrimitive') {\n      cases.push({\n        propName: propName,\n        propValue: 1\n      });\n    } else if (typeAnnotation.name === 'PointPrimitive') {\n      cases.push({\n        propName: propName,\n        propValue: 'folly::dynamic::object(\"x\", 1)(\"y\", 1)',\n        raw: true\n      });\n    } else if (typeAnnotation.name === 'ImageSourcePrimitive') {\n      cases.push({\n        propName: propName,\n        propValue: 'folly::dynamic::object(\"url\", \"testurl\")',\n        raw: true\n      });\n    }\n  }\n  return cases;\n}\nfunction generateTestsString(name, component) {\n  function createTest(_ref3) {\n    var testName = _ref3.testName,\n      propName = _ref3.propName,\n      propValue = _ref3.propValue,\n      _ref3$raw = _ref3.raw,\n      raw = _ref3$raw === void 0 ? false : _ref3$raw;\n    var value = !raw && typeof propValue === 'string' ? `\"${propValue}\"` : propValue;\n    return TestTemplate({\n      componentName: name,\n      testName: testName != null ? testName : propName,\n      propName: propName,\n      propValue: String(value)\n    });\n  }\n  var testCases = component.props.reduce(function (cases, prop) {\n    return cases.concat(getTestCasesForProp(prop.name, prop.typeAnnotation));\n  }, []);\n  var baseTest = {\n    testName: 'DoesNotDie',\n    propName: 'xx_invalid_xx',\n    propValue: 'xx_invalid_xx'\n  };\n  return [baseTest].concat(_toConsumableArray(testCases)).map(createTest).join('');\n}\nmodule.exports = {\n  generate: function generate(libraryName, schema, packageName) {\n    var assumeNonnull = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var fileName = 'Tests.cpp';\n    var allImports = new Set(['#include <react/renderer/core/propsConversions.h>', '#include <react/renderer/core/RawProps.h>', '#include <react/renderer/core/RawPropsParser.h>']);\n    var componentTests = Object.keys(schema.modules).map(function (moduleName) {\n      var module = schema.modules[moduleName];\n      if (module.type !== 'Component') {\n        return;\n      }\n      var components = module.components;\n      if (components == null) {\n        return null;\n      }\n      return Object.keys(components).map(function (componentName) {\n        var component = components[componentName];\n        var name = `${componentName}Props`;\n        var imports = getImports(component.props);\n        imports.forEach(allImports.add, allImports);\n        return generateTestsString(name, component);\n      }).join('');\n    }).filter(Boolean).join('');\n    var imports = Array.from(allImports).sort().join('\\n').trim();\n    var replacedTemplate = FileTemplate({\n      imports: imports,\n      libraryName: libraryName,\n      componentTests: componentTests\n    });\n    return new Map([[fileName, replacedTemplate]]);\n  }\n};","map":{"version":3,"names":["_toConsumableArray","require","_require","getImports","_require2","toSafeCppString","FileTemplate","_ref","libraryName","imports","componentTests","trim","TestTemplate","_ref2","componentName","testName","propName","propValue","getTestCasesForProp","typeAnnotation","cases","type","options","forEach","option","push","default","name","raw","generateTestsString","component","createTest","_ref3","_ref3$raw","value","String","testCases","props","reduce","prop","concat","baseTest","map","join","module","exports","generate","schema","packageName","assumeNonnull","arguments","length","undefined","fileName","allImports","Set","Object","keys","modules","moduleName","components","add","filter","Boolean","Array","from","sort","replacedTemplate","Map"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/GenerateTests.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst _require = require('./CppHelpers'),\n  getImports = _require.getImports;\nconst _require2 = require('../Utils'),\n  toSafeCppString = _require2.toSafeCppString;\nconst FileTemplate = ({libraryName, imports, componentTests}) =>\n  `\n/**\n * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n *\n * Do not edit this file as changes may cause incorrect behavior and will be lost\n * once the code is regenerated.\n *\n * ${'@'}generated by codegen project: GenerateTests.js\n * */\n\n#include <gtest/gtest.h>\n#include <react/renderer/core/PropsParserContext.h>\n#include <react/renderer/components/${libraryName}/Props.h>\n${imports}\n\nusing namespace facebook::react;\n${componentTests}\n`.trim();\nconst TestTemplate = ({componentName, testName, propName, propValue}) => `\nTEST(${componentName}_${testName}, etc) {\n  auto propParser = RawPropsParser();\n  propParser.prepare<${componentName}>();\n  auto const &sourceProps = ${componentName}();\n  auto const &rawProps = RawProps(folly::dynamic::object(\"${propName}\", ${propValue}));\n\n  ContextContainer contextContainer{};\n  PropsParserContext parserContext{-1, contextContainer};\n\n  rawProps.parse(propParser, parserContext);\n  ${componentName}(parserContext, sourceProps, rawProps);\n}\n`;\nfunction getTestCasesForProp(propName, typeAnnotation) {\n  const cases = [];\n  if (typeAnnotation.type === 'StringEnumTypeAnnotation') {\n    typeAnnotation.options.forEach(option =>\n      cases.push({\n        propName,\n        testName: `${propName}_${toSafeCppString(option)}`,\n        propValue: option,\n      }),\n    );\n  } else if (typeAnnotation.type === 'StringTypeAnnotation') {\n    cases.push({\n      propName,\n      propValue:\n        typeAnnotation.default != null && typeAnnotation.default !== ''\n          ? typeAnnotation.default\n          : 'foo',\n    });\n  } else if (typeAnnotation.type === 'BooleanTypeAnnotation') {\n    cases.push({\n      propName: propName,\n      propValue: typeAnnotation.default != null ? typeAnnotation.default : true,\n    });\n    // $FlowFixMe[incompatible-type]\n  } else if (typeAnnotation.type === 'IntegerTypeAnnotation') {\n    cases.push({\n      propName,\n      propValue: typeAnnotation.default || 10,\n    });\n  } else if (typeAnnotation.type === 'FloatTypeAnnotation') {\n    cases.push({\n      propName,\n      propValue: typeAnnotation.default != null ? typeAnnotation.default : 0.1,\n    });\n  } else if (typeAnnotation.type === 'ReservedPropTypeAnnotation') {\n    if (typeAnnotation.name === 'ColorPrimitive') {\n      cases.push({\n        propName,\n        propValue: 1,\n      });\n    } else if (typeAnnotation.name === 'PointPrimitive') {\n      cases.push({\n        propName,\n        propValue: 'folly::dynamic::object(\"x\", 1)(\"y\", 1)',\n        raw: true,\n      });\n    } else if (typeAnnotation.name === 'ImageSourcePrimitive') {\n      cases.push({\n        propName,\n        propValue: 'folly::dynamic::object(\"url\", \"testurl\")',\n        raw: true,\n      });\n    }\n  }\n  return cases;\n}\nfunction generateTestsString(name, component) {\n  function createTest({testName, propName, propValue, raw = false}) {\n    const value =\n      !raw && typeof propValue === 'string' ? `\"${propValue}\"` : propValue;\n    return TestTemplate({\n      componentName: name,\n      testName: testName != null ? testName : propName,\n      propName,\n      propValue: String(value),\n    });\n  }\n  const testCases = component.props.reduce((cases, prop) => {\n    return cases.concat(getTestCasesForProp(prop.name, prop.typeAnnotation));\n  }, []);\n  const baseTest = {\n    testName: 'DoesNotDie',\n    propName: 'xx_invalid_xx',\n    propValue: 'xx_invalid_xx',\n  };\n  return [baseTest, ...testCases].map(createTest).join('');\n}\nmodule.exports = {\n  generate(libraryName, schema, packageName, assumeNonnull = false) {\n    const fileName = 'Tests.cpp';\n    const allImports = new Set([\n      '#include <react/renderer/core/propsConversions.h>',\n      '#include <react/renderer/core/RawProps.h>',\n      '#include <react/renderer/core/RawPropsParser.h>',\n    ]);\n    const componentTests = Object.keys(schema.modules)\n      .map(moduleName => {\n        const module = schema.modules[moduleName];\n        if (module.type !== 'Component') {\n          return;\n        }\n        const components = module.components;\n        if (components == null) {\n          return null;\n        }\n        return Object.keys(components)\n          .map(componentName => {\n            const component = components[componentName];\n            const name = `${componentName}Props`;\n            const imports = getImports(component.props);\n            // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n            imports.forEach(allImports.add, allImports);\n            return generateTestsString(name, component);\n          })\n          .join('');\n      })\n      .filter(Boolean)\n      .join('');\n    const imports = Array.from(allImports).sort().join('\\n').trim();\n    const replacedTemplate = FileTemplate({\n      imports,\n      libraryName,\n      componentTests,\n    });\n    return new Map([[fileName, replacedTemplate]]);\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}