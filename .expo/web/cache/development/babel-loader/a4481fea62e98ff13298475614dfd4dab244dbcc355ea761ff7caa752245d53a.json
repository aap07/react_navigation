{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAndroidManifestPlugin = createAndroidManifestPlugin;\nexports.createStringsXmlPlugin = createStringsXmlPlugin;\nexports.withStringsXml = exports.withSettingsGradle = exports.withProjectBuildGradle = exports.withMainApplication = exports.withMainActivity = exports.withGradleProperties = exports.withAppBuildGradle = exports.withAndroidStyles = exports.withAndroidManifest = exports.withAndroidColorsNight = exports.withAndroidColors = void 0;\nfunction _withMod() {\n  var data = require(\"./withMod\");\n  _withMod = function _withMod() {\n    return data;\n  };\n  return data;\n}\nfunction createAndroidManifestPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withAndroidManifest(config, function () {\n      var _ref = _asyncToGenerator(function* (config) {\n        config.modResults = yield action(config, config.modResults);\n        return config;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n  return withUnknown;\n}\nfunction createStringsXmlPlugin(action, name) {\n  var withUnknown = function withUnknown(config) {\n    return withStringsXml(config, function () {\n      var _ref2 = _asyncToGenerator(function* (config) {\n        config.modResults = yield action(config, config.modResults);\n        return config;\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  };\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name\n    });\n  }\n  return withUnknown;\n}\nvar withAndroidManifest = function withAndroidManifest(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'manifest',\n    action: action\n  });\n};\nexports.withAndroidManifest = withAndroidManifest;\nvar withStringsXml = function withStringsXml(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'strings',\n    action: action\n  });\n};\nexports.withStringsXml = withStringsXml;\nvar withAndroidColors = function withAndroidColors(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'colors',\n    action: action\n  });\n};\nexports.withAndroidColors = withAndroidColors;\nvar withAndroidColorsNight = function withAndroidColorsNight(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'colorsNight',\n    action: action\n  });\n};\nexports.withAndroidColorsNight = withAndroidColorsNight;\nvar withAndroidStyles = function withAndroidStyles(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'styles',\n    action: action\n  });\n};\nexports.withAndroidStyles = withAndroidStyles;\nvar withMainActivity = function withMainActivity(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'mainActivity',\n    action: action\n  });\n};\nexports.withMainActivity = withMainActivity;\nvar withMainApplication = function withMainApplication(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'mainApplication',\n    action: action\n  });\n};\nexports.withMainApplication = withMainApplication;\nvar withProjectBuildGradle = function withProjectBuildGradle(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'projectBuildGradle',\n    action: action\n  });\n};\nexports.withProjectBuildGradle = withProjectBuildGradle;\nvar withAppBuildGradle = function withAppBuildGradle(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'appBuildGradle',\n    action: action\n  });\n};\nexports.withAppBuildGradle = withAppBuildGradle;\nvar withSettingsGradle = function withSettingsGradle(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'settingsGradle',\n    action: action\n  });\n};\nexports.withSettingsGradle = withSettingsGradle;\nvar withGradleProperties = function withGradleProperties(config, action) {\n  return (0, _withMod().withMod)(config, {\n    platform: 'android',\n    mod: 'gradleProperties',\n    action: action\n  });\n};\nexports.withGradleProperties = withGradleProperties;","map":{"version":3,"names":["_withMod","data","require","createAndroidManifestPlugin","action","name","withUnknown","config","withAndroidManifest","_ref","_asyncToGenerator","modResults","_x","apply","arguments","Object","defineProperty","value","createStringsXmlPlugin","withStringsXml","_ref2","_x2","withMod","platform","mod","exports","withAndroidColors","withAndroidColorsNight","withAndroidStyles","withMainActivity","withMainApplication","withProjectBuildGradle","withAppBuildGradle","withSettingsGradle","withGradleProperties"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\plugins\\android-plugins.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin, Mod } from '../Plugin.types';\nimport { Manifest, Paths, Properties, Resources } from '../android';\nimport { withMod } from './withMod';\n\ntype OptionalPromise<T> = T | Promise<T>;\n\ntype MutateDataAction<T> = (expo: ExpoConfig, data: T) => OptionalPromise<T>;\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createAndroidManifestPlugin(\n  action: MutateDataAction<Manifest.AndroidManifest>,\n  name: string\n): ConfigPlugin {\n  const withUnknown: ConfigPlugin = (config) =>\n    withAndroidManifest(config, async (config) => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\nexport function createStringsXmlPlugin(\n  action: MutateDataAction<Resources.ResourceXML>,\n  name: string\n): ConfigPlugin {\n  const withUnknown: ConfigPlugin = (config) =>\n    withStringsXml(config, async (config) => {\n      config.modResults = await action(config, config.modResults);\n      return config;\n    });\n  if (name) {\n    Object.defineProperty(withUnknown, 'name', {\n      value: name,\n    });\n  }\n  return withUnknown;\n}\n\n/**\n * Provides the AndroidManifest.xml for modification.\n *\n * @param config\n * @param action\n */\nexport const withAndroidManifest: ConfigPlugin<Mod<Manifest.AndroidManifest>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'manifest',\n    action,\n  });\n};\n\n/**\n * Provides the strings.xml for modification.\n *\n * @param config\n * @param action\n */\nexport const withStringsXml: ConfigPlugin<Mod<Resources.ResourceXML>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'strings',\n    action,\n  });\n};\n\n/**\n * Provides the `android/app/src/main/res/values/colors.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport const withAndroidColors: ConfigPlugin<Mod<Resources.ResourceXML>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'colors',\n    action,\n  });\n};\n\n/**\n * Provides the `android/app/src/main/res/values-night/colors.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport const withAndroidColorsNight: ConfigPlugin<Mod<Resources.ResourceXML>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'colorsNight',\n    action,\n  });\n};\n\n/**\n * Provides the `android/app/src/main/res/values/styles.xml` as JSON (parsed with [`xml2js`](https://www.npmjs.com/package/xml2js)).\n *\n * @param config\n * @param action\n */\nexport const withAndroidStyles: ConfigPlugin<Mod<Resources.ResourceXML>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'styles',\n    action,\n  });\n};\n\n/**\n * Provides the project MainActivity for modification.\n *\n * @param config\n * @param action\n */\nexport const withMainActivity: ConfigPlugin<Mod<Paths.ApplicationProjectFile>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'mainActivity',\n    action,\n  });\n};\n\n/**\n * Provides the project MainApplication for modification.\n *\n * @param config\n * @param action\n */\nexport const withMainApplication: ConfigPlugin<Mod<Paths.ApplicationProjectFile>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'mainApplication',\n    action,\n  });\n};\n\n/**\n * Provides the project /build.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport const withProjectBuildGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'projectBuildGradle',\n    action,\n  });\n};\n\n/**\n * Provides the app/build.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport const withAppBuildGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'appBuildGradle',\n    action,\n  });\n};\n\n/**\n * Provides the /settings.gradle for modification.\n *\n * @param config\n * @param action\n */\nexport const withSettingsGradle: ConfigPlugin<Mod<Paths.GradleProjectFile>> = (config, action) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'settingsGradle',\n    action,\n  });\n};\n\n/**\n * Provides the /gradle.properties for modification.\n *\n * @param config\n * @param action\n */\nexport const withGradleProperties: ConfigPlugin<Mod<Properties.PropertiesItem[]>> = (\n  config,\n  action\n) => {\n  return withMod(config, {\n    platform: 'android',\n    mod: 'gradleProperties',\n    action,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}