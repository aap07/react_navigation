{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildHermesBundleAsync = buildHermesBundleAsync;\nexports.createHermesSourcemapAsync = createHermesSourcemapAsync;\nexports.getHermesBytecodeBundleVersionAsync = getHermesBytecodeBundleVersionAsync;\nexports.isEnableHermesManaged = isEnableHermesManaged;\nexports.isHermesBytecodeBundleAsync = isHermesBytecodeBundleAsync;\nexports.maybeInconsistentEngineAndroidAsync = maybeInconsistentEngineAndroidAsync;\nexports.maybeInconsistentEngineIosAsync = maybeInconsistentEngineIosAsync;\nexports.maybeThrowFromInconsistentEngineAsync = maybeThrowFromInconsistentEngineAsync;\nexports.parseGradleProperties = parseGradleProperties;\nfunction _spawnAsync() {\n  var data = _interopRequireDefault(require(\"@expo/spawn-async\"));\n  _spawnAsync = function _spawnAsync() {\n    return data;\n  };\n  return data;\n}\nfunction _fsExtra() {\n  var data = _interopRequireDefault(require(\"fs-extra\"));\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  var data = _interopRequireDefault(require(\"os\"));\n  _os = function _os() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _process() {\n  var data = _interopRequireDefault(require(\"process\"));\n  _process = function _process() {\n    return data;\n  };\n  return data;\n}\nfunction _importMetroFromProject() {\n  var data = require(\"./metro/importMetroFromProject\");\n  _importMetroFromProject = function _importMetroFromProject() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isEnableHermesManaged(expoConfig, platform) {\n  switch (platform) {\n    case 'android':\n      {\n        var _expoConfig$android$j, _expoConfig$android;\n        return ((_expoConfig$android$j = (_expoConfig$android = expoConfig.android) === null || _expoConfig$android === void 0 ? void 0 : _expoConfig$android.jsEngine) !== null && _expoConfig$android$j !== void 0 ? _expoConfig$android$j : expoConfig.jsEngine) !== 'jsc';\n      }\n    case 'ios':\n      {\n        var _expoConfig$ios$jsEng, _expoConfig$ios;\n        return ((_expoConfig$ios$jsEng = (_expoConfig$ios = expoConfig.ios) === null || _expoConfig$ios === void 0 ? void 0 : _expoConfig$ios.jsEngine) !== null && _expoConfig$ios$jsEng !== void 0 ? _expoConfig$ios$jsEng : expoConfig.jsEngine) !== 'jsc';\n      }\n    default:\n      return false;\n  }\n}\nfunction buildHermesBundleAsync(_x, _x2, _x3) {\n  return _buildHermesBundleAsync.apply(this, arguments);\n}\nfunction _buildHermesBundleAsync() {\n  _buildHermesBundleAsync = _asyncToGenerator(function* (projectRoot, code, map) {\n    var optimize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var tempDir = _path().default.join(_os().default.tmpdir(), `expo-bundler-${_process().default.pid}`);\n    yield _fsExtra().default.ensureDir(tempDir);\n    try {\n      var tempBundleFile = _path().default.join(tempDir, 'index.bundle');\n      var tempSourcemapFile = _path().default.join(tempDir, 'index.bundle.map');\n      yield _fsExtra().default.writeFile(tempBundleFile, code);\n      yield _fsExtra().default.writeFile(tempSourcemapFile, map);\n      var tempHbcFile = _path().default.join(tempDir, 'index.hbc');\n      var hermesCommand = (0, _importMetroFromProject().importHermesCommandFromProject)(projectRoot);\n      var args = ['-emit-binary', '-out', tempHbcFile, tempBundleFile, '-output-source-map'];\n      if (optimize) {\n        args.push('-O');\n      }\n      yield (0, _spawnAsync().default)(hermesCommand, args);\n      var _yield$Promise$all = yield Promise.all([_fsExtra().default.readFile(tempHbcFile), createHermesSourcemapAsync(projectRoot, map, `${tempHbcFile}.map`)]),\n        _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n        hbc = _yield$Promise$all2[0],\n        sourcemap = _yield$Promise$all2[1];\n      return {\n        hbc: hbc,\n        sourcemap: sourcemap\n      };\n    } finally {\n      yield _fsExtra().default.remove(tempDir);\n    }\n  });\n  return _buildHermesBundleAsync.apply(this, arguments);\n}\nfunction createHermesSourcemapAsync(_x4, _x5, _x6) {\n  return _createHermesSourcemapAsync.apply(this, arguments);\n}\nfunction _createHermesSourcemapAsync() {\n  _createHermesSourcemapAsync = _asyncToGenerator(function* (projectRoot, sourcemap, hermesMapFile) {\n    var composeSourceMaps = (0, _importMetroFromProject().importMetroSourceMapComposeSourceMapsFromProject)(projectRoot);\n    var bundlerSourcemap = JSON.parse(sourcemap);\n    var hermesSourcemap = yield _fsExtra().default.readJSON(hermesMapFile);\n    return JSON.stringify(composeSourceMaps([bundlerSourcemap, hermesSourcemap]));\n  });\n  return _createHermesSourcemapAsync.apply(this, arguments);\n}\nfunction parseGradleProperties(content) {\n  var result = {};\n  for (var line of content.split('\\n')) {\n    line = line.trim();\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n    var sepIndex = line.indexOf('=');\n    var key = line.substr(0, sepIndex);\n    var value = line.substr(sepIndex + 1);\n    result[key] = value;\n  }\n  return result;\n}\nfunction maybeThrowFromInconsistentEngineAsync(_x7, _x8, _x9, _x10) {\n  return _maybeThrowFromInconsistentEngineAsync.apply(this, arguments);\n}\nfunction _maybeThrowFromInconsistentEngineAsync() {\n  _maybeThrowFromInconsistentEngineAsync = _asyncToGenerator(function* (projectRoot, configFilePath, platform, isHermesManaged) {\n    var configFileName = _path().default.basename(configFilePath);\n    if (platform === 'android' && (yield maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged))) {\n      throw new Error(`JavaScript engine configuration is inconsistent between ${configFileName} and Android native project.\\n` + `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` + `In Android native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` + `Please check the following files for inconsistencies:\\n` + `  - ${configFilePath}\\n` + `  - ${_path().default.join(projectRoot, 'android', 'gradle.properties')}\\n` + `  - ${_path().default.join(projectRoot, 'android', 'app', 'build.gradle')}\\n` + 'Learn more: https://expo.fyi/hermes-android-config');\n    }\n    if (platform === 'ios' && (yield maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged))) {\n      throw new Error(`JavaScript engine configuration is inconsistent between ${configFileName} and iOS native project.\\n` + `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` + `In iOS native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` + `Please check the following files for inconsistencies:\\n` + `  - ${configFilePath}\\n` + `  - ${_path().default.join(projectRoot, 'ios', 'Podfile')}\\n` + `  - ${_path().default.join(projectRoot, 'ios', 'Podfile.properties.json')}\\n` + 'Learn more: https://expo.fyi/hermes-ios-config');\n    }\n  });\n  return _maybeThrowFromInconsistentEngineAsync.apply(this, arguments);\n}\nfunction maybeInconsistentEngineAndroidAsync(_x11, _x12) {\n  return _maybeInconsistentEngineAndroidAsync.apply(this, arguments);\n}\nfunction _maybeInconsistentEngineAndroidAsync() {\n  _maybeInconsistentEngineAndroidAsync = _asyncToGenerator(function* (projectRoot, isHermesManaged) {\n    var gradlePropertiesPath = _path().default.join(projectRoot, 'android', 'gradle.properties');\n    if (_fsExtra().default.existsSync(gradlePropertiesPath)) {\n      var props = parseGradleProperties(yield _fsExtra().default.readFile(gradlePropertiesPath, 'utf8'));\n      var isHermesBare = props['hermesEnabled'] === 'true';\n      if (isHermesManaged !== isHermesBare) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return _maybeInconsistentEngineAndroidAsync.apply(this, arguments);\n}\nfunction maybeInconsistentEngineIosAsync(_x13, _x14) {\n  return _maybeInconsistentEngineIosAsync.apply(this, arguments);\n}\nfunction _maybeInconsistentEngineIosAsync() {\n  _maybeInconsistentEngineIosAsync = _asyncToGenerator(function* (projectRoot, isHermesManaged) {\n    var podfilePath = _path().default.join(projectRoot, 'ios', 'Podfile');\n    if (_fsExtra().default.existsSync(podfilePath)) {\n      var content = yield _fsExtra().default.readFile(podfilePath, 'utf8');\n      var isPropsReference = content.search(/^\\s*:hermes_enabled\\s*=>\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*nil\\s*\\|\\|\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*'hermes',?/m) >= 0;\n      var isHermesBare = content.search(/^\\s*:hermes_enabled\\s*=>\\s*true,?\\s+/m) >= 0;\n      if (!isPropsReference && isHermesManaged !== isHermesBare) {\n        return true;\n      }\n    }\n    var podfilePropertiesPath = _path().default.join(projectRoot, 'ios', 'Podfile.properties.json');\n    if (_fsExtra().default.existsSync(podfilePropertiesPath)) {\n      var props = yield parsePodfilePropertiesAsync(podfilePropertiesPath);\n      var _isHermesBare = props['expo.jsEngine'] === 'hermes';\n      if (isHermesManaged !== _isHermesBare) {\n        return true;\n      }\n    }\n    return false;\n  });\n  return _maybeInconsistentEngineIosAsync.apply(this, arguments);\n}\nvar HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\nfunction isHermesBytecodeBundleAsync(_x15) {\n  return _isHermesBytecodeBundleAsync.apply(this, arguments);\n}\nfunction _isHermesBytecodeBundleAsync() {\n  _isHermesBytecodeBundleAsync = _asyncToGenerator(function* (file) {\n    var header = yield readHermesHeaderAsync(file);\n    return header.slice(0, 8).toString('hex') === HERMES_MAGIC_HEADER;\n  });\n  return _isHermesBytecodeBundleAsync.apply(this, arguments);\n}\nfunction getHermesBytecodeBundleVersionAsync(_x16) {\n  return _getHermesBytecodeBundleVersionAsync.apply(this, arguments);\n}\nfunction _getHermesBytecodeBundleVersionAsync() {\n  _getHermesBytecodeBundleVersionAsync = _asyncToGenerator(function* (file) {\n    var header = yield readHermesHeaderAsync(file);\n    if (header.slice(0, 8).toString('hex') !== HERMES_MAGIC_HEADER) {\n      throw new Error('Invalid hermes bundle file');\n    }\n    return header.readUInt32LE(8);\n  });\n  return _getHermesBytecodeBundleVersionAsync.apply(this, arguments);\n}\nfunction readHermesHeaderAsync(_x17) {\n  return _readHermesHeaderAsync.apply(this, arguments);\n}\nfunction _readHermesHeaderAsync() {\n  _readHermesHeaderAsync = _asyncToGenerator(function* (file) {\n    var fd = yield _fsExtra().default.open(file, 'r');\n    var buffer = Buffer.alloc(12);\n    yield _fsExtra().default.read(fd, buffer, 0, 12, null);\n    yield _fsExtra().default.close(fd);\n    return buffer;\n  });\n  return _readHermesHeaderAsync.apply(this, arguments);\n}\nfunction parsePodfilePropertiesAsync(_x18) {\n  return _parsePodfilePropertiesAsync.apply(this, arguments);\n}\nfunction _parsePodfilePropertiesAsync() {\n  _parsePodfilePropertiesAsync = _asyncToGenerator(function* (podfilePropertiesPath) {\n    try {\n      return JSON.parse(yield _fsExtra().default.readFile(podfilePropertiesPath, 'utf8'));\n    } catch (_unused) {\n      return {};\n    }\n  });\n  return _parsePodfilePropertiesAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_spawnAsync","data","_interopRequireDefault","require","_fsExtra","_os","_path","_process","_importMetroFromProject","obj","__esModule","default","isEnableHermesManaged","expoConfig","platform","_expoConfig$android$j","_expoConfig$android","android","jsEngine","_expoConfig$ios$jsEng","_expoConfig$ios","ios","buildHermesBundleAsync","_x","_x2","_x3","_buildHermesBundleAsync","apply","arguments","_asyncToGenerator","projectRoot","code","map","optimize","length","undefined","tempDir","join","tmpdir","pid","ensureDir","tempBundleFile","tempSourcemapFile","writeFile","tempHbcFile","hermesCommand","importHermesCommandFromProject","args","push","_yield$Promise$all","Promise","all","readFile","createHermesSourcemapAsync","_yield$Promise$all2","_slicedToArray","hbc","sourcemap","remove","_x4","_x5","_x6","_createHermesSourcemapAsync","hermesMapFile","composeSourceMaps","importMetroSourceMapComposeSourceMapsFromProject","bundlerSourcemap","JSON","parse","hermesSourcemap","readJSON","stringify","parseGradleProperties","content","result","line","split","trim","startsWith","sepIndex","indexOf","key","substr","value","maybeThrowFromInconsistentEngineAsync","_x7","_x8","_x9","_x10","_maybeThrowFromInconsistentEngineAsync","configFilePath","isHermesManaged","configFileName","basename","maybeInconsistentEngineAndroidAsync","Error","maybeInconsistentEngineIosAsync","_x11","_x12","_maybeInconsistentEngineAndroidAsync","gradlePropertiesPath","existsSync","props","isHermesBare","_x13","_x14","_maybeInconsistentEngineIosAsync","podfilePath","isPropsReference","search","podfilePropertiesPath","parsePodfilePropertiesAsync","HERMES_MAGIC_HEADER","isHermesBytecodeBundleAsync","_x15","_isHermesBytecodeBundleAsync","file","header","readHermesHeaderAsync","slice","toString","getHermesBytecodeBundleVersionAsync","_x16","_getHermesBytecodeBundleVersionAsync","readUInt32LE","_x17","_readHermesHeaderAsync","fd","open","buffer","Buffer","alloc","read","close","_x18","_parsePodfilePropertiesAsync","_unused"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\HermesBundler.ts"],"sourcesContent":["import type { ExpoConfig, Platform } from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport process from 'process';\n\nimport {\n  importHermesCommandFromProject,\n  importMetroSourceMapComposeSourceMapsFromProject,\n} from './metro/importMetroFromProject';\n\nexport function isEnableHermesManaged(expoConfig: ExpoConfig, platform: Platform): boolean {\n  switch (platform) {\n    case 'android': {\n      return (expoConfig.android?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    case 'ios': {\n      return (expoConfig.ios?.jsEngine ?? expoConfig.jsEngine) !== 'jsc';\n    }\n    default:\n      return false;\n  }\n}\n\ninterface HermesBundleOutput {\n  hbc: Uint8Array;\n  sourcemap: string;\n}\nexport async function buildHermesBundleAsync(\n  projectRoot: string,\n  code: string,\n  map: string,\n  optimize: boolean = false\n): Promise<HermesBundleOutput> {\n  const tempDir = path.join(os.tmpdir(), `expo-bundler-${process.pid}`);\n  await fs.ensureDir(tempDir);\n  try {\n    const tempBundleFile = path.join(tempDir, 'index.bundle');\n    const tempSourcemapFile = path.join(tempDir, 'index.bundle.map');\n    await fs.writeFile(tempBundleFile, code);\n    await fs.writeFile(tempSourcemapFile, map);\n\n    const tempHbcFile = path.join(tempDir, 'index.hbc');\n    const hermesCommand = importHermesCommandFromProject(projectRoot);\n    const args = ['-emit-binary', '-out', tempHbcFile, tempBundleFile, '-output-source-map'];\n    if (optimize) {\n      args.push('-O');\n    }\n    await spawnAsync(hermesCommand, args);\n\n    const [hbc, sourcemap] = await Promise.all([\n      fs.readFile(tempHbcFile),\n      createHermesSourcemapAsync(projectRoot, map, `${tempHbcFile}.map`),\n    ]);\n    return {\n      hbc,\n      sourcemap,\n    };\n  } finally {\n    await fs.remove(tempDir);\n  }\n}\n\nexport async function createHermesSourcemapAsync(\n  projectRoot: string,\n  sourcemap: string,\n  hermesMapFile: string\n): Promise<string> {\n  const composeSourceMaps = importMetroSourceMapComposeSourceMapsFromProject(projectRoot);\n  const bundlerSourcemap = JSON.parse(sourcemap);\n  const hermesSourcemap = await fs.readJSON(hermesMapFile);\n  return JSON.stringify(composeSourceMaps([bundlerSourcemap, hermesSourcemap]));\n}\n\nexport function parseGradleProperties(content: string): Record<string, string> {\n  const result: Record<string, string> = {};\n  for (let line of content.split('\\n')) {\n    line = line.trim();\n    if (!line || line.startsWith('#')) {\n      continue;\n    }\n\n    const sepIndex = line.indexOf('=');\n    const key = line.substr(0, sepIndex);\n    const value = line.substr(sepIndex + 1);\n    result[key] = value;\n  }\n  return result;\n}\n\nexport async function maybeThrowFromInconsistentEngineAsync(\n  projectRoot: string,\n  configFilePath: string,\n  platform: string,\n  isHermesManaged: boolean\n): Promise<void> {\n  const configFileName = path.basename(configFilePath);\n  if (\n    platform === 'android' &&\n    (await maybeInconsistentEngineAndroidAsync(projectRoot, isHermesManaged))\n  ) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and Android native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In Android native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'gradle.properties')}\\n` +\n        `  - ${path.join(projectRoot, 'android', 'app', 'build.gradle')}\\n` +\n        'Learn more: https://expo.fyi/hermes-android-config'\n    );\n  }\n\n  if (platform === 'ios' && (await maybeInconsistentEngineIosAsync(projectRoot, isHermesManaged))) {\n    throw new Error(\n      `JavaScript engine configuration is inconsistent between ${configFileName} and iOS native project.\\n` +\n        `In ${configFileName}: Hermes is ${isHermesManaged ? 'enabled' : 'not enabled'}\\n` +\n        `In iOS native project: Hermes is ${isHermesManaged ? 'not enabled' : 'enabled'}\\n` +\n        `Please check the following files for inconsistencies:\\n` +\n        `  - ${configFilePath}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile')}\\n` +\n        `  - ${path.join(projectRoot, 'ios', 'Podfile.properties.json')}\\n` +\n        'Learn more: https://expo.fyi/hermes-ios-config'\n    );\n  }\n}\n\nexport async function maybeInconsistentEngineAndroidAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check android native project if by chance to be consistent between app config\n\n  // Check gradle.properties from prebuild template\n  const gradlePropertiesPath = path.join(projectRoot, 'android', 'gradle.properties');\n  if (fs.existsSync(gradlePropertiesPath)) {\n    const props = parseGradleProperties(await fs.readFile(gradlePropertiesPath, 'utf8'));\n    const isHermesBare = props['hermesEnabled'] === 'true';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport async function maybeInconsistentEngineIosAsync(\n  projectRoot: string,\n  isHermesManaged: boolean\n): Promise<boolean> {\n  // Trying best to check ios native project if by chance to be consistent between app config\n\n  // Check ios/Podfile for \":hermes_enabled => true\"\n  const podfilePath = path.join(projectRoot, 'ios', 'Podfile');\n  if (fs.existsSync(podfilePath)) {\n    const content = await fs.readFile(podfilePath, 'utf8');\n    const isPropsReference =\n      content.search(\n        /^\\s*:hermes_enabled\\s*=>\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*nil\\s*\\|\\|\\s*podfile_properties\\['expo.jsEngine'\\]\\s*==\\s*'hermes',?/m\n      ) >= 0;\n    const isHermesBare = content.search(/^\\s*:hermes_enabled\\s*=>\\s*true,?\\s+/m) >= 0;\n    if (!isPropsReference && isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  // Check Podfile.properties.json from prebuild template\n  const podfilePropertiesPath = path.join(projectRoot, 'ios', 'Podfile.properties.json');\n  if (fs.existsSync(podfilePropertiesPath)) {\n    const props = await parsePodfilePropertiesAsync(podfilePropertiesPath);\n    const isHermesBare = props['expo.jsEngine'] === 'hermes';\n    if (isHermesManaged !== isHermesBare) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// https://github.com/facebook/hermes/blob/release-v0.5/include/hermes/BCGen/HBC/BytecodeFileFormat.h#L24-L25\nconst HERMES_MAGIC_HEADER = 'c61fbc03c103191f';\n\nexport async function isHermesBytecodeBundleAsync(file: string): Promise<boolean> {\n  const header = await readHermesHeaderAsync(file);\n  return header.slice(0, 8).toString('hex') === HERMES_MAGIC_HEADER;\n}\n\nexport async function getHermesBytecodeBundleVersionAsync(file: string): Promise<number> {\n  const header = await readHermesHeaderAsync(file);\n  if (header.slice(0, 8).toString('hex') !== HERMES_MAGIC_HEADER) {\n    throw new Error('Invalid hermes bundle file');\n  }\n  return header.readUInt32LE(8);\n}\n\nasync function readHermesHeaderAsync(file: string): Promise<Buffer> {\n  const fd = await fs.open(file, 'r');\n  const buffer = Buffer.alloc(12);\n  await fs.read(fd, buffer, 0, 12, null);\n  await fs.close(fd);\n  return buffer;\n}\n\nasync function parsePodfilePropertiesAsync(\n  podfilePropertiesPath: string\n): Promise<Record<string, string>> {\n  try {\n    return JSON.parse(await fs.readFile(podfilePropertiesPath, 'utf8'));\n  } catch {\n    return {};\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}