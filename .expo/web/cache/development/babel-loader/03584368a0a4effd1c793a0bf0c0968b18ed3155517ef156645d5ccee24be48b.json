{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/package-manager/build/utils/spawn.d.ts"],"sourcesContent":["import { SpawnOptions, SpawnPromise } from '@expo/spawn-async';\n/**\n * The pending spawn promise is similar to the spawn promise from `@expo/spawn-async`.\n * Instead of the `child` process being available immediately, the `child` is behind another promise.\n * We need this to perform async tasks before running the actual spawn promise.\n * Use it like: `await manager.installAsync().child`\n */\nexport interface PendingSpawnPromise<T> extends Promise<T> {\n    /**\n     * The child process from the delayed spawn.\n     * This is `null` whenever the promise before the spawn promise is rejected.\n     */\n    child: Promise<SpawnPromise<T>['child'] | null>;\n}\nexport declare function createPendingSpawnAsync<V, T>(actionAsync: () => Promise<V>, spawnAsync: (result: V) => SpawnPromise<T>): PendingSpawnPromise<T>;\n/**\n * Spawn a command with sudo privileges.\n * On windows, this uses the `sudo-prompt` package.\n * on other systems, this uses the `sudo` binary.\n */\nexport declare function spawnSudoAsync(command: string[], spawnOptions: SpawnOptions): Promise<void>;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}