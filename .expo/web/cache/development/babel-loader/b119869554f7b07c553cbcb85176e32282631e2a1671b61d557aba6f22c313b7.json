{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setRoundIconManifest = setRoundIconManifest;\nexports.withAndroidManifestIcons = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nvar withAndroidManifestIcons = function withAndroidManifestIcons(config) {\n  return (0, _configPlugins().withAndroidManifest)(config, function (config) {\n    config.modResults = setRoundIconManifest(config, config.modResults);\n    return config;\n  });\n};\nexports.withAndroidManifestIcons = withAndroidManifestIcons;\nfunction setRoundIconManifest(config, manifest) {\n  var _config$android;\n  var isAdaptive = !!((_config$android = config.android) !== null && _config$android !== void 0 && _config$android.adaptiveIcon);\n  var application = _configPlugins().AndroidConfig.Manifest.getMainApplicationOrThrow(manifest);\n  if (isAdaptive) {\n    application.$['android:roundIcon'] = '@mipmap/ic_launcher_round';\n  } else {\n    delete application.$['android:roundIcon'];\n  }\n  return manifest;\n}","map":{"version":3,"names":["_configPlugins","data","require","withAndroidManifestIcons","config","withAndroidManifest","modResults","setRoundIconManifest","exports","manifest","_config$android","isAdaptive","android","adaptiveIcon","application","AndroidConfig","Manifest","getMainApplicationOrThrow","$"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\icons\\withAndroidManifestIcons.ts"],"sourcesContent":["import { AndroidConfig, ConfigPlugin, withAndroidManifest } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nexport const withAndroidManifestIcons: ConfigPlugin = (config) =>\n  withAndroidManifest(config, (config) => {\n    config.modResults = setRoundIconManifest(config, config.modResults);\n    return config;\n  });\n\nexport function setRoundIconManifest(\n  config: Pick<ExpoConfig, 'android'>,\n  manifest: AndroidConfig.Manifest.AndroidManifest\n): AndroidConfig.Manifest.AndroidManifest {\n  const isAdaptive = !!config.android?.adaptiveIcon;\n  const application = AndroidConfig.Manifest.getMainApplicationOrThrow(manifest);\n\n  if (isAdaptive) {\n    application.$['android:roundIcon'] = '@mipmap/ic_launcher_round';\n  } else {\n    delete application.$['android:roundIcon'];\n  }\n  return manifest;\n}\n"],"mappings":";;;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGO,IAAME,wBAAsC,GAAI,SAA1CA,wBAAsCA,CAAIC,MAAM;EAAA,OAC3D,IAAAJ,cAAA,GAAAK,mBAAmB,EAACD,MAAM,EAAG,UAAAA,MAAM,EAAK;IACtCA,MAAM,CAACE,UAAU,GAAGC,oBAAoB,CAACH,MAAM,EAAEA,MAAM,CAACE,UAAU,CAAC;IACnE,OAAOF,MAAM;EACf,CAAC,CAAC;AAAA;AAACI,OAAA,CAAAL,wBAAA,GAAAA,wBAAA;AAEE,SAASI,oBAAoBA,CAClCH,MAAmC,EACnCK,QAAgD,EACR;EAAA,IAAAC,eAAA;EACxC,IAAMC,UAAU,GAAG,CAAC,GAAAD,eAAA,GAACN,MAAM,CAACQ,OAAO,cAAAF,eAAA,eAAdA,eAAA,CAAgBG,YAAY;EACjD,IAAMC,WAAW,GAAGd,cAAA,GAAAe,aAAa,CAACC,QAAQ,CAACC,yBAAyB,CAACR,QAAQ,CAAC;EAE9E,IAAIE,UAAU,EAAE;IACdG,WAAW,CAACI,CAAC,CAAC,mBAAmB,CAAC,GAAG,2BAA2B;EAClE,CAAC,MAAM;IACL,OAAOJ,WAAW,CAACI,CAAC,CAAC,mBAAmB,CAAC;EAC3C;EACA,OAAOT,QAAQ;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}