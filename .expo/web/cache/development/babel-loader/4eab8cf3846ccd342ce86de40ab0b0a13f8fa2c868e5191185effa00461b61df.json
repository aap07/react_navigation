{"ast":null,"code":"'use strict';\n\nvar identity = require(\"../nodes/identity.js\");\nvar Scalar = require(\"../nodes/Scalar.js\");\nvar stringify = require(\"./stringify.js\");\nvar stringifyComment = require(\"./stringifyComment.js\");\nfunction stringifyPair(_ref, ctx, onComment, onChompKeep) {\n  var key = _ref.key,\n    value = _ref.value;\n  var _ctx = ctx,\n    allNullValues = _ctx.allNullValues,\n    doc = _ctx.doc,\n    indent = _ctx.indent,\n    indentStep = _ctx.indentStep,\n    _ctx$options = _ctx.options,\n    commentString = _ctx$options.commentString,\n    indentSeq = _ctx$options.indentSeq,\n    simpleKeys = _ctx$options.simpleKeys;\n  var keyComment = identity.isNode(key) && key.comment || null;\n  if (simpleKeys) {\n    if (keyComment) {\n      throw new Error('With simple keys, key nodes cannot have comments');\n    }\n    if (identity.isCollection(key)) {\n      var msg = 'With simple keys, collection cannot be used as a key value';\n      throw new Error(msg);\n    }\n  }\n  var explicitKey = !simpleKeys && (!key || keyComment && value == null && !ctx.inFlow || identity.isCollection(key) || (identity.isScalar(key) ? key.type === Scalar.Scalar.BLOCK_FOLDED || key.type === Scalar.Scalar.BLOCK_LITERAL : typeof key === 'object'));\n  ctx = Object.assign({}, ctx, {\n    allNullValues: false,\n    implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n    indent: indent + indentStep\n  });\n  var keyCommentDone = false;\n  var chompKeep = false;\n  var str = stringify.stringify(key, ctx, function () {\n    return keyCommentDone = true;\n  }, function () {\n    return chompKeep = true;\n  });\n  if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n    if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n    explicitKey = true;\n  }\n  if (ctx.inFlow) {\n    if (allNullValues || value == null) {\n      if (keyCommentDone && onComment) onComment();\n      return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n    }\n  } else if (allNullValues && !simpleKeys || value == null && explicitKey) {\n    str = `? ${str}`;\n    if (keyComment && !keyCommentDone) {\n      str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n    } else if (chompKeep && onChompKeep) onChompKeep();\n    return str;\n  }\n  if (keyCommentDone) keyComment = null;\n  if (explicitKey) {\n    if (keyComment) str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n    str = `? ${str}\\n${indent}:`;\n  } else {\n    str = `${str}:`;\n    if (keyComment) str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n  }\n  var vsb, vcb, valueComment;\n  if (identity.isNode(value)) {\n    vsb = !!value.spaceBefore;\n    vcb = value.commentBefore;\n    valueComment = value.comment;\n  } else {\n    vsb = false;\n    vcb = null;\n    valueComment = null;\n    if (value && typeof value === 'object') value = doc.createNode(value);\n  }\n  ctx.implicitKey = false;\n  if (!explicitKey && !keyComment && identity.isScalar(value)) ctx.indentAtStart = str.length + 1;\n  chompKeep = false;\n  if (!indentSeq && indentStep.length >= 2 && !ctx.inFlow && !explicitKey && identity.isSeq(value) && !value.flow && !value.tag && !value.anchor) {\n    ctx.indent = ctx.indent.substring(2);\n  }\n  var valueCommentDone = false;\n  var valueStr = stringify.stringify(value, ctx, function () {\n    return valueCommentDone = true;\n  }, function () {\n    return chompKeep = true;\n  });\n  var ws = ' ';\n  if (keyComment || vsb || vcb) {\n    ws = vsb ? '\\n' : '';\n    if (vcb) {\n      var cs = commentString(vcb);\n      ws += `\\n${stringifyComment.indentComment(cs, ctx.indent)}`;\n    }\n    if (valueStr === '' && !ctx.inFlow) {\n      if (ws === '\\n') ws = '\\n\\n';\n    } else {\n      ws += `\\n${ctx.indent}`;\n    }\n  } else if (!explicitKey && identity.isCollection(value)) {\n    var _ref2, _ctx$inFlow;\n    var vs0 = valueStr[0];\n    var nl0 = valueStr.indexOf('\\n');\n    var hasNewline = nl0 !== -1;\n    var flow = (_ref2 = (_ctx$inFlow = ctx.inFlow) != null ? _ctx$inFlow : value.flow) != null ? _ref2 : value.items.length === 0;\n    if (hasNewline || !flow) {\n      var hasPropsLine = false;\n      if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n        var sp0 = valueStr.indexOf(' ');\n        if (vs0 === '&' && sp0 !== -1 && sp0 < nl0 && valueStr[sp0 + 1] === '!') {\n          sp0 = valueStr.indexOf(' ', sp0 + 1);\n        }\n        if (sp0 === -1 || nl0 < sp0) hasPropsLine = true;\n      }\n      if (!hasPropsLine) ws = `\\n${ctx.indent}`;\n    }\n  } else if (valueStr === '' || valueStr[0] === '\\n') {\n    ws = '';\n  }\n  str += ws + valueStr;\n  if (ctx.inFlow) {\n    if (valueCommentDone && onComment) onComment();\n  } else if (valueComment && !valueCommentDone) {\n    str += stringifyComment.lineComment(str, ctx.indent, commentString(valueComment));\n  } else if (chompKeep && onChompKeep) {\n    onChompKeep();\n  }\n  return str;\n}\nexports.stringifyPair = stringifyPair;","map":{"version":3,"names":["identity","require","Scalar","stringify","stringifyComment","stringifyPair","_ref","ctx","onComment","onChompKeep","key","value","_ctx","allNullValues","doc","indent","indentStep","_ctx$options","options","commentString","indentSeq","simpleKeys","keyComment","isNode","comment","Error","isCollection","msg","explicitKey","inFlow","isScalar","type","BLOCK_FOLDED","BLOCK_LITERAL","Object","assign","implicitKey","keyCommentDone","chompKeep","str","length","lineComment","vsb","vcb","valueComment","spaceBefore","commentBefore","createNode","indentAtStart","isSeq","flow","tag","anchor","substring","valueCommentDone","valueStr","ws","cs","indentComment","_ref2","_ctx$inFlow","vs0","nl0","indexOf","hasNewline","items","hasPropsLine","sp0","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/stringify/stringifyPair.js"],"sourcesContent":["'use strict';\n\nvar identity = require('../nodes/identity.js');\nvar Scalar = require('../nodes/Scalar.js');\nvar stringify = require('./stringify.js');\nvar stringifyComment = require('./stringifyComment.js');\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (identity.isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (identity.isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            identity.isCollection(key) ||\n            (identity.isScalar(key)\n                ? key.type === Scalar.Scalar.BLOCK_FOLDED || key.type === Scalar.Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify.stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += stringifyComment.lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (identity.isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && identity.isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        identity.isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify.stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${stringifyComment.indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && identity.isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += stringifyComment.lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexports.stringifyPair = stringifyPair;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}