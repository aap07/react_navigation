{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar RotationGestureDetector = _createClass(function RotationGestureDetector() {\n  _classCallCheck(this, RotationGestureDetector);\n});\nexport { RotationGestureDetector as default };","map":{"version":3,"names":["RotationGestureDetector","_createClass","_classCallCheck","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web/detectors/RotationGestureDetector.d.ts"],"sourcesContent":["import { AdaptedEvent } from '../interfaces';\nimport PointerTracker from '../tools/PointerTracker';\nexport interface RotationGestureListener {\n    onRotationBegin: (detector: RotationGestureDetector) => boolean;\n    onRotation: (detector: RotationGestureDetector) => boolean;\n    onRotationEnd: (detector: RotationGestureDetector) => void;\n}\nexport default class RotationGestureDetector implements RotationGestureListener {\n    onRotationBegin: (detector: RotationGestureDetector) => boolean;\n    onRotation: (detector: RotationGestureDetector) => boolean;\n    onRotationEnd: (detector: RotationGestureDetector) => void;\n    private currentTime;\n    private previousTime;\n    private previousAngle;\n    private rotation;\n    private anchorX;\n    private anchorY;\n    private isInProgress;\n    private keyPointers;\n    constructor(callbacks: RotationGestureListener);\n    private updateCurrent;\n    private finish;\n    private setKeyPointers;\n    onTouchEvent(event: AdaptedEvent, tracker: PointerTracker): boolean;\n    getTimeDelta(): number;\n    getAnchorX(): number;\n    getAnchorY(): number;\n    getRotation(): number;\n    reset(): void;\n}\n"],"mappings":";;IAOqBA,uBAAuB,GAAAC,YAAA,UAAAD,wBAAA;EAAAE,eAAA,OAAAF,uBAAA;AAAA;AAAA,SAAvBA,uBAAuB,IAAAG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}