{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nvar useNewWebImplementation = true;\nvar getWasCalled = false;\nexport function enableExperimentalWebImplementation() {\n  var _shouldEnable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n}\nexport function enableLegacyWebImplementation() {\n  var shouldUseLegacyImplementation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  if (Platform.OS !== 'web' || useNewWebImplementation === !shouldUseLegacyImplementation) {\n    return;\n  }\n  if (getWasCalled) {\n    console.error('Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.');\n    return;\n  }\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\nexport function isNewWebImplementationEnabled() {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}","map":{"version":3,"names":["useNewWebImplementation","getWasCalled","enableExperimentalWebImplementation","_shouldEnable","arguments","length","undefined","enableLegacyWebImplementation","shouldUseLegacyImplementation","Platform","OS","console","error","isNewWebImplementationEnabled"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/EnableNewWebImplementation.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\n\nexport function enableExperimentalWebImplementation(\n  _shouldEnable = true\n): void {\n  // NO-OP since the new implementation is now the default\n}\n\nexport function enableLegacyWebImplementation(\n  shouldUseLegacyImplementation = true\n): void {\n  if (\n    Platform.OS !== 'web' ||\n    useNewWebImplementation === !shouldUseLegacyImplementation\n  ) {\n    return;\n  }\n\n  if (getWasCalled) {\n    console.error(\n      'Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.'\n    );\n    return;\n  }\n\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\n\nexport function isNewWebImplementationEnabled(): boolean {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}\n"],"mappings":";AAEA,IAAIA,uBAAuB,GAAG,IAAI;AAClC,IAAIC,YAAY,GAAG,KAAK;AAExB,OAAO,SAASC,mCAAmCA,CAAA,EAE3C;EAAA,IADNC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;AAGtB;AAEA,OAAO,SAASG,6BAA6BA,CAAA,EAErC;EAAA,IADNC,6BAA6B,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAEpC,IACEK,QAAQ,CAACC,EAAE,KAAK,KAAK,IACrBV,uBAAuB,KAAK,CAACQ,6BAA6B,EAC1D;IACA;EACF;EAEA,IAAIP,YAAY,EAAE;IAChBU,OAAO,CAACC,KAAK,CACX,mLACF,CAAC;IACD;EACF;EAEAZ,uBAAuB,GAAG,CAACQ,6BAA6B;AAC1D;AAEA,OAAO,SAASK,6BAA6BA,CAAA,EAAY;EACvDZ,YAAY,GAAG,IAAI;EACnB,OAAOD,uBAAuB;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}