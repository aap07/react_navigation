{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPlatformBundlers = getPlatformBundlers;\nfunction getPlatformBundlers(exp) {\n  var ref, ref1, ref2;\n  var ref3, ref4, ref5;\n  return {\n    ios: (ref3 = (ref = exp.ios) == null ? void 0 : ref.bundler) != null ? ref3 : \"metro\",\n    android: (ref4 = (ref1 = exp.android) == null ? void 0 : ref1.bundler) != null ? ref4 : \"metro\",\n    web: (ref5 = (ref2 = exp.web) == null ? void 0 : ref2.bundler) != null ? ref5 : \"webpack\"\n  };\n}","map":{"version":3,"names":["getPlatformBundlers","exp","ref","ref1","ref2","ref3","ref4","ref5","ios","bundler","android","web"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\platformBundlers.ts"],"sourcesContent":["import { ExpoConfig, Platform } from '@expo/config';\n\n/** Which bundler each platform should use. */\nexport type PlatformBundlers = Record<Platform, 'metro' | 'webpack'>;\n\n/** Get the platform bundlers mapping. */\nexport function getPlatformBundlers(exp: Partial<ExpoConfig>): PlatformBundlers {\n  return {\n    // @ts-expect-error: not on type yet\n    ios: exp.ios?.bundler ?? 'metro',\n    // @ts-expect-error: not on type yet\n    android: exp.android?.bundler ?? 'metro',\n    web: exp.web?.bundler ?? 'webpack',\n  };\n}\n"],"mappings":"AAAA;;;;;QAMgBA,mBAAmB,GAAnBA,mBAAmB;AAA5B,SAASA,mBAAmBA,CAACC,GAAwB,EAAoB;MAGvEC,GAAO,EAEHC,IAAW,EACfC,IAAO;MAHPC,IAAgB,EAEZC,IAAoB,EACxBC,IAAgB;EALvB,OAAO;IAELC,GAAG,EAAE,CAAAH,IAAgB,GAAhB,CAAAH,GAAO,GAAPD,GAAG,CAACO,GAAG,SAAS,GAAhB,MAAgB,GAAhBN,GAAO,CAAEO,OAAO,YAAhBJ,IAAgB,GAAI,OAAO;IAEhCK,OAAO,EAAE,CAAAJ,IAAoB,GAApB,CAAAH,IAAW,GAAXF,GAAG,CAACS,OAAO,SAAS,GAApB,MAAoB,GAApBP,IAAW,CAAEM,OAAO,YAApBH,IAAoB,GAAI,OAAO;IACxCK,GAAG,EAAE,CAAAJ,IAAgB,GAAhB,CAAAH,IAAO,GAAPH,GAAG,CAACU,GAAG,SAAS,GAAhB,MAAgB,GAAhBP,IAAO,CAAEK,OAAO,YAAhBF,IAAgB,GAAI;GAC1B"},"metadata":{},"sourceType":"script","externalDependencies":[]}