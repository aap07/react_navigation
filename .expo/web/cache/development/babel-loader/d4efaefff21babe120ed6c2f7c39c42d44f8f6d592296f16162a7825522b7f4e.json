{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.get = get;\nexports.set = set;\nexports.pickBy = pickBy;\nfunction get(obj, key) {\n  var branches = key.split(\".\");\n  var current = obj;\n  var branch;\n  while (branch = branches.shift()) {\n    if (!(branch in current)) {\n      return null;\n    }\n    current = current[branch];\n  }\n  return current;\n}\nfunction set(obj, key, value) {\n  var branches = key.split(\".\");\n  var current = obj;\n  var branch;\n  while (branch = branches.shift()) {\n    if (branches.length === 0) {\n      current[branch] = value;\n      return obj;\n    }\n    if (!(branch in current)) {\n      current[branch] = {};\n    }\n    current = current[branch];\n  }\n  return null;\n}\nfunction pickBy(obj, predicate) {\n  return Object.entries(obj).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    if (predicate(value, key)) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["_slicedToArray","require","get","set","pickBy","obj","key","branches","split","current","branch","shift","value","length","predicate","Object","entries","reduce","acc","_ref","_ref2"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\obj.ts"],"sourcesContent":["/** `lodash.get` */\nexport function get(obj: any, key: string): any | null {\n  const branches = key.split('.');\n  let current: any = obj;\n  let branch: string | undefined;\n  while ((branch = branches.shift())) {\n    if (!(branch in current)) {\n      return null;\n    }\n    current = current[branch];\n  }\n  return current;\n}\n\n/** `lodash.set` */\nexport function set(obj: any, key: string, value: any): any | null {\n  const branches = key.split('.');\n  let current: any = obj;\n  let branch: string | undefined;\n  while ((branch = branches.shift())) {\n    if (branches.length === 0) {\n      current[branch] = value;\n      return obj;\n    }\n\n    if (!(branch in current)) {\n      current[branch] = {};\n    }\n\n    current = current[branch];\n  }\n  return null;\n}\n\n/** `lodash.pickBy` */\nexport function pickBy<T>(\n  obj: { [key: string]: T },\n  predicate: (value: T, key: string) => boolean | undefined\n) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (predicate(value, key)) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {} as { [key: string]: T });\n}\n"],"mappings":"AACA;;AAAA,IAAAA,cAAA,GAAAC,OAAA;;;;QAAgBC,GAAG,GAAHA,GAAG;QAcHC,GAAG,GAAHA,GAAG;QAoBHC,MAAM,GAANA,MAAM;AAlCf,SAASF,GAAGA,CAACG,GAAQ,EAAEC,GAAW,EAAc;EACrD,IAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAIC,OAAO,GAAQJ,GAAG;EACtB,IAAIK,MAAM;EACV,OAAQA,MAAM,GAAGH,QAAQ,CAACI,KAAK,EAAE,EAAG;IAClC,IAAI,EAAED,MAAM,IAAID,OAAO,CAAC,EAAE;MACxB,OAAO,IAAI;;IAEbA,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC;;EAE3B,OAAOD,OAAO;;AAIT,SAASN,GAAGA,CAACE,GAAQ,EAAEC,GAAW,EAAEM,KAAU,EAAc;EACjE,IAAML,QAAQ,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAC/B,IAAIC,OAAO,GAAQJ,GAAG;EACtB,IAAIK,MAAM;EACV,OAAQA,MAAM,GAAGH,QAAQ,CAACI,KAAK,EAAE,EAAG;IAClC,IAAIJ,QAAQ,CAACM,MAAM,KAAK,CAAC,EAAE;MACzBJ,OAAO,CAACC,MAAM,CAAC,GAAGE,KAAK;MACvB,OAAOP,GAAG;;IAGZ,IAAI,EAAEK,MAAM,IAAID,OAAO,CAAC,EAAE;MACxBA,OAAO,CAACC,MAAM,CAAC,GAAG,EAAE;;IAGtBD,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC;;EAE3B,OAAO,IAAI;;AAIN,SAASN,MAAMA,CACpBC,GAAyB,EACzBS,SAAyD,EACzD;EACA,OAAOC,MAAM,CAACC,OAAO,CAACX,GAAG,CAAC,CAACY,MAAM,CAAC,UAACC,GAAG,EAAAC,IAAA,EAAmB;IAAA,IAAAC,KAAA,GAAApB,cAAA,CAAAmB,IAAA;MAAhBb,GAAG,GAAAc,KAAA;MAAER,KAAK,GAAAQ,KAAA;IACjD,IAAIN,SAAS,CAACF,KAAK,EAAEN,GAAG,CAAC,EAAE;MACzBY,GAAG,CAACZ,GAAG,CAAC,GAAGM,KAAK;;IAElB,OAAOM,GAAG;GACX,EAAE,EAAE,CAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}