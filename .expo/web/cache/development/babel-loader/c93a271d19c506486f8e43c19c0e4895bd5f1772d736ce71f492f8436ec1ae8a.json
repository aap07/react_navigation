{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/utils/generateCode.d.ts"],"sourcesContent":["export type MergeResults = {\n    contents: string;\n    didClear: boolean;\n    didMerge: boolean;\n};\n/**\n * Merge the contents of two files together and add a generated header.\n *\n * @param src contents of the original file\n * @param newSrc new contents to merge into the original file\n * @param identifier used to update and remove merges\n * @param anchor regex to where the merge should begin\n * @param offset line offset to start merging at (<1 for behind the anchor)\n * @param comment comment style `//` or `#`\n */\nexport declare function mergeContents({ src, newSrc, tag, anchor, offset, comment, }: {\n    src: string;\n    newSrc: string;\n    tag: string;\n    anchor: string | RegExp;\n    offset: number;\n    comment: string;\n}): MergeResults;\nexport declare function removeContents({ src, tag }: {\n    src: string;\n    tag: string;\n}): MergeResults;\n/**\n * Removes the generated section from a file, returns null when nothing can be removed.\n * This sways heavily towards not removing lines unless it's certain that modifications were not made manually.\n *\n * @param src\n */\nexport declare function removeGeneratedContents(src: string, tag: string): string | null;\nexport declare function createGeneratedHeaderComment(contents: string, tag: string, comment: string): string;\nexport declare function createHash(src: string): string;\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}