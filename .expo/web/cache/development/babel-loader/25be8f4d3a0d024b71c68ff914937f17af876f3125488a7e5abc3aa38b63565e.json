{"ast":null,"code":"'use strict';\n\nvar Scalar = require(\"../../nodes/Scalar.js\");\nfunction boolStringify(_ref, ctx) {\n  var value = _ref.value,\n    source = _ref.source;\n  var boolObj = value ? trueTag : falseTag;\n  if (source && boolObj.test.test(source)) return source;\n  return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nvar trueTag = {\n  identify: function identify(value) {\n    return value === true;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return new Scalar.Scalar(true);\n  },\n  stringify: boolStringify\n};\nvar falseTag = {\n  identify: function identify(value) {\n    return value === false;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return new Scalar.Scalar(false);\n  },\n  stringify: boolStringify\n};\nexports.falseTag = falseTag;\nexports.trueTag = trueTag;","map":{"version":3,"names":["Scalar","require","boolStringify","_ref","ctx","value","source","boolObj","trueTag","falseTag","test","options","trueStr","falseStr","identify","default","tag","resolve","stringify","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/schema/yaml-1.1/bool.js"],"sourcesContent":["'use strict';\n\nvar Scalar = require('../../nodes/Scalar.js');\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar.Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar.Scalar(false),\n    stringify: boolStringify\n};\n\nexports.falseTag = falseTag;\nexports.trueTag = trueTag;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,wBAAwB,CAAC;AAE7C,SAASC,aAAaA,CAAAC,IAAA,EAAoBC,GAAG,EAAE;EAAA,IAAtBC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,MAAM,GAAAH,IAAA,CAANG,MAAM;EAClC,IAAMC,OAAO,GAAGF,KAAK,GAAGG,OAAO,GAAGC,QAAQ;EAC1C,IAAIH,MAAM,IAAIC,OAAO,CAACG,IAAI,CAACA,IAAI,CAACJ,MAAM,CAAC,EACnC,OAAOA,MAAM;EACjB,OAAOD,KAAK,GAAGD,GAAG,CAACO,OAAO,CAACC,OAAO,GAAGR,GAAG,CAACO,OAAO,CAACE,QAAQ;AAC7D;AACA,IAAML,OAAO,GAAG;EACZM,QAAQ,EAAE,SAAAA,SAAAT,KAAK;IAAA,OAAIA,KAAK,KAAK,IAAI;EAAA;EACjCU,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,wBAAwB;EAC7BN,IAAI,EAAE,4CAA4C;EAClDO,OAAO,EAAE,SAAAA,QAAA;IAAA,OAAM,IAAIjB,MAAM,CAACA,MAAM,CAAC,IAAI,CAAC;EAAA;EACtCkB,SAAS,EAAEhB;AACf,CAAC;AACD,IAAMO,QAAQ,GAAG;EACbK,QAAQ,EAAE,SAAAA,SAAAT,KAAK;IAAA,OAAIA,KAAK,KAAK,KAAK;EAAA;EAClCU,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,wBAAwB;EAC7BN,IAAI,EAAE,+CAA+C;EACrDO,OAAO,EAAE,SAAAA,QAAA;IAAA,OAAM,IAAIjB,MAAM,CAACA,MAAM,CAAC,KAAK,CAAC;EAAA;EACvCkB,SAAS,EAAEhB;AACf,CAAC;AAEDiB,OAAO,CAACV,QAAQ,GAAGA,QAAQ;AAC3BU,OAAO,CAACX,OAAO,GAAGA,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}