{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _require = require(\"./error.js\"),\n  InvalidArgumentError = _require.InvalidArgumentError;\nvar Argument = function () {\n  \"use strict\";\n\n  function Argument(name, description) {\n    _classCallCheck(this, Argument);\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n    switch (name[0]) {\n      case '<':\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[':\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n  _createClass(Argument, [{\n    key: \"name\",\n    value: function name() {\n      return this._name;\n    }\n  }, {\n    key: \"_concatValue\",\n    value: function _concatValue(value, previous) {\n      if (previous === this.defaultValue || !Array.isArray(previous)) {\n        return [value];\n      }\n      return previous.concat(value);\n    }\n  }, {\n    key: \"default\",\n    value: function _default(value, description) {\n      this.defaultValue = value;\n      this.defaultValueDescription = description;\n      return this;\n    }\n  }, {\n    key: \"argParser\",\n    value: function argParser(fn) {\n      this.parseArg = fn;\n      return this;\n    }\n  }, {\n    key: \"choices\",\n    value: function choices(values) {\n      var _this = this;\n      this.argChoices = values.slice();\n      this.parseArg = function (arg, previous) {\n        if (!_this.argChoices.includes(arg)) {\n          throw new InvalidArgumentError(`Allowed choices are ${_this.argChoices.join(', ')}.`);\n        }\n        if (_this.variadic) {\n          return _this._concatValue(arg, previous);\n        }\n        return arg;\n      };\n      return this;\n    }\n  }, {\n    key: \"argRequired\",\n    value: function argRequired() {\n      this.required = true;\n      return this;\n    }\n  }, {\n    key: \"argOptional\",\n    value: function argOptional() {\n      this.required = false;\n      return this;\n    }\n  }]);\n  return Argument;\n}();\nfunction humanReadableArgName(arg) {\n  var nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n  return arg.required ? '<' + nameOutput + '>' : '[' + nameOutput + ']';\n}\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;","map":{"version":3,"names":["_require","require","InvalidArgumentError","Argument","name","description","_classCallCheck","variadic","parseArg","undefined","defaultValue","defaultValueDescription","argChoices","required","_name","slice","length","_createClass","key","value","_concatValue","previous","Array","isArray","concat","_default","argParser","fn","choices","values","_this","arg","includes","join","argRequired","argOptional","humanReadableArgName","nameOutput","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli/node_modules/commander/lib/argument.js"],"sourcesContent":["const { InvalidArgumentError } = require('./error.js');\n\n// @ts-check\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {any} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}