{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.launchAppAsync = launchAppAsync;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _appleDeviceManager = require(\"../../start/platforms/ios/AppleDeviceManager\");\nvar _simctlLogging = require(\"../../start/platforms/ios/simctlLogging\");\nvar _plist = require(\"../../utils/plist\");\nvar _profile = require(\"../../utils/profile\");\nvar XcodeBuild = _interopRequireWildcard(require(\"./XcodeBuild\"));\nvar _installOnDeviceAsync = require(\"./appleDevice/installOnDeviceAsync\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction launchAppAsync(_x, _x2, _x3) {\n  return _launchAppAsync.apply(this, arguments);\n}\nfunction _launchAppAsync() {\n  _launchAppAsync = _asyncToGenerator(function* (binaryPath, manager, props) {\n    var appId = yield (0, _profile).profile(getBundleIdentifierForBinaryAsync)(binaryPath);\n    if (!props.isSimulator) {\n      yield (0, _profile).profile(_installOnDeviceAsync.installOnDeviceAsync)({\n        bundleIdentifier: appId,\n        bundle: binaryPath,\n        appDeltaDirectory: (0, _installOnDeviceAsync).getAppDeltaDirectory(appId),\n        udid: props.device.udid,\n        deviceName: props.device.name\n      });\n      return;\n    }\n    XcodeBuild.logPrettyItem(_chalk.default`{bold Installing} on ${props.device.name}`);\n    var device = yield _appleDeviceManager.AppleDeviceManager.resolveAsync({\n      device: props.device\n    });\n    yield device.installAppAsync(binaryPath);\n    XcodeBuild.logPrettyItem(_chalk.default`{bold Opening} on ${device.name} {dim (${appId})}`);\n    if (props.shouldStartBundler) {\n      yield _simctlLogging.SimulatorLogStreamer.getStreamer(device.device, {\n        appId: appId\n      }).attachAsync();\n    }\n    yield manager.getDefaultDevServer().openCustomRuntimeAsync(\"simulator\", {\n      applicationId: appId\n    }, {\n      device: device\n    });\n  });\n  return _launchAppAsync.apply(this, arguments);\n}\nfunction getBundleIdentifierForBinaryAsync(_x4) {\n  return _getBundleIdentifierForBinaryAsync.apply(this, arguments);\n}\nfunction _getBundleIdentifierForBinaryAsync() {\n  _getBundleIdentifierForBinaryAsync = _asyncToGenerator(function* (binaryPath) {\n    var builtInfoPlistPath = _path.default.join(binaryPath, \"Info.plist\");\n    var _yield$parsePlistAsyn = yield (0, _plist).parsePlistAsync(builtInfoPlistPath),\n      CFBundleIdentifier = _yield$parsePlistAsyn.CFBundleIdentifier;\n    return CFBundleIdentifier;\n  });\n  return _getBundleIdentifierForBinaryAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","launchAppAsync","_chalk","_interopRequireDefault","_path","_appleDeviceManager","_simctlLogging","_plist","_profile","XcodeBuild","_interopRequireWildcard","_installOnDeviceAsync","_x","_x2","_x3","_launchAppAsync","apply","arguments","binaryPath","manager","props","appId","profile","getBundleIdentifierForBinaryAsync","isSimulator","installOnDeviceAsync","bundleIdentifier","bundle","appDeltaDirectory","getAppDeltaDirectory","udid","device","deviceName","name","logPrettyItem","default","AppleDeviceManager","resolveAsync","installAppAsync","shouldStartBundler","SimulatorLogStreamer","getStreamer","attachAsync","getDefaultDevServer","openCustomRuntimeAsync","applicationId","_x4","_getBundleIdentifierForBinaryAsync","builtInfoPlistPath","join","_yield$parsePlistAsyn","parsePlistAsync","CFBundleIdentifier"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\ios\\launchApp.ts"],"sourcesContent":["import chalk from 'chalk';\nimport path from 'path';\n\nimport { AppleDeviceManager } from '../../start/platforms/ios/AppleDeviceManager';\nimport { SimulatorLogStreamer } from '../../start/platforms/ios/simctlLogging';\nimport { DevServerManager } from '../../start/server/DevServerManager';\nimport { parsePlistAsync } from '../../utils/plist';\nimport { profile } from '../../utils/profile';\nimport * as XcodeBuild from './XcodeBuild';\nimport { BuildProps } from './XcodeBuild.types';\nimport { getAppDeltaDirectory, installOnDeviceAsync } from './appleDevice/installOnDeviceAsync';\n\n/** Install and launch the app binary on a device. */\nexport async function launchAppAsync(\n  binaryPath: string,\n  manager: DevServerManager,\n  props: Pick<BuildProps, 'isSimulator' | 'device' | 'shouldStartBundler'>\n) {\n  const appId = await profile(getBundleIdentifierForBinaryAsync)(binaryPath);\n\n  if (!props.isSimulator) {\n    await profile(installOnDeviceAsync)({\n      bundleIdentifier: appId,\n      bundle: binaryPath,\n      appDeltaDirectory: getAppDeltaDirectory(appId),\n      udid: props.device.udid,\n      deviceName: props.device.name,\n    });\n    return;\n  }\n\n  XcodeBuild.logPrettyItem(chalk`{bold Installing} on ${props.device.name}`);\n\n  const device = await AppleDeviceManager.resolveAsync({ device: props.device });\n  await device.installAppAsync(binaryPath);\n\n  XcodeBuild.logPrettyItem(chalk`{bold Opening} on ${device.name} {dim (${appId})}`);\n\n  if (props.shouldStartBundler) {\n    await SimulatorLogStreamer.getStreamer(device.device, {\n      appId,\n    }).attachAsync();\n  }\n\n  await manager.getDefaultDevServer().openCustomRuntimeAsync(\n    'simulator',\n    {\n      applicationId: appId,\n    },\n    { device }\n  );\n}\n\nasync function getBundleIdentifierForBinaryAsync(binaryPath: string): Promise<string> {\n  const builtInfoPlistPath = path.join(binaryPath, 'Info.plist');\n  const { CFBundleIdentifier } = await parsePlistAsync(builtInfoPlistPath);\n  return CFBundleIdentifier;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}