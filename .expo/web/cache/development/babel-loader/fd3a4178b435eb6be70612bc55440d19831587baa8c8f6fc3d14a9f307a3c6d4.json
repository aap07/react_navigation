{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar URLS = {\n  darwin: 'https://stackoverflow.com/a/28296325/4252781',\n  win32: 'https://stackoverflow.com/a/54888107/4252781',\n  linux: 'https://stackoverflow.com/a/39228100/4252781'\n};\nvar label = 'ANDROID_HOME';\nvar description = 'Environment variable that points to your Android SDK installation';\nvar platform = process.platform;\nvar message = `Read more about how to set the ${label} at ${_chalk().default.dim(URLS[platform])}`;\nvar _default = {\n  label: label,\n  description: description,\n  getDiagnostics: function () {\n    var _getDiagnostics = _asyncToGenerator(function* () {\n      return {\n        needsToBeFixed: !process.env.ANDROID_HOME\n      };\n    });\n    function getDiagnostics() {\n      return _getDiagnostics.apply(this, arguments);\n    }\n    return getDiagnostics;\n  }(),\n  runAutomaticFix: function () {\n    var _runAutomaticFix = _asyncToGenerator(function* (_ref) {\n      var loader = _ref.loader,\n        logManualInstallation = _ref.logManualInstallation;\n      if (process.env.ANDROID_HOME) {\n        loader.succeed();\n        return;\n      }\n      loader.fail();\n      logManualInstallation({\n        message: message\n      });\n    });\n    function runAutomaticFix(_x) {\n      return _runAutomaticFix.apply(this, arguments);\n    }\n    return runAutomaticFix;\n  }()\n};\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_chalk","data","_interopRequireDefault","obj","__esModule","URLS","darwin","win32","linux","label","description","platform","process","message","dim","_default","getDiagnostics","_getDiagnostics","needsToBeFixed","env","ANDROID_HOME","apply","arguments","runAutomaticFix","_runAutomaticFix","_ref","loader","logManualInstallation","succeed","fail","_x"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/healthchecks/androidHomeEnvVariable.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// List of answers on how to set `ANDROID_HOME` for each platform\nconst URLS = {\n  darwin: 'https://stackoverflow.com/a/28296325/4252781',\n  win32: 'https://stackoverflow.com/a/54888107/4252781',\n  linux: 'https://stackoverflow.com/a/39228100/4252781'\n};\nconst label = 'ANDROID_HOME';\nconst description = 'Environment variable that points to your Android SDK installation';\n\n// Force the options for the platform to avoid providing a link\n// for `ANDROID_HOME` for every platform NodeJS supports\nconst platform = process.platform;\nconst message = `Read more about how to set the ${label} at ${_chalk().default.dim(URLS[platform])}`;\nvar _default = {\n  label,\n  description,\n  getDiagnostics: async () => ({\n    needsToBeFixed: !process.env.ANDROID_HOME\n  }),\n  runAutomaticFix: async ({\n    loader,\n    logManualInstallation\n  }) => {\n    // Variable could have been added if installing Android Studio so double checking\n    if (process.env.ANDROID_HOME) {\n      loader.succeed();\n      return;\n    }\n    loader.fail();\n    logManualInstallation({\n      message\n    });\n  }\n};\nexports.default = _default;\n\n//# sourceMappingURL=androidHomeEnvVariable.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,SAASC,MAAMA,CAAA,EAAG;EAChB,IAAMC,IAAI,GAAGC,sBAAsB,CAACR,OAAO,CAAC,OAAO,CAAC,CAAC;EACrDM,MAAM,GAAG,SAAAA,OAAA,EAAY;IACnB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASC,sBAAsBA,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEJ,OAAO,EAAEI;EAAI,CAAC;AAAE;AAE9F,IAAME,IAAI,GAAG;EACXC,MAAM,EAAE,8CAA8C;EACtDC,KAAK,EAAE,8CAA8C;EACrDC,KAAK,EAAE;AACT,CAAC;AACD,IAAMC,KAAK,GAAG,cAAc;AAC5B,IAAMC,WAAW,GAAG,mEAAmE;AAIvF,IAAMC,QAAQ,GAAGC,OAAO,CAACD,QAAQ;AACjC,IAAME,OAAO,GAAI,kCAAiCJ,KAAM,OAAMT,MAAM,CAAC,CAAC,CAACD,OAAO,CAACe,GAAG,CAACT,IAAI,CAACM,QAAQ,CAAC,CAAE,EAAC;AACpG,IAAII,QAAQ,GAAG;EACbN,KAAK,EAALA,KAAK;EACLC,WAAW,EAAXA,WAAW;EACXM,cAAc;IAAA,IAAAC,eAAA,GAAAxB,iBAAA,CAAE;MAAA,OAAa;QAC3ByB,cAAc,EAAE,CAACN,OAAO,CAACO,GAAG,CAACC;MAC/B,CAAC;IAAA,CAAC;IAAA,SAAAJ,eAAA;MAAA,OAAAC,eAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAN,cAAA;EAAA;EACFO,eAAe;IAAA,IAAAC,gBAAA,GAAA/B,iBAAA,CAAE,WAAAgC,IAAA,EAGX;MAAA,IAFJC,MAAM,GAAAD,IAAA,CAANC,MAAM;QACNC,qBAAqB,GAAAF,IAAA,CAArBE,qBAAqB;MAGrB,IAAIf,OAAO,CAACO,GAAG,CAACC,YAAY,EAAE;QAC5BM,MAAM,CAACE,OAAO,CAAC,CAAC;QAChB;MACF;MACAF,MAAM,CAACG,IAAI,CAAC,CAAC;MACbF,qBAAqB,CAAC;QACpBd,OAAO,EAAPA;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,SAAAU,gBAAAO,EAAA;MAAA,OAAAN,gBAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,eAAA;EAAA;AACH,CAAC;AACD1B,OAAO,CAACE,OAAO,GAAGgB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}