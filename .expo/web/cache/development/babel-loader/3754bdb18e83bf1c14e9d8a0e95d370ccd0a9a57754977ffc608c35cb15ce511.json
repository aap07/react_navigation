{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _excluded = [\"acceptSignature\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _os = _interopRequireDefault(require(\"os\"));\nvar _settings = require(\"../../../api/settings\");\nvar _signManifest = require(\"../../../api/signManifest\");\nvar _userSettings = _interopRequireDefault(require(\"../../../api/user/UserSettings\"));\nvar _user = require(\"../../../api/user/user\");\nvar Log = _interopRequireWildcard(require(\"../../../log\"));\nvar _rudderstackClient = require(\"../../../utils/analytics/rudderstackClient\");\nvar _env = require(\"../../../utils/env\");\nvar _fn = require(\"../../../utils/fn\");\nvar _link = require(\"../../../utils/link\");\nvar _url = require(\"../../../utils/url\");\nvar _manifestMiddleware = require(\"./ManifestMiddleware\");\nvar _resolvePlatform = require(\"./resolvePlatform\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:start:server:middleware:ClassicManifestMiddleware\");\nvar ClassicManifestMiddleware = function (_manifestMiddleware$M) {\n  _inherits(ClassicManifestMiddleware, _manifestMiddleware$M);\n  var _super = _createSuper(ClassicManifestMiddleware);\n  function ClassicManifestMiddleware() {\n    var _this;\n    _classCallCheck(this, ClassicManifestMiddleware);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.getSignedManifestStringAsync = (0, _fn).memoize(_signManifest.signClassicExpoGoManifestAsync);\n    _this.addSigningDisabledWarning = (0, _fn).memoize(function (reason) {\n      Log.warn(`${reason}\\nFalling back to offline mode.`);\n      return reason;\n    });\n    return _this;\n  }\n  _createClass(ClassicManifestMiddleware, [{\n    key: \"getParsedHeaders\",\n    value: function getParsedHeaders(req) {\n      var platform = (0, _resolvePlatform).parsePlatformHeader(req) || \"ios\";\n      (0, _resolvePlatform).assertRuntimePlatform(platform);\n      return {\n        platform: platform,\n        acceptSignature: this.getLegacyAcceptSignatureHeader(req),\n        hostname: (0, _url).stripPort(req.headers[\"host\"])\n      };\n    }\n  }, {\n    key: \"getLegacyAcceptSignatureHeader\",\n    value: function getLegacyAcceptSignatureHeader(req) {\n      return req.headers[\"exponent-accept-signature\"] === \"true\" || req.headers[\"expo-accept-signature\"] === \"true\";\n    }\n  }, {\n    key: \"_getManifestResponseAsync\",\n    value: function () {\n      var _getManifestResponseAsync2 = _asyncToGenerator(function* (_ref) {\n        var acceptSignature = _ref.acceptSignature,\n          requestOptions = _objectWithoutProperties(_ref, _excluded);\n        var _yield$this$_resolveP = yield this._resolveProjectSettingsAsync(requestOptions),\n          exp = _yield$this$_resolveP.exp,\n          hostUri = _yield$this$_resolveP.hostUri,\n          expoGoConfig = _yield$this$_resolveP.expoGoConfig,\n          bundleUrl = _yield$this$_resolveP.bundleUrl;\n        var manifest = _objectSpread(_objectSpread(_objectSpread({}, exp), expoGoConfig), {}, {\n          hostUri: hostUri,\n          bundleUrl: bundleUrl\n        });\n        var hostInfo = yield createHostInfoAsync();\n        var headers = new Map();\n        headers.set(\"Exponent-Server\", JSON.stringify(hostInfo));\n        var body = yield this._fetchComputedManifestStringAsync({\n          manifest: manifest,\n          hostId: hostInfo.host,\n          acceptSignature: acceptSignature\n        });\n        return {\n          body: body,\n          version: manifest.sdkVersion,\n          headers: headers\n        };\n      });\n      function _getManifestResponseAsync(_x) {\n        return _getManifestResponseAsync2.apply(this, arguments);\n      }\n      return _getManifestResponseAsync;\n    }()\n  }, {\n    key: \"trackManifest\",\n    value: function trackManifest(version) {\n      (0, _rudderstackClient).logEventAsync(\"Serve Manifest\", {\n        sdkVersion: version != null ? version : null\n      });\n    }\n  }, {\n    key: \"_getManifestStringAsync\",\n    value: function () {\n      var _getManifestStringAsync2 = _asyncToGenerator(function* (_ref2) {\n        var manifest = _ref2.manifest,\n          hostId = _ref2.hostId,\n          acceptSignature = _ref2.acceptSignature;\n        var currentSession = yield (0, _user).getUserAsync();\n        if (!currentSession || _env.env.EXPO_OFFLINE) {\n          manifest.id = `@${_user.ANONYMOUS_USERNAME}/${manifest.slug}-${hostId}`;\n        }\n        if (!acceptSignature) {\n          return JSON.stringify(manifest);\n        } else if (!currentSession || _env.env.EXPO_OFFLINE) {\n          return getUnsignedManifestString(manifest);\n        } else {\n          return this.getSignedManifestStringAsync(manifest);\n        }\n      });\n      function _getManifestStringAsync(_x2) {\n        return _getManifestStringAsync2.apply(this, arguments);\n      }\n      return _getManifestStringAsync;\n    }()\n  }, {\n    key: \"_fetchComputedManifestStringAsync\",\n    value: function () {\n      var _fetchComputedManifestStringAsync2 = _asyncToGenerator(function* (props) {\n        try {\n          return yield this._getManifestStringAsync(props);\n        } catch (error) {\n          debug(`Error getting manifest:`, error);\n          if (error.code === \"UNAUTHORIZED\" && props.manifest.owner) {\n            this.addSigningDisabledWarning(`This project belongs to ${_chalk.default.bold(`@${props.manifest.owner}`)} and you have not been granted the appropriate permissions.\\n` + `Please request access from an admin of @${props.manifest.owner} or change the \"owner\" field to an account you belong to.\\n` + (0, _link).learnMore(\"https://docs.expo.dev/versions/latest/config/app/#owner\"));\n            (0, _settings).disableNetwork();\n            return yield this._getManifestStringAsync(props);\n          } else if (error.code === \"ENOTFOUND\" || error.code === \"OFFLINE\") {\n            this.addSigningDisabledWarning(`Could not reach Expo servers, please check if you can access ${error.hostname || \"exp.host\"}.`);\n            (0, _settings).disableNetwork();\n            return yield this._getManifestStringAsync(props);\n          } else {\n            throw error;\n          }\n        }\n      });\n      function _fetchComputedManifestStringAsync(_x3) {\n        return _fetchComputedManifestStringAsync2.apply(this, arguments);\n      }\n      return _fetchComputedManifestStringAsync;\n    }()\n  }]);\n  return ClassicManifestMiddleware;\n}(_manifestMiddleware.ManifestMiddleware);\nexports.ClassicManifestMiddleware = ClassicManifestMiddleware;\nfunction createHostInfoAsync() {\n  return _createHostInfoAsync.apply(this, arguments);\n}\nfunction _createHostInfoAsync() {\n  _createHostInfoAsync = _asyncToGenerator(function* () {\n    return {\n      host: yield _userSettings.default.getAnonymousIdentifierAsync(),\n      server: \"expo\",\n      serverVersion: \"0.10.13\",\n      serverDriver: _manifestMiddleware.DEVELOPER_TOOL,\n      serverOS: _os.default.platform(),\n      serverOSVersion: _os.default.release()\n    };\n  });\n  return _createHostInfoAsync.apply(this, arguments);\n}\nfunction getUnsignedManifestString(manifest) {\n  var unsignedManifest = {\n    manifestString: JSON.stringify(manifest),\n    signature: \"UNSIGNED\"\n  };\n  return JSON.stringify(unsignedManifest);\n}","map":{"version":3,"names":["_defineProperty","require","_objectWithoutProperties","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","_chalk","_interopRequireDefault","_os","_settings","_signManifest","_userSettings","_user","Log","_interopRequireWildcard","_rudderstackClient","_env","_fn","_link","_url","_manifestMiddleware","_resolvePlatform","debug","ClassicManifestMiddleware","_manifestMiddleware$M","_super","_this","_len","args","Array","_key","concat","getSignedManifestStringAsync","memoize","signClassicExpoGoManifestAsync","addSigningDisabledWarning","reason","warn","key","value","getParsedHeaders","req","platform","parsePlatformHeader","assertRuntimePlatform","acceptSignature","getLegacyAcceptSignatureHeader","hostname","stripPort","headers","_getManifestResponseAsync2","_ref","requestOptions","_yield$this$_resolveP","_resolveProjectSettingsAsync","exp","hostUri","expoGoConfig","bundleUrl","manifest","hostInfo","createHostInfoAsync","Map","set","JSON","stringify","body","_fetchComputedManifestStringAsync","hostId","host","version","sdkVersion","_getManifestResponseAsync","_x","trackManifest","logEventAsync","_getManifestStringAsync2","_ref2","currentSession","getUserAsync","env","EXPO_OFFLINE","id","ANONYMOUS_USERNAME","slug","getUnsignedManifestString","_getManifestStringAsync","_x2","_fetchComputedManifestStringAsync2","props","error","code","owner","default","bold","learnMore","disableNetwork","_x3","ManifestMiddleware","_createHostInfoAsync","getAnonymousIdentifierAsync","server","serverVersion","serverDriver","DEVELOPER_TOOL","serverOS","serverOSVersion","release","unsignedManifest","manifestString","signature"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\middleware\\ClassicManifestMiddleware.ts"],"sourcesContent":["import { ExpoAppManifest, ExpoConfig } from '@expo/config';\nimport chalk from 'chalk';\nimport os from 'os';\n\nimport { disableNetwork } from '../../../api/settings';\nimport { signClassicExpoGoManifestAsync } from '../../../api/signManifest';\nimport UserSettings from '../../../api/user/UserSettings';\nimport { ANONYMOUS_USERNAME, getUserAsync } from '../../../api/user/user';\nimport * as Log from '../../../log';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { env } from '../../../utils/env';\nimport { memoize } from '../../../utils/fn';\nimport { learnMore } from '../../../utils/link';\nimport { stripPort } from '../../../utils/url';\nimport {\n  DEVELOPER_TOOL,\n  HostInfo,\n  ManifestMiddleware,\n  ManifestRequestInfo,\n} from './ManifestMiddleware';\nimport { assertRuntimePlatform, parsePlatformHeader } from './resolvePlatform';\nimport { ServerHeaders, ServerRequest } from './server.types';\n\ntype SignManifestProps = {\n  manifest: ExpoAppManifest;\n  hostId: string;\n  acceptSignature: boolean;\n};\n\ninterface ClassicManifestRequestInfo extends ManifestRequestInfo {\n  /** Should return the signed manifest. */\n  acceptSignature: boolean;\n}\n\nconst debug = require('debug')(\n  'expo:start:server:middleware:ClassicManifestMiddleware'\n) as typeof console.log;\n\nexport class ClassicManifestMiddleware extends ManifestMiddleware<ClassicManifestRequestInfo> {\n  public getParsedHeaders(req: ServerRequest): ClassicManifestRequestInfo {\n    const platform = parsePlatformHeader(req) || 'ios';\n    assertRuntimePlatform(platform);\n    return {\n      platform,\n      acceptSignature: this.getLegacyAcceptSignatureHeader(req),\n      hostname: stripPort(req.headers['host']),\n    };\n  }\n\n  /**\n   * This header is specified as a string \"true\" or \"false\", in one of two headers:\n   * - exponent-accept-signature\n   * - expo-accept-signature\n   */\n  private getLegacyAcceptSignatureHeader(req: ServerRequest): boolean {\n    return (\n      req.headers['exponent-accept-signature'] === 'true' ||\n      req.headers['expo-accept-signature'] === 'true'\n    );\n  }\n\n  public async _getManifestResponseAsync({\n    acceptSignature,\n    ...requestOptions\n  }: ClassicManifestRequestInfo): Promise<{\n    body: string;\n    version: string;\n    headers: ServerHeaders;\n  }> {\n    const { exp, hostUri, expoGoConfig, bundleUrl } = await this._resolveProjectSettingsAsync(\n      requestOptions\n    );\n\n    const manifest: ExpoAppManifest = {\n      ...(exp as ExpoAppManifest),\n      ...expoGoConfig,\n      hostUri,\n      bundleUrl,\n    };\n\n    // Gather packager and host info\n    const hostInfo = await createHostInfoAsync();\n\n    const headers = new Map<string, any>();\n    headers.set('Exponent-Server', JSON.stringify(hostInfo));\n\n    // Create the final string\n    const body = await this._fetchComputedManifestStringAsync({\n      manifest,\n      hostId: hostInfo.host,\n      acceptSignature,\n    });\n\n    return {\n      body,\n      version: manifest.sdkVersion,\n      headers,\n    };\n  }\n\n  protected trackManifest(version?: string) {\n    // Log analytics\n    logEventAsync('Serve Manifest', {\n      sdkVersion: version ?? null,\n    });\n  }\n\n  /** Exposed for testing. */\n  async _getManifestStringAsync({\n    manifest,\n    hostId,\n    acceptSignature,\n  }: SignManifestProps): Promise<string> {\n    const currentSession = await getUserAsync();\n    if (!currentSession || env.EXPO_OFFLINE) {\n      manifest.id = `@${ANONYMOUS_USERNAME}/${manifest.slug}-${hostId}`;\n    }\n    if (!acceptSignature) {\n      return JSON.stringify(manifest);\n    } else if (!currentSession || env.EXPO_OFFLINE) {\n      return getUnsignedManifestString(manifest);\n    } else {\n      return this.getSignedManifestStringAsync(manifest);\n    }\n  }\n\n  private getSignedManifestStringAsync = memoize(signClassicExpoGoManifestAsync);\n\n  /** Exposed for testing. */\n  async _fetchComputedManifestStringAsync(props: SignManifestProps): Promise<string> {\n    try {\n      return await this._getManifestStringAsync(props);\n    } catch (error: any) {\n      debug(`Error getting manifest:`, error);\n      if (error.code === 'UNAUTHORIZED' && props.manifest.owner) {\n        // Don't have permissions for signing, warn and enable offline mode.\n        this.addSigningDisabledWarning(\n          `This project belongs to ${chalk.bold(\n            `@${props.manifest.owner}`\n          )} and you have not been granted the appropriate permissions.\\n` +\n            `Please request access from an admin of @${props.manifest.owner} or change the \"owner\" field to an account you belong to.\\n` +\n            learnMore('https://docs.expo.dev/versions/latest/config/app/#owner')\n        );\n\n        disableNetwork();\n        return await this._getManifestStringAsync(props);\n      } else if (error.code === 'ENOTFOUND' || error.code === 'OFFLINE') {\n        // Got a DNS error, i.e. can't access exp.host, warn and enable offline mode.\n        this.addSigningDisabledWarning(\n          `Could not reach Expo servers, please check if you can access ${\n            error.hostname || 'exp.host'\n          }.`\n        );\n\n        disableNetwork();\n        return await this._getManifestStringAsync(props);\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private addSigningDisabledWarning = memoize((reason: string) => {\n    Log.warn(`${reason}\\nFalling back to offline mode.`);\n    // For the memo\n    return reason;\n  });\n}\n\n// Passed to Expo Go and registered as telemetry.\n// TODO: it's unclear why we don't just send it from the CLI.\nasync function createHostInfoAsync(): Promise<HostInfo> {\n  return {\n    host: await UserSettings.getAnonymousIdentifierAsync(),\n    server: 'expo',\n    // Defined in the build step\n    serverVersion: process.env.__EXPO_VERSION!,\n    serverDriver: DEVELOPER_TOOL,\n    serverOS: os.platform(),\n    serverOSVersion: os.release(),\n  };\n}\n\nfunction getUnsignedManifestString(manifest: ExpoConfig) {\n  const unsignedManifest = {\n    manifestString: JSON.stringify(manifest),\n    signature: 'UNSIGNED',\n  };\n  return JSON.stringify(unsignedManifest);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}