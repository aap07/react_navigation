{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNativeModuleVersionsAsync = getNativeModuleVersionsAsync;\nvar _errors = require(\"../utils/errors\");\nvar _client = require(\"./rest/client\");\nfunction getNativeModuleVersionsAsync(_x) {\n  return _getNativeModuleVersionsAsync.apply(this, arguments);\n}\nfunction _getNativeModuleVersionsAsync() {\n  _getNativeModuleVersionsAsync = _asyncToGenerator(function* (sdkVersion) {\n    var fetchAsync = (0, _client).createCachedFetch({\n      cacheDirectory: \"native-modules-cache\",\n      ttl: 1000 * 60 * 1\n    });\n    var results = yield fetchAsync(`sdks/${sdkVersion}/native-modules`);\n    if (!results.ok) {\n      throw new _errors.CommandError(\"API\", `Unexpected response when fetching version info from Expo servers: ${results.statusText}.`);\n    }\n    var _yield$results$json = yield results.json(),\n      data = _yield$results$json.data;\n    if (!data.length) {\n      throw new _errors.CommandError(\"VERSIONS\", \"The bundled native module list from the Expo API is empty\");\n    }\n    return fromBundledNativeModuleList(data);\n  });\n  return _getNativeModuleVersionsAsync.apply(this, arguments);\n}\nfunction fromBundledNativeModuleList(list) {\n  return list.reduce(function (acc, i) {\n    acc[i.npmPackage] = i.versionRange;\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["_asyncToGenerator","require","getNativeModuleVersionsAsync","_errors","_client","_x","_getNativeModuleVersionsAsync","apply","arguments","sdkVersion","fetchAsync","createCachedFetch","cacheDirectory","ttl","results","ok","CommandError","statusText","_yield$results$json","json","data","length","fromBundledNativeModuleList","list","reduce","acc","i","npmPackage","versionRange"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\getNativeModuleVersions.ts"],"sourcesContent":["import { CommandError } from '../utils/errors';\nimport { createCachedFetch } from './rest/client';\n\ninterface NativeModule {\n  npmPackage: string;\n  versionRange: string;\n}\ntype BundledNativeModuleList = NativeModule[];\n\nexport type BundledNativeModules = Record<string, string>;\n\n/**\n * The endpoint returns the list of bundled native modules for a given SDK version.\n * The data is populated by the `et sync-bundled-native-modules` script from expo/expo repo.\n * See the code for more details:\n * https://github.com/expo/expo/blob/main/tools/src/commands/SyncBundledNativeModules.ts\n *\n * Example result:\n * [\n *   {\n *     id: \"79285187-e5c4-47f7-b6a9-664f5d16f0db\",\n *     sdkVersion: \"41.0.0\",\n *     npmPackage: \"expo-camera\",\n *     versionRange: \"~10.1.0\",\n *     createdAt: \"2021-04-29T09:34:32.825Z\",\n *     updatedAt: \"2021-04-29T09:34:32.825Z\"\n *   },\n *   ...\n * ]\n */\nexport async function getNativeModuleVersionsAsync(\n  sdkVersion: string\n): Promise<BundledNativeModules> {\n  const fetchAsync = createCachedFetch({\n    cacheDirectory: 'native-modules-cache',\n    // 1 minute cache\n    ttl: 1000 * 60 * 1,\n  });\n  const results = await fetchAsync(`sdks/${sdkVersion}/native-modules`);\n  if (!results.ok) {\n    throw new CommandError(\n      'API',\n      `Unexpected response when fetching version info from Expo servers: ${results.statusText}.`\n    );\n  }\n  const { data } = await results.json();\n  if (!data.length) {\n    throw new CommandError('VERSIONS', 'The bundled native module list from the Expo API is empty');\n  }\n  return fromBundledNativeModuleList(data);\n}\n\nfunction fromBundledNativeModuleList(list: BundledNativeModuleList): BundledNativeModules {\n  return list.reduce((acc, i) => {\n    acc[i.npmPackage] = i.versionRange;\n    return acc;\n  }, {} as BundledNativeModules);\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QA8BsBC,4BAA4B,GAA5BA,4BAA4B;AA9BrB,IAAAC,OAAiB,GAAAF,OAAA;AACZ,IAAAG,OAAe,GAAAH,OAAA;AAAA,SA6B3BC,4BAA4BA,CAAAG,EAAA;EAAA,OAAAC,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,8BAAA;EAAAA,6BAAA,GAAAN,iBAAA,CAA3C,WACLS,UAAkB,EACa;IAC/B,IAAMC,UAAU,GAAG,IAAAN,OAAiB,EAIlCO,iBAJkC,CAAC;MACnCC,cAAc,EAAE,sBAAsB;MAEtCC,GAAG,EAAE,IAAI,GAAG,EAAE,GAAG;KAClB,CAAC;IACF,IAAMC,OAAO,SAASJ,UAAU,CAAE,QAAOD,UAAW,iBAAgB,CAAC;IACrE,IAAI,CAACK,OAAO,CAACC,EAAE,EAAE;MACf,MAAM,IAAIZ,OAAY,CAAAa,YAAA,CACpB,KAAK,EACJ,qEAAoEF,OAAO,CAACG,UAAW,GAAE,CAC3F;;IAEH,IAAAC,mBAAA,SAAuBJ,OAAO,CAACK,IAAI,EAAE;MAA7BC,IAAI,GAAAF,mBAAA,CAAJE,IAAI;IACZ,IAAI,CAACA,IAAI,CAACC,MAAM,EAAE;MAChB,MAAM,IAAIlB,OAAY,CAAAa,YAAA,CAAC,UAAU,EAAE,2DAA2D,CAAC;;IAEjG,OAAOM,2BAA2B,CAACF,IAAI,CAAC;GACzC;EAAA,OAAAd,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASc,2BAA2BA,CAACC,IAA6B,EAAwB;EACxF,OAAOA,IAAI,CAACC,MAAM,CAAC,UAACC,GAAG,EAAEC,CAAC,EAAK;IAC7BD,GAAG,CAACC,CAAC,CAACC,UAAU,CAAC,GAAGD,CAAC,CAACE,YAAY;IAClC,OAAOH,GAAG;GACX,EAAE,EAAE,CAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}