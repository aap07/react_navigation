{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signClassicExpoGoManifestAsync = signClassicExpoGoManifestAsync;\nvar _client = require(\"./rest/client\");\nvar _actions = require(\"./user/actions\");\nvar _user = require(\"./user/user\");\nfunction signClassicExpoGoManifestAsync(_x) {\n  return _signClassicExpoGoManifestAsync.apply(this, arguments);\n}\nfunction _signClassicExpoGoManifestAsync() {\n  _signClassicExpoGoManifestAsync = _asyncToGenerator(function* (manifest) {\n    yield (0, _actions).ensureLoggedInAsync();\n    var _owner;\n    var res = yield (0, _client).fetchAsync(\"manifest/sign\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        args: {\n          remoteUsername: (_owner = manifest.owner) != null ? _owner : (0, _user).getActorDisplayName(yield (0, _user).getUserAsync()),\n          remotePackageName: manifest.slug\n        },\n        manifest: manifest\n      })\n    });\n    var _yield$res$json = yield res.json(),\n      data = _yield$res$json.data;\n    return data.response;\n  });\n  return _signClassicExpoGoManifestAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","signClassicExpoGoManifestAsync","_client","_actions","_user","_x","_signClassicExpoGoManifestAsync","apply","arguments","manifest","ensureLoggedInAsync","_owner","res","fetchAsync","method","body","JSON","stringify","args","remoteUsername","owner","getActorDisplayName","getUserAsync","remotePackageName","slug","_yield$res$json","json","data","response"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\signManifest.ts"],"sourcesContent":["import { ExpoAppManifest } from '@expo/config';\nimport { JSONObject } from '@expo/json-file';\n\nimport { fetchAsync } from './rest/client';\nimport { ensureLoggedInAsync } from './user/actions';\nimport { getActorDisplayName, getUserAsync } from './user/user';\n\n/** Sign a classic manifest to access secure features in sandboxed environments like Expo Go. */\nexport async function signClassicExpoGoManifestAsync(\n  manifest: Partial<ExpoAppManifest>\n): Promise<string> {\n  await ensureLoggedInAsync();\n  const res = await fetchAsync('manifest/sign', {\n    method: 'POST',\n    body: JSON.stringify({\n      args: {\n        remoteUsername: manifest.owner ?? getActorDisplayName(await getUserAsync()),\n        remotePackageName: manifest.slug,\n      },\n      manifest: manifest as JSONObject,\n    }),\n  });\n  const { data } = await res.json();\n  return data.response;\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAQsBC,8BAA8B,GAA9BA,8BAA8B;AALzB,IAAAC,OAAe,GAAAF,OAAA;AACN,IAAAG,QAAgB,GAAAH,OAAA;AACF,IAAAI,KAAa,GAAAJ,OAAA;AAAA,SAGzCC,8BAA8BA,CAAAI,EAAA;EAAA,OAAAC,+BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,gCAAA;EAAAA,+BAAA,GAAAP,iBAAA,CAA7C,WACLU,QAAkC,EACjB;IACjB,MAAM,IAAAN,QAAmB,EAAEO,mBAAF,EAAE;QAKLC,MAAc;IAJpC,IAAMC,GAAG,SAAS,IAAAV,OAAU,EAS1BW,UAT0B,CAAC,eAAe,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE;UACJC,cAAc,EAAE,CAAAR,MAAc,GAAdF,QAAQ,CAACW,KAAK,YAAdT,MAAc,GAAI,IAAAP,KAAmB,EAAsBiB,mBAAtB,OAAO,IAAAjB,KAAY,EAAEkB,YAAF,EAAE,CAAC;UAC3EC,iBAAiB,EAAEd,QAAQ,CAACe;SAC7B;QACDf,QAAQ,EAAEA;OACX;KACF,CAAC;IACF,IAAAgB,eAAA,SAAuBb,GAAG,CAACc,IAAI,EAAE;MAAzBC,IAAI,GAAAF,eAAA,CAAJE,IAAI;IACZ,OAAOA,IAAI,CAACC,QAAQ;GACrB;EAAA,OAAAtB,+BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}