{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/parse/line-counter.d.ts"],"sourcesContent":["/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nexport declare class LineCounter {\n    lineStarts: number[];\n    /**\n     * Should be called in ascending order. Otherwise, call\n     * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n     */\n    addNewLine: (offset: number) => number;\n    /**\n     * Performs a binary search and returns the 1-indexed { line, col }\n     * position of `offset`. If `line === 0`, `addNewLine` has never been\n     * called or `offset` is before the first known newline.\n     */\n    linePos: (offset: number) => {\n        line: number;\n        col: number;\n    };\n}\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}