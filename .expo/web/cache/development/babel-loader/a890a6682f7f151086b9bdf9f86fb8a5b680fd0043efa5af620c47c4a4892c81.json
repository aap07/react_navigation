{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSplashBackgroundColor = getSplashBackgroundColor;\nexports.getSplashDarkBackgroundColor = getSplashDarkBackgroundColor;\nexports.removeOldSplashStyleGroup = removeOldSplashStyleGroup;\nexports.setSplashColorsForTheme = setSplashColorsForTheme;\nexports.setSplashStylesForTheme = setSplashStylesForTheme;\nexports.withAndroidSplashStyles = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _android() {\n  var data = require(\"@expo/config-plugins/build/android\");\n  _android = function _android() {\n    return data;\n  };\n  return data;\n}\nfunction _getAndroidSplashConfig() {\n  var data = require(\"./getAndroidSplashConfig\");\n  _getAndroidSplashConfig = function _getAndroidSplashConfig() {\n    return data;\n  };\n  return data;\n}\nvar styleResourceGroup = {\n  name: 'Theme.App.SplashScreen',\n  parent: 'AppTheme'\n};\nvar SPLASH_COLOR_NAME = 'splashscreen_background';\nvar withAndroidSplashStyles = function withAndroidSplashStyles(config) {\n  config = (0, _configPlugins().withAndroidColors)(config, function (config) {\n    var backgroundColor = getSplashBackgroundColor(config);\n    config.modResults = setSplashColorsForTheme(config.modResults, backgroundColor);\n    return config;\n  });\n  config = (0, _configPlugins().withAndroidColorsNight)(config, function (config) {\n    var backgroundColor = getSplashDarkBackgroundColor(config);\n    config.modResults = setSplashColorsForTheme(config.modResults, backgroundColor);\n    return config;\n  });\n  config = (0, _configPlugins().withAndroidStyles)(config, function (config) {\n    config.modResults = removeOldSplashStyleGroup(config.modResults);\n    config.modResults = setSplashStylesForTheme(config.modResults);\n    return config;\n  });\n  return config;\n};\nexports.withAndroidSplashStyles = withAndroidSplashStyles;\nfunction removeOldSplashStyleGroup(styles) {\n  var _styles$resources$sty, _styles$resources$sty2;\n  var group = {\n    name: 'Theme.App.SplashScreen',\n    parent: 'Theme.AppCompat.Light.NoActionBar'\n  };\n  styles.resources.style = (_styles$resources$sty = styles.resources.style) === null || _styles$resources$sty === void 0 ? void 0 : (_styles$resources$sty2 = _styles$resources$sty.filter) === null || _styles$resources$sty2 === void 0 ? void 0 : _styles$resources$sty2.call(_styles$resources$sty, function (_ref) {\n    var head = _ref.$;\n    var matches = head.name === group.name;\n    if (group.parent != null && matches) {\n      matches = head.parent === group.parent;\n    }\n    return !matches;\n  });\n  return styles;\n}\nfunction getSplashBackgroundColor(config) {\n  var _getAndroidSplashConf, _getAndroidSplashConf2;\n  return (_getAndroidSplashConf = (_getAndroidSplashConf2 = (0, _getAndroidSplashConfig().getAndroidSplashConfig)(config)) === null || _getAndroidSplashConf2 === void 0 ? void 0 : _getAndroidSplashConf2.backgroundColor) !== null && _getAndroidSplashConf !== void 0 ? _getAndroidSplashConf : null;\n}\nfunction getSplashDarkBackgroundColor(config) {\n  var _getAndroidDarkSplash, _getAndroidDarkSplash2;\n  return (_getAndroidDarkSplash = (_getAndroidDarkSplash2 = (0, _getAndroidSplashConfig().getAndroidDarkSplashConfig)(config)) === null || _getAndroidDarkSplash2 === void 0 ? void 0 : _getAndroidDarkSplash2.backgroundColor) !== null && _getAndroidDarkSplash !== void 0 ? _getAndroidDarkSplash : null;\n}\nfunction setSplashStylesForTheme(styles) {\n  return _configPlugins().AndroidConfig.Styles.assignStylesValue(styles, {\n    add: true,\n    value: '@drawable/splashscreen',\n    name: 'android:windowBackground',\n    parent: styleResourceGroup\n  });\n}\nfunction setSplashColorsForTheme(colors, backgroundColor) {\n  return _android().Colors.assignColorValue(colors, {\n    value: backgroundColor,\n    name: SPLASH_COLOR_NAME\n  });\n}","map":{"version":3,"names":["_configPlugins","data","require","_android","_getAndroidSplashConfig","styleResourceGroup","name","parent","SPLASH_COLOR_NAME","withAndroidSplashStyles","config","withAndroidColors","backgroundColor","getSplashBackgroundColor","modResults","setSplashColorsForTheme","withAndroidColorsNight","getSplashDarkBackgroundColor","withAndroidStyles","removeOldSplashStyleGroup","setSplashStylesForTheme","exports","styles","_styles$resources$sty","_styles$resources$sty2","group","resources","style","filter","call","_ref","head","$","matches","_getAndroidSplashConf","_getAndroidSplashConf2","getAndroidSplashConfig","_getAndroidDarkSplash","_getAndroidDarkSplash2","getAndroidDarkSplashConfig","AndroidConfig","Styles","assignStylesValue","add","value","colors","Colors","assignColorValue"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-splash-screen\\withAndroidSplashStyles.ts"],"sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  withAndroidColors,\n  withAndroidColorsNight,\n  withAndroidStyles,\n} from '@expo/config-plugins';\nimport { Colors } from '@expo/config-plugins/build/android';\nimport { ExpoConfig } from '@expo/config-types';\n\nimport { getAndroidDarkSplashConfig, getAndroidSplashConfig } from './getAndroidSplashConfig';\n\nconst styleResourceGroup = {\n  name: 'Theme.App.SplashScreen',\n  parent: 'AppTheme',\n};\n\nconst SPLASH_COLOR_NAME = 'splashscreen_background';\n\nexport const withAndroidSplashStyles: ConfigPlugin = (config) => {\n  config = withAndroidColors(config, (config) => {\n    const backgroundColor = getSplashBackgroundColor(config);\n    config.modResults = setSplashColorsForTheme(config.modResults, backgroundColor);\n    return config;\n  });\n  config = withAndroidColorsNight(config, (config) => {\n    const backgroundColor = getSplashDarkBackgroundColor(config);\n    config.modResults = setSplashColorsForTheme(config.modResults, backgroundColor);\n    return config;\n  });\n  config = withAndroidStyles(config, (config) => {\n    config.modResults = removeOldSplashStyleGroup(config.modResults);\n    config.modResults = setSplashStylesForTheme(config.modResults);\n    return config;\n  });\n  return config;\n};\n\n// Remove the old style group which didn't extend the base theme properly.\nexport function removeOldSplashStyleGroup(styles: AndroidConfig.Resources.ResourceXML) {\n  const group = {\n    name: 'Theme.App.SplashScreen',\n    parent: 'Theme.AppCompat.Light.NoActionBar',\n  };\n\n  styles.resources.style = styles.resources.style?.filter?.(({ $: head }) => {\n    let matches = head.name === group.name;\n    if (group.parent != null && matches) {\n      matches = head.parent === group.parent;\n    }\n    return !matches;\n  });\n\n  return styles;\n}\n\nexport function getSplashBackgroundColor(config: ExpoConfig): string | null {\n  return getAndroidSplashConfig(config)?.backgroundColor ?? null;\n}\n\nexport function getSplashDarkBackgroundColor(config: ExpoConfig): string | null {\n  return getAndroidDarkSplashConfig(config)?.backgroundColor ?? null;\n}\n\nexport function setSplashStylesForTheme(styles: AndroidConfig.Resources.ResourceXML) {\n  // Add splash screen image\n  return AndroidConfig.Styles.assignStylesValue(styles, {\n    add: true,\n    value: '@drawable/splashscreen',\n    name: 'android:windowBackground',\n    parent: styleResourceGroup,\n  });\n}\n\nexport function setSplashColorsForTheme(\n  colors: AndroidConfig.Resources.ResourceXML,\n  backgroundColor: string | null\n): AndroidConfig.Resources.ResourceXML {\n  return Colors.assignColorValue(colors, { value: backgroundColor, name: SPLASH_COLOR_NAME });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}