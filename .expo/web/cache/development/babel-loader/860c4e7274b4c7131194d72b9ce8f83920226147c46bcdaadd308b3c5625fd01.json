{"ast":null,"code":"// @licenselint-loose-mode\n'use strict';\n\nvar EMPTY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // no methods\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_OBJECTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getObject: (arg: {|const1: {|const1: boolean|}|}) => {|\n    const1: {|const1: boolean|},\n  |};\n  +getReadOnlyObject: (arg: $ReadOnly<{|const1: $ReadOnly<{|const1: boolean|}>|}>) => $ReadOnly<{|\n    const1: {|const1: boolean|},\n  |}>;\n  +getObject2: (arg: { a: String }) => Object;\n  +getObjectInArray: (arg: {const1: {|const1: boolean|}}) => Array<{|\n    const1: {const1: boolean},\n  |}>;\n}\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    isTesting: boolean,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch?: number,\n      prerelease: ?number,\n    |},\n    forceTouchAvailable: boolean,\n    osVersion: string,\n    systemName: string,\n    interfaceIdiom: string,\n  |};\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_BASIC_PARAM_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +passBool?: (arg: boolean) => void;\n  +passNumber: (arg: number) => void;\n  +passString: (arg: string) => void;\n  +passStringish: (arg: Stringish) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype NumNum = number;\nexport type Num = (arg: NumNum) => void;\ntype Num2 = Num;\nexport type Void = void;\nexport type A = number;\nexport type B = number;\nexport type ObjectAlias = {|\n  x: number,\n  y: number,\n  label: string,\n  truthy: boolean,\n|};\nexport type ReadOnlyAlias = $ReadOnly<ObjectAlias>;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getNumber: Num2;\n  +getVoid: () => Void;\n  +getArray: (a: Array<A>) => {| a: B |};\n  +getStringFromAlias: (a: ObjectAlias) => string;\n  +getStringFromNullableAlias: (a: ?ObjectAlias) => string;\n  +getStringFromReadOnlyAlias: (a: ReadOnlyAlias) => string;\n  +getStringFromNullableReadOnlyAlias: (a: ?ReadOnlyAlias) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_NESTED_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype Bar = {|\n  z: number\n|};\n\ntype Foo = {|\n  bar1: Bar,\n  bar2: Bar,\n|};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_FLOAT_AND_INT32 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\nimport type {Int32, Float} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  +getInt: (arg: Int32) => Int32;\n  +getFloat: (arg: Float) => Float;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_SIMPLE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getObject: (o: Object) => Object,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_UNSAFE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\nimport type {UnsafeObject} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  +getUnsafeObject: (o: UnsafeObject) => UnsafeObject,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_PARTIALS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeObj = {|\n  a: string,\n  b?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getSomeObj: () => SomeObj;\n  +getPartialSomeObj: () => Partial<SomeObj>;\n  +getSomeObjFromPartialSomeObj: (value: Partial<SomeObj>) => SomeObj;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_PARTIALS_COMPLEX = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeObj = {|\n  a: string,\n  b?: boolean,\n|};\n\nexport type PartialSomeObj = Partial<SomeObj>;\n\nexport interface Spec extends TurboModule {\n  +getPartialPartial: (value1: Partial<SomeObj>, value2: PartialSomeObj) => SomeObj\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_ROOT_TAG = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {RootTag, TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getRootTag: (rootTag: RootTag) => RootTag,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_NULLABLE_PARAM = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +voidFunc: (arg: ?string) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_BASIC_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<string>) => Array<string>;\n  +getArray: (arg: $ReadOnlyArray<string>) => $ReadOnlyArray<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype DisplayMetricsAndroid = {|\n width: number,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid,\n    },\n  |};\n  +getConstants2: () => $ReadOnly<{|\n    +Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid,\n    },\n  |}>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<[string, string]>) => Array<string | number | boolean>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<SomeString>) => Array<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<Array<Array<Array<Array<string>>>>>) => Array<Array<Array<string>>>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_PROMISE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type String = string;\nexport type SomeObj = {| a: string |};\n\nexport interface Spec extends TurboModule {\n  +getValueWithPromise: () => Promise<string>;\n  +getValueWithPromiseDefinedSomewhereElse: () => Promise<String>;\n  +getValueWithPromiseObjDefinedSomewhereElse: () => Promise<SomeObj>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_CALLBACK = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getValueWithCallback: (\n    callback: (value: string, arr: Array<Array<string>>) => void,\n  ) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_UNION = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport interface Spec extends TurboModule {\n +getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar ANDROID_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // no methods\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModuleAndroid');\n\n`;\nvar IOS_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport interface Spec extends TurboModule {\n  getEnums(quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions): string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModuleIOS');\n\n`;\nvar CXX_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport interface Spec extends TurboModule {\n  +getCallback: () => () => void;\n  +getMixed: (arg: mixed) => mixed;\n  +getEnums: (quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions) => string;\n  +getMap: (arg: {[a: string]: ?number}) => {[b: string]: ?number};\n  +getAnotherMap: (arg: {[string]: string}) => {[string]: string};\n  +getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModuleCxx');\n\n`;\nvar PROMISE_WITH_COMMONLY_USED_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type Season = 'Spring' | 'Summer' | 'Autumn' | 'Winter';\n\nexport type CustomObject = {|\n  field1: Array<Object>,\n  field2: boolean,\n  field3: string,\n  type: 'A_String_Literal',\n|};\n\nexport interface Spec extends TurboModule {\n  returnStringArray(): Promise<Array<string>>;\n  returnObjectArray(): Promise<Array<Object>>;\n  returnNullableNumber(): Promise<number | null>;\n  returnEmpty(): Promise<empty>;\n  returnUnsupportedIndex(): Promise<{ [string]: 'authorized' | 'denied' | 'undetermined' | true | false }>;\n  returnSupportedIndex(): Promise<{ [string]: CustomObject }>;\n  returnEnum() : Promise<Season>;\n  returnObject() : Promise<CustomObject>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nmodule.exports = {\n  NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY: NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE: NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_FLOAT_AND_INT32: NATIVE_MODULE_WITH_FLOAT_AND_INT32,\n  NATIVE_MODULE_WITH_ALIASES: NATIVE_MODULE_WITH_ALIASES,\n  NATIVE_MODULE_WITH_NESTED_ALIASES: NATIVE_MODULE_WITH_NESTED_ALIASES,\n  NATIVE_MODULE_WITH_PROMISE: NATIVE_MODULE_WITH_PROMISE,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS: NATIVE_MODULE_WITH_COMPLEX_OBJECTS,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY: NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY,\n  NATIVE_MODULE_WITH_SIMPLE_OBJECT: NATIVE_MODULE_WITH_SIMPLE_OBJECT,\n  NATIVE_MODULE_WITH_UNSAFE_OBJECT: NATIVE_MODULE_WITH_UNSAFE_OBJECT,\n  NATIVE_MODULE_WITH_PARTIALS: NATIVE_MODULE_WITH_PARTIALS,\n  NATIVE_MODULE_WITH_PARTIALS_COMPLEX: NATIVE_MODULE_WITH_PARTIALS_COMPLEX,\n  NATIVE_MODULE_WITH_ROOT_TAG: NATIVE_MODULE_WITH_ROOT_TAG,\n  NATIVE_MODULE_WITH_NULLABLE_PARAM: NATIVE_MODULE_WITH_NULLABLE_PARAM,\n  NATIVE_MODULE_WITH_BASIC_ARRAY: NATIVE_MODULE_WITH_BASIC_ARRAY,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY: NATIVE_MODULE_WITH_COMPLEX_ARRAY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS: NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS,\n  NATIVE_MODULE_WITH_BASIC_PARAM_TYPES: NATIVE_MODULE_WITH_BASIC_PARAM_TYPES,\n  NATIVE_MODULE_WITH_CALLBACK: NATIVE_MODULE_WITH_CALLBACK,\n  NATIVE_MODULE_WITH_UNION: NATIVE_MODULE_WITH_UNION,\n  EMPTY_NATIVE_MODULE: EMPTY_NATIVE_MODULE,\n  ANDROID_ONLY_NATIVE_MODULE: ANDROID_ONLY_NATIVE_MODULE,\n  IOS_ONLY_NATIVE_MODULE: IOS_ONLY_NATIVE_MODULE,\n  CXX_ONLY_NATIVE_MODULE: CXX_ONLY_NATIVE_MODULE,\n  PROMISE_WITH_COMMONLY_USED_TYPES: PROMISE_WITH_COMMONLY_USED_TYPES\n};","map":{"version":3,"names":["EMPTY_NATIVE_MODULE","NATIVE_MODULE_WITH_COMPLEX_OBJECTS","NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY","NATIVE_MODULE_WITH_BASIC_PARAM_TYPES","NATIVE_MODULE_WITH_ALIASES","NATIVE_MODULE_WITH_NESTED_ALIASES","NATIVE_MODULE_WITH_FLOAT_AND_INT32","NATIVE_MODULE_WITH_SIMPLE_OBJECT","NATIVE_MODULE_WITH_UNSAFE_OBJECT","NATIVE_MODULE_WITH_PARTIALS","NATIVE_MODULE_WITH_PARTIALS_COMPLEX","NATIVE_MODULE_WITH_ROOT_TAG","NATIVE_MODULE_WITH_NULLABLE_PARAM","NATIVE_MODULE_WITH_BASIC_ARRAY","NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY","NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE","NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS","NATIVE_MODULE_WITH_COMPLEX_ARRAY","NATIVE_MODULE_WITH_PROMISE","NATIVE_MODULE_WITH_CALLBACK","NATIVE_MODULE_WITH_UNION","ANDROID_ONLY_NATIVE_MODULE","IOS_ONLY_NATIVE_MODULE","CXX_ONLY_NATIVE_MODULE","PROMISE_WITH_COMMONLY_USED_TYPES","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/parsers/flow/modules/__test_fixtures__/fixtures.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n// @licenselint-loose-mode\n\n'use strict';\n\nconst EMPTY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // no methods\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_OBJECTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getObject: (arg: {|const1: {|const1: boolean|}|}) => {|\n    const1: {|const1: boolean|},\n  |};\n  +getReadOnlyObject: (arg: $ReadOnly<{|const1: $ReadOnly<{|const1: boolean|}>|}>) => $ReadOnly<{|\n    const1: {|const1: boolean|},\n  |}>;\n  +getObject2: (arg: { a: String }) => Object;\n  +getObjectInArray: (arg: {const1: {|const1: boolean|}}) => Array<{|\n    const1: {const1: boolean},\n  |}>;\n}\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    isTesting: boolean,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch?: number,\n      prerelease: ?number,\n    |},\n    forceTouchAvailable: boolean,\n    osVersion: string,\n    systemName: string,\n    interfaceIdiom: string,\n  |};\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_BASIC_PARAM_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +passBool?: (arg: boolean) => void;\n  +passNumber: (arg: number) => void;\n  +passString: (arg: string) => void;\n  +passStringish: (arg: Stringish) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype NumNum = number;\nexport type Num = (arg: NumNum) => void;\ntype Num2 = Num;\nexport type Void = void;\nexport type A = number;\nexport type B = number;\nexport type ObjectAlias = {|\n  x: number,\n  y: number,\n  label: string,\n  truthy: boolean,\n|};\nexport type ReadOnlyAlias = $ReadOnly<ObjectAlias>;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getNumber: Num2;\n  +getVoid: () => Void;\n  +getArray: (a: Array<A>) => {| a: B |};\n  +getStringFromAlias: (a: ObjectAlias) => string;\n  +getStringFromNullableAlias: (a: ?ObjectAlias) => string;\n  +getStringFromReadOnlyAlias: (a: ReadOnlyAlias) => string;\n  +getStringFromNullableReadOnlyAlias: (a: ?ReadOnlyAlias) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_NESTED_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype Bar = {|\n  z: number\n|};\n\ntype Foo = {|\n  bar1: Bar,\n  bar2: Bar,\n|};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_FLOAT_AND_INT32 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\nimport type {Int32, Float} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  +getInt: (arg: Int32) => Int32;\n  +getFloat: (arg: Float) => Float;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_SIMPLE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getObject: (o: Object) => Object,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_UNSAFE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\nimport type {UnsafeObject} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  +getUnsafeObject: (o: UnsafeObject) => UnsafeObject,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_PARTIALS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeObj = {|\n  a: string,\n  b?: boolean,\n|};\n\nexport interface Spec extends TurboModule {\n  +getSomeObj: () => SomeObj;\n  +getPartialSomeObj: () => Partial<SomeObj>;\n  +getSomeObjFromPartialSomeObj: (value: Partial<SomeObj>) => SomeObj;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_PARTIALS_COMPLEX = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeObj = {|\n  a: string,\n  b?: boolean,\n|};\n\nexport type PartialSomeObj = Partial<SomeObj>;\n\nexport interface Spec extends TurboModule {\n  +getPartialPartial: (value1: Partial<SomeObj>, value2: PartialSomeObj) => SomeObj\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_ROOT_TAG = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {RootTag, TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getRootTag: (rootTag: RootTag) => RootTag,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_NULLABLE_PARAM = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +voidFunc: (arg: ?string) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_BASIC_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<string>) => Array<string>;\n  +getArray: (arg: $ReadOnlyArray<string>) => $ReadOnlyArray<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype DisplayMetricsAndroid = {|\n width: number,\n|};\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid,\n    },\n  |};\n  +getConstants2: () => $ReadOnly<{|\n    +Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid,\n    },\n  |}>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<[string, string]>) => Array<string | number | boolean>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<SomeString>) => Array<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getArray: (arg: Array<Array<Array<Array<Array<string>>>>>) => Array<Array<Array<string>>>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_PROMISE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type String = string;\nexport type SomeObj = {| a: string |};\n\nexport interface Spec extends TurboModule {\n  +getValueWithPromise: () => Promise<string>;\n  +getValueWithPromiseDefinedSomewhereElse: () => Promise<String>;\n  +getValueWithPromiseObjDefinedSomewhereElse: () => Promise<SomeObj>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_CALLBACK = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  +getValueWithCallback: (\n    callback: (value: string, arr: Array<Array<string>>) => void,\n  ) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_UNION = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport interface Spec extends TurboModule {\n +getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst ANDROID_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  // no methods\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModuleAndroid');\n\n`;\nconst IOS_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport interface Spec extends TurboModule {\n  getEnums(quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions): string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModuleIOS');\n\n`;\nconst CXX_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport interface Spec extends TurboModule {\n  +getCallback: () => () => void;\n  +getMixed: (arg: mixed) => mixed;\n  +getEnums: (quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions) => string;\n  +getMap: (arg: {[a: string]: ?number}) => {[b: string]: ?number};\n  +getAnotherMap: (arg: {[string]: string}) => {[string]: string};\n  +getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModuleCxx');\n\n`;\nconst PROMISE_WITH_COMMONLY_USED_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport type Season = 'Spring' | 'Summer' | 'Autumn' | 'Winter';\n\nexport type CustomObject = {|\n  field1: Array<Object>,\n  field2: boolean,\n  field3: string,\n  type: 'A_String_Literal',\n|};\n\nexport interface Spec extends TurboModule {\n  returnStringArray(): Promise<Array<string>>;\n  returnObjectArray(): Promise<Array<Object>>;\n  returnNullableNumber(): Promise<number | null>;\n  returnEmpty(): Promise<empty>;\n  returnUnsupportedIndex(): Promise<{ [string]: 'authorized' | 'denied' | 'undetermined' | true | false }>;\n  returnSupportedIndex(): Promise<{ [string]: CustomObject }>;\n  returnEnum() : Promise<Season>;\n  returnObject() : Promise<CustomObject>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nmodule.exports = {\n  NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_FLOAT_AND_INT32,\n  NATIVE_MODULE_WITH_ALIASES,\n  NATIVE_MODULE_WITH_NESTED_ALIASES,\n  NATIVE_MODULE_WITH_PROMISE,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY,\n  NATIVE_MODULE_WITH_SIMPLE_OBJECT,\n  NATIVE_MODULE_WITH_UNSAFE_OBJECT,\n  NATIVE_MODULE_WITH_PARTIALS,\n  NATIVE_MODULE_WITH_PARTIALS_COMPLEX,\n  NATIVE_MODULE_WITH_ROOT_TAG,\n  NATIVE_MODULE_WITH_NULLABLE_PARAM,\n  NATIVE_MODULE_WITH_BASIC_ARRAY,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS,\n  NATIVE_MODULE_WITH_BASIC_PARAM_TYPES,\n  NATIVE_MODULE_WITH_CALLBACK,\n  NATIVE_MODULE_WITH_UNION,\n  EMPTY_NATIVE_MODULE,\n  ANDROID_ONLY_NATIVE_MODULE,\n  IOS_ONLY_NATIVE_MODULE,\n  CXX_ONLY_NATIVE_MODULE,\n  PROMISE_WITH_COMMONLY_USED_TYPES,\n};\n"],"mappings":"AAUA;AAEA,YAAY;;AAEZ,IAAMA,mBAAmB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,kCAAkC,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oDAAoD,GAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oCAAoC,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,kCAAkC,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2BAA2B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,mCAAmC,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2BAA2B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,8BAA8B,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iEAAiE,GAAI;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,8CAA8C,GAAI;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,mCAAmC,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2BAA2B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wBAAwB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,sBAAsB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,sBAAsB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAACC,OAAO,GAAG;EACfZ,iEAAiE,EAAjEA,iEAAiE;EACjEC,8CAA8C,EAA9CA,8CAA8C;EAC9CT,kCAAkC,EAAlCA,kCAAkC;EAClCF,0BAA0B,EAA1BA,0BAA0B;EAC1BC,iCAAiC,EAAjCA,iCAAiC;EACjCa,0BAA0B,EAA1BA,0BAA0B;EAC1BjB,kCAAkC,EAAlCA,kCAAkC;EAClCC,oDAAoD,EAApDA,oDAAoD;EACpDK,gCAAgC,EAAhCA,gCAAgC;EAChCC,gCAAgC,EAAhCA,gCAAgC;EAChCC,2BAA2B,EAA3BA,2BAA2B;EAC3BC,mCAAmC,EAAnCA,mCAAmC;EACnCC,2BAA2B,EAA3BA,2BAA2B;EAC3BC,iCAAiC,EAAjCA,iCAAiC;EACjCC,8BAA8B,EAA9BA,8BAA8B;EAC9BI,gCAAgC,EAAhCA,gCAAgC;EAChCD,mCAAmC,EAAnCA,mCAAmC;EACnCb,oCAAoC,EAApCA,oCAAoC;EACpCgB,2BAA2B,EAA3BA,2BAA2B;EAC3BC,wBAAwB,EAAxBA,wBAAwB;EACxBpB,mBAAmB,EAAnBA,mBAAmB;EACnBqB,0BAA0B,EAA1BA,0BAA0B;EAC1BC,sBAAsB,EAAtBA,sBAAsB;EACtBC,sBAAsB,EAAtBA,sBAAsB;EACtBC,gCAAgC,EAAhCA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}