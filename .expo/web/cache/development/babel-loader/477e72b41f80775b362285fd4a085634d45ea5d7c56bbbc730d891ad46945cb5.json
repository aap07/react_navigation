{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport WorkletEventHandler from \"./reanimated2/WorkletEventHandler\";\nimport setAndForwardRef from \"./setAndForwardRef\";\nimport \"./reanimated2/layoutReanimation/animationsManager\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"./ConfigHelper\";\nimport { RNRenderer } from \"./reanimated2/platform-specific/RNRenderer\";\nimport { configureLayoutAnimations, enableLayoutAnimations, runOnUI, startMapper, stopMapper } from \"./reanimated2/core\";\nimport { isJest, isChromeDebugger, shouldBeUseWeb } from \"./reanimated2/PlatformChecker\";\nimport { initialUpdaterRun } from \"./reanimated2/animation\";\nimport { DefaultSharedTransition, LayoutAnimationType } from \"./reanimated2/layoutReanimation\";\nimport { makeViewDescriptorsSet } from \"./reanimated2/ViewDescriptorsSet\";\nimport { getShadowNodeWrapperFromRef } from \"./reanimated2/fabricUtils\";\nimport updateProps from \"./reanimated2/UpdateProps\";\nimport NativeReanimatedModule from \"./reanimated2/NativeReanimated\";\nimport { isSharedValue } from \"./reanimated2\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction dummyListener() {}\nfunction maybeBuild(layoutAnimationOrBuilder) {\n  var isAnimationBuilder = function isAnimationBuilder(value) {\n    return 'build' in layoutAnimationOrBuilder && typeof layoutAnimationOrBuilder.build === 'function';\n  };\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  var resultArr = [];\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style == null ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 == null ? void 0 : style1.viewsRef) === (style2 == null ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\nfunction isInlineStyleTransform(transform) {\n  if (!transform) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref of Object.entries(style)) {\n          var _ref2 = _slicedToArray(_ref, 2);\n          var _key = _ref2[0];\n          var styleValue = _ref2[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[_key] = styleValue;\n          } else if (_key === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[_key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n  return false;\n}\nfunction getInlinePropsUpdate(inlineProps) {\n  'worklet';\n\n  var update = {};\n  for (var _ref3 of Object.entries(inlineProps)) {\n    var _ref4 = _slicedToArray(_ref3, 2);\n    var key = _ref4[0];\n    var styleValue = _ref4[1];\n    if (key === 'transform') {\n      update[key] = styleValue.map(function (transform) {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\nexport default function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    _inherits(AnimatedComponent, _React$Component);\n    var _super = _createSuper(AnimatedComponent);\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _this._styles = null;\n      _this._viewTag = -1;\n      _this._isFirstRender = true;\n      _this.animatedStyle = {\n        value: {}\n      };\n      _this.initialStyle = {};\n      _this._component = null;\n      _this._inlinePropsViewDescriptors = null;\n      _this._inlinePropsMapperId = null;\n      _this._inlineProps = {};\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            if (!shouldBeUseWeb()) {\n              enableLayoutAnimations(true, false);\n            }\n            if (layout) {\n              configureLayoutAnimations(tag, LayoutAnimationType.LAYOUT, maybeBuild(layout));\n            }\n            if (entering) {\n              configureLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering));\n            }\n            if (exiting) {\n              configureLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting));\n            }\n            if (sharedTransitionTag) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : DefaultSharedTransition;\n              configureLayoutAnimations(tag, LayoutAnimationType.SHARED_ELEMENT_TRANSITION, maybeBuild(sharedElementTransition), sharedTransitionTag);\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      });\n      if (isJest()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    _createClass(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachNativeEvents();\n        this._detachStyles();\n        this._detachInlineProps();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component;\n        return (_this$_component = this._component) != null && _this$_component.getScrollableNode ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            if (viewTag === null) {\n              viewTag = findNodeHandle(options != null && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style != null && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) != null && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (global._IS_FABRIC) {\n            var viewTag = this._viewTag;\n            runOnUI(function () {\n              _removeShadowNodeFromRegistry(viewTag);\n            })();\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if (has('current', prop) && prop.current instanceof WorkletEventHandler && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key2 in this.props) {\n          var _prop = this.props[_key2];\n          if (has('current', _prop) && _prop.current instanceof WorkletEventHandler && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = findNodeHandle(options != null && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key2);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options != null && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2;\n          (_this$_component2 = this._component) == null ? void 0 : _this$_component2.setNativeProps == null ? void 0 : _this$_component2.setNativeProps(props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3;\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) != null && _this$_component3.getAnimatableRef ? this._component.getAnimatableRef() : this;\n        if (Platform.OS === 'web') {\n          viewTag = findNodeHandle(component);\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance == null ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance == null ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) == null ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance == null ? void 0 : hostInstance.viewConfig;\n          if (global._IS_FABRIC) {\n            shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n          }\n        }\n        return {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this$props$animatedP2,\n          _this2 = this,\n          _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) == null ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (isJest()) {\n            _this2.animatedStyle.value = _objectSpread(_objectSpread({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) != null && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"_attachInlineProps\",\n      value: function _attachInlineProps() {\n        var newInlineProps = extractSharedValuesMapFromProps(this.props);\n        var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n        if (hasChanged) {\n          if (!this._inlinePropsViewDescriptors) {\n            this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n            var _this$_getViewInfo2 = this._getViewInfo(),\n              viewTag = _this$_getViewInfo2.viewTag,\n              viewName = _this$_getViewInfo2.viewName,\n              shadowNodeWrapper = _this$_getViewInfo2.shadowNodeWrapper,\n              viewConfig = _this$_getViewInfo2.viewConfig;\n            if (Object.keys(newInlineProps).length && viewConfig) {\n              adaptViewConfig(viewConfig);\n            }\n            this._inlinePropsViewDescriptors.add({\n              tag: viewTag,\n              name: viewName,\n              shadowNodeWrapper: shadowNodeWrapper\n            });\n          }\n          var sharableViewDescriptors = this._inlinePropsViewDescriptors.sharableViewDescriptors;\n          var maybeViewRef = NativeReanimatedModule.native ? undefined : {\n            items: new Set([this])\n          };\n          var updaterFunction = function updaterFunction() {\n            'worklet';\n\n            var update = getInlinePropsUpdate(newInlineProps);\n            updateProps(sharableViewDescriptors, update, maybeViewRef);\n          };\n          this._inlineProps = newInlineProps;\n          if (this._inlinePropsMapperId) {\n            stopMapper(this._inlinePropsMapperId);\n          }\n          this._inlinePropsMapperId = null;\n          if (Object.keys(newInlineProps).length) {\n            this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n          }\n        }\n      }\n    }, {\n      key: \"_detachInlineProps\",\n      value: function _detachInlineProps() {\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._attachInlineProps();\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n        var props = {};\n        var _loop2 = function _loop2() {\n          var value = inputProps[key];\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp != null ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = _objectSpread(_objectSpread({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                }\n                return _this3.initialStyle;\n              } else if (hasInlineStyles(style)) {\n                if (_this3._isFirstRender) {\n                  return getInlinePropsUpdate(style);\n                }\n                var newStyle = {};\n                for (var _ref5 of Object.entries(style)) {\n                  var _ref6 = _slicedToArray(_ref5, 2);\n                  var _key3 = _ref6[0];\n                  var styleValue = _ref6[1];\n                  if (!isSharedValue(styleValue) && !(_key3 === 'transform' && isInlineStyleTransform(styleValue))) {\n                    newStyle[_key3] = styleValue;\n                  }\n                }\n                return newStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = StyleSheet.flatten(processedStyle);\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _animatedProp$initial, _animatedProp$viewsRe;\n                props[key] = (_animatedProp$initial = animatedProp.initial) == null ? void 0 : _animatedProp$initial.value[key];\n                (_animatedProp$viewsRe = animatedProp.viewsRef) == null ? void 0 : _animatedProp$viewsRe.add(_this3);\n              });\n            }\n          } else if (has('current', value) && value.current instanceof WorkletEventHandler) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (isSharedValue(value)) {\n            if (_this3._isFirstRender) {\n              props[key] = value.value;\n            }\n          } else if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n            props[key] = value;\n          }\n        };\n        for (var key in inputProps) {\n          _loop2();\n        }\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n        if (isJest()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return _jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(React.Component);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return _jsx(AnimatedComponent, _objectSpread(_objectSpread({}, props), ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["React","findNodeHandle","Platform","StyleSheet","WorkletEventHandler","setAndForwardRef","invariant","adaptViewConfig","RNRenderer","configureLayoutAnimations","enableLayoutAnimations","runOnUI","startMapper","stopMapper","isJest","isChromeDebugger","shouldBeUseWeb","initialUpdaterRun","DefaultSharedTransition","LayoutAnimationType","makeViewDescriptorsSet","getShadowNodeWrapperFromRef","updateProps","NativeReanimatedModule","isSharedValue","jsx","_jsx","dummyListener","maybeBuild","layoutAnimationOrBuilder","isAnimationBuilder","value","build","flattenArray","array","Array","isArray","resultArr","_flattenArray","arr","forEach","item","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","key","x","undefined","isInlineStyleTransform","transform","some","t","hasInlineStyles","Object","keys","styleValue","extractSharedValuesMapFromProps","props","inlineProps","_props$style","_ref","entries","_ref2","_slicedToArray","inlinePropsHasChanged","styles1","styles2","length","getInlinePropsUpdate","update","_ref3","_ref4","map","createAnimatedComponent","Component","options","prototype","isReactComponent","name","AnimatedComponent","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","_styles","_viewTag","_isFirstRender","animatedStyle","initialStyle","_component","_inlinePropsViewDescriptors","_inlinePropsMapperId","_inlineProps","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","_this$props","layout","entering","exiting","sharedTransitionTag","LAYOUT","ENTERING","EXITING","_this$props$sharedTra","sharedElementTransition","sharedTransitionStyle","SHARED_ELEMENT_TRANSITION","_createClass","componentWillUnmount","_detachNativeEvents","_detachStyles","_detachInlineProps","componentDidMount","_attachNativeEvents","_attachAnimatedStyles","_attachInlineProps","_getEventViewRef","_this$_component","getScrollableNode","node","viewTag","prop","current","setNativeProps","registerForEvents","unregisterFromEvents","OS","remove","_this$props$animatedP","animatedProps","global","_IS_FABRIC","_removeShadowNodeFromRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_this$_component2","_getViewInfo","_this$_component3","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","_hostInstance$viewCon","hostInstance","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","_this$props$animatedP2","_this2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","add","_objectSpread","initial","newInlineProps","hasChanged","_this$_getViewInfo2","sharableViewDescriptors","maybeViewRef","native","items","Set","updaterFunction","values","componentDidUpdate","_filterNonAnimatedProps","inputProps","_this3","_loop2","styleProp","processedStyle","updater","newStyle","_ref5","_ref6","flatten","animatedProp","_animatedProp$initial","_animatedProp$viewsRe","eventNames","eventName","listeners","render","platformProps","select","web","default","collapsable","displayName","forwardRef"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-reanimated/src/createAnimatedComponent.tsx"],"sourcesContent":["import React, { Component, ComponentType, MutableRefObject, Ref } from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n  runOnUI,\n  startMapper,\n  stopMapper,\n} from './reanimated2/core';\nimport {\n  isJest,\n  isChromeDebugger,\n  shouldBeUseWeb,\n} from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nimport {\n  BaseAnimationBuilder,\n  DefaultSharedTransition,\n  EntryExitAnimationFunction,\n  ILayoutAnimationBuilder,\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from './reanimated2/layoutReanimation';\nimport {\n  SharedValue,\n  StyleProps,\n  ShadowNodeWrapper,\n} from './reanimated2/commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from './reanimated2/ViewDescriptorsSet';\nimport { getShadowNodeWrapperFromRef } from './reanimated2/fabricUtils';\nimport updateProps from './reanimated2/UpdateProps';\nimport NativeReanimatedModule from './reanimated2/NativeReanimated';\nimport { isSharedValue } from './reanimated2';\n\nfunction dummyListener() {\n  // empty listener we use to assign to listener properties for which animated\n  // event is used.\n}\n\nfunction maybeBuild(\n  layoutAnimationOrBuilder:\n    | ILayoutAnimationBuilder\n    | LayoutAnimationFunction\n    | Keyframe\n): LayoutAnimationFunction | Keyframe {\n  const isAnimationBuilder = (\n    value: ILayoutAnimationBuilder | LayoutAnimationFunction | Keyframe\n  ): value is ILayoutAnimationBuilder =>\n    'build' in layoutAnimationOrBuilder &&\n    typeof layoutAnimationOrBuilder.build === 'function';\n\n  if (isAnimationBuilder(layoutAnimationOrBuilder)) {\n    return layoutAnimationOrBuilder.build();\n  } else {\n    return layoutAnimationOrBuilder;\n  }\n}\n\ntype NestedArray<T> = T | NestedArray<T>[];\nfunction flattenArray<T>(array: NestedArray<T>): T[] {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n  const resultArr: T[] = [];\n\n  const _flattenArray = (arr: NestedArray<T>[]): void => {\n    arr.forEach((item) => {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n  _flattenArray(array);\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]) {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\nconst has = <K extends string>(\n  key: K,\n  x: unknown\n): x is { [key in K]: unknown } => {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n  return false;\n};\n\nfunction isInlineStyleTransform(transform: any): boolean {\n  if (!transform) {\n    return false;\n  }\n  return transform.some((t: Record<string, any>) => hasInlineStyles(t));\n}\n\nfunction hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<InitialComponentProps>\n): Record<string, any> {\n  const inlineProps: Record<string, any> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [key, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[key] = styleValue;\n          } else if (\n            key === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[key] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nfunction inlinePropsHasChanged(styles1: StyleProps, styles2: StyleProps) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) return true;\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, any>) {\n  'worklet';\n  const update: Record<string, any> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (key === 'transform') {\n      update[key] = styleValue.map((transform: Record<string, any>) => {\n        return getInlinePropsUpdate(transform);\n      });\n    } else if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\ninterface AnimatedProps extends Record<string, unknown> {\n  viewDescriptors?: ViewDescriptorsSet;\n  viewsRef?: ViewRefSet<unknown>;\n  initial?: SharedValue<StyleProps>;\n}\n\nexport type AnimatedComponentProps<P extends Record<string, unknown>> = P & {\n  forwardedRef?: Ref<Component>;\n  style?: NestedArray<StyleProps>;\n  animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n  animatedStyle?: StyleProps;\n  layout?:\n    | BaseAnimationBuilder\n    | ILayoutAnimationBuilder\n    | typeof BaseAnimationBuilder;\n  entering?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  exiting?:\n    | BaseAnimationBuilder\n    | typeof BaseAnimationBuilder\n    | EntryExitAnimationFunction\n    | Keyframe;\n  sharedTransitionTag?: string;\n  sharedTransitionStyle?: ILayoutAnimationBuilder;\n};\n\ntype Options<P> = {\n  setNativeProps: (ref: ComponentRef, props: P) => void;\n};\n\ninterface ComponentRef extends Component {\n  setNativeProps?: (props: Record<string, unknown>) => void;\n  getScrollableNode?: () => ComponentRef;\n  getAnimatableRef?: () => ComponentRef;\n}\n\nexport interface InitialComponentProps extends Record<string, unknown> {\n  ref?: Ref<Component>;\n  collapsable?: boolean;\n}\n\nexport default function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): ComponentType<AnimatedComponentProps<InitialComponentProps>> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent extends React.Component<\n    AnimatedComponentProps<InitialComponentProps>\n  > {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    initialStyle = {};\n    _component: ComponentRef | null = null;\n    _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n    _inlinePropsMapperId: number | null = null;\n    _inlineProps: StyleProps = {};\n    static displayName: string;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._detachStyles();\n      this._detachInlineProps();\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef();\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (Platform.OS === 'web' && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (global._IS_FABRIC) {\n          const viewTag = this._viewTag;\n          runOnUI(() => {\n            _removeShadowNodeFromRegistry!(viewTag);\n          })();\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef();\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component!, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        this._component?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo() {\n      let viewTag: number | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = this._component?.getAnimatableRef\n        ? this._component.getAnimatableRef()\n        : this;\n      if (Platform.OS === 'web') {\n        viewTag = findNodeHandle(component);\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (global._IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      return { viewTag, viewName, shadowNodeWrapper, viewConfig };\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    _attachInlineProps() {\n      const newInlineProps: Record<string, any> =\n        extractSharedValuesMapFromProps(this.props);\n      const hasChanged = inlinePropsHasChanged(\n        newInlineProps,\n        this._inlineProps\n      );\n\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n          const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n            this._getViewInfo();\n\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n\n          this._inlinePropsViewDescriptors.add({\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tag: viewTag!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            name: viewName!,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            shadowNodeWrapper: shadowNodeWrapper!,\n          });\n        }\n        const sharableViewDescriptors =\n          this._inlinePropsViewDescriptors.sharableViewDescriptors;\n\n        const maybeViewRef = NativeReanimatedModule.native\n          ? undefined\n          : ({ items: new Set([this]) } as ViewRefSet<any>); // see makeViewsRefSet\n\n        const updaterFunction = () => {\n          'worklet';\n          const update = getInlinePropsUpdate(newInlineProps);\n          updateProps(sharableViewDescriptors, update, maybeViewRef);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(\n            updaterFunction,\n            Object.values(newInlineProps)\n          );\n        }\n      }\n    }\n\n    _detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._attachInlineProps();\n    }\n\n    _setComponentRef = setAndForwardRef<Component>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n        const tag = findNodeHandle(ref);\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(layout)\n            );\n          }\n          if (entering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(entering)\n            );\n          }\n          if (exiting) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.EXITING,\n              maybeBuild(exiting)\n            );\n          }\n          if (sharedTransitionTag) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? DefaultSharedTransition;\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.SHARED_ELEMENT_TRANSITION,\n              maybeBuild(sharedElementTransition),\n              sharedTransitionTag\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    _filterNonAnimatedProps(\n      inputProps: AnimatedComponentProps<InitialComponentProps>\n    ): Record<string, unknown> {\n      const props: Record<string, unknown> = {};\n      for (const key in inputProps) {\n        const value = inputProps[key];\n        if (key === 'style') {\n          const styleProp = inputProps.style;\n          const styles = flattenArray<StyleProps>(styleProp ?? []);\n          const processedStyle: StyleProps = styles.map((style) => {\n            if (style && style.viewDescriptors) {\n              // this is how we recognize styles returned by useAnimatedStyle\n              style.viewsRef.add(this);\n              if (this._isFirstRender) {\n                this.initialStyle = {\n                  ...style.initial.value,\n                  ...initialUpdaterRun<StyleProps>(style.initial.updater),\n                };\n              }\n              return this.initialStyle;\n            } else if (hasInlineStyles(style)) {\n              if (this._isFirstRender) {\n                return getInlinePropsUpdate(style);\n              }\n              const newStyle: StyleProps = {};\n              for (const [key, styleValue] of Object.entries(style)) {\n                if (\n                  !isSharedValue(styleValue) &&\n                  !(key === 'transform' && isInlineStyleTransform(styleValue))\n                ) {\n                  newStyle[key] = styleValue;\n                }\n              }\n              return newStyle;\n            } else {\n              return style;\n            }\n          });\n          props[key] = StyleSheet.flatten(processedStyle);\n        } else if (key === 'animatedProps') {\n          const animatedProp = inputProps.animatedProps as Partial<\n            AnimatedComponentProps<AnimatedProps>\n          >;\n          if (animatedProp.initial !== undefined) {\n            Object.keys(animatedProp.initial.value).forEach((key) => {\n              props[key] = animatedProp.initial?.value[key];\n              animatedProp.viewsRef?.add(this);\n            });\n          }\n        } else if (\n          has('current', value) &&\n          value.current instanceof WorkletEventHandler\n        ) {\n          if (value.current.eventNames.length > 0) {\n            value.current.eventNames.forEach((eventName) => {\n              props[eventName] = has('listeners', value.current)\n                ? (value.current.listeners as Record<string, unknown>)[\n                    eventName\n                  ]\n                : dummyListener;\n            });\n          } else {\n            props[key] = dummyListener;\n          }\n        } else if (isSharedValue(value)) {\n          if (this._isFirstRender) {\n            props[key] = (value as SharedValue<any>).value;\n          }\n        } else if (\n          key !== 'onGestureHandlerStateChange' ||\n          !isChromeDebugger()\n        ) {\n          props[key] = value;\n        }\n      }\n      return props;\n    }\n\n    render() {\n      const props = this._filterNonAnimatedProps(this.props);\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      if (this._isFirstRender) {\n        this._isFirstRender = false;\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n      return (\n        <Component {...props} ref={this._setComponentRef} {...platformProps} />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}