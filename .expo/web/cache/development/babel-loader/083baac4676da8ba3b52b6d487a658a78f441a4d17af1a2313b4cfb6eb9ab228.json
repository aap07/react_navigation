{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/nodes/toJS.d.ts"],"sourcesContent":["import type { Document } from '../doc/Document.js';\nimport type { Node } from './Node.js';\nexport interface AnchorData {\n    aliasCount: number;\n    count: number;\n    res: unknown;\n}\nexport interface ToJSContext {\n    anchors: Map<Node, AnchorData>;\n    doc: Document<Node, boolean>;\n    keep: boolean;\n    mapAsMap: boolean;\n    mapKeyWarned: boolean;\n    maxAliasCount: number;\n    onCreate?: (res: unknown) => void;\n}\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nexport declare function toJS(value: any, arg: string | null, ctx?: ToJSContext): any;\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}