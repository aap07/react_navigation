{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStaticRenderFunctionsContentAsync = getStaticRenderFunctionsContentAsync;\nexports.createMetroEndpointAsync = createMetroEndpointAsync;\nexports.requireFileContentsWithMetro = requireFileContentsWithMetro;\nexports.requireWithMetro = requireWithMetro;\nexports.getStaticRenderFunctions = getStaticRenderFunctions;\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _nodeFetch = _interopRequireDefault(require(\"node-fetch\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _requireFromString = _interopRequireDefault(require(\"require-from-string\"));\nvar _resolveFrom = _interopRequireDefault(require(\"resolve-from\"));\nvar _ansi = require(\"../../utils/ansi\");\nvar _delay = require(\"../../utils/delay\");\nvar _errors = require(\"../../utils/errors\");\nvar _fn = require(\"../../utils/fn\");\nvar _profile = require(\"../../utils/profile\");\nvar _metroErrorInterface = require(\"./metro/metroErrorInterface\");\nvar _manifestMiddleware = require(\"./middleware/ManifestMiddleware\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:start:server:node-renderer\");\nfunction wrapBundle(str) {\n  return str.replace(/^(__r\\(.*\\);)$/gm, \"module.exports = $1\");\n}\nfunction stripProcess(str) {\n  return str.replace(/process=this\\.process\\|\\|{},/m, \"\");\n}\nvar getRenderModuleId = function getRenderModuleId(projectRoot) {\n  var moduleId = _resolveFrom.default.silent(projectRoot, \"expo-router/node/render.js\");\n  if (!moduleId) {\n    throw new Error(`A version of expo-router with Node.js support is not installed in the project.`);\n  }\n  return moduleId;\n};\nvar moveStaticRenderFunction = (0, _fn).memoize(function () {\n  var _ref = _asyncToGenerator(function* (projectRoot, requiredModuleId) {\n    var tempDir = _path.default.join(projectRoot, \".expo/static\");\n    yield _fs.default.promises.mkdir(tempDir, {\n      recursive: true\n    });\n    var moduleId = _path.default.join(tempDir, \"render.js\");\n    yield _fs.default.promises.writeFile(moduleId, yield _fs.default.promises.readFile(requiredModuleId, \"utf8\"));\n    yield (0, _delay).delayAsync(50);\n    return moduleId;\n  });\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\nfunction getStaticRenderFunctionsContentAsync(_x3, _x4) {\n  return _getStaticRenderFunctionsContentAsync.apply(this, arguments);\n}\nfunction _getStaticRenderFunctionsContentAsync() {\n  _getStaticRenderFunctionsContentAsync = _asyncToGenerator(function* (projectRoot, devServerUrl) {\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref2$dev = _ref2.dev,\n      dev = _ref2$dev === void 0 ? false : _ref2$dev,\n      _ref2$minify = _ref2.minify,\n      minify = _ref2$minify === void 0 ? false : _ref2$minify,\n      environment = _ref2.environment;\n    var root = (0, _manifestMiddleware).getMetroServerRoot(projectRoot);\n    var requiredModuleId = getRenderModuleId(root);\n    var moduleId = requiredModuleId;\n    if (_path.default.relative(root, moduleId).startsWith(\"..\")) {\n      moduleId = yield moveStaticRenderFunction(projectRoot, requiredModuleId);\n    }\n    return requireFileContentsWithMetro(root, devServerUrl, moduleId, {\n      dev: dev,\n      minify: minify,\n      environment: environment\n    });\n  });\n  return _getStaticRenderFunctionsContentAsync.apply(this, arguments);\n}\nfunction ensureFileInRootDirectory(_x5, _x6) {\n  return _ensureFileInRootDirectory.apply(this, arguments);\n}\nfunction _ensureFileInRootDirectory() {\n  _ensureFileInRootDirectory = _asyncToGenerator(function* (projectRoot, otherFile) {\n    if (!_path.default.relative(projectRoot, otherFile).startsWith(\"../\")) {\n      return otherFile;\n    }\n    var tempDir = _path.default.join(projectRoot, \".expo/static-tmp\");\n    yield _fs.default.promises.mkdir(tempDir, {\n      recursive: true\n    });\n    var moduleId = _path.default.join(tempDir, _path.default.basename(otherFile));\n    yield _fs.default.promises.writeFile(moduleId, yield _fs.default.promises.readFile(otherFile, \"utf8\"));\n    yield (0, _delay).delayAsync(50);\n    return moduleId;\n  });\n  return _ensureFileInRootDirectory.apply(this, arguments);\n}\nfunction createMetroEndpointAsync(_x7, _x8, _x9) {\n  return _createMetroEndpointAsync.apply(this, arguments);\n}\nfunction _createMetroEndpointAsync() {\n  _createMetroEndpointAsync = _asyncToGenerator(function* (projectRoot, devServerUrl, absoluteFilePath) {\n    var _ref3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref3$dev = _ref3.dev,\n      dev = _ref3$dev === void 0 ? false : _ref3$dev,\n      _ref3$platform = _ref3.platform,\n      platform = _ref3$platform === void 0 ? \"web\" : _ref3$platform,\n      _ref3$minify = _ref3.minify,\n      minify = _ref3$minify === void 0 ? false : _ref3$minify,\n      environment = _ref3.environment;\n    var root = (0, _manifestMiddleware).getMetroServerRoot(projectRoot);\n    var safeOtherFile = yield ensureFileInRootDirectory(projectRoot, absoluteFilePath);\n    var serverPath = _path.default.relative(root, safeOtherFile).replace(/\\.[jt]sx?$/, \".bundle\");\n    debug(\"fetching from Metro:\", root, serverPath);\n    var url = `${devServerUrl}/${serverPath}?platform=${platform}&dev=${dev}&minify=${minify}`;\n    if (environment) {\n      url += `&resolver.environment=${environment}&transform.environment=${environment}`;\n    }\n    return url;\n  });\n  return _createMetroEndpointAsync.apply(this, arguments);\n}\nvar MetroNodeError = function (_Error) {\n  _inherits(MetroNodeError, _Error);\n  var _super = _createSuper(MetroNodeError);\n  function MetroNodeError(message, rawObject) {\n    var _this;\n    _classCallCheck(this, MetroNodeError);\n    _this = _super.call(this, message);\n    _this.rawObject = rawObject;\n    return _this;\n  }\n  return _createClass(MetroNodeError);\n}(_wrapNativeSuper(Error));\nexports.MetroNodeError = MetroNodeError;\nfunction requireFileContentsWithMetro(_x10, _x11, _x12) {\n  return _requireFileContentsWithMetro.apply(this, arguments);\n}\nfunction _requireFileContentsWithMetro() {\n  _requireFileContentsWithMetro = _asyncToGenerator(function* (projectRoot, devServerUrl, absoluteFilePath) {\n    var props = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var url = yield createMetroEndpointAsync(projectRoot, devServerUrl, absoluteFilePath, props);\n    var res = yield (0, _nodeFetch).default(url);\n    if (res.status === 500) {\n      var text = yield res.text();\n      if (text.startsWith('{\"originModulePath\"') || text.startsWith('{\"type\":\"TransformError\"')) {\n        var errorObject = JSON.parse(text);\n        var ref;\n        throw new MetroNodeError((ref = (0, _ansi).stripAnsi(errorObject.message)) != null ? ref : errorObject.message, errorObject);\n      }\n      throw new Error(`[${res.status}]: ${res.statusText}\\n${text}`);\n    }\n    if (!res.ok) {\n      throw new Error(`Error fetching bundle for static rendering: ${res.status} ${res.statusText}`);\n    }\n    var content = yield res.text();\n    var bun = wrapBundle(content);\n    if (props.environment === \"node\") {\n      bun = stripProcess(bun);\n    }\n    return bun;\n  });\n  return _requireFileContentsWithMetro.apply(this, arguments);\n}\nfunction requireWithMetro(_x13, _x14, _x15) {\n  return _requireWithMetro.apply(this, arguments);\n}\nfunction _requireWithMetro() {\n  _requireWithMetro = _asyncToGenerator(function* (projectRoot, devServerUrl, absoluteFilePath) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var content = yield requireFileContentsWithMetro(projectRoot, devServerUrl, absoluteFilePath, options);\n    return evalMetro(content);\n  });\n  return _requireWithMetro.apply(this, arguments);\n}\nfunction getStaticRenderFunctions(_x16, _x17) {\n  return _getStaticRenderFunctions.apply(this, arguments);\n}\nfunction _getStaticRenderFunctions() {\n  _getStaticRenderFunctions = _asyncToGenerator(function* (projectRoot, devServerUrl) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var scriptContents = yield getStaticRenderFunctionsContentAsync(projectRoot, devServerUrl, options);\n    var contents = evalMetro(scriptContents);\n    return Object.keys(contents).reduce(function (acc, key) {\n      var fn = contents[key];\n      if (typeof fn !== \"function\") {\n        return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, fn));\n      }\n      acc[key] = _asyncToGenerator(function* () {\n        try {\n          for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n            props[_key] = arguments[_key];\n          }\n          return yield fn.apply(this, props);\n        } catch (error) {\n          yield (0, _metroErrorInterface).logMetroError(projectRoot, {\n            error: error\n          });\n          throw new _errors.SilentError(error);\n        }\n      });\n      return acc;\n    }, {});\n  });\n  return _getStaticRenderFunctions.apply(this, arguments);\n}\nfunction evalMetro(src) {\n  return (0, _profile).profile(_requireFromString.default, \"eval-metro-bundle\")(src);\n}","map":{"version":3,"names":["_defineProperty","require","_createClass","_classCallCheck","_inherits","_possibleConstructorReturn","_getPrototypeOf","_wrapNativeSuper","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","getStaticRenderFunctionsContentAsync","createMetroEndpointAsync","requireFileContentsWithMetro","requireWithMetro","getStaticRenderFunctions","_fs","_interopRequireDefault","_nodeFetch","_path","_requireFromString","_resolveFrom","_ansi","_delay","_errors","_fn","_profile","_metroErrorInterface","_manifestMiddleware","debug","wrapBundle","str","replace","stripProcess","getRenderModuleId","projectRoot","moduleId","default","silent","Error","moveStaticRenderFunction","memoize","_ref","requiredModuleId","tempDir","join","promises","mkdir","recursive","writeFile","readFile","delayAsync","_x","_x2","_x3","_x4","_getStaticRenderFunctionsContentAsync","devServerUrl","_ref2","undefined","_ref2$dev","dev","_ref2$minify","minify","environment","root","getMetroServerRoot","relative","startsWith","ensureFileInRootDirectory","_x5","_x6","_ensureFileInRootDirectory","otherFile","basename","_x7","_x8","_x9","_createMetroEndpointAsync","absoluteFilePath","_ref3","_ref3$dev","_ref3$platform","platform","_ref3$minify","safeOtherFile","serverPath","url","MetroNodeError","_Error","_super","message","rawObject","_this","_x10","_x11","_x12","_requireFileContentsWithMetro","props","res","status","text","errorObject","JSON","parse","ref","stripAnsi","statusText","ok","content","bun","_x13","_x14","_x15","_requireWithMetro","options","evalMetro","_x16","_x17","_getStaticRenderFunctions","scriptContents","contents","reduce","acc","key","fn","_len","Array","_key","error","logMetroError","SilentError","src","profile"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\getStaticRenderFunctions.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport fetch from 'node-fetch';\nimport path from 'path';\nimport requireString from 'require-from-string';\nimport resolveFrom from 'resolve-from';\n\nimport { stripAnsi } from '../../utils/ansi';\nimport { delayAsync } from '../../utils/delay';\nimport { SilentError } from '../../utils/errors';\nimport { memoize } from '../../utils/fn';\nimport { profile } from '../../utils/profile';\nimport { logMetroError } from './metro/metroErrorInterface';\nimport { getMetroServerRoot } from './middleware/ManifestMiddleware';\n\nconst debug = require('debug')('expo:start:server:node-renderer') as typeof console.log;\n\nfunction wrapBundle(str: string) {\n  // Skip the metro runtime so debugging is a bit easier.\n  // Replace the __r() call with an export statement.\n  // Use gm to apply to the last require line. This is needed when the bundle has side-effects.\n  return str.replace(/^(__r\\(.*\\);)$/gm, 'module.exports = $1');\n}\n\nfunction stripProcess(str: string) {\n  // TODO: Remove from the metro prelude\n  return str.replace(/process=this\\.process\\|\\|{},/m, '');\n}\n\n// TODO(EvanBacon): Group all the code together and version.\nconst getRenderModuleId = (projectRoot: string): string => {\n  const moduleId = resolveFrom.silent(projectRoot, 'expo-router/node/render.js');\n  if (!moduleId) {\n    throw new Error(\n      `A version of expo-router with Node.js support is not installed in the project.`\n    );\n  }\n\n  return moduleId;\n};\n\ntype StaticRenderOptions = {\n  // Ensure the style format is `css-xxxx` (prod) instead of `css-view-xxxx` (dev)\n  dev?: boolean;\n  minify?: boolean;\n  platform?: string;\n  environment?: 'node';\n};\n\nconst moveStaticRenderFunction = memoize(async (projectRoot: string, requiredModuleId: string) => {\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, 'render.js');\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(requiredModuleId, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n});\n\n/** @returns the js file contents required to generate the static generation function. */\nexport async function getStaticRenderFunctionsContentAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  { dev = false, minify = false, environment }: StaticRenderOptions = {}\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const requiredModuleId = getRenderModuleId(root);\n  let moduleId = requiredModuleId;\n\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (path.relative(root, moduleId).startsWith('..')) {\n    moduleId = await moveStaticRenderFunction(projectRoot, requiredModuleId);\n  }\n\n  return requireFileContentsWithMetro(root, devServerUrl, moduleId, { dev, minify, environment });\n}\n\nasync function ensureFileInRootDirectory(projectRoot: string, otherFile: string) {\n  // Cannot be accessed using Metro's server API, we need to move the file\n  // into the project root and try again.\n  if (!path.relative(projectRoot, otherFile).startsWith('../')) {\n    return otherFile;\n  }\n\n  // Copy the file into the project to ensure it works in monorepos.\n  // This means the file cannot have any relative imports.\n  const tempDir = path.join(projectRoot, '.expo/static-tmp');\n  await fs.promises.mkdir(tempDir, { recursive: true });\n  const moduleId = path.join(tempDir, path.basename(otherFile));\n  await fs.promises.writeFile(moduleId, await fs.promises.readFile(otherFile, 'utf8'));\n  // Sleep to give watchman time to register the file.\n  await delayAsync(50);\n  return moduleId;\n}\n\nexport async function createMetroEndpointAsync(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  { dev = false, platform = 'web', minify = false, environment }: StaticRenderOptions = {}\n): Promise<string> {\n  const root = getMetroServerRoot(projectRoot);\n  const safeOtherFile = await ensureFileInRootDirectory(projectRoot, absoluteFilePath);\n  const serverPath = path.relative(root, safeOtherFile).replace(/\\.[jt]sx?$/, '.bundle');\n  debug('fetching from Metro:', root, serverPath);\n\n  let url = `${devServerUrl}/${serverPath}?platform=${platform}&dev=${dev}&minify=${minify}`;\n\n  if (environment) {\n    url += `&resolver.environment=${environment}&transform.environment=${environment}`;\n  }\n  return url;\n}\n\nexport class MetroNodeError extends Error {\n  constructor(message: string, public rawObject: any) {\n    super(message);\n  }\n}\n\nexport async function requireFileContentsWithMetro(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  props: StaticRenderOptions = {}\n): Promise<string> {\n  const url = await createMetroEndpointAsync(projectRoot, devServerUrl, absoluteFilePath, props);\n\n  const res = await fetch(url);\n\n  // TODO: Improve error handling\n  if (res.status === 500) {\n    const text = await res.text();\n    if (text.startsWith('{\"originModulePath\"') || text.startsWith('{\"type\":\"TransformError\"')) {\n      const errorObject = JSON.parse(text);\n\n      throw new MetroNodeError(stripAnsi(errorObject.message) ?? errorObject.message, errorObject);\n    }\n    throw new Error(`[${res.status}]: ${res.statusText}\\n${text}`);\n  }\n\n  if (!res.ok) {\n    throw new Error(`Error fetching bundle for static rendering: ${res.status} ${res.statusText}`);\n  }\n\n  const content = await res.text();\n\n  let bun = wrapBundle(content);\n\n  // This exposes the entire environment to the bundle.\n  if (props.environment === 'node') {\n    bun = stripProcess(bun);\n  }\n\n  return bun;\n}\nexport async function requireWithMetro<T>(\n  projectRoot: string,\n  devServerUrl: string,\n  absoluteFilePath: string,\n  options: StaticRenderOptions = {}\n): Promise<T> {\n  const content = await requireFileContentsWithMetro(\n    projectRoot,\n    devServerUrl,\n    absoluteFilePath,\n    options\n  );\n  return evalMetro(content);\n}\n\nexport async function getStaticRenderFunctions(\n  projectRoot: string,\n  devServerUrl: string,\n  options: StaticRenderOptions = {}\n): Promise<Record<string, (...args: any[]) => Promise<any>>> {\n  const scriptContents = await getStaticRenderFunctionsContentAsync(\n    projectRoot,\n    devServerUrl,\n    options\n  );\n\n  const contents = evalMetro(scriptContents);\n\n  // wrap each function with a try/catch that uses Metro's error formatter\n  return Object.keys(contents).reduce((acc, key) => {\n    const fn = contents[key];\n    if (typeof fn !== 'function') {\n      return { ...acc, [key]: fn };\n    }\n\n    acc[key] = async function (...props: any[]) {\n      try {\n        return await fn.apply(this, props);\n      } catch (error: any) {\n        await logMetroError(projectRoot, { error });\n        throw new SilentError(error);\n      }\n    };\n    return acc;\n  }, {} as any);\n}\n\nfunction evalMetro(src: string) {\n  return profile(requireString, 'eval-metro-bundle')(src);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}