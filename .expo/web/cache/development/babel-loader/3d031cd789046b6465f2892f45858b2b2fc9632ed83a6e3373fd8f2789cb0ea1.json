{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findMatchingBracketPosition = findMatchingBracketPosition;\nvar LEFT_BRACKETS = ['(', '{'];\nvar RIGHT_BRACKETS = [')', '}'];\nfunction findMatchingBracketPosition(contents, bracket) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var firstBracketPos = contents.indexOf(bracket, offset);\n  if (firstBracketPos < 0) {\n    return -1;\n  }\n  var stackCounter = 0;\n  var matchingBracket = getMatchingBracket(bracket);\n  if (isLeftBracket(bracket)) {\n    var contentsLength = contents.length;\n    for (var i = firstBracketPos + 1; i < contentsLength; ++i) {\n      var c = contents[i];\n      if (c === bracket) {\n        stackCounter += 1;\n      } else if (c === matchingBracket) {\n        if (stackCounter === 0) {\n          return i;\n        }\n        stackCounter -= 1;\n      }\n    }\n  } else {\n    for (var _i = firstBracketPos - 1; _i >= 0; --_i) {\n      var _c = contents[_i];\n      if (_c === bracket) {\n        stackCounter += 1;\n      } else if (_c === matchingBracket) {\n        if (stackCounter === 0) {\n          return _i;\n        }\n        stackCounter -= 1;\n      }\n    }\n  }\n  return -1;\n}\nfunction isLeftBracket(bracket) {\n  var leftBracketList = LEFT_BRACKETS;\n  return leftBracketList.includes(bracket);\n}\nfunction getMatchingBracket(bracket) {\n  switch (bracket) {\n    case '(':\n      return ')';\n    case ')':\n      return '(';\n    case '{':\n      return '}';\n    case '}':\n      return '{';\n    default:\n      throw new Error(`Unsupported bracket - ${bracket}`);\n  }\n}","map":{"version":3,"names":["LEFT_BRACKETS","RIGHT_BRACKETS","findMatchingBracketPosition","contents","bracket","offset","arguments","length","undefined","firstBracketPos","indexOf","stackCounter","matchingBracket","getMatchingBracket","isLeftBracket","contentsLength","i","c","leftBracketList","includes","Error"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\utils\\matchBrackets.ts"],"sourcesContent":["const LEFT_BRACKETS = ['(', '{'] as const;\nconst RIGHT_BRACKETS = [')', '}'] as const;\n\ntype LeftBracket = typeof LEFT_BRACKETS[number];\ntype RightBracket = typeof RIGHT_BRACKETS[number];\ntype Bracket = LeftBracket | RightBracket;\n\nexport function findMatchingBracketPosition(\n  contents: string,\n  bracket: Bracket,\n  offset: number = 0\n): number {\n  // search first occurrence of `bracket`\n  const firstBracketPos = contents.indexOf(bracket, offset);\n  if (firstBracketPos < 0) {\n    return -1;\n  }\n\n  let stackCounter = 0;\n  const matchingBracket = getMatchingBracket(bracket);\n\n  if (isLeftBracket(bracket)) {\n    const contentsLength = contents.length;\n    // search forward\n    for (let i = firstBracketPos + 1; i < contentsLength; ++i) {\n      const c = contents[i];\n      if (c === bracket) {\n        stackCounter += 1;\n      } else if (c === matchingBracket) {\n        if (stackCounter === 0) {\n          return i;\n        }\n        stackCounter -= 1;\n      }\n    }\n  } else {\n    // search backward\n    for (let i = firstBracketPos - 1; i >= 0; --i) {\n      const c = contents[i];\n      if (c === bracket) {\n        stackCounter += 1;\n      } else if (c === matchingBracket) {\n        if (stackCounter === 0) {\n          return i;\n        }\n        stackCounter -= 1;\n      }\n    }\n  }\n\n  return -1;\n}\n\nfunction isLeftBracket(bracket: Bracket): boolean {\n  const leftBracketList: readonly Bracket[] = LEFT_BRACKETS;\n  return leftBracketList.includes(bracket);\n}\n\nfunction getMatchingBracket(bracket: Bracket): Bracket {\n  switch (bracket) {\n    case '(':\n      return ')';\n    case ')':\n      return '(';\n    case '{':\n      return '}';\n    case '}':\n      return '{';\n    default:\n      throw new Error(`Unsupported bracket - ${bracket}`);\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAMA,aAAa,GAAG,CAAC,GAAG,EAAE,GAAG,CAAU;AACzC,IAAMC,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,CAAU;AAMnC,SAASC,2BAA2BA,CACzCC,QAAgB,EAChBC,OAAgB,EAER;EAAA,IADRC,MAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAGlB,IAAMG,eAAe,GAAGN,QAAQ,CAACO,OAAO,CAACN,OAAO,EAAEC,MAAM,CAAC;EACzD,IAAII,eAAe,GAAG,CAAC,EAAE;IACvB,OAAO,CAAC,CAAC;EACX;EAEA,IAAIE,YAAY,GAAG,CAAC;EACpB,IAAMC,eAAe,GAAGC,kBAAkB,CAACT,OAAO,CAAC;EAEnD,IAAIU,aAAa,CAACV,OAAO,CAAC,EAAE;IAC1B,IAAMW,cAAc,GAAGZ,QAAQ,CAACI,MAAM;IAEtC,KAAK,IAAIS,CAAC,GAAGP,eAAe,GAAG,CAAC,EAAEO,CAAC,GAAGD,cAAc,EAAE,EAAEC,CAAC,EAAE;MACzD,IAAMC,CAAC,GAAGd,QAAQ,CAACa,CAAC,CAAC;MACrB,IAAIC,CAAC,KAAKb,OAAO,EAAE;QACjBO,YAAY,IAAI,CAAC;MACnB,CAAC,MAAM,IAAIM,CAAC,KAAKL,eAAe,EAAE;QAChC,IAAID,YAAY,KAAK,CAAC,EAAE;UACtB,OAAOK,CAAC;QACV;QACAL,YAAY,IAAI,CAAC;MACnB;IACF;EACF,CAAC,MAAM;IAEL,KAAK,IAAIK,EAAC,GAAGP,eAAe,GAAG,CAAC,EAAEO,EAAC,IAAI,CAAC,EAAE,EAAEA,EAAC,EAAE;MAC7C,IAAMC,EAAC,GAAGd,QAAQ,CAACa,EAAC,CAAC;MACrB,IAAIC,EAAC,KAAKb,OAAO,EAAE;QACjBO,YAAY,IAAI,CAAC;MACnB,CAAC,MAAM,IAAIM,EAAC,KAAKL,eAAe,EAAE;QAChC,IAAID,YAAY,KAAK,CAAC,EAAE;UACtB,OAAOK,EAAC;QACV;QACAL,YAAY,IAAI,CAAC;MACnB;IACF;EACF;EAEA,OAAO,CAAC,CAAC;AACX;AAEA,SAASG,aAAaA,CAACV,OAAgB,EAAW;EAChD,IAAMc,eAAmC,GAAGlB,aAAa;EACzD,OAAOkB,eAAe,CAACC,QAAQ,CAACf,OAAO,CAAC;AAC1C;AAEA,SAASS,kBAAkBA,CAACT,OAAgB,EAAW;EACrD,QAAQA,OAAO;IACb,KAAK,GAAG;MACN,OAAO,GAAG;IACZ,KAAK,GAAG;MACN,OAAO,GAAG;IACZ,KAAK,GAAG;MACN,OAAO,GAAG;IACZ,KAAK,GAAG;MACN,OAAO,GAAG;IACZ;MACE,MAAM,IAAIgB,KAAK,CAAE,yBAAwBhB,OAAQ,EAAC,CAAC;EAAC;AAE1D"},"metadata":{},"sourceType":"script","externalDependencies":[]}