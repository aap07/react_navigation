{"ast":null,"code":"import { BasePackageManager } from \"./BasePackageManager\";","map":{"version":3,"names":["BasePackageManager"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/package-manager/build/node/YarnPackageManager.d.ts"],"sourcesContent":["import { BasePackageManager } from './BasePackageManager';\nexport declare class YarnPackageManager extends BasePackageManager {\n    readonly name = \"yarn\";\n    readonly bin = \"yarnpkg\";\n    readonly lockFile = \"yarn.lock\";\n    /** Check if Yarn is running in offline mode, and add the `--offline` flag */\n    private withOfflineFlagAsync;\n    workspaceRoot(): YarnPackageManager | null;\n    installAsync(flags?: string[]): import(\"../utils/spawn\").PendingSpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n    addAsync(namesOrFlags?: string[]): import(\"../utils/spawn\").PendingSpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n    addDevAsync(namesOrFlags?: string[]): import(\"../utils/spawn\").PendingSpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n    addGlobalAsync(namesOrFlags?: string[]): import(\"../utils/spawn\").PendingSpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n    removeAsync(namesOrFlags: string[]): import(\"@expo/spawn-async\").SpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n    removeDevAsync(namesOrFlags: string[]): import(\"@expo/spawn-async\").SpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n    removeGlobalAsync(namesOrFlags: string[]): import(\"@expo/spawn-async\").SpawnPromise<import(\"@expo/spawn-async\").SpawnResult>;\n}\n"],"mappings":"AAAA,SAASA,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}