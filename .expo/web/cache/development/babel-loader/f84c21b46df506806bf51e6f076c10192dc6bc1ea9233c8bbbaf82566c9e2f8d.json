{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expoRegister = void 0;\nvar _args = require(\"../utils/args\");\nvar _errors = require(\"../utils/errors\");\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar expoRegister = function () {\n  var _ref = _asyncToGenerator(function* (argv) {\n    var args = (0, _args).assertArgs({\n      \"--help\": Boolean,\n      \"-h\": \"--help\"\n    }, argv);\n    if (args[\"--help\"]) {\n      (0, _args).printHelp(`Sign up for a new Expo account`, `npx expo register`, `-h, --help    Usage info`);\n    }\n    var _yield$Promise$resolv = yield Promise.resolve().then(function () {\n        return _interopRequireWildcard(require(\"./registerAsync\"));\n      }),\n      registerAsync = _yield$Promise$resolv.registerAsync;\n    return registerAsync().catch(_errors.logCmdError);\n  });\n  return function expoRegister(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.expoRegister = expoRegister;","map":{"version":3,"names":["_args","require","_errors","expoRegister","_ref","_asyncToGenerator","argv","args","assertArgs","Boolean","printHelp","_yield$Promise$resolv","Promise","resolve","then","registerAsync","catch","logCmdError","_x","apply","arguments"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\register\\index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { Command } from '../../bin/cli';\nimport { assertArgs, printHelp } from '../utils/args';\nimport { logCmdError } from '../utils/errors';\n\nexport const expoRegister: Command = async (argv) => {\n  const args = assertArgs(\n    {\n      // Types\n      '--help': Boolean,\n      // Aliases\n      '-h': '--help',\n    },\n    argv\n  );\n\n  if (args['--help']) {\n    printHelp(\n      `Sign up for a new Expo account`,\n      `npx expo register`,\n      // Options\n      `-h, --help    Usage info`\n    );\n  }\n\n  const { registerAsync } = await import('./registerAsync');\n  return registerAsync().catch(logCmdError);\n};\n"],"mappings":"AAAA;;;;;;;;AAEsC,IAAAA,KAAe,GAAAC,OAAA;AACzB,IAAAC,OAAiB,GAAAD,OAAA;;;;;;;;;;;;;;;;;;;;;;AAEtC,IAAME,YAAY;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAY,WAAOC,IAAI,EAAK;IACnD,IAAMC,IAAI,GAAG,IAAAP,KAAU,EAQtBQ,UARsB,CACrB;MAEE,QAAQ,EAAEC,OAAO;MAEjB,IAAI,EAAE;KACP,EACDH,IAAI,CACL;IAED,IAAIC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAClB,IAAAP,KAAS,EAKRU,SALQ,CACN,gCAA+B,EAC/B,mBAAkB,EAElB,0BAAyB,CAC3B;;IAGH,IAAAC,qBAAA,SAAgCC,OAAA,CAAAC,OAAA,GAAAC,IAAA;gEAAwB;QAAC;MAAjDC,aAAa,GAAAJ,qBAAA,CAAbI,aAAa;IACrB,OAAOA,aAAa,EAAE,CAACC,KAAK,CAACd,OAAW,CAAAe,WAAA,CAAC;GAC1C;EAAA,gBAtBYd,YAAYA,CAAAe,EAAA;IAAA,OAAAd,IAAA,CAAAe,KAAA,OAAAC,SAAA;EAAA;AAAA,GAsBxB;QAtBYjB,YAAY,GAAZA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}