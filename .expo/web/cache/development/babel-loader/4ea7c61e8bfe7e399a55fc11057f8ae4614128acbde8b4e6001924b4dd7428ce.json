{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateBundleId = validateBundleId;\nexports.validatePackage = validatePackage;\nexports.assertValidBundleId = assertValidBundleId;\nexports.assertValidPackage = assertValidPackage;\nexports.getBundleIdWarningInternalAsync = getBundleIdWarningInternalAsync;\nexports.getPackageNameWarningInternalAsync = getPackageNameWarningInternalAsync;\nexports.getPackageNameWarningAsync = exports.getBundleIdWarningAsync = void 0;\nvar _assert = _interopRequireDefault(require(\"assert\"));\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _client = require(\"../api/rest/client\");\nvar _log = require(\"../log\");\nvar _env = require(\"./env\");\nvar _fn = require(\"./fn\");\nvar _link = require(\"./link\");\nvar _url = require(\"./url\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:utils:validateApplicationId\");\nvar IOS_BUNDLE_ID_REGEX = /^[a-zA-Z0-9-.]+$/;\nvar ANDROID_PACKAGE_REGEX = /^[a-zA-Z][a-zA-Z0-9_]*(\\.[a-zA-Z][a-zA-Z0-9_]*)+$/;\nfunction validateBundleId(value) {\n  return IOS_BUNDLE_ID_REGEX.test(value);\n}\nfunction validatePackage(value) {\n  return ANDROID_PACKAGE_REGEX.test(value);\n}\nfunction assertValidBundleId(value) {\n  _assert.default.match(value, IOS_BUNDLE_ID_REGEX, `The ios.bundleIdentifier defined in your Expo config is not formatted properly. Only alphanumeric characters, '.', '-', and '_' are allowed, and each '.' must be followed by a letter.`);\n}\nfunction assertValidPackage(value) {\n  _assert.default.match(value, ANDROID_PACKAGE_REGEX, `Invalid format of Android package name. Only alphanumeric characters, '.' and '_' are allowed, and each '.' must be followed by a letter.`);\n}\nfunction getBundleIdWarningInternalAsync(_x) {\n  return _getBundleIdWarningInternalAsync.apply(this, arguments);\n}\nfunction _getBundleIdWarningInternalAsync() {\n  _getBundleIdWarningInternalAsync = _asyncToGenerator(function* (bundleId) {\n    if (_env.env.EXPO_OFFLINE) {\n      _log.Log.warn(\"Skipping Apple bundle identifier reservation validation in offline-mode.\");\n      return null;\n    }\n    if (!(yield (0, _url).isUrlAvailableAsync(\"itunes.apple.com\"))) {\n      debug(`Couldn't connect to iTunes Store to check bundle ID ${bundleId}. itunes.apple.com may be down.`);\n      return null;\n    }\n    var url = `http://itunes.apple.com/lookup?bundleId=${bundleId}`;\n    try {\n      debug(`Checking iOS bundle ID '${bundleId}' at: ${url}`);\n      var response = yield (0, _client).fetchAsync(url);\n      var json = yield response.json();\n      if (json.resultCount > 0) {\n        var firstApp = json.results[0];\n        return formatInUseWarning(firstApp.trackName, firstApp.sellerName, bundleId);\n      }\n    } catch (error) {\n      debug(`Error checking bundle ID ${bundleId}: ${error.message}`);\n    }\n    return null;\n  });\n  return _getBundleIdWarningInternalAsync.apply(this, arguments);\n}\nvar getBundleIdWarningAsync = (0, _fn).memoize(getBundleIdWarningInternalAsync);\nexports.getBundleIdWarningAsync = getBundleIdWarningAsync;\nfunction getPackageNameWarningInternalAsync(_x2) {\n  return _getPackageNameWarningInternalAsync.apply(this, arguments);\n}\nfunction _getPackageNameWarningInternalAsync() {\n  _getPackageNameWarningInternalAsync = _asyncToGenerator(function* (packageName) {\n    if (_env.env.EXPO_OFFLINE) {\n      _log.Log.warn(\"Skipping Android package name reservation validation in offline-mode.\");\n      return null;\n    }\n    if (!(yield (0, _url).isUrlAvailableAsync(\"play.google.com\"))) {\n      debug(`Couldn't connect to Play Store to check package name ${packageName}. play.google.com may be down.`);\n      return null;\n    }\n    var url = `https://play.google.com/store/apps/details?id=${packageName}`;\n    try {\n      debug(`Checking Android package name '${packageName}' at: ${url}`);\n      var response = yield (0, _client).fetchAsync(url);\n      if (response.status === 200) {\n        return `⚠️  The package ${_chalk.default.bold(packageName)} is already in use. ${_chalk.default.dim((0, _link).learnMore(url))}`;\n      }\n    } catch (error) {\n      debug(`Error checking package name ${packageName}: ${error.message}`);\n    }\n    return null;\n  });\n  return _getPackageNameWarningInternalAsync.apply(this, arguments);\n}\nfunction formatInUseWarning(appName, author, id) {\n  return `⚠️  The app ${_chalk.default.bold(appName)} by ${_chalk.default.italic(author)} is already using ${_chalk.default.bold(id)}`;\n}\nvar getPackageNameWarningAsync = (0, _fn).memoize(getPackageNameWarningInternalAsync);\nexports.getPackageNameWarningAsync = getPackageNameWarningAsync;","map":{"version":3,"names":["_asyncToGenerator","require","validateBundleId","validatePackage","assertValidBundleId","assertValidPackage","getBundleIdWarningInternalAsync","getPackageNameWarningInternalAsync","_assert","_interopRequireDefault","_chalk","_client","_log","_env","_fn","_link","_url","debug","IOS_BUNDLE_ID_REGEX","ANDROID_PACKAGE_REGEX","value","test","default","match","_x","_getBundleIdWarningInternalAsync","apply","arguments","bundleId","env","EXPO_OFFLINE","Log","warn","isUrlAvailableAsync","url","response","fetchAsync","json","resultCount","firstApp","results","formatInUseWarning","trackName","sellerName","error","message","getBundleIdWarningAsync","memoize","_x2","_getPackageNameWarningInternalAsync","packageName","status","bold","dim","learnMore","appName","author","id","italic","getPackageNameWarningAsync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\validateApplicationId.ts"],"sourcesContent":["import assert from 'assert';\nimport chalk from 'chalk';\n\nimport { fetchAsync } from '../api/rest/client';\nimport { Log } from '../log';\nimport { env } from './env';\nimport { memoize } from './fn';\nimport { learnMore } from './link';\nimport { isUrlAvailableAsync } from './url';\n\nconst debug = require('debug')('expo:utils:validateApplicationId') as typeof console.log;\n\nconst IOS_BUNDLE_ID_REGEX = /^[a-zA-Z0-9-.]+$/;\nconst ANDROID_PACKAGE_REGEX = /^[a-zA-Z][a-zA-Z0-9_]*(\\.[a-zA-Z][a-zA-Z0-9_]*)+$/;\n\n/** Validate an iOS bundle identifier. */\nexport function validateBundleId(value: string): boolean {\n  return IOS_BUNDLE_ID_REGEX.test(value);\n}\n\n/** Validate an Android package name. */\nexport function validatePackage(value: string): boolean {\n  return ANDROID_PACKAGE_REGEX.test(value);\n}\n\nexport function assertValidBundleId(value: string) {\n  assert.match(\n    value,\n    IOS_BUNDLE_ID_REGEX,\n    `The ios.bundleIdentifier defined in your Expo config is not formatted properly. Only alphanumeric characters, '.', '-', and '_' are allowed, and each '.' must be followed by a letter.`\n  );\n}\n\nexport function assertValidPackage(value: string) {\n  assert.match(\n    value,\n    ANDROID_PACKAGE_REGEX,\n    `Invalid format of Android package name. Only alphanumeric characters, '.' and '_' are allowed, and each '.' must be followed by a letter.`\n  );\n}\n\n/** @private */\nexport async function getBundleIdWarningInternalAsync(bundleId: string): Promise<string | null> {\n  if (env.EXPO_OFFLINE) {\n    Log.warn('Skipping Apple bundle identifier reservation validation in offline-mode.');\n    return null;\n  }\n\n  if (!(await isUrlAvailableAsync('itunes.apple.com'))) {\n    debug(\n      `Couldn't connect to iTunes Store to check bundle ID ${bundleId}. itunes.apple.com may be down.`\n    );\n    // If no network, simply skip the warnings since they'll just lead to more confusion.\n    return null;\n  }\n\n  const url = `http://itunes.apple.com/lookup?bundleId=${bundleId}`;\n  try {\n    debug(`Checking iOS bundle ID '${bundleId}' at: ${url}`);\n    const response = await fetchAsync(url);\n    const json = await response.json();\n    if (json.resultCount > 0) {\n      const firstApp = json.results[0];\n      return formatInUseWarning(firstApp.trackName, firstApp.sellerName, bundleId);\n    }\n  } catch (error: any) {\n    debug(`Error checking bundle ID ${bundleId}: ${error.message}`);\n    // Error fetching itunes data.\n  }\n  return null;\n}\n\n/** Returns a warning message if an iOS bundle identifier is potentially already in use. */\nexport const getBundleIdWarningAsync = memoize(getBundleIdWarningInternalAsync);\n\n/** @private */\nexport async function getPackageNameWarningInternalAsync(\n  packageName: string\n): Promise<string | null> {\n  if (env.EXPO_OFFLINE) {\n    Log.warn('Skipping Android package name reservation validation in offline-mode.');\n    return null;\n  }\n\n  if (!(await isUrlAvailableAsync('play.google.com'))) {\n    debug(\n      `Couldn't connect to Play Store to check package name ${packageName}. play.google.com may be down.`\n    );\n    // If no network, simply skip the warnings since they'll just lead to more confusion.\n    return null;\n  }\n\n  const url = `https://play.google.com/store/apps/details?id=${packageName}`;\n  try {\n    debug(`Checking Android package name '${packageName}' at: ${url}`);\n    const response = await fetchAsync(url);\n    // If the page exists, then warn the user.\n    if (response.status === 200) {\n      // There is no JSON API for the Play Store so we can't concisely\n      // locate the app name and developer to match the iOS warning.\n      return `⚠️  The package ${chalk.bold(packageName)} is already in use. ${chalk.dim(\n        learnMore(url)\n      )}`;\n    }\n  } catch (error: any) {\n    // Error fetching play store data or the page doesn't exist.\n    debug(`Error checking package name ${packageName}: ${error.message}`);\n  }\n  return null;\n}\n\nfunction formatInUseWarning(appName: string, author: string, id: string): string {\n  return `⚠️  The app ${chalk.bold(appName)} by ${chalk.italic(\n    author\n  )} is already using ${chalk.bold(id)}`;\n}\n\n/** Returns a warning message if an Android package name is potentially already in use. */\nexport const getPackageNameWarningAsync = memoize(getPackageNameWarningInternalAsync);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}