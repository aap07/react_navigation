{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar EventManager = _createClass(function EventManager() {\n  _classCallCheck(this, EventManager);\n});\nexport { EventManager as default };","map":{"version":3,"names":["EventManager","_createClass","_classCallCheck","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web/tools/EventManager.d.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes, TouchEventType } from '../interfaces';\nexport default abstract class EventManager {\n    protected readonly view: HTMLElement;\n    protected pointersInBounds: number[];\n    protected activePointersCounter: number;\n    constructor(view: HTMLElement);\n    abstract setListeners(): void;\n    protected abstract mapEvent(event: Event, eventType: EventTypes, index?: number, touchEventType?: TouchEventType): AdaptedEvent;\n    protected onPointerDown(_event: AdaptedEvent): void;\n    protected onPointerAdd(_event: AdaptedEvent): void;\n    protected onPointerUp(_event: AdaptedEvent): void;\n    protected onPointerRemove(_event: AdaptedEvent): void;\n    protected onPointerMove(_event: AdaptedEvent): void;\n    protected onPointerOut(_event: AdaptedEvent): void;\n    protected onPointerEnter(_event: AdaptedEvent): void;\n    protected onPointerCancel(_event: AdaptedEvent): void;\n    protected onPointerOutOfBounds(_event: AdaptedEvent): void;\n    setOnPointerDown(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerAdd(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerUp(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerRemove(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerMove(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerOut(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerEnter(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerCancel(callback: (event: AdaptedEvent) => void): void;\n    setOnPointerOutOfBounds(callback: (event: AdaptedEvent) => void): void;\n    protected markAsInBounds(pointerId: number): void;\n    protected markAsOutOfBounds(pointerId: number): void;\n    resetManager(): void;\n}\n"],"mappings":";;IAC8BA,YAAY,GAAAC,YAAA,UAAAD,aAAA;EAAAE,eAAA,OAAAF,YAAA;AAAA;AAAA,SAAZA,YAAY,IAAAG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}