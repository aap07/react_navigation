{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar j = require('jscodeshift');\nvar FileTemplate = function FileTemplate(_ref) {\n  var imports = _ref.imports,\n    componentConfig = _ref.componentConfig;\n  return `\n/**\n * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n *\n * Do not edit this file as changes may cause incorrect behavior and will be lost\n * once the code is regenerated.\n *\n * @flow\n *\n * ${'@'}generated by codegen project: GenerateViewConfigJs.js\n */\n\n'use strict';\n\n${imports}\n\n${componentConfig}\n`;\n};\nvar UIMANAGER_IMPORT = 'const {UIManager} = require(\"react-native\")';\nfunction getReactDiffProcessValue(typeAnnotation) {\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n    case 'StringTypeAnnotation':\n    case 'Int32TypeAnnotation':\n    case 'DoubleTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'ObjectTypeAnnotation':\n    case 'StringEnumTypeAnnotation':\n    case 'Int32EnumTypeAnnotation':\n    case 'MixedTypeAnnotation':\n      return j.literal(true);\n    case 'ReservedPropTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          return j.template.expression`{ process: require('react-native/Libraries/StyleSheet/processColor').default }`;\n        case 'ImageSourcePrimitive':\n          return j.template.expression`{ process: require('react-native/Libraries/Image/resolveAssetSource') }`;\n        case 'ImageRequestPrimitive':\n          throw new Error('ImageRequest should not be used in props');\n        case 'PointPrimitive':\n          return j.template.expression`{ diff: require('react-native/Libraries/Utilities/differ/pointsDiffer') }`;\n        case 'EdgeInsetsPrimitive':\n          return j.template.expression`{ diff: require('react-native/Libraries/Utilities/differ/insetsDiffer') }`;\n        case 'DimensionPrimitive':\n          return j.literal(true);\n        default:\n          typeAnnotation.name;\n          throw new Error(`Received unknown native typeAnnotation: \"${typeAnnotation.name}\"`);\n      }\n    case 'ArrayTypeAnnotation':\n      if (typeAnnotation.elementType.type === 'ReservedPropTypeAnnotation') {\n        switch (typeAnnotation.elementType.name) {\n          case 'ColorPrimitive':\n            return j.template.expression`{ process: require('react-native/Libraries/StyleSheet/processColorArray') }`;\n          case 'ImageSourcePrimitive':\n          case 'PointPrimitive':\n          case 'EdgeInsetsPrimitive':\n          case 'DimensionPrimitive':\n            return j.literal(true);\n          default:\n            throw new Error(`Received unknown array native typeAnnotation: \"${typeAnnotation.elementType.name}\"`);\n        }\n      }\n      return j.literal(true);\n    default:\n      typeAnnotation;\n      throw new Error(`Received unknown typeAnnotation: \"${typeAnnotation.type}\"`);\n  }\n}\nvar ComponentTemplate = function ComponentTemplate(_ref2) {\n  var componentName = _ref2.componentName,\n    paperComponentName = _ref2.paperComponentName,\n    paperComponentNameDeprecated = _ref2.paperComponentNameDeprecated;\n  var nativeComponentName = paperComponentName !== null && paperComponentName !== void 0 ? paperComponentName : componentName;\n  return `\nlet nativeComponentName = '${nativeComponentName}';\n${paperComponentNameDeprecated != null ? DeprecatedComponentNameCheckTemplate({\n    componentName: componentName,\n    paperComponentNameDeprecated: paperComponentNameDeprecated\n  }) : ''}\n\nexport const __INTERNAL_VIEW_CONFIG = VIEW_CONFIG;\n\nexport default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);\n`.trim();\n};\nvar DeprecatedComponentNameCheckTemplate = function DeprecatedComponentNameCheckTemplate(_ref3) {\n  var componentName = _ref3.componentName,\n    paperComponentNameDeprecated = _ref3.paperComponentNameDeprecated;\n  return `\nif (UIManager.hasViewManagerConfig('${componentName}')) {\n  nativeComponentName = '${componentName}';\n} else if (UIManager.hasViewManagerConfig('${paperComponentNameDeprecated}')) {\n  nativeComponentName = '${paperComponentNameDeprecated}';\n} else {\n  throw new Error('Failed to find native component for either \"${componentName}\" or \"${paperComponentNameDeprecated}\"');\n}\n`.trim();\n};\nfunction normalizeInputEventName(name) {\n  if (name.startsWith('on')) {\n    return name.replace(/^on/, 'top');\n  } else if (!name.startsWith('top')) {\n    return `top${name[0].toUpperCase()}${name.slice(1)}`;\n  }\n  return name;\n}\nfunction getValidAttributesForEvents(events, imports) {\n  imports.add(\"const {ConditionallyIgnoredEventHandlers} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');\");\n  var validAttributes = j.objectExpression(events.map(function (eventType) {\n    return j.property('init', j.identifier(eventType.name), j.literal(true));\n  }));\n  return j.callExpression(j.identifier('ConditionallyIgnoredEventHandlers'), [validAttributes]);\n}\nfunction generateBubblingEventInfo(event, nameOveride) {\n  return j.property('init', j.identifier(nameOveride || normalizeInputEventName(event.name)), j.objectExpression([j.property('init', j.identifier('phasedRegistrationNames'), j.objectExpression([j.property('init', j.identifier('captured'), j.literal(`${event.name}Capture`)), j.property('init', j.identifier('bubbled'), j.literal(event.name))]))]));\n}\nfunction generateDirectEventInfo(event, nameOveride) {\n  return j.property('init', j.identifier(nameOveride || normalizeInputEventName(event.name)), j.objectExpression([j.property('init', j.identifier('registrationName'), j.literal(event.name))]));\n}\nfunction buildViewConfig(schema, componentName, component, imports) {\n  var componentProps = component.props;\n  var componentEvents = component.events;\n  component.extendsProps.forEach(function (extendProps) {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            imports.add(\"const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\");\n            return;\n          default:\n            extendProps.knownTypeName;\n            throw new Error('Invalid knownTypeName');\n        }\n      default:\n        extendProps.type;\n        throw new Error('Invalid extended type');\n    }\n  });\n  var validAttributes = j.objectExpression([].concat(_toConsumableArray(componentProps.map(function (schemaProp) {\n    return j.property('init', j.identifier(schemaProp.name), getReactDiffProcessValue(schemaProp.typeAnnotation));\n  })), _toConsumableArray(componentEvents.length > 0 ? [j.spreadProperty(getValidAttributesForEvents(componentEvents, imports))] : [])));\n  var bubblingEventNames = component.events.filter(function (event) {\n    return event.bubblingType === 'bubble';\n  }).reduce(function (bubblingEvents, event) {\n    if (event.paperTopLevelNameDeprecated) {\n      bubblingEvents.push(generateBubblingEventInfo(event, event.paperTopLevelNameDeprecated));\n    } else {\n      bubblingEvents.push(generateBubblingEventInfo(event));\n    }\n    return bubblingEvents;\n  }, []);\n  var bubblingEvents = bubblingEventNames.length > 0 ? j.property('init', j.identifier('bubblingEventTypes'), j.objectExpression(bubblingEventNames)) : null;\n  var directEventNames = component.events.filter(function (event) {\n    return event.bubblingType === 'direct';\n  }).reduce(function (directEvents, event) {\n    if (event.paperTopLevelNameDeprecated) {\n      directEvents.push(generateDirectEventInfo(event, event.paperTopLevelNameDeprecated));\n    } else {\n      directEvents.push(generateDirectEventInfo(event));\n    }\n    return directEvents;\n  }, []);\n  var directEvents = directEventNames.length > 0 ? j.property('init', j.identifier('directEventTypes'), j.objectExpression(directEventNames)) : null;\n  var properties = [j.property('init', j.identifier('uiViewClassName'), j.literal(componentName)), bubblingEvents, directEvents, j.property('init', j.identifier('validAttributes'), validAttributes)].filter(Boolean);\n  return j.objectExpression(properties);\n}\nfunction buildCommands(schema, componentName, component, imports) {\n  var commands = component.commands;\n  if (commands.length === 0) {\n    return null;\n  }\n  imports.add('const {dispatchCommand} = require(\"react-native/Libraries/ReactNative/RendererProxy\");');\n  var properties = commands.map(function (command) {\n    var commandName = command.name;\n    var params = command.typeAnnotation.params;\n    var commandNameLiteral = j.literal(commandName);\n    var commandNameIdentifier = j.identifier(commandName);\n    var arrayParams = j.arrayExpression(params.map(function (param) {\n      return j.identifier(param.name);\n    }));\n    var expression = j.template.expression`dispatchCommand(ref, ${commandNameLiteral}, ${arrayParams})`;\n    var functionParams = params.map(function (param) {\n      return j.identifier(param.name);\n    });\n    var property = j.property('init', commandNameIdentifier, j.functionExpression(null, [j.identifier('ref')].concat(_toConsumableArray(functionParams)), j.blockStatement([j.expressionStatement(expression)])));\n    property.method = true;\n    return property;\n  });\n  return j.exportNamedDeclaration(j.variableDeclaration('const', [j.variableDeclarator(j.identifier('Commands'), j.objectExpression(properties))]));\n}\nmodule.exports = {\n  generate: function generate(libraryName, schema) {\n    try {\n      var fileName = `${libraryName}NativeViewConfig.js`;\n      var imports = new Set();\n      var moduleResults = Object.keys(schema.modules).map(function (moduleName) {\n        var module = schema.modules[moduleName];\n        if (module.type !== 'Component') {\n          return;\n        }\n        var components = module.components;\n        return Object.keys(components).map(function (componentName) {\n          var _component$paperCompo;\n          var component = components[componentName];\n          if (component.paperComponentNameDeprecated) {\n            imports.add(UIMANAGER_IMPORT);\n          }\n          var replacedTemplate = ComponentTemplate({\n            componentName: componentName,\n            paperComponentName: component.paperComponentName,\n            paperComponentNameDeprecated: component.paperComponentNameDeprecated\n          });\n          var replacedSourceRoot = j.withParser('flow')(replacedTemplate);\n          var paperComponentName = (_component$paperCompo = component.paperComponentName) !== null && _component$paperCompo !== void 0 ? _component$paperCompo : componentName;\n          replacedSourceRoot.find(j.Identifier, {\n            name: 'VIEW_CONFIG'\n          }).replaceWith(buildViewConfig(schema, paperComponentName, component, imports));\n          var commands = buildCommands(schema, paperComponentName, component, imports);\n          if (commands) {\n            replacedSourceRoot.find(j.ExportDefaultDeclaration).insertAfter(j(commands).toSource());\n          }\n          var replacedSource = replacedSourceRoot.toSource({\n            quote: 'single',\n            trailingComma: true\n          });\n          return replacedSource;\n        }).join('\\n\\n');\n      }).filter(Boolean).join('\\n\\n');\n      var replacedTemplate = FileTemplate({\n        componentConfig: moduleResults,\n        imports: Array.from(imports).sort().join('\\n')\n      });\n      return new Map([[fileName, replacedTemplate]]);\n    } catch (error) {\n      console.error(`\\nError parsing schema for ${libraryName}\\n`);\n      console.error(JSON.stringify(schema));\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["_toConsumableArray","require","j","FileTemplate","_ref","imports","componentConfig","UIMANAGER_IMPORT","getReactDiffProcessValue","typeAnnotation","type","literal","name","template","expression","Error","elementType","ComponentTemplate","_ref2","componentName","paperComponentName","paperComponentNameDeprecated","nativeComponentName","DeprecatedComponentNameCheckTemplate","trim","_ref3","normalizeInputEventName","startsWith","replace","toUpperCase","slice","getValidAttributesForEvents","events","add","validAttributes","objectExpression","map","eventType","property","identifier","callExpression","generateBubblingEventInfo","event","nameOveride","generateDirectEventInfo","buildViewConfig","schema","component","componentProps","props","componentEvents","extendsProps","forEach","extendProps","knownTypeName","concat","schemaProp","length","spreadProperty","bubblingEventNames","filter","bubblingType","reduce","bubblingEvents","paperTopLevelNameDeprecated","push","directEventNames","directEvents","properties","Boolean","buildCommands","commands","command","commandName","params","commandNameLiteral","commandNameIdentifier","arrayParams","arrayExpression","param","functionParams","functionExpression","blockStatement","expressionStatement","method","exportNamedDeclaration","variableDeclaration","variableDeclarator","module","exports","generate","libraryName","fileName","Set","moduleResults","Object","keys","modules","moduleName","components","_component$paperCompo","replacedTemplate","replacedSourceRoot","withParser","find","Identifier","replaceWith","ExportDefaultDeclaration","insertAfter","toSource","replacedSource","quote","trailingComma","join","Array","from","sort","Map","error","console","JSON","stringify"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/GenerateViewConfigJs.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst j = require('jscodeshift');\n\n// File path -> contents\n\nconst FileTemplate = ({imports, componentConfig}) => `\n/**\n * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).\n *\n * Do not edit this file as changes may cause incorrect behavior and will be lost\n * once the code is regenerated.\n *\n * @flow\n *\n * ${'@'}generated by codegen project: GenerateViewConfigJs.js\n */\n\n'use strict';\n\n${imports}\n\n${componentConfig}\n`;\n\n// We use this to add to a set. Need to make sure we aren't importing\n// this multiple times.\nconst UIMANAGER_IMPORT = 'const {UIManager} = require(\"react-native\")';\nfunction getReactDiffProcessValue(typeAnnotation) {\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n    case 'StringTypeAnnotation':\n    case 'Int32TypeAnnotation':\n    case 'DoubleTypeAnnotation':\n    case 'FloatTypeAnnotation':\n    case 'ObjectTypeAnnotation':\n    case 'StringEnumTypeAnnotation':\n    case 'Int32EnumTypeAnnotation':\n    case 'MixedTypeAnnotation':\n      return j.literal(true);\n    case 'ReservedPropTypeAnnotation':\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          return j.template\n            .expression`{ process: require('react-native/Libraries/StyleSheet/processColor').default }`;\n        case 'ImageSourcePrimitive':\n          return j.template\n            .expression`{ process: require('react-native/Libraries/Image/resolveAssetSource') }`;\n        case 'ImageRequestPrimitive':\n          throw new Error('ImageRequest should not be used in props');\n        case 'PointPrimitive':\n          return j.template\n            .expression`{ diff: require('react-native/Libraries/Utilities/differ/pointsDiffer') }`;\n        case 'EdgeInsetsPrimitive':\n          return j.template\n            .expression`{ diff: require('react-native/Libraries/Utilities/differ/insetsDiffer') }`;\n        case 'DimensionPrimitive':\n          return j.literal(true);\n        default:\n          typeAnnotation.name;\n          throw new Error(\n            `Received unknown native typeAnnotation: \"${typeAnnotation.name}\"`,\n          );\n      }\n    case 'ArrayTypeAnnotation':\n      if (typeAnnotation.elementType.type === 'ReservedPropTypeAnnotation') {\n        switch (typeAnnotation.elementType.name) {\n          case 'ColorPrimitive':\n            return j.template\n              .expression`{ process: require('react-native/Libraries/StyleSheet/processColorArray') }`;\n          case 'ImageSourcePrimitive':\n          case 'PointPrimitive':\n          case 'EdgeInsetsPrimitive':\n          case 'DimensionPrimitive':\n            return j.literal(true);\n          default:\n            throw new Error(\n              `Received unknown array native typeAnnotation: \"${typeAnnotation.elementType.name}\"`,\n            );\n        }\n      }\n      return j.literal(true);\n    default:\n      typeAnnotation;\n      throw new Error(\n        `Received unknown typeAnnotation: \"${typeAnnotation.type}\"`,\n      );\n  }\n}\nconst ComponentTemplate = ({\n  componentName,\n  paperComponentName,\n  paperComponentNameDeprecated,\n}) => {\n  const nativeComponentName =\n    paperComponentName !== null && paperComponentName !== void 0\n      ? paperComponentName\n      : componentName;\n  return `\nlet nativeComponentName = '${nativeComponentName}';\n${\n  paperComponentNameDeprecated != null\n    ? DeprecatedComponentNameCheckTemplate({\n        componentName,\n        paperComponentNameDeprecated,\n      })\n    : ''\n}\n\nexport const __INTERNAL_VIEW_CONFIG = VIEW_CONFIG;\n\nexport default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);\n`.trim();\n};\n\n// Check whether the native component exists in the app binary.\n// Old getViewManagerConfig() checks for the existance of the native Paper view manager. Not available in Bridgeless.\n// New hasViewManagerConfig() queries Fabric’s native component registry directly.\nconst DeprecatedComponentNameCheckTemplate = ({\n  componentName,\n  paperComponentNameDeprecated,\n}) =>\n  `\nif (UIManager.hasViewManagerConfig('${componentName}')) {\n  nativeComponentName = '${componentName}';\n} else if (UIManager.hasViewManagerConfig('${paperComponentNameDeprecated}')) {\n  nativeComponentName = '${paperComponentNameDeprecated}';\n} else {\n  throw new Error('Failed to find native component for either \"${componentName}\" or \"${paperComponentNameDeprecated}\"');\n}\n`.trim();\n\n// Replicates the behavior of RCTNormalizeInputEventName in RCTEventDispatcher.m\nfunction normalizeInputEventName(name) {\n  if (name.startsWith('on')) {\n    return name.replace(/^on/, 'top');\n  } else if (!name.startsWith('top')) {\n    return `top${name[0].toUpperCase()}${name.slice(1)}`;\n  }\n  return name;\n}\n\n// Replicates the behavior of viewConfig in RCTComponentData.m\nfunction getValidAttributesForEvents(events, imports) {\n  imports.add(\n    \"const {ConditionallyIgnoredEventHandlers} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');\",\n  );\n  const validAttributes = j.objectExpression(\n    events.map(eventType => {\n      return j.property('init', j.identifier(eventType.name), j.literal(true));\n    }),\n  );\n  return j.callExpression(j.identifier('ConditionallyIgnoredEventHandlers'), [\n    validAttributes,\n  ]);\n}\nfunction generateBubblingEventInfo(event, nameOveride) {\n  return j.property(\n    'init',\n    j.identifier(nameOveride || normalizeInputEventName(event.name)),\n    j.objectExpression([\n      j.property(\n        'init',\n        j.identifier('phasedRegistrationNames'),\n        j.objectExpression([\n          j.property(\n            'init',\n            j.identifier('captured'),\n            j.literal(`${event.name}Capture`),\n          ),\n          j.property('init', j.identifier('bubbled'), j.literal(event.name)),\n        ]),\n      ),\n    ]),\n  );\n}\nfunction generateDirectEventInfo(event, nameOveride) {\n  return j.property(\n    'init',\n    j.identifier(nameOveride || normalizeInputEventName(event.name)),\n    j.objectExpression([\n      j.property(\n        'init',\n        j.identifier('registrationName'),\n        j.literal(event.name),\n      ),\n    ]),\n  );\n}\nfunction buildViewConfig(schema, componentName, component, imports) {\n  const componentProps = component.props;\n  const componentEvents = component.events;\n  component.extendsProps.forEach(extendProps => {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            imports.add(\n              \"const NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\",\n            );\n            return;\n          default:\n            extendProps.knownTypeName;\n            throw new Error('Invalid knownTypeName');\n        }\n      default:\n        extendProps.type;\n        throw new Error('Invalid extended type');\n    }\n  });\n  const validAttributes = j.objectExpression([\n    ...componentProps.map(schemaProp => {\n      return j.property(\n        'init',\n        j.identifier(schemaProp.name),\n        getReactDiffProcessValue(schemaProp.typeAnnotation),\n      );\n    }),\n    ...(componentEvents.length > 0\n      ? [\n          j.spreadProperty(\n            getValidAttributesForEvents(componentEvents, imports),\n          ),\n        ]\n      : []),\n  ]);\n  const bubblingEventNames = component.events\n    .filter(event => event.bubblingType === 'bubble')\n    .reduce((bubblingEvents, event) => {\n      // We add in the deprecated paper name so that it is in the view config.\n      // This means either the old event name or the new event name can fire\n      // and be sent to the listener until the old top level name is removed.\n      if (event.paperTopLevelNameDeprecated) {\n        bubblingEvents.push(\n          generateBubblingEventInfo(event, event.paperTopLevelNameDeprecated),\n        );\n      } else {\n        bubblingEvents.push(generateBubblingEventInfo(event));\n      }\n      return bubblingEvents;\n    }, []);\n  const bubblingEvents =\n    bubblingEventNames.length > 0\n      ? j.property(\n          'init',\n          j.identifier('bubblingEventTypes'),\n          j.objectExpression(bubblingEventNames),\n        )\n      : null;\n  const directEventNames = component.events\n    .filter(event => event.bubblingType === 'direct')\n    .reduce((directEvents, event) => {\n      // We add in the deprecated paper name so that it is in the view config.\n      // This means either the old event name or the new event name can fire\n      // and be sent to the listener until the old top level name is removed.\n      if (event.paperTopLevelNameDeprecated) {\n        directEvents.push(\n          generateDirectEventInfo(event, event.paperTopLevelNameDeprecated),\n        );\n      } else {\n        directEvents.push(generateDirectEventInfo(event));\n      }\n      return directEvents;\n    }, []);\n  const directEvents =\n    directEventNames.length > 0\n      ? j.property(\n          'init',\n          j.identifier('directEventTypes'),\n          j.objectExpression(directEventNames),\n        )\n      : null;\n  const properties = [\n    j.property(\n      'init',\n      j.identifier('uiViewClassName'),\n      j.literal(componentName),\n    ),\n    bubblingEvents,\n    directEvents,\n    j.property('init', j.identifier('validAttributes'), validAttributes),\n  ].filter(Boolean);\n  return j.objectExpression(properties);\n}\nfunction buildCommands(schema, componentName, component, imports) {\n  const commands = component.commands;\n  if (commands.length === 0) {\n    return null;\n  }\n  imports.add(\n    'const {dispatchCommand} = require(\"react-native/Libraries/ReactNative/RendererProxy\");',\n  );\n  const properties = commands.map(command => {\n    const commandName = command.name;\n    const params = command.typeAnnotation.params;\n    const commandNameLiteral = j.literal(commandName);\n    const commandNameIdentifier = j.identifier(commandName);\n    const arrayParams = j.arrayExpression(\n      params.map(param => {\n        return j.identifier(param.name);\n      }),\n    );\n    const expression = j.template\n      .expression`dispatchCommand(ref, ${commandNameLiteral}, ${arrayParams})`;\n    const functionParams = params.map(param => {\n      return j.identifier(param.name);\n    });\n    const property = j.property(\n      'init',\n      commandNameIdentifier,\n      j.functionExpression(\n        null,\n        [j.identifier('ref'), ...functionParams],\n        j.blockStatement([j.expressionStatement(expression)]),\n      ),\n    );\n    property.method = true;\n    return property;\n  });\n  return j.exportNamedDeclaration(\n    j.variableDeclaration('const', [\n      j.variableDeclarator(\n        j.identifier('Commands'),\n        j.objectExpression(properties),\n      ),\n    ]),\n  );\n}\nmodule.exports = {\n  generate(libraryName, schema) {\n    try {\n      const fileName = `${libraryName}NativeViewConfig.js`;\n      const imports = new Set();\n      const moduleResults = Object.keys(schema.modules)\n        .map(moduleName => {\n          const module = schema.modules[moduleName];\n          if (module.type !== 'Component') {\n            return;\n          }\n          const components = module.components;\n          return Object.keys(components)\n            .map(componentName => {\n              var _component$paperCompo;\n              const component = components[componentName];\n              if (component.paperComponentNameDeprecated) {\n                imports.add(UIMANAGER_IMPORT);\n              }\n              const replacedTemplate = ComponentTemplate({\n                componentName,\n                paperComponentName: component.paperComponentName,\n                paperComponentNameDeprecated:\n                  component.paperComponentNameDeprecated,\n              });\n              const replacedSourceRoot = j.withParser('flow')(replacedTemplate);\n              const paperComponentName =\n                (_component$paperCompo = component.paperComponentName) !==\n                  null && _component$paperCompo !== void 0\n                  ? _component$paperCompo\n                  : componentName;\n              replacedSourceRoot\n                .find(j.Identifier, {\n                  name: 'VIEW_CONFIG',\n                })\n                .replaceWith(\n                  buildViewConfig(\n                    schema,\n                    paperComponentName,\n                    component,\n                    imports,\n                  ),\n                );\n              const commands = buildCommands(\n                schema,\n                paperComponentName,\n                component,\n                imports,\n              );\n              if (commands) {\n                replacedSourceRoot\n                  .find(j.ExportDefaultDeclaration)\n                  .insertAfter(j(commands).toSource());\n              }\n              const replacedSource = replacedSourceRoot.toSource({\n                quote: 'single',\n                trailingComma: true,\n              });\n              return replacedSource;\n            })\n            .join('\\n\\n');\n        })\n        .filter(Boolean)\n        .join('\\n\\n');\n      const replacedTemplate = FileTemplate({\n        componentConfig: moduleResults,\n        imports: Array.from(imports).sort().join('\\n'),\n      });\n      return new Map([[fileName, replacedTemplate]]);\n    } catch (error) {\n      console.error(`\\nError parsing schema for ${libraryName}\\n`);\n      console.error(JSON.stringify(schema));\n      throw error;\n    }\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}