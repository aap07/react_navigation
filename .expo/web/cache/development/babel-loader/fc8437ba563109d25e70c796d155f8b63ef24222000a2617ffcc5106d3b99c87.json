{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getIosSplashConfig = getIosSplashConfig;\nvar defaultResizeMode = 'contain';\nvar defaultBackgroundColor = '#ffffff';\nfunction getIosSplashConfig(config) {\n  var _config$ios;\n  if ((_config$ios = config.ios) !== null && _config$ios !== void 0 && _config$ios.splash) {\n    var _config$ios2, _splash$image, _splash$resizeMode, _splash$backgroundCol, _splash$tabletImage, _splash$dark$image, _splash$dark, _splash$dark2, _splash$dark$tabletIm, _splash$dark3, _splash$dark4;\n    var splash = (_config$ios2 = config.ios) === null || _config$ios2 === void 0 ? void 0 : _config$ios2.splash;\n    var image = (_splash$image = splash.image) !== null && _splash$image !== void 0 ? _splash$image : null;\n    return {\n      image: image,\n      resizeMode: (_splash$resizeMode = splash.resizeMode) !== null && _splash$resizeMode !== void 0 ? _splash$resizeMode : defaultResizeMode,\n      backgroundColor: (_splash$backgroundCol = splash.backgroundColor) !== null && _splash$backgroundCol !== void 0 ? _splash$backgroundCol : defaultBackgroundColor,\n      tabletImage: (_splash$tabletImage = splash.tabletImage) !== null && _splash$tabletImage !== void 0 ? _splash$tabletImage : null,\n      tabletBackgroundColor: splash.tabletBackgroundColor,\n      dark: {\n        image: (_splash$dark$image = (_splash$dark = splash.dark) === null || _splash$dark === void 0 ? void 0 : _splash$dark.image) !== null && _splash$dark$image !== void 0 ? _splash$dark$image : null,\n        backgroundColor: (_splash$dark2 = splash.dark) === null || _splash$dark2 === void 0 ? void 0 : _splash$dark2.backgroundColor,\n        tabletImage: (_splash$dark$tabletIm = (_splash$dark3 = splash.dark) === null || _splash$dark3 === void 0 ? void 0 : _splash$dark3.tabletImage) !== null && _splash$dark$tabletIm !== void 0 ? _splash$dark$tabletIm : null,\n        tabletBackgroundColor: (_splash$dark4 = splash.dark) === null || _splash$dark4 === void 0 ? void 0 : _splash$dark4.tabletBackgroundColor\n      }\n    };\n  }\n  if (config.splash) {\n    var _splash$image2, _splash$resizeMode2, _splash$backgroundCol2;\n    var _splash = config.splash;\n    var _image = (_splash$image2 = _splash.image) !== null && _splash$image2 !== void 0 ? _splash$image2 : null;\n    return {\n      image: _image,\n      resizeMode: (_splash$resizeMode2 = _splash.resizeMode) !== null && _splash$resizeMode2 !== void 0 ? _splash$resizeMode2 : defaultResizeMode,\n      backgroundColor: (_splash$backgroundCol2 = _splash.backgroundColor) !== null && _splash$backgroundCol2 !== void 0 ? _splash$backgroundCol2 : defaultBackgroundColor,\n      tabletImage: null,\n      tabletBackgroundColor: null,\n      dark: {\n        image: null,\n        backgroundColor: null,\n        tabletImage: null,\n        tabletBackgroundColor: null\n      }\n    };\n  }\n  return {\n    backgroundColor: '#ffffff',\n    resizeMode: 'contain',\n    tabletImage: null,\n    tabletBackgroundColor: null\n  };\n}","map":{"version":3,"names":["defaultResizeMode","defaultBackgroundColor","getIosSplashConfig","config","_config$ios","ios","splash","_config$ios2","_splash$image","_splash$resizeMode","_splash$backgroundCol","_splash$tabletImage","_splash$dark$image","_splash$dark","_splash$dark2","_splash$dark$tabletIm","_splash$dark3","_splash$dark4","image","resizeMode","backgroundColor","tabletImage","tabletBackgroundColor","dark","_splash$image2","_splash$resizeMode2","_splash$backgroundCol2"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-splash-screen\\getIosSplashConfig.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\ntype ExpoConfigIosSplash = NonNullable<NonNullable<ExpoConfig['ios']>['splash']>;\n\nconst defaultResizeMode = 'contain';\nconst defaultBackgroundColor = '#ffffff';\n\nexport interface IOSSplashConfig {\n  image?: string | null;\n  // tabletImage: string | null;\n  backgroundColor: string;\n  resizeMode: NonNullable<ExpoConfigIosSplash['resizeMode']>;\n  tabletImage: string | null;\n  // TODO: These are here just to test the functionality, the API should be more robust and account for tablet images.\n  tabletBackgroundColor: string | null;\n  dark?: {\n    image?: string | null;\n    backgroundColor?: string | null;\n    tabletImage?: string | null;\n    tabletBackgroundColor?: string | null;\n  };\n}\n\n// TODO: Maybe use an array on splash with theme value. Then remove the array in serialization for legacy and manifest.\nexport function getIosSplashConfig(config: ExpoConfig): IOSSplashConfig | null {\n  // Respect the splash screen object, don't mix and match across different splash screen objects\n  // in case the user wants the top level splash to apply to every platform except iOS.\n  if (config.ios?.splash) {\n    const splash = config.ios?.splash;\n    const image = splash.image ?? null;\n    return {\n      image,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n      backgroundColor: splash.backgroundColor ?? defaultBackgroundColor,\n      tabletImage: splash.tabletImage ?? null,\n      tabletBackgroundColor: splash.tabletBackgroundColor,\n      dark: {\n        image: splash.dark?.image ?? null,\n        backgroundColor: splash.dark?.backgroundColor,\n        tabletImage: splash.dark?.tabletImage ?? null,\n        tabletBackgroundColor: splash.dark?.tabletBackgroundColor,\n      },\n    };\n  }\n\n  if (config.splash) {\n    const splash = config.splash;\n    const image = splash.image ?? null;\n    return {\n      image,\n      resizeMode: splash.resizeMode ?? defaultResizeMode,\n      backgroundColor: splash.backgroundColor ?? defaultBackgroundColor,\n      tabletImage: null,\n      tabletBackgroundColor: null,\n      dark: {\n        image: null,\n        backgroundColor: null,\n        tabletImage: null,\n        tabletBackgroundColor: null,\n      },\n    };\n  }\n\n  return {\n    backgroundColor: '#ffffff',\n    resizeMode: 'contain',\n    tabletImage: null,\n    tabletBackgroundColor: null,\n  };\n}\n"],"mappings":";;;;;;AAIA,IAAMA,iBAAiB,GAAG,SAAS;AACnC,IAAMC,sBAAsB,GAAG,SAAS;AAmBjC,SAASC,kBAAkBA,CAACC,MAAkB,EAA0B;EAAA,IAAAC,WAAA;EAG7E,KAAAA,WAAA,GAAID,MAAM,CAACE,GAAG,cAAAD,WAAA,eAAVA,WAAA,CAAYE,MAAM,EAAE;IAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,qBAAA,EAAAC,aAAA,EAAAC,aAAA;IACtB,IAAMX,MAAM,IAAAC,YAAA,GAAGJ,MAAM,CAACE,GAAG,cAAAE,YAAA,uBAAVA,YAAA,CAAYD,MAAM;IACjC,IAAMY,KAAK,IAAAV,aAAA,GAAGF,MAAM,CAACY,KAAK,cAAAV,aAAA,cAAAA,aAAA,GAAI,IAAI;IAClC,OAAO;MACLU,KAAK,EAALA,KAAK;MACLC,UAAU,GAAAV,kBAAA,GAAEH,MAAM,CAACa,UAAU,cAAAV,kBAAA,cAAAA,kBAAA,GAAIT,iBAAiB;MAClDoB,eAAe,GAAAV,qBAAA,GAAEJ,MAAM,CAACc,eAAe,cAAAV,qBAAA,cAAAA,qBAAA,GAAIT,sBAAsB;MACjEoB,WAAW,GAAAV,mBAAA,GAAEL,MAAM,CAACe,WAAW,cAAAV,mBAAA,cAAAA,mBAAA,GAAI,IAAI;MACvCW,qBAAqB,EAAEhB,MAAM,CAACgB,qBAAqB;MACnDC,IAAI,EAAE;QACJL,KAAK,GAAAN,kBAAA,IAAAC,YAAA,GAAEP,MAAM,CAACiB,IAAI,cAAAV,YAAA,uBAAXA,YAAA,CAAaK,KAAK,cAAAN,kBAAA,cAAAA,kBAAA,GAAI,IAAI;QACjCQ,eAAe,GAAAN,aAAA,GAAER,MAAM,CAACiB,IAAI,cAAAT,aAAA,uBAAXA,aAAA,CAAaM,eAAe;QAC7CC,WAAW,GAAAN,qBAAA,IAAAC,aAAA,GAAEV,MAAM,CAACiB,IAAI,cAAAP,aAAA,uBAAXA,aAAA,CAAaK,WAAW,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,IAAI;QAC7CO,qBAAqB,GAAAL,aAAA,GAAEX,MAAM,CAACiB,IAAI,cAAAN,aAAA,uBAAXA,aAAA,CAAaK;MACtC;IACF,CAAC;EACH;EAEA,IAAInB,MAAM,CAACG,MAAM,EAAE;IAAA,IAAAkB,cAAA,EAAAC,mBAAA,EAAAC,sBAAA;IACjB,IAAMpB,OAAM,GAAGH,MAAM,CAACG,MAAM;IAC5B,IAAMY,MAAK,IAAAM,cAAA,GAAGlB,OAAM,CAACY,KAAK,cAAAM,cAAA,cAAAA,cAAA,GAAI,IAAI;IAClC,OAAO;MACLN,KAAK,EAALA,MAAK;MACLC,UAAU,GAAAM,mBAAA,GAAEnB,OAAM,CAACa,UAAU,cAAAM,mBAAA,cAAAA,mBAAA,GAAIzB,iBAAiB;MAClDoB,eAAe,GAAAM,sBAAA,GAAEpB,OAAM,CAACc,eAAe,cAAAM,sBAAA,cAAAA,sBAAA,GAAIzB,sBAAsB;MACjEoB,WAAW,EAAE,IAAI;MACjBC,qBAAqB,EAAE,IAAI;MAC3BC,IAAI,EAAE;QACJL,KAAK,EAAE,IAAI;QACXE,eAAe,EAAE,IAAI;QACrBC,WAAW,EAAE,IAAI;QACjBC,qBAAqB,EAAE;MACzB;IACF,CAAC;EACH;EAEA,OAAO;IACLF,eAAe,EAAE,SAAS;IAC1BD,UAAU,EAAE,SAAS;IACrBE,WAAW,EAAE,IAAI;IACjBC,qBAAqB,EAAE;EACzB,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}