{"ast":null,"code":"import { NodeBase } from \"./Node.js\";","map":{"version":3,"names":["NodeBase"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/nodes/Scalar.d.ts"],"sourcesContent":["import type { BlockScalar, FlowScalar } from '../parse/cst.js';\nimport { NodeBase, Range } from './Node.js';\nimport { ToJSContext } from './toJS.js';\nexport declare const isScalarValue: (value: unknown) => boolean;\nexport declare namespace Scalar {\n    interface Parsed extends Scalar {\n        range: Range;\n        source: string;\n        srcToken?: FlowScalar | BlockScalar;\n    }\n    type BLOCK_FOLDED = 'BLOCK_FOLDED';\n    type BLOCK_LITERAL = 'BLOCK_LITERAL';\n    type PLAIN = 'PLAIN';\n    type QUOTE_DOUBLE = 'QUOTE_DOUBLE';\n    type QUOTE_SINGLE = 'QUOTE_SINGLE';\n    type Type = BLOCK_FOLDED | BLOCK_LITERAL | PLAIN | QUOTE_DOUBLE | QUOTE_SINGLE;\n}\nexport declare class Scalar<T = unknown> extends NodeBase {\n    static readonly BLOCK_FOLDED = \"BLOCK_FOLDED\";\n    static readonly BLOCK_LITERAL = \"BLOCK_LITERAL\";\n    static readonly PLAIN = \"PLAIN\";\n    static readonly QUOTE_DOUBLE = \"QUOTE_DOUBLE\";\n    static readonly QUOTE_SINGLE = \"QUOTE_SINGLE\";\n    value: T;\n    /** An optional anchor on this node. Used by alias nodes. */\n    anchor?: string;\n    /**\n     * By default (undefined), numbers use decimal notation.\n     * The YAML 1.2 core schema only supports 'HEX' and 'OCT'.\n     * The YAML 1.1 schema also supports 'BIN' and 'TIME'\n     */\n    format?: string;\n    /** If `value` is a number, use this value when stringifying this node. */\n    minFractionDigits?: number;\n    /** Set during parsing to the source string value */\n    source?: string;\n    /** The scalar style used for the node's string representation */\n    type?: Scalar.Type;\n    constructor(value: T);\n    toJSON(arg?: any, ctx?: ToJSContext): any;\n    toString(): string;\n}\n"],"mappings":"AACA,SAASA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}