{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFirstExternalSourceForPod = exports.getDependentPods = void 0;\nfunction getDependentPods(podfileLock, _ref) {\n  var name = _ref.name,\n    version = _ref.version;\n  if (!podfileLock.pods) {\n    return [];\n  }\n  var hasPodDependency = function hasPodDependency(pods) {\n    for (var podDependency of pods) {\n      if (podDependency.name === name) {\n        return !version || podDependency.version === version;\n      }\n      if (podDependency.dependencies && hasPodDependency(podDependency.dependencies)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  return podfileLock.pods.reduce(function (prev, curr) {\n    if (curr.name !== name && curr.dependencies && hasPodDependency(curr.dependencies)) {\n      return [].concat(_toConsumableArray(prev), [curr.name]);\n    }\n    return prev;\n  }, []);\n}\nexports.getDependentPods = getDependentPods;\nfunction getFirstExternalSourceForPod(podfileLock, _ref2) {\n  var name = _ref2.name,\n    checked = _ref2.checked;\n  if (!podfileLock.externalSources) {\n    return null;\n  }\n  if (podfileLock.externalSources[name]) {\n    return {\n      pod: name,\n      source: podfileLock.externalSources[name]\n    };\n  } else if (name.includes('/')) {\n    var possibleName = name.split('/')[0];\n    if (podfileLock.externalSources[possibleName]) {\n      return {\n        pod: possibleName,\n        source: podfileLock.externalSources[possibleName]\n      };\n    }\n  }\n  if (!checked) {\n    checked = [];\n  }\n  checked.push(name);\n  var dependents = getDependentPods(podfileLock, {\n    name: name\n  });\n  for (var dependent of dependents) {\n    if (!checked.includes(dependent)) {\n      var results = getFirstExternalSourceForPod(podfileLock, {\n        name: dependent,\n        checked: checked\n      });\n      if (results) {\n        return results;\n      }\n    }\n  }\n  return null;\n}\nexports.getFirstExternalSourceForPod = getFirstExternalSourceForPod;","map":{"version":3,"names":["getDependentPods","podfileLock","_ref","name","version","pods","hasPodDependency","podDependency","dependencies","reduce","prev","curr","concat","_toConsumableArray","exports","getFirstExternalSourceForPod","_ref2","checked","externalSources","pod","source","includes","possibleName","split","push","dependents","dependent","results"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\xcpretty\\src\\utils\\getFirstExternalSourceForPod.ts"],"sourcesContent":["import { ExternalSource, PodDependency, PodfileLock } from './parsePodfileLock';\n\nexport function getDependentPods(\n  podfileLock: PodfileLock,\n  { name, version }: { name: string; version?: string }\n): string[] {\n  if (!podfileLock.pods) {\n    return [];\n  }\n\n  const hasPodDependency = (pods: PodDependency[]) => {\n    for (const podDependency of pods) {\n      if (podDependency.name === name) {\n        return !version || podDependency.version === version;\n      }\n      if (podDependency.dependencies && hasPodDependency(podDependency.dependencies)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return podfileLock.pods.reduce<string[]>((prev, curr) => {\n    if (curr.name !== name && curr.dependencies && hasPodDependency(curr.dependencies)) {\n      return [...prev, curr.name];\n    }\n\n    return prev;\n  }, []);\n}\n\n/**\n * Find the first \"external source\" (local file path reference) for a given pod.\n *\n * @param podfileLock\n * @param props.name The pod name to search for.\n * @param props.checked A recursive parameter to prevent infinite recursion, not for public use.\n * @returns\n */\nexport function getFirstExternalSourceForPod(\n  podfileLock: PodfileLock,\n  { name, checked }: { name: string; checked?: string[] }\n): { pod: string; source: ExternalSource } | null {\n  if (!podfileLock.externalSources) {\n    return null;\n  }\n\n  if (podfileLock.externalSources[name]) {\n    return { pod: name, source: podfileLock.externalSources[name] };\n  } else if (name.includes('/')) {\n    // Short cut for pods with a path\n    const possibleName = name.split('/')[0];\n    if (podfileLock.externalSources[possibleName]) {\n      return { pod: possibleName, source: podfileLock.externalSources[possibleName] };\n    }\n  }\n\n  if (!checked) {\n    checked = [];\n  }\n  checked.push(name);\n\n  const dependents = getDependentPods(podfileLock, { name });\n\n  for (const dependent of dependents) {\n    // Prevent pods with cyclic dependencies from causing infinite loops.\n    if (!checked.includes(dependent)) {\n      const results = getFirstExternalSourceForPod(podfileLock, { name: dependent, checked });\n      if (results) {\n        return results;\n      }\n    }\n  }\n  return null;\n}\n"],"mappings":";;;;;;;AAEA,SAAgBA,gBAAgBA,CAC9BC,WAAwB,EAAAC,IAAA,EAC6B;EAAA,IAAnDC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAEf,IAAI,CAACH,WAAW,CAACI,IAAI,EAAE;IACrB,OAAO,EAAE;;EAGX,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAID,IAAqB,EAAI;IACjD,KAAK,IAAME,aAAa,IAAIF,IAAI,EAAE;MAChC,IAAIE,aAAa,CAACJ,IAAI,KAAKA,IAAI,EAAE;QAC/B,OAAO,CAACC,OAAO,IAAIG,aAAa,CAACH,OAAO,KAAKA,OAAO;;MAEtD,IAAIG,aAAa,CAACC,YAAY,IAAIF,gBAAgB,CAACC,aAAa,CAACC,YAAY,CAAC,EAAE;QAC9E,OAAO,IAAI;;;IAGf,OAAO,KAAK;EACd,CAAC;EAED,OAAOP,WAAW,CAACI,IAAI,CAACI,MAAM,CAAW,UAACC,IAAI,EAAEC,IAAI,EAAI;IACtD,IAAIA,IAAI,CAACR,IAAI,KAAKA,IAAI,IAAIQ,IAAI,CAACH,YAAY,IAAIF,gBAAgB,CAACK,IAAI,CAACH,YAAY,CAAC,EAAE;MAClF,UAAAI,MAAA,CAAAC,kBAAA,CAAWH,IAAI,IAAEC,IAAI,CAACR,IAAI;;IAG5B,OAAOO,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;AACR;AA3BAI,OAAA,CAAAd,gBAAA,GAAAA,gBAAA;AAqCA,SAAgBe,4BAA4BA,CAC1Cd,WAAwB,EAAAe,KAAA,EAC+B;EAAA,IAArDb,IAAI,GAAAa,KAAA,CAAJb,IAAI;IAAEc,OAAO,GAAAD,KAAA,CAAPC,OAAO;EAEf,IAAI,CAAChB,WAAW,CAACiB,eAAe,EAAE;IAChC,OAAO,IAAI;;EAGb,IAAIjB,WAAW,CAACiB,eAAe,CAACf,IAAI,CAAC,EAAE;IACrC,OAAO;MAAEgB,GAAG,EAAEhB,IAAI;MAAEiB,MAAM,EAAEnB,WAAW,CAACiB,eAAe,CAACf,IAAI;IAAC,CAAE;GAChE,MAAM,IAAIA,IAAI,CAACkB,QAAQ,CAAC,GAAG,CAAC,EAAE;IAE7B,IAAMC,YAAY,GAAGnB,IAAI,CAACoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,IAAItB,WAAW,CAACiB,eAAe,CAACI,YAAY,CAAC,EAAE;MAC7C,OAAO;QAAEH,GAAG,EAAEG,YAAY;QAAEF,MAAM,EAAEnB,WAAW,CAACiB,eAAe,CAACI,YAAY;MAAC,CAAE;;;EAInF,IAAI,CAACL,OAAO,EAAE;IACZA,OAAO,GAAG,EAAE;;EAEdA,OAAO,CAACO,IAAI,CAACrB,IAAI,CAAC;EAElB,IAAMsB,UAAU,GAAGzB,gBAAgB,CAACC,WAAW,EAAE;IAAEE,IAAI,EAAJA;EAAI,CAAE,CAAC;EAE1D,KAAK,IAAMuB,SAAS,IAAID,UAAU,EAAE;IAElC,IAAI,CAACR,OAAO,CAACI,QAAQ,CAACK,SAAS,CAAC,EAAE;MAChC,IAAMC,OAAO,GAAGZ,4BAA4B,CAACd,WAAW,EAAE;QAAEE,IAAI,EAAEuB,SAAS;QAAET,OAAO,EAAPA;MAAO,CAAE,CAAC;MACvF,IAAIU,OAAO,EAAE;QACX,OAAOA,OAAO;;;;EAIpB,OAAO,IAAI;AACb;AAnCAb,OAAA,CAAAC,4BAAA,GAAAA,4BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}