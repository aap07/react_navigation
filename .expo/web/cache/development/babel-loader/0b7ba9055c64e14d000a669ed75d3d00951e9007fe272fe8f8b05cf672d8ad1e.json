{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar PointerTracker = _createClass(function PointerTracker() {\n  _classCallCheck(this, PointerTracker);\n});\nexport { PointerTracker as default };","map":{"version":3,"names":["PointerTracker","_createClass","_classCallCheck","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web/tools/PointerTracker.d.ts"],"sourcesContent":["import { AdaptedEvent } from '../interfaces';\nexport interface TrackerElement {\n    lastX: number;\n    lastY: number;\n    timeStamp: number;\n    velocityX: number;\n    velocityY: number;\n}\nexport default class PointerTracker {\n    private velocityTracker;\n    private trackedPointers;\n    private touchEventsIds;\n    private lastMovedPointerId;\n    private cachedAverages;\n    constructor();\n    addToTracker(event: AdaptedEvent): void;\n    removeFromTracker(pointerId: number): void;\n    track(event: AdaptedEvent): void;\n    private mapTouchEventId;\n    private removeMappedTouchId;\n    getMappedTouchEventId(touchEventId: number): number;\n    getVelocityX(pointerId: number): number;\n    getVelocityY(pointerId: number): number;\n    /**\n     * Returns X coordinate of last moved pointer\n     */\n    getLastX(): number;\n    /**\n     *\n     * @param pointerId\n     * Returns X coordinate of given pointer\n     */\n    getLastX(pointerId: number): number;\n    /**\n     * Returns Y coordinate of last moved pointer\n     */\n    getLastY(): number;\n    /**\n     *\n     * @param pointerId\n     * Returns Y coordinate of given pointer\n     */\n    getLastY(pointerId: number): number;\n    getLastAvgX(): number;\n    getLastAvgY(): number;\n    getSumX(ignoredPointer?: number): number;\n    getSumY(ignoredPointer?: number): number;\n    getTrackedPointersCount(): number;\n    getTrackedPointersID(): number[];\n    getData(): Map<number, TrackerElement>;\n    resetTracker(): void;\n    static shareCommonPointers(stPointers: number[], ndPointers: number[]): boolean;\n}\n"],"mappings":";;IAQqBA,cAAc,GAAAC,YAAA,UAAAD,eAAA;EAAAE,eAAA,OAAAF,cAAA;AAAA;AAAA,SAAdA,cAAc,IAAAG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}