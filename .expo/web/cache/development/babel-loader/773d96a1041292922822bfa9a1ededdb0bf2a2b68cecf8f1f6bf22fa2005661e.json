{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _envinfo = _interopRequireDefault(require(\"../tools/envinfo\"));\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _fsExtra() {\n  var data = require(\"fs-extra\");\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _yaml() {\n  var data = require(\"yaml\");\n  _yaml = function _yaml() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar info = function () {\n  var _getInfo = _asyncToGenerator(function* (_argv, ctx) {\n    try {\n      var _ctx$project$ios, _ctx$project$android;\n      _cliTools().logger.info('Fetching system and libraries information...');\n      var notFound = 'Not found';\n      var platforms = {\n        Android: {\n          hermesEnabled: notFound,\n          newArchEnabled: notFound\n        },\n        iOS: {\n          hermesEnabled: notFound,\n          newArchEnabled: notFound\n        }\n      };\n      if (process.platform !== 'win32' && ((_ctx$project$ios = ctx.project.ios) === null || _ctx$project$ios === void 0 ? void 0 : _ctx$project$ios.sourceDir)) {\n        try {\n          var podfile = yield (0, _fsExtra().readFile)(_path().default.join(ctx.project.ios.sourceDir, '/Podfile.lock'), 'utf8');\n          platforms.iOS.hermesEnabled = podfile.includes('hermes-engine');\n        } catch (e) {\n          platforms.iOS.hermesEnabled = notFound;\n        }\n        try {\n          var project = yield (0, _fsExtra().readFile)(_path().default.join(ctx.project.ios.sourceDir, '/Pods/Pods.xcodeproj/project.pbxproj'));\n          platforms.iOS.newArchEnabled = project.includes('-DRCT_NEW_ARCH_ENABLED=1');\n        } catch (_unused) {\n          platforms.iOS.newArchEnabled = notFound;\n        }\n      }\n      if ((_ctx$project$android = ctx.project.android) === null || _ctx$project$android === void 0 ? void 0 : _ctx$project$android.sourceDir) {\n        try {\n          var gradleProperties = yield (0, _fsExtra().readFile)(_path().default.join(ctx.project.android.sourceDir, '/gradle.properties'), 'utf8');\n          platforms.Android.hermesEnabled = gradleProperties.includes('hermesEnabled=true');\n          platforms.Android.newArchEnabled = gradleProperties.includes('newArchEnabled=true');\n        } catch (_unused2) {\n          platforms.Android.hermesEnabled = notFound;\n          platforms.Android.newArchEnabled = notFound;\n        }\n      }\n      var output = yield (0, _envinfo.default)();\n      _cliTools().logger.log((0, _yaml().stringify)(_objectSpread(_objectSpread({}, output), platforms)));\n    } catch (err) {\n      _cliTools().logger.error(`Unable to print environment info.\\n${err}`);\n    } finally {\n      yield _cliTools().version.logIfUpdateAvailable(ctx.root);\n    }\n  });\n  function getInfo(_x, _x2) {\n    return _getInfo.apply(this, arguments);\n  }\n  return getInfo;\n}();\nvar _default = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  func: info\n};\nexports.default = _default;","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","exports","value","default","_envinfo","_interopRequireDefault","_cliTools","data","_fsExtra","_path","_yaml","obj","__esModule","info","_getInfo","_argv","ctx","_ctx$project$ios","_ctx$project$android","logger","notFound","platforms","Android","hermesEnabled","newArchEnabled","iOS","process","platform","project","ios","sourceDir","podfile","readFile","join","includes","_unused","android","gradleProperties","_unused2","output","log","stringify","err","error","version","logIfUpdateAvailable","root","getInfo","_x","_x2","_default","name","description","func"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/commands/info.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _envinfo = _interopRequireDefault(require(\"../tools/envinfo\"));\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fsExtra() {\n  const data = require(\"fs-extra\");\n  _fsExtra = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _yaml() {\n  const data = require(\"yaml\");\n  _yaml = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst info = async function getInfo(_argv, ctx) {\n  try {\n    var _ctx$project$ios, _ctx$project$android;\n    _cliTools().logger.info('Fetching system and libraries information...');\n    const notFound = 'Not found';\n    const platforms = {\n      Android: {\n        hermesEnabled: notFound,\n        newArchEnabled: notFound\n      },\n      iOS: {\n        hermesEnabled: notFound,\n        newArchEnabled: notFound\n      }\n    };\n    if (process.platform !== 'win32' && ((_ctx$project$ios = ctx.project.ios) === null || _ctx$project$ios === void 0 ? void 0 : _ctx$project$ios.sourceDir)) {\n      try {\n        const podfile = await (0, _fsExtra().readFile)(_path().default.join(ctx.project.ios.sourceDir, '/Podfile.lock'), 'utf8');\n        platforms.iOS.hermesEnabled = podfile.includes('hermes-engine');\n      } catch (e) {\n        platforms.iOS.hermesEnabled = notFound;\n      }\n      try {\n        const project = await (0, _fsExtra().readFile)(_path().default.join(ctx.project.ios.sourceDir, '/Pods/Pods.xcodeproj/project.pbxproj'));\n        platforms.iOS.newArchEnabled = project.includes('-DRCT_NEW_ARCH_ENABLED=1');\n      } catch {\n        platforms.iOS.newArchEnabled = notFound;\n      }\n    }\n    if ((_ctx$project$android = ctx.project.android) === null || _ctx$project$android === void 0 ? void 0 : _ctx$project$android.sourceDir) {\n      try {\n        const gradleProperties = await (0, _fsExtra().readFile)(_path().default.join(ctx.project.android.sourceDir, '/gradle.properties'), 'utf8');\n        platforms.Android.hermesEnabled = gradleProperties.includes('hermesEnabled=true');\n        platforms.Android.newArchEnabled = gradleProperties.includes('newArchEnabled=true');\n      } catch {\n        platforms.Android.hermesEnabled = notFound;\n        platforms.Android.newArchEnabled = notFound;\n      }\n    }\n    const output = await (0, _envinfo.default)();\n    _cliTools().logger.log((0, _yaml().stringify)({\n      ...output,\n      ...platforms\n    }));\n  } catch (err) {\n    _cliTools().logger.error(`Unable to print environment info.\\n${err}`);\n  } finally {\n    await _cliTools().version.logIfUpdateAvailable(ctx.root);\n  }\n};\nvar _default = {\n  name: 'info',\n  description: 'Get relevant version info about OS, toolchain and libraries',\n  func: info\n};\nexports.default = _default;\n\n//# sourceMappingURL=info.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}