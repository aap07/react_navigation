{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractAsync = extractAsync;\nvar _spawnAsync = _interopRequireDefault(require(\"@expo/spawn-async\"));\nvar _tar = _interopRequireDefault(require(\"tar\"));\nvar Log = _interopRequireWildcard(require(\"../log\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:utils:tar\");\nfunction extractAsync(_x, _x2) {\n  return _extractAsync.apply(this, arguments);\n}\nfunction _extractAsync() {\n  _extractAsync = _asyncToGenerator(function* (input, output) {\n    try {\n      if (process.platform !== \"win32\") {\n        debug(`Extracting ${input} to ${output}`);\n        yield (0, _spawnAsync).default(\"tar\", [\"-xf\", input, \"-C\", output], {\n          stdio: \"inherit\"\n        });\n        return;\n      }\n    } catch (error) {\n      Log.warn(`Failed to extract tar using native tools, falling back on JS tar module. ${error.message}`);\n    }\n    debug(`Extracting ${input} to ${output} using JS tar module`);\n    yield _tar.default.extract({\n      file: input,\n      cwd: output\n    });\n  });\n  return _extractAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","extractAsync","_spawnAsync","_interopRequireDefault","_tar","Log","_interopRequireWildcard","debug","_x","_x2","_extractAsync","apply","arguments","input","output","process","platform","default","stdio","error","warn","message","extract","file","cwd"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\tar.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport tar from 'tar';\n\nimport * as Log from '../log';\n\nconst debug = require('debug')('expo:utils:tar') as typeof console.log;\n\n/** Extract a tar using built-in tools if available and falling back on Node.js. */\nexport async function extractAsync(input: string, output: string): Promise<void> {\n  try {\n    if (process.platform !== 'win32') {\n      debug(`Extracting ${input} to ${output}`);\n      await spawnAsync('tar', ['-xf', input, '-C', output], {\n        stdio: 'inherit',\n      });\n      return;\n    }\n  } catch (error: any) {\n    Log.warn(\n      `Failed to extract tar using native tools, falling back on JS tar module. ${error.message}`\n    );\n  }\n  debug(`Extracting ${input} to ${output} using JS tar module`);\n  // tar node module has previously had problems with big files, and seems to\n  // be slower, so only use it as a backup.\n  await tar.extract({ file: input, cwd: output });\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAQsBC,YAAY,GAAZA,YAAY;AARX,IAAAC,WAAmB,GAAAC,sBAAA,CAAAH,OAAA,CAAnB,mBAAmB;AAC1B,IAAAI,IAAK,GAAAD,sBAAA,CAAAH,OAAA,CAAL,KAAK;AAET,IAAAK,GAAG,GAAAC,uBAAA,CAAAN,OAAA,SAAc,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEf,IAAMO,KAAK,GAAGP,OAAO,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC;AAAuB,SAGjDC,YAAYA,CAAAO,EAAA,EAAAC,GAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,cAAA;EAAAA,aAAA,GAAAX,iBAAA,CAA3B,WAA4Bc,KAAa,EAAEC,MAAc,EAAiB;IAC/E,IAAI;MACF,IAAIC,OAAO,CAACC,QAAQ,KAAK,OAAO,EAAE;QAChCT,KAAK,CAAE,cAAaM,KAAM,OAAMC,MAAO,EAAC,CAAC;QACzC,MAAM,IAAAZ,WAAU,EAEde,OAFc,CAAC,KAAK,EAAE,CAAC,KAAK,EAAEJ,KAAK,EAAE,IAAI,EAAEC,MAAM,CAAC,EAAE;UACpDI,KAAK,EAAE;SACR,CAAC;QACF;;KAEH,CAAC,OAAOC,KAAK,EAAO;MACnBd,GAAG,CAACe,IAAI,CACL,4EAA2ED,KAAK,CAACE,OAAQ,EAAC,CAC5F;;IAEHd,KAAK,CAAE,cAAaM,KAAM,OAAMC,MAAO,sBAAqB,CAAC;IAG7D,MAAMV,IAAG,CAAAa,OAAA,CAACK,OAAO,CAAC;MAAEC,IAAI,EAAEV,KAAK;MAAEW,GAAG,EAAEV;KAAQ,CAAC;GAChD;EAAA,OAAAJ,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}