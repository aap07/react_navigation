{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAutoPlugins = getAutoPlugins;\nexports.getLegacyExpoPlugins = getLegacyExpoPlugins;\nexports.withIosExpoPlugins = exports.withAndroidExpoPlugins = void 0;\nexports.withLegacyExpoPlugins = withLegacyExpoPlugins;\nexports.withVersionedExpoSDKPlugins = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _debug() {\n  var data = _interopRequireDefault(require(\"debug\"));\n  _debug = function _debug() {\n    return data;\n  };\n  return data;\n}\nfunction _getAutolinkedPackages() {\n  var data = require(\"../getAutolinkedPackages\");\n  _getAutolinkedPackages = function _getAutolinkedPackages() {\n    return data;\n  };\n  return data;\n}\nfunction _withAndroidIcons() {\n  var data = require(\"./icons/withAndroidIcons\");\n  _withAndroidIcons = function _withAndroidIcons() {\n    return data;\n  };\n  return data;\n}\nfunction _withIosIcons() {\n  var data = require(\"./icons/withIosIcons\");\n  _withIosIcons = function _withIosIcons() {\n    return data;\n  };\n  return data;\n}\nfunction _expoAdsAdmob() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-ads-admob/expo-ads-admob\"));\n  _expoAdsAdmob = function _expoAdsAdmob() {\n    return data;\n  };\n  return data;\n}\nfunction _expoAppleAuthentication() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-apple-authentication\"));\n  _expoAppleAuthentication = function _expoAppleAuthentication() {\n    return data;\n  };\n  return data;\n}\nfunction _expoBranch() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-branch/expo-branch\"));\n  _expoBranch = function _expoBranch() {\n    return data;\n  };\n  return data;\n}\nfunction _expoContacts() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-contacts\"));\n  _expoContacts = function _expoContacts() {\n    return data;\n  };\n  return data;\n}\nfunction _expoDocumentPicker() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-document-picker\"));\n  _expoDocumentPicker = function _expoDocumentPicker() {\n    return data;\n  };\n  return data;\n}\nfunction _expoNavigationBar() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-navigation-bar/expo-navigation-bar\"));\n  _expoNavigationBar = function _expoNavigationBar() {\n    return data;\n  };\n  return data;\n}\nfunction _expoNotifications() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-notifications/expo-notifications\"));\n  _expoNotifications = function _expoNotifications() {\n    return data;\n  };\n  return data;\n}\nfunction _expoSplashScreen() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-splash-screen/expo-splash-screen\"));\n  _expoSplashScreen = function _expoSplashScreen() {\n    return data;\n  };\n  return data;\n}\nfunction _expoSystemUi() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-system-ui/expo-system-ui\"));\n  _expoSystemUi = function _expoSystemUi() {\n    return data;\n  };\n  return data;\n}\nfunction _expoUpdates() {\n  var data = _interopRequireDefault(require(\"./unversioned/expo-updates\"));\n  _expoUpdates = function _expoUpdates() {\n    return data;\n  };\n  return data;\n}\nfunction _reactNativeMaps() {\n  var data = _interopRequireDefault(require(\"./unversioned/react-native-maps\"));\n  _reactNativeMaps = function _reactNativeMaps() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = (0, _debug().default)('expo:prebuild-config');\nvar withIosExpoPlugins = function withIosExpoPlugins(config, _ref) {\n  var bundleIdentifier = _ref.bundleIdentifier;\n  if (!config.ios) config.ios = {};\n  config.ios.bundleIdentifier = bundleIdentifier;\n  return (0, _configPlugins().withPlugins)(config, [[_configPlugins().IOSConfig.BundleIdentifier.withBundleIdentifier, {\n    bundleIdentifier: bundleIdentifier\n  }], _configPlugins().IOSConfig.Swift.withSwiftBridgingHeader, _configPlugins().IOSConfig.Swift.withNoopSwiftFile, _configPlugins().IOSConfig.Google.withGoogle, _configPlugins().IOSConfig.Name.withDisplayName, _configPlugins().IOSConfig.Name.withProductName, _configPlugins().IOSConfig.Orientation.withOrientation, _configPlugins().IOSConfig.RequiresFullScreen.withRequiresFullScreen, _configPlugins().IOSConfig.Scheme.withScheme, _configPlugins().IOSConfig.UsesNonExemptEncryption.withUsesNonExemptEncryption, _configPlugins().IOSConfig.Version.withBuildNumber, _configPlugins().IOSConfig.Version.withVersion, _configPlugins().IOSConfig.Google.withGoogleServicesFile, _configPlugins().IOSConfig.BuildProperties.withJsEnginePodfileProps, _configPlugins().IOSConfig.Entitlements.withAssociatedDomains, _configPlugins().IOSConfig.DeviceFamily.withDeviceFamily, _configPlugins().IOSConfig.Bitcode.withBitcode, _configPlugins().IOSConfig.Locales.withLocales, _withIosIcons().withIosIcons]);\n};\nexports.withIosExpoPlugins = withIosExpoPlugins;\nvar withAndroidExpoPlugins = function withAndroidExpoPlugins(config, props) {\n  if (!config.android) config.android = {};\n  config.android.package = props.package;\n  return (0, _configPlugins().withPlugins)(config, [_configPlugins().AndroidConfig.BuildProperties.withJsEngineGradleProps, _configPlugins().AndroidConfig.Name.withNameSettingsGradle, _configPlugins().AndroidConfig.GoogleServices.withClassPath, _configPlugins().AndroidConfig.GoogleServices.withApplyPlugin, _configPlugins().AndroidConfig.Package.withPackageGradle, _configPlugins().AndroidConfig.Version.withVersion, _configPlugins().AndroidConfig.AllowBackup.withAllowBackup, _configPlugins().AndroidConfig.WindowSoftInputMode.withWindowSoftInputMode, _configPlugins().AndroidConfig.IntentFilters.withAndroidIntentFilters, _configPlugins().AndroidConfig.Scheme.withScheme, _configPlugins().AndroidConfig.Orientation.withOrientation, _configPlugins().AndroidConfig.Permissions.withInternalBlockedPermissions, _configPlugins().AndroidConfig.Permissions.withPermissions, _configPlugins().AndroidConfig.Name.withName, _configPlugins().AndroidConfig.GoogleServices.withGoogleServicesFile, _configPlugins().AndroidConfig.StatusBar.withStatusBar, _configPlugins().AndroidConfig.PrimaryColor.withPrimaryColor, _withAndroidIcons().withAndroidIcons, _configPlugins().AndroidConfig.Package.withPackageRefactor]);\n};\nexports.withAndroidExpoPlugins = withAndroidExpoPlugins;\nvar versionedExpoSDKPackages = ['react-native-maps', 'expo-ads-admob', 'expo-apple-authentication', 'expo-contacts', 'expo-notifications', 'expo-updates', 'expo-branch', 'expo-navigation-bar', 'expo-document-picker', 'expo-splash-screen', 'expo-system-ui'];\nvar withVersionedExpoSDKPlugins = function withVersionedExpoSDKPlugins(config, _ref2) {\n  var expoUsername = _ref2.expoUsername;\n  return (0, _configPlugins().withPlugins)(config, [_reactNativeMaps().default, _expoAdsAdmob().default, _expoAppleAuthentication().default, _expoContacts().default, _expoNotifications().default, [_expoUpdates().default, {\n    expoUsername: expoUsername\n  }], _expoBranch().default, _expoDocumentPicker().default, _expoSystemUi().default, _expoSplashScreen().default, _expoNavigationBar().default]);\n};\nexports.withVersionedExpoSDKPlugins = withVersionedExpoSDKPlugins;\nfunction getAutoPlugins() {\n  return versionedExpoSDKPackages.concat(legacyExpoPlugins).concat(expoManagedVersionedPlugins);\n}\nfunction getLegacyExpoPlugins() {\n  return legacyExpoPlugins;\n}\nvar legacyExpoPlugins = ['expo-app-auth', 'expo-av', 'expo-background-fetch', 'expo-barcode-scanner', 'expo-brightness', 'expo-calendar', 'expo-camera', 'expo-cellular', 'expo-dev-menu', 'expo-dev-launcher', 'expo-dev-client', 'expo-image-picker', 'expo-file-system', 'expo-location', 'expo-media-library', 'expo-screen-orientation', 'expo-sensors', 'expo-task-manager', 'expo-local-authentication'];\nvar expoManagedVersionedPlugins = ['expo-firebase-analytics', 'expo-firebase-core', 'expo-google-sign-in'];\nvar withOptionalLegacyPlugins = function withOptionalLegacyPlugins(config, plugins) {\n  return plugins.reduce(function (prev, plugin) {\n    if ((0, _getAutolinkedPackages().shouldSkipAutoPlugin)(config, plugin)) {\n      debug('Skipping unlinked auto plugin:', plugin);\n      return prev;\n    }\n    return (0, _configPlugins().withStaticPlugin)(prev, {\n      _isLegacyPlugin: true,\n      plugin: plugin,\n      fallback: function fallback(config) {\n        return config;\n      }\n    });\n  }, config);\n};\nfunction withLegacyExpoPlugins(config) {\n  return withOptionalLegacyPlugins(config, _toConsumableArray(new Set(expoManagedVersionedPlugins.concat(legacyExpoPlugins))));\n}","map":{"version":3,"names":["_configPlugins","data","require","_debug","_interopRequireDefault","_getAutolinkedPackages","_withAndroidIcons","_withIosIcons","_expoAdsAdmob","_expoAppleAuthentication","_expoBranch","_expoContacts","_expoDocumentPicker","_expoNavigationBar","_expoNotifications","_expoSplashScreen","_expoSystemUi","_expoUpdates","_reactNativeMaps","obj","__esModule","default","debug","withIosExpoPlugins","config","_ref","bundleIdentifier","ios","withPlugins","IOSConfig","BundleIdentifier","withBundleIdentifier","Swift","withSwiftBridgingHeader","withNoopSwiftFile","Google","withGoogle","Name","withDisplayName","withProductName","Orientation","withOrientation","RequiresFullScreen","withRequiresFullScreen","Scheme","withScheme","UsesNonExemptEncryption","withUsesNonExemptEncryption","Version","withBuildNumber","withVersion","withGoogleServicesFile","BuildProperties","withJsEnginePodfileProps","Entitlements","withAssociatedDomains","DeviceFamily","withDeviceFamily","Bitcode","withBitcode","Locales","withLocales","withIosIcons","exports","withAndroidExpoPlugins","props","android","package","AndroidConfig","withJsEngineGradleProps","withNameSettingsGradle","GoogleServices","withClassPath","withApplyPlugin","Package","withPackageGradle","AllowBackup","withAllowBackup","WindowSoftInputMode","withWindowSoftInputMode","IntentFilters","withAndroidIntentFilters","Permissions","withInternalBlockedPermissions","withPermissions","withName","StatusBar","withStatusBar","PrimaryColor","withPrimaryColor","withAndroidIcons","withPackageRefactor","versionedExpoSDKPackages","withVersionedExpoSDKPlugins","_ref2","expoUsername","getAutoPlugins","concat","legacyExpoPlugins","expoManagedVersionedPlugins","getLegacyExpoPlugins","withOptionalLegacyPlugins","plugins","reduce","prev","plugin","shouldSkipAutoPlugin","withStaticPlugin","_isLegacyPlugin","fallback","withLegacyExpoPlugins","_toConsumableArray","Set"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\withDefaultPlugins.ts"],"sourcesContent":["/**\n * These are the versioned first-party plugins with some of the future third-party plugins mixed in for legacy support.\n */\nimport {\n  AndroidConfig,\n  ConfigPlugin,\n  IOSConfig,\n  StaticPlugin,\n  withPlugins,\n  withStaticPlugin,\n} from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\nimport Debug from 'debug';\n\nimport { shouldSkipAutoPlugin } from '../getAutolinkedPackages';\nimport { withAndroidIcons } from './icons/withAndroidIcons';\nimport { withIosIcons } from './icons/withIosIcons';\nimport withAdMob from './unversioned/expo-ads-admob/expo-ads-admob';\nimport withAppleAuthentication from './unversioned/expo-apple-authentication';\nimport withBranch from './unversioned/expo-branch/expo-branch';\nimport withContacts from './unversioned/expo-contacts';\nimport withDocumentPicker from './unversioned/expo-document-picker';\nimport withNavigationBar from './unversioned/expo-navigation-bar/expo-navigation-bar';\nimport withNotifications from './unversioned/expo-notifications/expo-notifications';\nimport withSplashScreen from './unversioned/expo-splash-screen/expo-splash-screen';\nimport withSystemUI from './unversioned/expo-system-ui/expo-system-ui';\nimport withUpdates from './unversioned/expo-updates';\nimport withMaps from './unversioned/react-native-maps';\n\nconst debug = Debug('expo:prebuild-config');\n\n/**\n * Config plugin to apply all of the custom Expo iOS config plugins we support by default.\n * TODO: In the future most of this should go into versioned packages like expo-updates, etc...\n */\nexport const withIosExpoPlugins: ConfigPlugin<{\n  bundleIdentifier: string;\n}> = (config, { bundleIdentifier }) => {\n  // Set the bundle ID ahead of time.\n  if (!config.ios) config.ios = {};\n  config.ios.bundleIdentifier = bundleIdentifier;\n\n  return withPlugins(config, [\n    [IOSConfig.BundleIdentifier.withBundleIdentifier, { bundleIdentifier }],\n    IOSConfig.Swift.withSwiftBridgingHeader,\n    IOSConfig.Swift.withNoopSwiftFile,\n    IOSConfig.Google.withGoogle,\n    IOSConfig.Name.withDisplayName,\n    IOSConfig.Name.withProductName,\n    IOSConfig.Orientation.withOrientation,\n    IOSConfig.RequiresFullScreen.withRequiresFullScreen,\n    IOSConfig.Scheme.withScheme,\n    IOSConfig.UsesNonExemptEncryption.withUsesNonExemptEncryption,\n    IOSConfig.Version.withBuildNumber,\n    IOSConfig.Version.withVersion,\n    IOSConfig.Google.withGoogleServicesFile,\n    IOSConfig.BuildProperties.withJsEnginePodfileProps,\n    // Entitlements\n    IOSConfig.Entitlements.withAssociatedDomains,\n    // XcodeProject\n    IOSConfig.DeviceFamily.withDeviceFamily,\n    IOSConfig.Bitcode.withBitcode,\n    IOSConfig.Locales.withLocales,\n    // Dangerous\n    withIosIcons,\n  ]);\n};\n\n/**\n * Config plugin to apply all of the custom Expo Android config plugins we support by default.\n * TODO: In the future most of this should go into versioned packages like expo-updates, etc...\n */\nexport const withAndroidExpoPlugins: ConfigPlugin<{\n  package: string;\n}> = (config, props) => {\n  // Set the package name ahead of time.\n  if (!config.android) config.android = {};\n  config.android.package = props.package;\n\n  return withPlugins(config, [\n    // gradle.properties\n    AndroidConfig.BuildProperties.withJsEngineGradleProps,\n\n    // settings.gradle\n    AndroidConfig.Name.withNameSettingsGradle,\n\n    // project build.gradle\n    AndroidConfig.GoogleServices.withClassPath,\n\n    // app/build.gradle\n    AndroidConfig.GoogleServices.withApplyPlugin,\n    AndroidConfig.Package.withPackageGradle,\n    AndroidConfig.Version.withVersion,\n\n    // AndroidManifest.xml\n    AndroidConfig.AllowBackup.withAllowBackup,\n    AndroidConfig.WindowSoftInputMode.withWindowSoftInputMode,\n    // Note: The withAndroidIntentFilters plugin must appear before the withScheme\n    // plugin or withScheme will override the output of withAndroidIntentFilters.\n    AndroidConfig.IntentFilters.withAndroidIntentFilters,\n    AndroidConfig.Scheme.withScheme,\n    AndroidConfig.Orientation.withOrientation,\n    AndroidConfig.Permissions.withInternalBlockedPermissions,\n    AndroidConfig.Permissions.withPermissions,\n\n    // strings.xml\n    AndroidConfig.Name.withName,\n\n    // Dangerous -- these plugins run in reverse order.\n    AndroidConfig.GoogleServices.withGoogleServicesFile,\n\n    // Modify colors.xml and styles.xml\n    AndroidConfig.StatusBar.withStatusBar,\n    AndroidConfig.PrimaryColor.withPrimaryColor,\n\n    withAndroidIcons,\n    // If we renamed the package, we should also move it around and rename it in source files\n    // Added last to ensure this plugin runs first. Out of tree solutions will mistakenly resolve the package incorrectly otherwise.\n    AndroidConfig.Package.withPackageRefactor,\n  ]);\n};\n\n// Must keep in sync with `withVersionedExpoSDKPlugins`\nconst versionedExpoSDKPackages: string[] = [\n  'react-native-maps',\n  'expo-ads-admob',\n  'expo-apple-authentication',\n  'expo-contacts',\n  'expo-notifications',\n  'expo-updates',\n  'expo-branch',\n  'expo-navigation-bar',\n  'expo-document-picker',\n  'expo-splash-screen',\n  'expo-system-ui',\n];\n\nexport const withVersionedExpoSDKPlugins: ConfigPlugin<{ expoUsername: string | null }> = (\n  config,\n  { expoUsername }\n) => {\n  return withPlugins(config, [\n    withMaps,\n    withAdMob,\n    withAppleAuthentication,\n    withContacts,\n    withNotifications,\n    [withUpdates, { expoUsername }],\n    withBranch,\n    withDocumentPicker,\n    // System UI must come before splash screen as they overlap\n    // and splash screen will warn about conflicting rules.\n    withSystemUI,\n    withSplashScreen,\n    withNavigationBar,\n  ]);\n};\n\nexport function getAutoPlugins() {\n  return versionedExpoSDKPackages.concat(legacyExpoPlugins).concat(expoManagedVersionedPlugins);\n}\n\nexport function getLegacyExpoPlugins() {\n  return legacyExpoPlugins;\n}\n\n// Expo managed packages that require extra update.\n// These get applied automatically to create parity with expo build in eas build.\nconst legacyExpoPlugins = [\n  'expo-app-auth',\n  'expo-av',\n  'expo-background-fetch',\n  'expo-barcode-scanner',\n  'expo-brightness',\n  'expo-calendar',\n  'expo-camera',\n  'expo-cellular',\n  'expo-dev-menu',\n  'expo-dev-launcher',\n  'expo-dev-client',\n  'expo-image-picker',\n  'expo-file-system',\n  'expo-location',\n  'expo-media-library',\n  'expo-screen-orientation',\n  'expo-sensors',\n  'expo-task-manager',\n  'expo-local-authentication',\n];\n\n// Plugins that need to be automatically applied, but also get applied by expo-cli if the versioned plugin isn't available.\n// These are split up because the user doesn't need to be prompted to setup these packages.\nconst expoManagedVersionedPlugins = [\n  'expo-firebase-analytics',\n  'expo-firebase-core',\n  'expo-google-sign-in',\n];\n\nconst withOptionalLegacyPlugins: ConfigPlugin<(StaticPlugin | string)[]> = (config, plugins) => {\n  return plugins.reduce((prev, plugin) => {\n    if (shouldSkipAutoPlugin(config, plugin)) {\n      debug('Skipping unlinked auto plugin:', plugin);\n      return prev;\n    }\n\n    return withStaticPlugin(prev, {\n      // hide errors\n      _isLegacyPlugin: true,\n      plugin,\n      // If a plugin doesn't exist, do nothing.\n      fallback: (config) => config,\n    });\n  }, config);\n};\n\nexport function withLegacyExpoPlugins(config: ExpoConfig) {\n  return withOptionalLegacyPlugins(config, [\n    ...new Set(expoManagedVersionedPlugins.concat(legacyExpoPlugins)),\n  ]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}