{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _execa() {\n  var data = _interopRequireDefault(require(\"execa\"));\n  _execa = function _execa() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar parseXcdeviceList = function parseXcdeviceList(text) {\n  var rawOutput = JSON.parse(text);\n  var devices = rawOutput.filter(function (device) {\n    return !device.platform.includes('appletv') && !device.platform.includes('macos');\n  }).sort(function (device) {\n    return device.simulator ? 1 : -1;\n  }).map(function (device) {\n    var _device$error;\n    return {\n      isAvailable: device.available,\n      name: device.name,\n      udid: device.identifier,\n      version: device.operatingSystemVersion,\n      availabilityError: (_device$error = device.error) === null || _device$error === void 0 ? void 0 : _device$error.description,\n      type: device.simulator ? 'simulator' : 'device'\n    };\n  });\n  return devices;\n};\nfunction listIOSDevices() {\n  return _listIOSDevices.apply(this, arguments);\n}\nfunction _listIOSDevices() {\n  _listIOSDevices = _asyncToGenerator(function* () {\n    var out = _execa().default.sync('xcrun', ['xcdevice', 'list']).stdout;\n    return parseXcdeviceList(out);\n  });\n  return _listIOSDevices.apply(this, arguments);\n}\nvar _default = listIOSDevices;\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_execa","data","_interopRequireDefault","obj","__esModule","parseXcdeviceList","text","rawOutput","JSON","parse","devices","filter","device","platform","includes","sort","simulator","map","_device$error","isAvailable","available","name","udid","identifier","version","operatingSystemVersion","availabilityError","error","description","type","listIOSDevices","_listIOSDevices","apply","arguments","out","sync","stdout","_default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-platform-ios/build/tools/listIOSDevices.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _execa() {\n  const data = _interopRequireDefault(require(\"execa\"));\n  _execa = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst parseXcdeviceList = text => {\n  const rawOutput = JSON.parse(text);\n  const devices = rawOutput.filter(device => !device.platform.includes('appletv') && !device.platform.includes('macos')).sort(device => device.simulator ? 1 : -1).map(device => {\n    var _device$error;\n    return {\n      isAvailable: device.available,\n      name: device.name,\n      udid: device.identifier,\n      version: device.operatingSystemVersion,\n      availabilityError: (_device$error = device.error) === null || _device$error === void 0 ? void 0 : _device$error.description,\n      type: device.simulator ? 'simulator' : 'device'\n    };\n  });\n  return devices;\n};\nasync function listIOSDevices() {\n  const out = _execa().default.sync('xcrun', ['xcdevice', 'list']).stdout;\n  return parseXcdeviceList(out);\n}\nvar _default = listIOSDevices;\nexports.default = _default;\n\n//# sourceMappingURL=listIOSDevices.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,SAASC,MAAMA,CAAA,EAAG;EAChB,IAAMC,IAAI,GAAGC,sBAAsB,CAACR,OAAO,CAAC,OAAO,CAAC,CAAC;EACrDM,MAAM,GAAG,SAAAA,OAAA,EAAY;IACnB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASC,sBAAsBA,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEJ,OAAO,EAAEI;EAAI,CAAC;AAAE;AAC9F,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGC,IAAI,EAAI;EAChC,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;EAClC,IAAMI,OAAO,GAAGH,SAAS,CAACI,MAAM,CAAC,UAAAC,MAAM;IAAA,OAAI,CAACA,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAACF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAAC,OAAO,CAAC;EAAA,EAAC,CAACC,IAAI,CAAC,UAAAH,MAAM;IAAA,OAAIA,MAAM,CAACI,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;EAAA,EAAC,CAACC,GAAG,CAAC,UAAAL,MAAM,EAAI;IAC7K,IAAIM,aAAa;IACjB,OAAO;MACLC,WAAW,EAAEP,MAAM,CAACQ,SAAS;MAC7BC,IAAI,EAAET,MAAM,CAACS,IAAI;MACjBC,IAAI,EAAEV,MAAM,CAACW,UAAU;MACvBC,OAAO,EAAEZ,MAAM,CAACa,sBAAsB;MACtCC,iBAAiB,EAAE,CAACR,aAAa,GAAGN,MAAM,CAACe,KAAK,MAAM,IAAI,IAAIT,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACU,WAAW;MAC3HC,IAAI,EAAEjB,MAAM,CAACI,SAAS,GAAG,WAAW,GAAG;IACzC,CAAC;EACH,CAAC,CAAC;EACF,OAAON,OAAO;AAChB,CAAC;AAAC,SACaoB,cAAcA,CAAA;EAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,gBAAA;EAAAA,eAAA,GAAAtC,iBAAA,CAA7B,aAAgC;IAC9B,IAAMyC,GAAG,GAAGlC,MAAM,CAAC,CAAC,CAACD,OAAO,CAACoC,IAAI,CAAC,OAAO,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAACC,MAAM;IACvE,OAAO/B,iBAAiB,CAAC6B,GAAG,CAAC;EAC/B,CAAC;EAAA,OAAAH,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,IAAII,QAAQ,GAAGP,cAAc;AAC7BjC,OAAO,CAACE,OAAO,GAAGsC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}