{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { Component } from 'react';\nvar TouchableOpacity = function (_Component) {\n  _inherits(TouchableOpacity, _Component);\n  var _super = _createSuper(TouchableOpacity);\n  function TouchableOpacity() {\n    _classCallCheck(this, TouchableOpacity);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(TouchableOpacity);\n}(Component);\nexport { TouchableOpacity as default };\nexport {};","map":{"version":3,"names":["Component","TouchableOpacity","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/components/touchables/TouchableOpacity.d.ts"],"sourcesContent":["import { Animated, TouchableOpacityProps } from 'react-native';\nimport { GenericTouchableProps } from './GenericTouchable';\nimport { Component } from 'react';\ninterface GHTouchableOpacityProps {\n    useNativeAnimations?: boolean;\n}\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component<TouchableOpacityProps & GenericTouchableProps & GHTouchableOpacityProps> {\n    static defaultProps: {\n        activeOpacity: number;\n        delayLongPress: number;\n        extraButtonProps: {\n            rippleColor: string;\n            exclusive: boolean;\n        };\n    };\n    getChildStyleOpacityWithDefault: () => number;\n    opacity: Animated.Value;\n    setOpacityTo: (value: number, duration: number) => void;\n    onStateChange: (_from: number, to: number) => void;\n    render(): JSX.Element;\n}\nexport {};\n"],"mappings":";;;;;;;AAEA,SAASA,SAAS,QAAQ,OAAO;AAAC,IAObC,gBAAgB,aAAAC,UAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAAA,SAAAA,iBAAA;IAAAK,eAAA,OAAAL,gBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAA,OAAAC,YAAA,CAAAR,gBAAA;AAAA,EAASD,SAAS;AAAA,SAAlCC,gBAAgB,IAAAS,OAAA;AAerC"},"metadata":{},"sourceType":"module","externalDependencies":[]}