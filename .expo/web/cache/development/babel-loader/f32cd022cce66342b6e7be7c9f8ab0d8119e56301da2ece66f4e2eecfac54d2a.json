{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { applyReviver } from \"../doc/applyReviver.js\";\nimport { NODE_TYPE, isDocument } from \"./identity.js\";\nimport { toJS as _toJS } from \"./toJS.js\";\nvar NodeBase = function () {\n  function NodeBase(type) {\n    _classCallCheck(this, NodeBase);\n    Object.defineProperty(this, NODE_TYPE, {\n      value: type\n    });\n  }\n  _createClass(NodeBase, [{\n    key: \"clone\",\n    value: function clone() {\n      var copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n      if (this.range) copy.range = this.range.slice();\n      return copy;\n    }\n  }, {\n    key: \"toJS\",\n    value: function toJS(doc) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        mapAsMap = _ref.mapAsMap,\n        maxAliasCount = _ref.maxAliasCount,\n        onAnchor = _ref.onAnchor,\n        reviver = _ref.reviver;\n      if (!isDocument(doc)) throw new TypeError('A document argument is required');\n      var ctx = {\n        anchors: new Map(),\n        doc: doc,\n        keep: true,\n        mapAsMap: mapAsMap === true,\n        mapKeyWarned: false,\n        maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n      };\n      var res = _toJS(this, '', ctx);\n      if (typeof onAnchor === 'function') for (var _ref2 of ctx.anchors.values()) {\n        var count = _ref2.count;\n        var _res = _ref2.res;\n        onAnchor(_res, count);\n      }\n      return typeof reviver === 'function' ? applyReviver(reviver, {\n        '': res\n      }, '', res) : res;\n    }\n  }]);\n  return NodeBase;\n}();\nexport { NodeBase };","map":{"version":3,"names":["applyReviver","NODE_TYPE","isDocument","toJS","NodeBase","type","_classCallCheck","Object","defineProperty","value","_createClass","key","clone","copy","create","getPrototypeOf","getOwnPropertyDescriptors","range","slice","doc","_ref","arguments","length","undefined","mapAsMap","maxAliasCount","onAnchor","reviver","TypeError","ctx","anchors","Map","keep","mapKeyWarned","res","_ref2","values","count"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/browser/dist/nodes/Node.js"],"sourcesContent":["import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n"],"mappings":";;AAAA,SAASA,YAAY;AACrB,SAASC,SAAS,EAAEC,UAAU;AAC9B,SAASC,IAAI,IAAJA,KAAI;AAAoB,IAE3BC,QAAQ;EACV,SAAAA,SAAYC,IAAI,EAAE;IAAAC,eAAA,OAAAF,QAAA;IACdG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,SAAS,EAAE;MAAEQ,KAAK,EAAEJ;IAAK,CAAC,CAAC;EAC3D;EAACK,YAAA,CAAAN,QAAA;IAAAO,GAAA;IAAAF,KAAA,EAED,SAAAG,MAAA,EAAQ;MACJ,IAAMC,IAAI,GAAGN,MAAM,CAACO,MAAM,CAACP,MAAM,CAACQ,cAAc,CAAC,IAAI,CAAC,EAAER,MAAM,CAACS,yBAAyB,CAAC,IAAI,CAAC,CAAC;MAC/F,IAAI,IAAI,CAACC,KAAK,EACVJ,IAAI,CAACI,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,KAAK,CAAC,CAAC;MACnC,OAAOL,IAAI;IACf;EAAC;IAAAF,GAAA;IAAAF,KAAA,EAED,SAAAN,KAAKgB,GAAG,EAAuD;MAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAJ,CAAC,CAAC;QAAjDG,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;QAAEC,aAAa,GAAAL,IAAA,CAAbK,aAAa;QAAEC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;QAAEC,OAAO,GAAAP,IAAA,CAAPO,OAAO;MAClD,IAAI,CAACzB,UAAU,CAACiB,GAAG,CAAC,EAChB,MAAM,IAAIS,SAAS,CAAC,iCAAiC,CAAC;MAC1D,IAAMC,GAAG,GAAG;QACRC,OAAO,EAAE,IAAIC,GAAG,CAAC,CAAC;QAClBZ,GAAG,EAAHA,GAAG;QACHa,IAAI,EAAE,IAAI;QACVR,QAAQ,EAAEA,QAAQ,KAAK,IAAI;QAC3BS,YAAY,EAAE,KAAK;QACnBR,aAAa,EAAE,OAAOA,aAAa,KAAK,QAAQ,GAAGA,aAAa,GAAG;MACvE,CAAC;MACD,IAAMS,GAAG,GAAG/B,KAAI,CAAC,IAAI,EAAE,EAAE,EAAE0B,GAAG,CAAC;MAC/B,IAAI,OAAOH,QAAQ,KAAK,UAAU,EAC9B,SAAAS,KAAA,IAA6BN,GAAG,CAACC,OAAO,CAACM,MAAM,CAAC,CAAC;QAAA,IAApCC,KAAK,GAAAF,KAAA,CAALE,KAAK;QAAA,IAAEH,IAAG,GAAAC,KAAA,CAAHD,GAAG;QACnBR,QAAQ,CAACQ,IAAG,EAAEG,KAAK,CAAC;MAAC;MAC7B,OAAO,OAAOV,OAAO,KAAK,UAAU,GAC9B3B,YAAY,CAAC2B,OAAO,EAAE;QAAE,EAAE,EAAEO;MAAI,CAAC,EAAE,EAAE,EAAEA,GAAG,CAAC,GAC3CA,GAAG;IACb;EAAC;EAAA,OAAA9B,QAAA;AAAA;AAGL,SAASA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}