{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/stringify/foldFlowLines.d.ts"],"sourcesContent":["export declare const FOLD_FLOW = \"flow\";\nexport declare const FOLD_BLOCK = \"block\";\nexport declare const FOLD_QUOTED = \"quoted\";\n/**\n * `'block'` prevents more-indented lines from being folded;\n * `'quoted'` allows for `\\` escapes, including escaped newlines\n */\nexport type FoldMode = 'flow' | 'block' | 'quoted';\nexport interface FoldOptions {\n    /**\n     * Accounts for leading contents on the first line, defaulting to\n     * `indent.length`\n     */\n    indentAtStart?: number;\n    /** Default: `80` */\n    lineWidth?: number;\n    /**\n     * Allow highly indented lines to stretch the line width or indent content\n     * from the start.\n     *\n     * Default: `20`\n     */\n    minContentWidth?: number;\n    /** Called once if the text is folded */\n    onFold?: () => void;\n    /** Called once if any line of text exceeds lineWidth characters */\n    onOverflow?: () => void;\n}\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nexport declare function foldFlowLines(text: string, indent: string, mode?: FoldMode, { indentAtStart, lineWidth, minContentWidth, onFold, onOverflow }?: FoldOptions): string;\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}