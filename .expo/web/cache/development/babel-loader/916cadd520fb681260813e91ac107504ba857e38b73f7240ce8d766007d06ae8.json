{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _expoMiddleware = require(\"./ExpoMiddleware\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:start:server:middleware:createFile\");\nvar CreateFileMiddleware = function (_expoMiddleware$ExpoM) {\n  _inherits(CreateFileMiddleware, _expoMiddleware$ExpoM);\n  var _super = _createSuper(CreateFileMiddleware);\n  function CreateFileMiddleware(projectRoot) {\n    var _this;\n    _classCallCheck(this, CreateFileMiddleware);\n    _this = _super.call(this, projectRoot, [\"/_expo/touch\"]);\n    _this.projectRoot = projectRoot;\n    return _this;\n  }\n  _createClass(CreateFileMiddleware, [{\n    key: \"resolvePath\",\n    value: function resolvePath(inputPath) {\n      return this.resolveExtension(_path.default.join(this.projectRoot, inputPath));\n    }\n  }, {\n    key: \"resolveExtension\",\n    value: function resolveExtension(inputPath) {\n      var resolvedPath = inputPath;\n      var extension = _path.default.extname(inputPath);\n      if (extension === \".js\") {\n        var tsconfigPath = _path.default.join(this.projectRoot, \"tsconfig.json\");\n        if (_fs.default.existsSync(tsconfigPath)) {\n          resolvedPath = resolvedPath.replace(/\\.js$/, \".tsx\");\n        }\n      }\n      return resolvedPath;\n    }\n  }, {\n    key: \"parseRawBody\",\n    value: function () {\n      var _parseRawBody = _asyncToGenerator(function* (req) {\n        var rawBody = yield new Promise(function (resolve, reject) {\n          var body = \"\";\n          req.on(\"data\", function (chunk) {\n            body += chunk.toString();\n          });\n          req.on(\"end\", function () {\n            resolve(body);\n          });\n          req.on(\"error\", function (err) {\n            reject(err);\n          });\n        });\n        var properties = JSON.parse(rawBody);\n        this.assertTouchFileBody(properties);\n        return properties;\n      });\n      function parseRawBody(_x) {\n        return _parseRawBody.apply(this, arguments);\n      }\n      return parseRawBody;\n    }()\n  }, {\n    key: \"assertTouchFileBody\",\n    value: function assertTouchFileBody(body) {\n      if (typeof body !== \"object\" || body == null) {\n        throw new Error(\"Expected object\");\n      }\n      if (typeof body.path !== \"string\") {\n        throw new Error('Expected \"path\" in body to be string');\n      }\n      if (typeof body.contents !== \"string\") {\n        throw new Error('Expected \"contents\" in body to be string');\n      }\n    }\n  }, {\n    key: \"handleRequestAsync\",\n    value: function () {\n      var _handleRequestAsync = _asyncToGenerator(function* (req, res) {\n        if (req.method !== \"POST\") {\n          res.statusCode = 405;\n          res.end(\"Method Not Allowed\");\n          return;\n        }\n        var properties;\n        try {\n          properties = yield this.parseRawBody(req);\n        } catch (e) {\n          debug(\"Error parsing request body\", e);\n          res.statusCode = 400;\n          res.end(\"Bad Request\");\n          return;\n        }\n        debug(`Requested: %O`, properties);\n        var resolvedPath = properties.absolutePath ? this.resolveExtension(_path.default.resolve(properties.absolutePath)) : this.resolvePath(properties.path);\n        if (_fs.default.existsSync(resolvedPath)) {\n          res.statusCode = 409;\n          res.end(\"File already exists.\");\n          return;\n        }\n        debug(`Resolved path:`, resolvedPath);\n        try {\n          yield _fs.default.promises.mkdir(_path.default.dirname(resolvedPath), {\n            recursive: true\n          });\n          yield _fs.default.promises.writeFile(resolvedPath, properties.contents, \"utf8\");\n        } catch (e1) {\n          debug(\"Error writing file\", e1);\n          res.statusCode = 500;\n          res.end(\"Error writing file.\");\n          return;\n        }\n        debug(`File created`);\n        res.statusCode = 200;\n        res.end(\"OK\");\n      });\n      function handleRequestAsync(_x2, _x3) {\n        return _handleRequestAsync.apply(this, arguments);\n      }\n      return handleRequestAsync;\n    }()\n  }]);\n  return CreateFileMiddleware;\n}(_expoMiddleware.ExpoMiddleware);\nexports.CreateFileMiddleware = CreateFileMiddleware;","map":{"version":3,"names":["_asyncToGenerator","require","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_fs","_interopRequireDefault","_path","_expoMiddleware","debug","CreateFileMiddleware","_expoMiddleware$ExpoM","_super","projectRoot","_this","key","value","resolvePath","inputPath","resolveExtension","default","join","resolvedPath","extension","extname","tsconfigPath","existsSync","replace","_parseRawBody","req","rawBody","Promise","resolve","reject","body","on","chunk","toString","err","properties","JSON","parse","assertTouchFileBody","parseRawBody","_x","Error","path","contents","_handleRequestAsync","res","method","statusCode","end","absolutePath","promises","mkdir","dirname","recursive","writeFile","e1","handleRequestAsync","_x2","_x3","ExpoMiddleware"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\middleware\\CreateFileMiddleware.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport fs from 'fs';\nimport path from 'path';\n\nimport { ExpoMiddleware } from './ExpoMiddleware';\nimport { ServerRequest, ServerResponse } from './server.types';\n\nconst debug = require('debug')('expo:start:server:middleware:createFile') as typeof console.log;\n\nexport type TouchFileBody = {\n  /** @deprecated */\n  path: string;\n  absolutePath?: string;\n  contents: string;\n};\n\n/**\n * Middleware for creating a file given a `POST` request with\n * `{ contents: string, path: string }` in the body.\n */\nexport class CreateFileMiddleware extends ExpoMiddleware {\n  constructor(protected projectRoot: string) {\n    super(projectRoot, ['/_expo/touch']);\n  }\n\n  protected resolvePath(inputPath: string): string {\n    return this.resolveExtension(path.join(this.projectRoot, inputPath));\n  }\n\n  protected resolveExtension(inputPath: string): string {\n    let resolvedPath = inputPath;\n    const extension = path.extname(inputPath);\n    if (extension === '.js') {\n      // Automatically convert JS files to TS files when added to a project\n      // with TypeScript.\n      const tsconfigPath = path.join(this.projectRoot, 'tsconfig.json');\n      if (fs.existsSync(tsconfigPath)) {\n        resolvedPath = resolvedPath.replace(/\\.js$/, '.tsx');\n      }\n    }\n\n    return resolvedPath;\n  }\n\n  protected async parseRawBody(req: ServerRequest): Promise<TouchFileBody> {\n    const rawBody = await new Promise<string>((resolve, reject) => {\n      let body = '';\n      req.on('data', (chunk) => {\n        body += chunk.toString();\n      });\n      req.on('end', () => {\n        resolve(body);\n      });\n      req.on('error', (err) => {\n        reject(err);\n      });\n    });\n\n    const properties = JSON.parse(rawBody);\n    this.assertTouchFileBody(properties);\n\n    return properties;\n  }\n\n  private assertTouchFileBody(body: any): asserts body is TouchFileBody {\n    if (typeof body !== 'object' || body == null) {\n      throw new Error('Expected object');\n    }\n    if (typeof body.path !== 'string') {\n      throw new Error('Expected \"path\" in body to be string');\n    }\n    if (typeof body.contents !== 'string') {\n      throw new Error('Expected \"contents\" in body to be string');\n    }\n  }\n\n  async handleRequestAsync(req: ServerRequest, res: ServerResponse): Promise<void> {\n    if (req.method !== 'POST') {\n      res.statusCode = 405;\n      res.end('Method Not Allowed');\n      return;\n    }\n\n    let properties: TouchFileBody;\n\n    try {\n      properties = await this.parseRawBody(req);\n    } catch (e) {\n      debug('Error parsing request body', e);\n      res.statusCode = 400;\n      res.end('Bad Request');\n      return;\n    }\n\n    debug(`Requested: %O`, properties);\n\n    const resolvedPath = properties.absolutePath\n      ? this.resolveExtension(path.resolve(properties.absolutePath))\n      : this.resolvePath(properties.path);\n\n    if (fs.existsSync(resolvedPath)) {\n      res.statusCode = 409;\n      res.end('File already exists.');\n      return;\n    }\n\n    debug(`Resolved path:`, resolvedPath);\n\n    try {\n      await fs.promises.mkdir(path.dirname(resolvedPath), { recursive: true });\n      await fs.promises.writeFile(resolvedPath, properties.contents, 'utf8');\n    } catch (e) {\n      debug('Error writing file', e);\n      res.statusCode = 500;\n      res.end('Error writing file.');\n      return;\n    }\n\n    debug(`File created`);\n    res.statusCode = 200;\n    res.end('OK');\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}