{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/prebuild-config/node_modules/@expo/image-utils/build/jimp.d.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport Jimp from 'jimp-compact';\nimport { ResizeOptions, SharpCommandOptions, SharpGlobalOptions } from './sharp.types';\ndeclare type JimpGlobalOptions = Omit<SharpGlobalOptions, 'input'> & {\n    input: string | Buffer | Jimp;\n    originalInput: string;\n};\nexport declare function resizeBufferAsync(buffer: Buffer, sizes: number[]): Promise<Buffer[]>;\nexport declare function convertFormat(format?: string): string | undefined;\nexport declare function jimpAsync(options: JimpGlobalOptions, commands?: SharpCommandOptions[]): Promise<Buffer>;\nexport declare function isFolderAsync(path: string): Promise<boolean>;\nexport declare function circleAsync(jimp: Jimp): Promise<Jimp>;\nexport declare function getJimpImageAsync(input: string | Buffer | Jimp): Promise<Jimp>;\nexport declare function resize({ input, quality }: JimpGlobalOptions, { background, position, fit, width, height }: Omit<ResizeOptions, 'operation'>): Promise<Jimp>;\nexport {};\n"],"mappings":"AAcA"},"metadata":{},"sourceType":"module","externalDependencies":[]}