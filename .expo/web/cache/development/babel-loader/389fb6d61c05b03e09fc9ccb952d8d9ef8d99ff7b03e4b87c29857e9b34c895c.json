{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRootViewBackgroundColor = getRootViewBackgroundColor;\nexports.withRootViewBackgroundColorStyles = exports.withRootViewBackgroundColorColors = exports.withAndroidRootViewBackgroundColor = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nvar assignColorValue = _configPlugins().AndroidConfig.Colors.assignColorValue;\nvar _configPlugins$Androi = _configPlugins().AndroidConfig.Styles,\n  assignStylesValue = _configPlugins$Androi.assignStylesValue,\n  getAppThemeLightNoActionBarGroup = _configPlugins$Androi.getAppThemeLightNoActionBarGroup;\nvar ANDROID_WINDOW_BACKGROUND = 'android:windowBackground';\nvar WINDOW_BACKGROUND_COLOR = 'activityBackground';\nvar withAndroidRootViewBackgroundColor = function withAndroidRootViewBackgroundColor(config) {\n  config = withRootViewBackgroundColorColors(config);\n  config = withRootViewBackgroundColorStyles(config);\n  return config;\n};\nexports.withAndroidRootViewBackgroundColor = withAndroidRootViewBackgroundColor;\nvar withRootViewBackgroundColorColors = function withRootViewBackgroundColorColors(config) {\n  return (0, _configPlugins().withAndroidColors)(config, function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      config.modResults = assignColorValue(config.modResults, {\n        value: getRootViewBackgroundColor(config),\n        name: WINDOW_BACKGROUND_COLOR\n      });\n      return config;\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};\nexports.withRootViewBackgroundColorColors = withRootViewBackgroundColorColors;\nvar withRootViewBackgroundColorStyles = function withRootViewBackgroundColorStyles(config) {\n  return (0, _configPlugins().withAndroidStyles)(config, function () {\n    var _ref2 = _asyncToGenerator(function* (config) {\n      config.modResults = assignStylesValue(config.modResults, {\n        add: !!getRootViewBackgroundColor(config),\n        parent: getAppThemeLightNoActionBarGroup(),\n        name: ANDROID_WINDOW_BACKGROUND,\n        value: `@color/${WINDOW_BACKGROUND_COLOR}`\n      });\n      return config;\n    });\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n};\nexports.withRootViewBackgroundColorStyles = withRootViewBackgroundColorStyles;\nfunction getRootViewBackgroundColor(config) {\n  var _config$android;\n  return ((_config$android = config.android) === null || _config$android === void 0 ? void 0 : _config$android.backgroundColor) || config.backgroundColor || null;\n}","map":{"version":3,"names":["_configPlugins","data","require","assignColorValue","AndroidConfig","Colors","_configPlugins$Androi","Styles","assignStylesValue","getAppThemeLightNoActionBarGroup","ANDROID_WINDOW_BACKGROUND","WINDOW_BACKGROUND_COLOR","withAndroidRootViewBackgroundColor","config","withRootViewBackgroundColorColors","withRootViewBackgroundColorStyles","exports","withAndroidColors","_ref","_asyncToGenerator","modResults","value","getRootViewBackgroundColor","name","_x","apply","arguments","withAndroidStyles","_ref2","add","parent","_x2","_config$android","android","backgroundColor"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-system-ui\\withAndroidRootViewBackgroundColor.ts"],"sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  withAndroidColors,\n  withAndroidStyles,\n} from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nconst { assignColorValue } = AndroidConfig.Colors;\nconst { assignStylesValue, getAppThemeLightNoActionBarGroup } = AndroidConfig.Styles;\n\nconst ANDROID_WINDOW_BACKGROUND = 'android:windowBackground';\nconst WINDOW_BACKGROUND_COLOR = 'activityBackground';\n\nexport const withAndroidRootViewBackgroundColor: ConfigPlugin = (config) => {\n  config = withRootViewBackgroundColorColors(config);\n  config = withRootViewBackgroundColorStyles(config);\n  return config;\n};\n\nexport const withRootViewBackgroundColorColors: ConfigPlugin = (config) => {\n  return withAndroidColors(config, async (config) => {\n    config.modResults = assignColorValue(config.modResults, {\n      value: getRootViewBackgroundColor(config),\n      name: WINDOW_BACKGROUND_COLOR,\n    });\n    return config;\n  });\n};\n\nexport const withRootViewBackgroundColorStyles: ConfigPlugin = (config) => {\n  return withAndroidStyles(config, async (config) => {\n    config.modResults = assignStylesValue(config.modResults, {\n      add: !!getRootViewBackgroundColor(config),\n      parent: getAppThemeLightNoActionBarGroup(),\n      name: ANDROID_WINDOW_BACKGROUND,\n      value: `@color/${WINDOW_BACKGROUND_COLOR}`,\n    });\n    return config;\n  });\n};\n\nexport function getRootViewBackgroundColor(\n  config: Pick<ExpoConfig, 'android' | 'backgroundColor'>\n) {\n  return config.android?.backgroundColor || config.backgroundColor || null;\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAQA,IAAQE,gBAAA,GAAqBH,cAAA,GAAAI,aAAa,CAACC,MAAM,CAAzCF,gBAAA;AACR,IAAAG,qBAAA,GAAgEN,cAAA,GAAAI,aAAa,CAACG,MAAM;EAA5EC,iBAAiB,GAAAF,qBAAA,CAAjBE,iBAAiB;EAAEC,gCAAA,GAAAH,qBAAA,CAAAG,gCAAA;AAE3B,IAAMC,yBAAyB,GAAG,0BAA0B;AAC5D,IAAMC,uBAAuB,GAAG,oBAAoB;AAE7C,IAAMC,kCAAgD,GAAI,SAApDA,kCAAgDA,CAAIC,MAAM,EAAK;EAC1EA,MAAM,GAAGC,iCAAiC,CAACD,MAAM,CAAC;EAClDA,MAAM,GAAGE,iCAAiC,CAACF,MAAM,CAAC;EAClD,OAAOA,MAAM;AACf,CAAC;AAACG,OAAA,CAAAJ,kCAAA,GAAAA,kCAAA;AAEK,IAAME,iCAA+C,GAAI,SAAnDA,iCAA+CA,CAAID,MAAM,EAAK;EACzE,OAAO,IAAAb,cAAA,GAAAiB,iBAAiB,EAACJ,MAAM;IAAA,IAAAK,IAAA,GAAAC,iBAAA,CAAE,WAAON,MAAM,EAAK;MACjDA,MAAM,CAACO,UAAU,GAAGjB,gBAAgB,CAACU,MAAM,CAACO,UAAU,EAAE;QACtDC,KAAK,EAAEC,0BAA0B,CAACT,MAAM,CAAC;QACzCU,IAAI,EAAEZ;MACR,CAAC,CAAC;MACF,OAAOE,MAAM;IACf,CAAC;IAAA,iBAAAW,EAAA;MAAA,OAAAN,IAAA,CAAAO,KAAA,OAAAC,SAAA;IAAA;EAAA,IAAC;AACJ,CAAC;AAACV,OAAA,CAAAF,iCAAA,GAAAA,iCAAA;AAEK,IAAMC,iCAA+C,GAAI,SAAnDA,iCAA+CA,CAAIF,MAAM,EAAK;EACzE,OAAO,IAAAb,cAAA,GAAA2B,iBAAiB,EAACd,MAAM;IAAA,IAAAe,KAAA,GAAAT,iBAAA,CAAE,WAAON,MAAM,EAAK;MACjDA,MAAM,CAACO,UAAU,GAAGZ,iBAAiB,CAACK,MAAM,CAACO,UAAU,EAAE;QACvDS,GAAG,EAAE,CAAC,CAACP,0BAA0B,CAACT,MAAM,CAAC;QACzCiB,MAAM,EAAErB,gCAAgC,EAAE;QAC1Cc,IAAI,EAAEb,yBAAyB;QAC/BW,KAAK,EAAG,UAASV,uBAAwB;MAC3C,CAAC,CAAC;MACF,OAAOE,MAAM;IACf,CAAC;IAAA,iBAAAkB,GAAA;MAAA,OAAAH,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,IAAC;AACJ,CAAC;AAACV,OAAA,CAAAD,iCAAA,GAAAA,iCAAA;AAEK,SAASO,0BAA0BA,CACxCT,MAAuD,EACvD;EAAA,IAAAmB,eAAA;EACA,OAAO,EAAAA,eAAA,GAAAnB,MAAM,CAACoB,OAAO,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,eAAe,KAAIrB,MAAM,CAACqB,eAAe,IAAI,IAAI;AAC1E"},"metadata":{},"sourceType":"script","externalDependencies":[]}