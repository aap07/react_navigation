{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _readline() {\n  var data = _interopRequireDefault(require(\"readline\"));\n  _readline = function _readline() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _execa() {\n  var data = _interopRequireDefault(require(\"execa\"));\n  _execa = function _execa() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction printWatchModeInstructions() {\n  _cliTools().logger.log(`${_chalk().default.bold('r')} - reload the app\\n${_chalk().default.bold('d')} - open developer menu\\n${_chalk().default.bold('i')} - run on iOS\\n${_chalk().default.bold('a')} - run on Android`);\n}\nfunction enableWatchMode(messageSocket) {\n  if (!process.stdin.setRawMode) {\n    _cliTools().logger.debug('Watch mode is not supported in this environment');\n    return;\n  }\n  _readline().default.emitKeypressEvents(process.stdin);\n  process.stdin.setRawMode(true);\n  var restore = (0, _cliTools().hookStdout)(function (output) {\n    if (output.includes('Fast - Scalable - Integrated')) {\n      printWatchModeInstructions();\n      restore();\n    }\n  });\n  process.stdin.on('keypress', function (_key, data) {\n    var ctrl = data.ctrl,\n      name = data.name;\n    if (ctrl === true) {\n      switch (name) {\n        case 'c':\n          process.exit();\n          break;\n        case 'z':\n          process.emit('SIGTSTP', 'SIGTSTP');\n          break;\n      }\n    } else if (name === 'r') {\n      messageSocket.broadcast('reload', null);\n      _cliTools().logger.info('Reloading app...');\n    } else if (name === 'd') {\n      messageSocket.broadcast('devMenu', null);\n      _cliTools().logger.info('Opening developer menu...');\n    } else if (name === 'i' || name === 'a') {\n      var _execa$stdout;\n      _cliTools().logger.info(`Opening the app on ${name === 'i' ? 'iOS' : 'Android'}...`);\n      (_execa$stdout = (0, _execa().default)('npx', ['react-native', name === 'i' ? 'run-ios' : 'run-android']).stdout) === null || _execa$stdout === void 0 ? void 0 : _execa$stdout.pipe(process.stdout);\n    } else {\n      console.log(_key);\n    }\n  });\n}\nvar _default = enableWatchMode;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_readline","data","_interopRequireDefault","require","_cliTools","_execa","_chalk","obj","__esModule","printWatchModeInstructions","logger","log","bold","enableWatchMode","messageSocket","process","stdin","setRawMode","debug","emitKeypressEvents","restore","hookStdout","output","includes","on","_key","ctrl","name","exit","emit","broadcast","info","_execa$stdout","stdout","pipe","console","_default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-plugin-metro/build/commands/start/watchMode.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _readline() {\n  const data = _interopRequireDefault(require(\"readline\"));\n  _readline = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _execa() {\n  const data = _interopRequireDefault(require(\"execa\"));\n  _execa = function () {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction printWatchModeInstructions() {\n  _cliTools().logger.log(`${_chalk().default.bold('r')} - reload the app\\n${_chalk().default.bold('d')} - open developer menu\\n${_chalk().default.bold('i')} - run on iOS\\n${_chalk().default.bold('a')} - run on Android`);\n}\nfunction enableWatchMode(messageSocket) {\n  // We need to set this to true to catch key presses individually.\n  // As a result we have to implement our own method for exiting\n  // and other commands (e.g. ctrl+c & ctrl+z)\n  if (!process.stdin.setRawMode) {\n    _cliTools().logger.debug('Watch mode is not supported in this environment');\n    return;\n  }\n  _readline().default.emitKeypressEvents(process.stdin);\n  process.stdin.setRawMode(true);\n\n  // We have no way of knowing when the dependency graph is done loading\n  // except by hooking into stdout itself. We want to print instructions\n  // right after its done loading.\n  const restore = (0, _cliTools().hookStdout)(output => {\n    if (output.includes('Fast - Scalable - Integrated')) {\n      printWatchModeInstructions();\n      restore();\n    }\n  });\n  process.stdin.on('keypress', (_key, data) => {\n    const {\n      ctrl,\n      name\n    } = data;\n    if (ctrl === true) {\n      switch (name) {\n        case 'c':\n          process.exit();\n          break;\n        case 'z':\n          process.emit('SIGTSTP', 'SIGTSTP');\n          break;\n      }\n    } else if (name === 'r') {\n      messageSocket.broadcast('reload', null);\n      _cliTools().logger.info('Reloading app...');\n    } else if (name === 'd') {\n      messageSocket.broadcast('devMenu', null);\n      _cliTools().logger.info('Opening developer menu...');\n    } else if (name === 'i' || name === 'a') {\n      var _execa$stdout;\n      _cliTools().logger.info(`Opening the app on ${name === 'i' ? 'iOS' : 'Android'}...`);\n      (_execa$stdout = (0, _execa().default)('npx', ['react-native', name === 'i' ? 'run-ios' : 'run-android']).stdout) === null || _execa$stdout === void 0 ? void 0 : _execa$stdout.pipe(process.stdout);\n    } else {\n      console.log(_key);\n    }\n  });\n}\nvar _default = enableWatchMode;\nexports.default = _default;\n\n//# sourceMappingURL=watchMode.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}