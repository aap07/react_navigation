{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Runner = exports.switchRegex = exports.ExpoRunFormatter = exports.PodfileTracer = exports.MetroParser = exports.Parser = void 0;\nvar Runner = __importStar(require(\"./Runner\"));\nexports.Runner = Runner;\nvar Parser_1 = require(\"./Parser\");\nObject.defineProperty(exports, \"Parser\", {\n  enumerable: true,\n  get: function get() {\n    return Parser_1.Parser;\n  }\n});\nvar MetroParser_1 = require(\"./MetroParser\");\nObject.defineProperty(exports, \"MetroParser\", {\n  enumerable: true,\n  get: function get() {\n    return MetroParser_1.MetroParser;\n  }\n});\nvar PodfileTracer_1 = require(\"./utils/PodfileTracer\");\nObject.defineProperty(exports, \"PodfileTracer\", {\n  enumerable: true,\n  get: function get() {\n    return PodfileTracer_1.PodfileTracer;\n  }\n});\nvar ExpoRunFormatter_1 = require(\"./ExpoRunFormatter\");\nObject.defineProperty(exports, \"ExpoRunFormatter\", {\n  enumerable: true,\n  get: function get() {\n    return ExpoRunFormatter_1.ExpoRunFormatter;\n  }\n});\n__exportStar(require(\"./Formatter\"), exports);\nvar switchRegex_1 = require(\"./switchRegex\");\nObject.defineProperty(exports, \"switchRegex\", {\n  enumerable: true,\n  get: function get() {\n    return switchRegex_1.switchRegex;\n  }\n});","map":{"version":3,"names":["Runner","__importStar","require","exports","Parser_1","Object","defineProperty","enumerable","get","Parser","MetroParser_1","MetroParser","PodfileTracer_1","PodfileTracer","ExpoRunFormatter_1","ExpoRunFormatter","__exportStar","switchRegex_1","switchRegex"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\xcpretty\\src\\index.ts"],"sourcesContent":["import * as Runner from './Runner';\n\nexport { Parser } from './Parser';\nexport { MetroParser } from './MetroParser';\nexport { PodfileTracer } from './utils/PodfileTracer';\nexport { ExpoRunFormatter, ExpoRunFormatterProps } from './ExpoRunFormatter';\nexport * from './Formatter';\nexport { switchRegex } from './switchRegex';\nexport { Runner };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,YAAA,CAAAC,OAAA;AAQSC,OAAA,CAAAH,MAAA,GAAAA,MAAA;AANT,IAAAI,QAAA,GAAAF,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAH,OAAA;EAAAI,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAJ,QAAA,CAAAK,MAAM;EAAA;AAAA;AACf,IAAAC,aAAA,GAAAR,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAH,OAAA;EAAAI,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAE,aAAA,CAAAC,WAAW;EAAA;AAAA;AACpB,IAAAC,eAAA,GAAAV,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAH,OAAA;EAAAI,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAI,eAAA,CAAAC,aAAa;EAAA;AAAA;AACtB,IAAAC,kBAAA,GAAAZ,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAH,OAAA;EAAAI,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAM,kBAAA,CAAAC,gBAAgB;EAAA;AAAA;AACzBC,YAAA,CAAAd,OAAA,iBAAAC,OAAA;AACA,IAAAc,aAAA,GAAAf,OAAA;AAASG,MAAA,CAAAC,cAAA,CAAAH,OAAA;EAAAI,UAAA;EAAAC,GAAA,WAAAA,IAAA;IAAA,OAAAS,aAAA,CAAAC,WAAW;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}