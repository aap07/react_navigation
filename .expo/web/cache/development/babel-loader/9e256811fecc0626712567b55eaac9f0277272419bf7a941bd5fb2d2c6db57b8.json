{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateEnvironment = exports.setEnvironment = void 0;\nvar _executeWinCommand = require(\"./executeWinCommand\");\nvar setEnvironment = function () {\n  var _ref = _asyncToGenerator(function* (variable, value) {\n    var command = `setx ${variable} \"${value}\"`;\n    yield (0, _executeWinCommand.executeCommand)(command);\n    process.env[variable] = value;\n  });\n  return function setEnvironment(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.setEnvironment = setEnvironment;\nvar updateEnvironment = function () {\n  var _ref2 = _asyncToGenerator(function* (variable, value) {\n    var envVariable = process.env[variable] || '';\n    if (variable === 'PATH' && envVariable.includes(`${value};`)) {\n      return;\n    }\n    var command = `for /f \"skip=2 tokens=3*\" %a in ('reg query HKCU\\\\Environment /v ${variable}') do @if [%b]==[] ( @setx ${variable} \"${value};%~a\" ) else ( @setx ${variable} \"${value};%~a %~b\" )\n  `;\n    yield (0, _executeWinCommand.executeCommand)(command);\n    process.env[variable] = `${process.env[variable]}${value};`;\n  });\n  return function updateEnvironment(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.updateEnvironment = updateEnvironment;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","updateEnvironment","setEnvironment","_executeWinCommand","_ref","variable","command","executeCommand","process","env","_x","_x2","apply","arguments","_ref2","envVariable","includes","_x3","_x4"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/windows/environmentVariables.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateEnvironment = exports.setEnvironment = void 0;\nvar _executeWinCommand = require(\"./executeWinCommand\");\n/**\n * Creates a new variable in the user's environment\n */\nconst setEnvironment = async (variable, value) => {\n  // https://superuser.com/a/601034\n  const command = `setx ${variable} \"${value}\"`;\n  await (0, _executeWinCommand.executeCommand)(command);\n  process.env[variable] = value;\n};\n\n/**\n * Prepends the given `value` to the user's environment `variable`.\n * @param {string} variable The environment variable to modify\n * @param {string} value The value to add to the variable\n * @returns {Promise<void>}\n */\nexports.setEnvironment = setEnvironment;\nconst updateEnvironment = async (variable, value) => {\n  // Avoid adding the value multiple times to PATH\n  // Need to do the following to avoid TSLint complaining about possible\n  // undefined values even if I check before via `typeof` or another way\n  const envVariable = process.env[variable] || '';\n  if (variable === 'PATH' && envVariable.includes(`${value};`)) {\n    return;\n  }\n  // https://superuser.com/a/601034\n  const command = `for /f \"skip=2 tokens=3*\" %a in ('reg query HKCU\\\\Environment /v ${variable}') do @if [%b]==[] ( @setx ${variable} \"${value};%~a\" ) else ( @setx ${variable} \"${value};%~a %~b\" )\n  `;\n  await (0, _executeWinCommand.executeCommand)(command);\n  process.env[variable] = `${process.env[variable]}${value};`;\n};\nexports.updateEnvironment = updateEnvironment;\n\n//# sourceMappingURL=environmentVariables.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,cAAc,GAAG,KAAK,CAAC;AAC3D,IAAIC,kBAAkB,GAAGP,OAAO,sBAAsB,CAAC;AAIvD,IAAMM,cAAc;EAAA,IAAAE,IAAA,GAAAT,iBAAA,CAAG,WAAOU,QAAQ,EAAEL,KAAK,EAAK;IAEhD,IAAMM,OAAO,GAAI,QAAOD,QAAS,KAAIL,KAAM,GAAE;IAC7C,MAAM,CAAC,CAAC,EAAEG,kBAAkB,CAACI,cAAc,EAAED,OAAO,CAAC;IACrDE,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,GAAGL,KAAK;EAC/B,CAAC;EAAA,gBALKE,cAAcA,CAAAQ,EAAA,EAAAC,GAAA;IAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;EAAA;AAAA,GAKnB;AAQDd,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC,IAAMD,iBAAiB;EAAA,IAAAa,KAAA,GAAAnB,iBAAA,CAAG,WAAOU,QAAQ,EAAEL,KAAK,EAAK;IAInD,IAAMe,WAAW,GAAGP,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,IAAI,EAAE;IAC/C,IAAIA,QAAQ,KAAK,MAAM,IAAIU,WAAW,CAACC,QAAQ,CAAE,GAAEhB,KAAM,GAAE,CAAC,EAAE;MAC5D;IACF;IAEA,IAAMM,OAAO,GAAI,oEAAmED,QAAS,8BAA6BA,QAAS,KAAIL,KAAM,wBAAuBK,QAAS,KAAIL,KAAM;AACzL,GAAG;IACD,MAAM,CAAC,CAAC,EAAEG,kBAAkB,CAACI,cAAc,EAAED,OAAO,CAAC;IACrDE,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,GAAI,GAAEG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAE,GAAEL,KAAM,GAAE;EAC7D,CAAC;EAAA,gBAbKC,iBAAiBA,CAAAgB,GAAA,EAAAC,GAAA;IAAA,OAAAJ,KAAA,CAAAF,KAAA,OAAAC,SAAA;EAAA;AAAA,GAatB;AACDd,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}