{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nvar _downloadProfile = require(\"./downloadProfile\");\nfunction profileHermes(_x, _x2, _x3) {\n  return _profileHermes.apply(this, arguments);\n}\nfunction _profileHermes() {\n  _profileHermes = _asyncToGenerator(function* (_ref, ctx, options) {\n    var _ref2 = _slicedToArray(_ref, 1),\n      dstPath = _ref2[0];\n    try {\n      _cliTools().logger.info('Downloading a Hermes Sampling Profiler from your Android device...');\n      if (!options.filename) {\n        _cliTools().logger.info('No filename is provided, pulling latest file');\n      }\n      yield (0, _downloadProfile.downloadProfile)(ctx, dstPath, options.filename, options.sourcemapPath, options.raw, options.generateSourcemap, options.port, options.appId, options.appIdSuffix);\n    } catch (err) {\n      throw err;\n    }\n  });\n  return _profileHermes.apply(this, arguments);\n}\nvar _default = {\n  name: 'profile-hermes [destinationDir]',\n  description: 'Pull and convert a Hermes tracing profile to Chrome tracing profile, then store it in the directory <destinationDir> of the local machine',\n  func: profileHermes,\n  options: [{\n    name: '--filename <string>',\n    description: 'File name of the profile to be downloaded, eg. sampling-profiler-trace8593107139682635366.cpuprofile'\n  }, {\n    name: '--raw',\n    description: 'Pulls the original Hermes tracing profile without any transformation'\n  }, {\n    name: '--sourcemap-path <string>',\n    description: 'The local path to your source map file, eg. /tmp/sourcemap.json'\n  }, {\n    name: '--generate-sourcemap',\n    description: 'Generates the JS bundle and source map'\n  }, {\n    name: '--port <number>',\n    default: `${process.env.RCT_METRO_PORT || 8081}`\n  }, {\n    name: '--appId <string>',\n    description: 'Specify an applicationId to launch after build. If not specified, `package` from AndroidManifest.xml will be used.'\n  }, {\n    name: '--appIdSuffix <string>',\n    description: 'Specify an applicationIdSuffix to launch after build.'\n  }],\n  examples: [{\n    desc: 'Download the Hermes Sampling Profiler to the directory <destinationDir> on the local machine',\n    cmd: 'profile-hermes /tmp'\n  }]\n};\nexports.default = _default;","map":{"version":3,"names":["_slicedToArray","require","_asyncToGenerator","Object","defineProperty","exports","value","default","_cliTools","data","_downloadProfile","profileHermes","_x","_x2","_x3","_profileHermes","apply","arguments","_ref","ctx","options","_ref2","dstPath","logger","info","filename","downloadProfile","sourcemapPath","raw","generateSourcemap","port","appId","appIdSuffix","err","_default","name","description","func","process","env","RCT_METRO_PORT","examples","desc","cmd"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-hermes/build/profileHermes/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nvar _downloadProfile = require(\"./downloadProfile\");\nasync function profileHermes([dstPath], ctx, options) {\n  try {\n    _cliTools().logger.info('Downloading a Hermes Sampling Profiler from your Android device...');\n    if (!options.filename) {\n      _cliTools().logger.info('No filename is provided, pulling latest file');\n    }\n    await (0, _downloadProfile.downloadProfile)(ctx, dstPath, options.filename, options.sourcemapPath, options.raw, options.generateSourcemap, options.port, options.appId, options.appIdSuffix);\n  } catch (err) {\n    throw err;\n  }\n}\nvar _default = {\n  name: 'profile-hermes [destinationDir]',\n  description: 'Pull and convert a Hermes tracing profile to Chrome tracing profile, then store it in the directory <destinationDir> of the local machine',\n  func: profileHermes,\n  options: [{\n    name: '--filename <string>',\n    description: 'File name of the profile to be downloaded, eg. sampling-profiler-trace8593107139682635366.cpuprofile'\n  }, {\n    name: '--raw',\n    description: 'Pulls the original Hermes tracing profile without any transformation'\n  }, {\n    name: '--sourcemap-path <string>',\n    description: 'The local path to your source map file, eg. /tmp/sourcemap.json'\n  }, {\n    name: '--generate-sourcemap',\n    description: 'Generates the JS bundle and source map'\n  }, {\n    name: '--port <number>',\n    default: `${process.env.RCT_METRO_PORT || 8081}`\n  }, {\n    name: '--appId <string>',\n    description: 'Specify an applicationId to launch after build. If not specified, `package` from AndroidManifest.xml will be used.'\n  }, {\n    name: '--appIdSuffix <string>',\n    description: 'Specify an applicationIdSuffix to launch after build.'\n  }],\n  examples: [{\n    desc: 'Download the Hermes Sampling Profiler to the directory <destinationDir> on the local machine',\n    cmd: 'profile-hermes /tmp'\n  }]\n};\nexports.default = _default;\n\n//# sourceMappingURL=index.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,cAAA,GAAAC,OAAA;AAAA,IAAAC,iBAAA,GAAAD,OAAA;AAEbE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,SAASC,SAASA,CAAA,EAAG;EACnB,IAAMC,IAAI,GAAGR,OAAO,CAAC,mCAAmC,CAAC;EACzDO,SAAS,GAAG,SAAAA,UAAA,EAAY;IACtB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,IAAIC,gBAAgB,GAAGT,OAAO,oBAAoB,CAAC;AAAC,SACrCU,aAAaA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,eAAA;EAAAA,cAAA,GAAAb,iBAAA,CAA5B,WAAAgB,IAAA,EAAwCC,GAAG,EAAEC,OAAO,EAAE;IAAA,IAAAC,KAAA,GAAArB,cAAA,CAAAkB,IAAA;MAAxBI,OAAO,GAAAD,KAAA;IACnC,IAAI;MACFb,SAAS,CAAC,CAAC,CAACe,MAAM,CAACC,IAAI,CAAC,oEAAoE,CAAC;MAC7F,IAAI,CAACJ,OAAO,CAACK,QAAQ,EAAE;QACrBjB,SAAS,CAAC,CAAC,CAACe,MAAM,CAACC,IAAI,CAAC,8CAA8C,CAAC;MACzE;MACA,MAAM,CAAC,CAAC,EAAEd,gBAAgB,CAACgB,eAAe,EAAEP,GAAG,EAAEG,OAAO,EAAEF,OAAO,CAACK,QAAQ,EAAEL,OAAO,CAACO,aAAa,EAAEP,OAAO,CAACQ,GAAG,EAAER,OAAO,CAACS,iBAAiB,EAAET,OAAO,CAACU,IAAI,EAAEV,OAAO,CAACW,KAAK,EAAEX,OAAO,CAACY,WAAW,CAAC;IAC9L,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,MAAMA,GAAG;IACX;EACF,CAAC;EAAA,OAAAlB,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,IAAIiB,QAAQ,GAAG;EACbC,IAAI,EAAE,iCAAiC;EACvCC,WAAW,EAAE,2IAA2I;EACxJC,IAAI,EAAE1B,aAAa;EACnBS,OAAO,EAAE,CAAC;IACRe,IAAI,EAAE,qBAAqB;IAC3BC,WAAW,EAAE;EACf,CAAC,EAAE;IACDD,IAAI,EAAE,OAAO;IACbC,WAAW,EAAE;EACf,CAAC,EAAE;IACDD,IAAI,EAAE,2BAA2B;IACjCC,WAAW,EAAE;EACf,CAAC,EAAE;IACDD,IAAI,EAAE,sBAAsB;IAC5BC,WAAW,EAAE;EACf,CAAC,EAAE;IACDD,IAAI,EAAE,iBAAiB;IACvB5B,OAAO,EAAG,GAAE+B,OAAO,CAACC,GAAG,CAACC,cAAc,IAAI,IAAK;EACjD,CAAC,EAAE;IACDL,IAAI,EAAE,kBAAkB;IACxBC,WAAW,EAAE;EACf,CAAC,EAAE;IACDD,IAAI,EAAE,wBAAwB;IAC9BC,WAAW,EAAE;EACf,CAAC,CAAC;EACFK,QAAQ,EAAE,CAAC;IACTC,IAAI,EAAE,8FAA8F;IACpGC,GAAG,EAAE;EACP,CAAC;AACH,CAAC;AACDtC,OAAO,CAACE,OAAO,GAAG2B,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}