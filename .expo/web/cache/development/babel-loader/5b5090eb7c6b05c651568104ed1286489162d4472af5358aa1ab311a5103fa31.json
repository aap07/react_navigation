{"ast":null,"code":"'use strict';\n\nvar Alias = require(\"../nodes/Alias.js\");\nvar composeCollection = require(\"./compose-collection.js\");\nvar composeScalar = require(\"./compose-scalar.js\");\nvar resolveEnd = require(\"./resolve-end.js\");\nvar utilEmptyScalarPosition = require(\"./util-empty-scalar-position.js\");\nvar CN = {\n  composeNode: composeNode,\n  composeEmptyNode: composeEmptyNode\n};\nfunction composeNode(ctx, token, props, onError) {\n  var spaceBefore = props.spaceBefore,\n    comment = props.comment,\n    anchor = props.anchor,\n    tag = props.tag;\n  var node;\n  var isSrcToken = true;\n  switch (token.type) {\n    case 'alias':\n      node = composeAlias(ctx, token, onError);\n      if (anchor || tag) onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n      break;\n    case 'scalar':\n    case 'single-quoted-scalar':\n    case 'double-quoted-scalar':\n    case 'block-scalar':\n      node = composeScalar.composeScalar(ctx, token, tag, onError);\n      if (anchor) node.anchor = anchor.source.substring(1);\n      break;\n    case 'block-map':\n    case 'block-seq':\n    case 'flow-collection':\n      node = composeCollection.composeCollection(CN, ctx, token, tag, onError);\n      if (anchor) node.anchor = anchor.source.substring(1);\n      break;\n    default:\n      {\n        var message = token.type === 'error' ? token.message : `Unsupported token (type: ${token.type})`;\n        onError(token, 'UNEXPECTED_TOKEN', message);\n        node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n        isSrcToken = false;\n      }\n  }\n  if (anchor && node.anchor === '') onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n  if (spaceBefore) node.spaceBefore = true;\n  if (comment) {\n    if (token.type === 'scalar' && token.source === '') node.comment = comment;else node.commentBefore = comment;\n  }\n  if (ctx.options.keepSourceTokens && isSrcToken) node.srcToken = token;\n  return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, _ref, onError) {\n  var spaceBefore = _ref.spaceBefore,\n    comment = _ref.comment,\n    anchor = _ref.anchor,\n    tag = _ref.tag,\n    end = _ref.end;\n  var token = {\n    type: 'scalar',\n    offset: utilEmptyScalarPosition.emptyScalarPosition(offset, before, pos),\n    indent: -1,\n    source: ''\n  };\n  var node = composeScalar.composeScalar(ctx, token, tag, onError);\n  if (anchor) {\n    node.anchor = anchor.source.substring(1);\n    if (node.anchor === '') onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n  }\n  if (spaceBefore) node.spaceBefore = true;\n  if (comment) {\n    node.comment = comment;\n    node.range[2] = end;\n  }\n  return node;\n}\nfunction composeAlias(_ref2, _ref3, onError) {\n  var options = _ref2.options;\n  var offset = _ref3.offset,\n    source = _ref3.source,\n    end = _ref3.end;\n  var alias = new Alias.Alias(source.substring(1));\n  if (alias.source === '') onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n  if (alias.source.endsWith(':')) onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n  var valueEnd = offset + source.length;\n  var re = resolveEnd.resolveEnd(end, valueEnd, options.strict, onError);\n  alias.range = [offset, valueEnd, re.offset];\n  if (re.comment) alias.comment = re.comment;\n  return alias;\n}\nexports.composeEmptyNode = composeEmptyNode;\nexports.composeNode = composeNode;","map":{"version":3,"names":["Alias","require","composeCollection","composeScalar","resolveEnd","utilEmptyScalarPosition","CN","composeNode","composeEmptyNode","ctx","token","props","onError","spaceBefore","comment","anchor","tag","node","isSrcToken","type","composeAlias","source","substring","message","offset","undefined","commentBefore","options","keepSourceTokens","srcToken","before","pos","_ref","end","emptyScalarPosition","indent","range","_ref2","_ref3","alias","endsWith","length","valueEnd","re","strict","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/compose/compose-node.js"],"sourcesContent":["'use strict';\n\nvar Alias = require('../nodes/Alias.js');\nvar composeCollection = require('./compose-collection.js');\nvar composeScalar = require('./compose-scalar.js');\nvar resolveEnd = require('./resolve-end.js');\nvar utilEmptyScalarPosition = require('./util-empty-scalar-position.js');\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar.composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection.composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: utilEmptyScalarPosition.emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar.composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias.Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd.resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexports.composeEmptyNode = composeEmptyNode;\nexports.composeNode = composeNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}