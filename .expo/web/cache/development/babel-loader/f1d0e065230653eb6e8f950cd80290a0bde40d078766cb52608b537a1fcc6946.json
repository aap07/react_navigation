{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as Application from 'expo-application';\nimport uuidv5 from 'uuid/v5';\nvar installationId;\nvar UUID_NAMESPACE = '29cc8a0d-747c-5f85-9ff9-f2f16636d963';\nexport default function getInstallationIdAsync() {\n  return _getInstallationIdAsync.apply(this, arguments);\n}\nfunction _getInstallationIdAsync() {\n  _getInstallationIdAsync = _asyncToGenerator(function* () {\n    if (installationId) {\n      return installationId;\n    }\n    var identifierForVendor = yield Application.getIosIdForVendorAsync();\n    var bundleIdentifier = Application.applicationId;\n    if (identifierForVendor) {\n      installationId = uuidv5(`${bundleIdentifier}-${identifierForVendor}`, UUID_NAMESPACE);\n    } else {\n      var installationTime = yield Application.getInstallationTimeAsync();\n      installationId = uuidv5(`${bundleIdentifier}-${installationTime.getTime()}`, UUID_NAMESPACE);\n    }\n    return installationId;\n  });\n  return _getInstallationIdAsync.apply(this, arguments);\n}","map":{"version":3,"names":["Application","uuidv5","installationId","UUID_NAMESPACE","getInstallationIdAsync","_getInstallationIdAsync","apply","arguments","_asyncToGenerator","identifierForVendor","getIosIdForVendorAsync","bundleIdentifier","applicationId","installationTime","getInstallationTimeAsync","getTime"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\expo\\src\\environment\\getInstallationIdAsync.ts"],"sourcesContent":["import * as Application from 'expo-application';\nimport uuidv5 from 'uuid/v5';\n\nlet installationId: string | null;\nconst UUID_NAMESPACE = '29cc8a0d-747c-5f85-9ff9-f2f16636d963'; // uuidv5(0, \"expo\")\n\nexport default async function getInstallationIdAsync() {\n  if (installationId) {\n    return installationId;\n  }\n\n  const identifierForVendor = await Application.getIosIdForVendorAsync();\n  const bundleIdentifier = Application.applicationId!;\n\n  // It's unlikely identifierForVendor will be null (it returns null if the\n  // device has been restarted but not yet unlocked), but let's handle this\n  // case.\n  if (identifierForVendor) {\n    installationId = uuidv5(`${bundleIdentifier}-${identifierForVendor}`, UUID_NAMESPACE);\n  } else {\n    const installationTime = await Application.getInstallationTimeAsync();\n    installationId = uuidv5(`${bundleIdentifier}-${installationTime.getTime()}`, UUID_NAMESPACE);\n  }\n\n  return installationId;\n}\n"],"mappings":";AAAA,OAAO,KAAKA,WAAW,MAAM,kBAAkB;AAC/C,OAAOC,MAAM,MAAM,SAAS;AAE5B,IAAIC,cAA6B;AACjC,IAAMC,cAAc,GAAG,sCAAsC;AAE7D,wBAA8BC,sBAAsBA,CAAA;EAAA,OAAAC,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAmBnD,SAAAF,wBAAA;EAAAA,uBAAA,GAAAG,iBAAA,CAnBc,aAAqC;IAClD,IAAIN,cAAc,EAAE;MAClB,OAAOA,cAAc;;IAGvB,IAAMO,mBAAmB,SAAST,WAAW,CAACU,sBAAsB,EAAE;IACtE,IAAMC,gBAAgB,GAAGX,WAAW,CAACY,aAAc;IAKnD,IAAIH,mBAAmB,EAAE;MACvBP,cAAc,GAAGD,MAAM,CAAC,GAAGU,gBAAgB,IAAIF,mBAAmB,EAAE,EAAEN,cAAc,CAAC;KACtF,MAAM;MACL,IAAMU,gBAAgB,SAASb,WAAW,CAACc,wBAAwB,EAAE;MACrEZ,cAAc,GAAGD,MAAM,CAAC,GAAGU,gBAAgB,IAAIE,gBAAgB,CAACE,OAAO,EAAE,EAAE,EAAEZ,cAAc,CAAC;;IAG9F,OAAOD,cAAc;EACvB,CAAC;EAAA,OAAAG,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}