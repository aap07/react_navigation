{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/ios/Swift.d.ts"],"sourcesContent":["/// <reference types=\"xcode\" />\nimport { ConfigPlugin, XcodeProject } from '../Plugin.types';\n/**\n * Ensure a Swift bridging header is created for the project.\n * This helps fix problems related to using modules that are written in Swift (lottie, FBSDK).\n *\n * 1. Ensures the file exists given the project path.\n * 2. Writes the file and links to Xcode as a resource file.\n * 3. Sets the build configuration `SWIFT_OBJC_BRIDGING_HEADER = [PROJECT_NAME]-Bridging-Header.h`\n */\nexport declare const withSwiftBridgingHeader: ConfigPlugin;\nexport declare function ensureSwiftBridgingHeaderSetup({ projectRoot, project, }: {\n    projectRoot: string;\n    project: XcodeProject;\n}): XcodeProject;\nexport declare function getDesignatedSwiftBridgingHeaderFileReference({ project, }: {\n    project: XcodeProject;\n}): string | null;\n/**\n *\n * @param bridgingHeader The bridging header filename ex: `ExpoAPIs-Bridging-Header.h`\n * @returns\n */\nexport declare function linkBridgingHeaderFile({ project, bridgingHeader, }: {\n    project: XcodeProject;\n    bridgingHeader: string;\n}): XcodeProject;\nexport declare function createBridgingHeaderFile({ projectRoot, projectName, project, bridgingHeader, }: {\n    project: XcodeProject;\n    projectName: string;\n    projectRoot: string;\n    bridgingHeader: string;\n}): XcodeProject;\nexport declare const withNoopSwiftFile: ConfigPlugin;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}