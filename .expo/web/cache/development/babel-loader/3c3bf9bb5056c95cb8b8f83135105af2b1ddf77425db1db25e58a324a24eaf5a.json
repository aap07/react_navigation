{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generatePackageListAsync = void 0;\nvar chalk_1 = __importDefault(require(\"chalk\"));\nfunction generatePackageListAsync(_x, _x2) {\n  return _generatePackageListAsync.apply(this, arguments);\n}\nfunction _generatePackageListAsync() {\n  _generatePackageListAsync = _asyncToGenerator(function* (modules, options) {\n    try {\n      var platformLinking = require(`../platforms/${options.platform}`);\n      yield platformLinking.generatePackageListAsync(modules, options.target, options.namespace);\n    } catch (e) {\n      console.error(chalk_1.default.red(`Generating package list is not available for platform: ${options.platform}`));\n      throw e;\n    }\n  });\n  return _generatePackageListAsync.apply(this, arguments);\n}\nexports.generatePackageListAsync = generatePackageListAsync;","map":{"version":3,"names":["chalk_1","__importDefault","require","generatePackageListAsync","_x","_x2","_generatePackageListAsync","apply","arguments","_asyncToGenerator","modules","options","platformLinking","platform","target","namespace","e","console","error","default","red","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\expo-modules-autolinking\\src\\autolinking\\generatePackageList.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport { GenerateOptions, ModuleDescriptor } from '../types';\n\n/**\n * Generates a source file listing all packages to link.\n * Right know it works only for Android platform.\n */\nexport async function generatePackageListAsync(\n  modules: ModuleDescriptor[],\n  options: GenerateOptions\n) {\n  try {\n    const platformLinking = require(`../platforms/${options.platform}`);\n    await platformLinking.generatePackageListAsync(modules, options.target, options.namespace);\n  } catch (e) {\n    console.error(\n      chalk.red(`Generating package list is not available for platform: ${options.platform}`)\n    );\n    throw e;\n  }\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAA0B,SAQJC,wBAAwBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,yBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,0BAAA;EAAAA,yBAAA,GAAAG,iBAAA,CAAvC,WACLC,OAA2B,EAC3BC,OAAwB;IAExB,IAAI;MACF,IAAMC,eAAe,GAAGV,OAAO,CAAC,gBAAgBS,OAAO,CAACE,QAAQ,EAAE,CAAC;MACnE,MAAMD,eAAe,CAACT,wBAAwB,CAACO,OAAO,EAAEC,OAAO,CAACG,MAAM,EAAEH,OAAO,CAACI,SAAS,CAAC;KAC3F,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CACXlB,OAAA,CAAAmB,OAAK,CAACC,GAAG,CAAC,0DAA0DT,OAAO,CAACE,QAAQ,EAAE,CAAC,CACxF;MACD,MAAMG,CAAC;;EAEX,CAAC;EAAA,OAAAV,yBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAbDa,OAAA,CAAAlB,wBAAA,GAAAA,wBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}