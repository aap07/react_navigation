{"ast":null,"code":"#!/usr/bin/env node\nvar fs = require('fs');\nvar path = require('path');\nvar yargs = require('yargs');\nvar generateIconSetFromCss = require(\"../lib/generate-icon-set-from-css\");\nvar _require = require(\"../lib/object-utils\"),\n  omit = _require.omit;\nvar _yargs$usage$demand$d = yargs.usage('Usage: $0 [options] path/to/styles.css \\nFor default template please provide --componentName and --fontFamily').demand(1).default('p', '.icon-').describe('p', 'CSS selector prefix').alias('p', 'prefix').default('t', path.resolve(__dirname, '..', 'templates/bundled-icon-set.tpl')).describe('t', 'Template in JS template string format').alias('t', 'template').describe('o', 'Save output to file, defaults to STDOUT').alias('o', 'output').describe('g', 'Save glyphmap JSON to file').alias('g', 'glyphmap'),\n  argv = _yargs$usage$demand$d.argv;\nvar template;\nif (argv.template) {\n  template = fs.readFileSync(argv.template, {\n    encoding: 'utf8'\n  });\n}\nvar data = omit(argv, '_ $0 o output p prefix t template g glyphmap'.split(' '));\nvar content = generateIconSetFromCss(argv._, argv.prefix, template, data);\nif (argv.output) {\n  fs.writeFileSync(argv.output, content);\n} else {\n  console.log(content);\n}\nif (argv.glyphmap) {\n  fs.writeFileSync(argv.glyphmap, generateIconSetFromCss(argv._, argv.prefix));\n}","map":{"version":3,"names":["fs","require","path","yargs","generateIconSetFromCss","_require","omit","_yargs$usage$demand$d","usage","demand","default","describe","alias","resolve","__dirname","argv","template","readFileSync","encoding","data","split","content","_","prefix","output","writeFileSync","console","log","glyphmap"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/bin/generate-icon.js"],"sourcesContent":["#!/usr/bin/env node\n/* eslint-disable no-console */\n\nconst fs = require('fs');\nconst path = require('path');\nconst yargs = require('yargs');\nconst generateIconSetFromCss = require('../lib/generate-icon-set-from-css');\nconst { omit } = require('../lib/object-utils');\n\nconst { argv } = yargs\n  .usage(\n    'Usage: $0 [options] path/to/styles.css \\nFor default template please provide --componentName and --fontFamily'\n  )\n  .demand(1)\n  .default('p', '.icon-')\n  .describe('p', 'CSS selector prefix')\n  .alias('p', 'prefix')\n  .default('t', path.resolve(__dirname, '..', 'templates/bundled-icon-set.tpl'))\n  .describe('t', 'Template in JS template string format')\n  .alias('t', 'template')\n  .describe('o', 'Save output to file, defaults to STDOUT')\n  .alias('o', 'output')\n  .describe('g', 'Save glyphmap JSON to file')\n  .alias('g', 'glyphmap');\n\nlet template;\nif (argv.template) {\n  template = fs.readFileSync(argv.template, { encoding: 'utf8' });\n}\n\nconst data = omit(\n  argv,\n  '_ $0 o output p prefix t template g glyphmap'.split(' ')\n);\n\nconst content = generateIconSetFromCss(argv._, argv.prefix, template, data);\nif (argv.output) {\n  fs.writeFileSync(argv.output, content);\n} else {\n  console.log(content);\n}\n\nif (argv.glyphmap) {\n  fs.writeFileSync(argv.glyphmap, generateIconSetFromCss(argv._, argv.prefix));\n}\n"],"mappings":"AAAA;AAGA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC9B,IAAMG,sBAAsB,GAAGH,OAAO,oCAAoC,CAAC;AAC3E,IAAAI,QAAA,GAAiBJ,OAAO,sBAAsB,CAAC;EAAvCK,IAAI,GAAAD,QAAA,CAAJC,IAAI;AAEZ,IAAAC,qBAAA,GAAiBJ,KAAK,CACnBK,KAAK,CACJ,+GACF,CAAC,CACAC,MAAM,CAAC,CAAC,CAAC,CACTC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CACtBC,QAAQ,CAAC,GAAG,EAAE,qBAAqB,CAAC,CACpCC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CACpBF,OAAO,CAAC,GAAG,EAAER,IAAI,CAACW,OAAO,CAACC,SAAS,EAAE,IAAI,EAAE,gCAAgC,CAAC,CAAC,CAC7EH,QAAQ,CAAC,GAAG,EAAE,uCAAuC,CAAC,CACtDC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,CACtBD,QAAQ,CAAC,GAAG,EAAE,yCAAyC,CAAC,CACxDC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CACpBD,QAAQ,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAC3CC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC;EAdjBG,IAAI,GAAAR,qBAAA,CAAJQ,IAAI;AAgBZ,IAAIC,QAAQ;AACZ,IAAID,IAAI,CAACC,QAAQ,EAAE;EACjBA,QAAQ,GAAGhB,EAAE,CAACiB,YAAY,CAACF,IAAI,CAACC,QAAQ,EAAE;IAAEE,QAAQ,EAAE;EAAO,CAAC,CAAC;AACjE;AAEA,IAAMC,IAAI,GAAGb,IAAI,CACfS,IAAI,EACJ,8CAA8C,CAACK,KAAK,CAAC,GAAG,CAC1D,CAAC;AAED,IAAMC,OAAO,GAAGjB,sBAAsB,CAACW,IAAI,CAACO,CAAC,EAAEP,IAAI,CAACQ,MAAM,EAAEP,QAAQ,EAAEG,IAAI,CAAC;AAC3E,IAAIJ,IAAI,CAACS,MAAM,EAAE;EACfxB,EAAE,CAACyB,aAAa,CAACV,IAAI,CAACS,MAAM,EAAEH,OAAO,CAAC;AACxC,CAAC,MAAM;EACLK,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;AACtB;AAEA,IAAIN,IAAI,CAACa,QAAQ,EAAE;EACjB5B,EAAE,CAACyB,aAAa,CAACV,IAAI,CAACa,QAAQ,EAAExB,sBAAsB,CAACW,IAAI,CAACO,CAAC,EAAEP,IAAI,CAACQ,MAAM,CAAC,CAAC;AAC9E"},"metadata":{},"sourceType":"script","externalDependencies":[]}