{"ast":null,"code":"var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function end() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  if (typeof options.env !== 'undefined') {\n    if (typeof options.env !== 'object') {\n      return end(new Error('options.env must be an object if provided.'));\n    } else if (Object.keys(options.env).length === 0) {\n      return end(new Error('options.env must not be empty if provided.'));\n    } else {\n      for (var key in options.env) {\n        var value = options.env[key];\n        if (typeof key !== 'string' || typeof value !== 'string') {\n          return end(new Error('options.env environment variables must be strings.'));\n        }\n        if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(key)) {\n          return end(new Error('options.env has an invalid environment variable name: ' + JSON.stringify(key)));\n        }\n        if (/[\\r\\n]/.test(value)) {\n          return end(new Error('options.env has an invalid environment variable value: ' + JSON.stringify(value)));\n        }\n      }\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\nfunction Linux(instance, end) {\n  LinuxBinary(instance, function (error, binary) {\n    if (error) return end(error);\n    var command = [];\n    command.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\";');\n    for (var key in instance.options.env) {\n      var value = instance.options.env[key];\n      command.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\";');\n    }\n    command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n    if (/kdesudo/i.test(binary)) {\n      command.push('--comment', '\"' + instance.options.name + ' wants to make changes. ' + 'Enter your password to allow this.\"');\n      command.push('-d');\n      command.push('--');\n    } else if (/pkexec/i.test(binary)) {\n      command.push('--disable-internal-agent');\n    }\n    var magic = 'SUDOPROMPT\\n';\n    command.push('/bin/bash -c \"echo ' + EscapeDoubleQuotes(magic.trim()) + '; ' + EscapeDoubleQuotes(instance.command) + '\"');\n    command = command.join(' ');\n    Node.child.exec(command, {\n      encoding: 'utf-8',\n      maxBuffer: MAX_BUFFER\n    }, function (error, stdout, stderr) {\n      var elevated = stdout && stdout.slice(0, magic.length) === magic;\n      if (elevated) stdout = stdout.slice(magic.length);\n      if (error && !elevated) {\n        if (/No authentication agent found/.test(stderr)) {\n          error.message = NO_POLKIT_AGENT;\n        } else {\n          error.message = PERMISSION_DENIED;\n        }\n      }\n      end(error, stdout, stderr);\n    });\n  });\n}\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path, function (error) {\n      if (error) {\n        if (error.code === 'ENOTDIR') return test();\n        if (error.code === 'ENOENT') return test();\n        end(error);\n      } else {\n        end(undefined, path);\n      }\n    });\n  }\n  test();\n}\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER;\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance, function (error, uuid) {\n    if (error) return callback(error);\n    instance.uuid = uuid;\n    instance.path = Node.path.join(temp, instance.uuid, instance.options.name + '.app');\n    function end(error, stdout, stderr) {\n      Remove(Node.path.dirname(instance.path), function (errorRemove) {\n        if (error) return callback(error);\n        if (errorRemove) return callback(errorRemove);\n        callback(undefined, stdout, stderr);\n      });\n    }\n    MacApplet(instance, function (error, stdout, stderr) {\n      if (error) return end(error, stdout, stderr);\n      MacIcon(instance, function (error) {\n        if (error) return end(error);\n        MacPropertyList(instance, function (error, stdout, stderr) {\n          if (error) return end(error, stdout, stderr);\n          MacCommand(instance, function (error) {\n            if (error) return end(error);\n            MacOpen(instance, function (error, stdout, stderr) {\n              if (error) return end(error, stdout, stderr);\n              MacResult(instance, end);\n            });\n          });\n        });\n      });\n    });\n  });\n}\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent, function (error) {\n    if (error) return end(error);\n    var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n    Node.fs.writeFile(zip, APPLET, 'base64', function (error) {\n      if (error) return end(error);\n      var command = [];\n      command.push('/usr/bin/unzip');\n      command.push('-o');\n      command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n      command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n      command = command.join(' ');\n      Node.child.exec(command, {\n        encoding: 'utf-8'\n      }, end);\n    });\n  });\n}\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(instance.path, 'Contents', 'MacOS', 'sudo-prompt-command');\n  var script = [];\n  script.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\"');\n  for (var key in instance.options.env) {\n    var value = instance.options.env[key];\n    script.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\"');\n  }\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns, function (error, buffer) {\n    if (error) return end(error);\n    var icns = Node.path.join(instance.path, 'Contents', 'Resources', 'applet.icns');\n    Node.fs.writeFile(icns, buffer, end);\n  });\n}\nfunction MacOpen(instance, end) {\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  var options = {\n    cwd: Node.path.dirname(binary),\n    encoding: 'utf-8'\n  };\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\nfunction MacPropertyList(instance, end) {\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\");\n  command = command.join(' ');\n  Node.child.exec(command, {\n    encoding: 'utf-8'\n  }, end);\n}\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8', function (error, code) {\n    if (error) {\n      if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n      end(error);\n    } else {\n      Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8', function (error, stdout) {\n        if (error) return end(error);\n        Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8', function (error, stderr) {\n          if (error) return end(error);\n          code = parseInt(code.trim(), 10);\n          if (code === 0) {\n            end(undefined, stdout, stderr);\n          } else {\n            error = new Error('Command failed: ' + instance.command + '\\n' + stderr);\n            error.code = code;\n            end(error, stdout, stderr);\n          }\n        });\n      });\n    }\n  });\n}\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, {\n    encoding: 'utf-8'\n  }, end);\n}\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256, function (error, random) {\n    if (error) random = Date.now() + '' + Math.random();\n    var hash = Node.crypto.createHash('SHA256');\n    hash.update('sudo-prompt-3');\n    hash.update(instance.options.name);\n    hash.update(instance.command);\n    hash.update(random);\n    var uuid = hash.digest('hex').slice(-32);\n    if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n      return end(new Error('Expected a valid UUID.'));\n    }\n    end(undefined, uuid);\n  });\n}\nfunction ValidName(string) {\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance, function (error, uuid) {\n    if (error) return callback(error);\n    instance.uuid = uuid;\n    instance.path = Node.path.join(temp, instance.uuid);\n    if (/\"/.test(instance.path)) {\n      return callback(new Error('instance.path cannot contain double-quotes.'));\n    }\n    instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n    instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n    instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n    instance.pathStdout = Node.path.join(instance.path, 'stdout');\n    instance.pathStderr = Node.path.join(instance.path, 'stderr');\n    instance.pathStatus = Node.path.join(instance.path, 'status');\n    Node.fs.mkdir(instance.path, function (error) {\n      if (error) return callback(error);\n      function end(error, stdout, stderr) {\n        Remove(instance.path, function (errorRemove) {\n          if (error) return callback(error);\n          if (errorRemove) return callback(errorRemove);\n          callback(undefined, stdout, stderr);\n        });\n      }\n      WindowsWriteExecuteScript(instance, function (error) {\n        if (error) return end(error);\n        WindowsWriteCommandScript(instance, function (error) {\n          if (error) return end(error);\n          WindowsElevate(instance, function (error, stdout, stderr) {\n            if (error) return end(error, stdout, stderr);\n            WindowsWaitForStatus(instance, function (error) {\n              if (error) return end(error);\n              WindowsResult(instance, end);\n            });\n          });\n        });\n      });\n    });\n  });\n}\nfunction WindowsElevate(instance, end) {\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command, {\n    encoding: 'utf-8'\n  }, function (error, stdout, stderr) {\n    if (error) return end(new Error(PERMISSION_DENIED), stdout, stderr);\n    end();\n  });\n  child.stdin.end();\n}\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8', function (error, code) {\n    if (error) return end(error);\n    Node.fs.readFile(instance.pathStdout, 'utf-8', function (error, stdout) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStderr, 'utf-8', function (error, stderr) {\n        if (error) return end(error);\n        code = parseInt(code.trim(), 10);\n        if (code === 0) {\n          end(undefined, stdout, stderr);\n        } else {\n          error = new Error('Command failed: ' + instance.command + '\\r\\n' + stderr);\n          error.code = code;\n          end(error, stdout, stderr);\n        }\n      });\n    });\n  });\n}\nfunction WindowsWaitForStatus(instance, end) {\n  Node.fs.stat(instance.pathStatus, function (error, stats) {\n    if (error && error.code === 'ENOENT' || stats.size < 2) {\n      setTimeout(function () {\n        Node.fs.stat(instance.pathStdout, function (error) {\n          if (error) return end(new Error(PERMISSION_DENIED));\n          WindowsWaitForStatus(instance, end);\n        });\n      }, 1000);\n    } else if (error) {\n      end(error);\n    } else {\n      end();\n    }\n  });\n}\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  script.push('chcp 65001>nul');\n  script.push('cd /d \"' + cwd + '\"');\n  for (var key in instance.options.env) {\n    var value = instance.options.env[key];\n    script.push('set ' + key + '=' + value.replace(/([<>\\\\|&^])/g, '^$1'));\n  }\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\nfunction WindowsWriteElevateScript(instance, end) {}\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push('call \"' + instance.pathCommand + '\"' + ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"');\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\nmodule.exports.exec = Exec;\nvar APPLET = '';\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\nvar MAX_BUFFER = 134217728;","map":{"version":3,"names":["Node","child","require","crypto","fs","os","path","process","util","Attempt","instance","end","platform","Mac","Linux","Windows","Error","EscapeDoubleQuotes","string","replace","Exec","arguments","length","command","options","isObject","isFunction","test","name","title","ValidName","error","icns","trim","env","Object","keys","key","value","JSON","stringify","uuid","undefined","LinuxBinary","binary","push","cwd","magic","join","exec","encoding","maxBuffer","MAX_BUFFER","stdout","stderr","elevated","slice","message","NO_POLKIT_AGENT","PERMISSION_DENIED","index","paths","stat","code","callback","temp","tmpdir","user","USER","UUID","Remove","dirname","errorRemove","MacApplet","MacIcon","MacPropertyList","MacCommand","MacOpen","MacResult","parent","mkdir","zip","writeFile","APPLET","script","readFile","buffer","basename","plist","parseInt","normalize","randomBytes","random","Date","now","Math","hash","createHash","update","digest","pathElevate","pathExecute","pathCommand","pathStdout","pathStderr","pathStatus","WindowsWriteExecuteScript","WindowsWriteCommandScript","WindowsElevate","WindowsWaitForStatus","WindowsResult","stdin","stats","size","setTimeout","WindowsWriteElevateScript","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/sudo-prompt/index.js"],"sourcesContent":["var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\n\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\n\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  if (typeof options.env !== 'undefined') {\n    if (typeof options.env !== 'object') {\n      return end(new Error('options.env must be an object if provided.'));\n    } else if (Object.keys(options.env).length === 0) {\n      return end(new Error('options.env must not be empty if provided.'));\n    } else {\n      for (var key in options.env) {\n        var value = options.env[key];\n        if (typeof key !== 'string' || typeof value !== 'string') {\n          return end(\n            new Error('options.env environment variables must be strings.')\n          );\n        }\n        // \"Environment variable names used by the utilities in the Shell and\n        // Utilities volume of IEEE Std 1003.1-2001 consist solely of uppercase\n        // letters, digits, and the '_' (underscore) from the characters defined\n        // in Portable Character Set and do not begin with a digit. Other\n        // characters may be permitted by an implementation; applications shall\n        // tolerate the presence of such names.\"\n        if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(key)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable name: ' +\n              JSON.stringify(key)\n            )\n          );\n        }\n        if (/[\\r\\n]/.test(value)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable value: ' +\n              JSON.stringify(value)\n            )\n          );\n        }\n      }\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\n\nfunction Linux(instance, end) {\n  LinuxBinary(instance,\n    function(error, binary) {\n      if (error) return end(error);\n      var command = [];\n      // Preserve current working directory:\n      command.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\";');\n      // Export environment variables:\n      for (var key in instance.options.env) {\n        var value = instance.options.env[key];\n        command.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\";');\n      }\n      command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n      if (/kdesudo/i.test(binary)) {\n        command.push(\n          '--comment',\n          '\"' + instance.options.name + ' wants to make changes. ' +\n          'Enter your password to allow this.\"'\n        );\n        command.push('-d'); // Do not show the command to be run in the dialog.\n        command.push('--');\n      } else if (/pkexec/i.test(binary)) {\n        command.push('--disable-internal-agent');\n      }\n      var magic = 'SUDOPROMPT\\n';\n      command.push(\n        '/bin/bash -c \"echo ' + EscapeDoubleQuotes(magic.trim()) + '; ' +\n        EscapeDoubleQuotes(instance.command) +\n        '\"'\n      );\n      command = command.join(' ');\n      Node.child.exec(command, { encoding: 'utf-8', maxBuffer: MAX_BUFFER },\n        function(error, stdout, stderr) {\n          // ISSUE 88:\n          // We must distinguish between elevation errors and command errors.\n          //\n          // KDESUDO:\n          // kdesudo provides no way to do this. We add a magic marker to know\n          // if elevation succeeded. Any error thereafter is a command error.\n          //\n          // PKEXEC:\n          // \"Upon successful completion, the return value is the return value of\n          // PROGRAM. If the calling process is not authorized or an\n          // authorization could not be obtained through authentication or an\n          // error occured, pkexec exits with a return value of 127. If the\n          // authorization could not be obtained because the user dismissed the\n          // authentication dialog, pkexec exits with a return value of 126.\"\n          //\n          // However, we do not rely on pkexec's return of 127 since our magic\n          // marker is more reliable, and we already use it for kdesudo.\n          var elevated = stdout && stdout.slice(0, magic.length) === magic;\n          if (elevated) stdout = stdout.slice(magic.length);\n          // Only normalize the error if it is definitely not a command error:\n          // In other words, if we know that the command was never elevated.\n          // We do not inspect error messages beyond NO_POLKIT_AGENT.\n          // We cannot rely on English errors because of internationalization.\n          if (error && !elevated) {\n            if (/No authentication agent found/.test(stderr)) {\n              error.message = NO_POLKIT_AGENT;\n            } else {\n              error.message = PERMISSION_DENIED;\n            }\n          }\n          end(error, stdout, stderr);\n        }\n      );\n    }\n  );\n}\n\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  // We used to prefer gksudo over pkexec since it enabled a better prompt.\n  // However, gksudo cannot run multiple commands concurrently.\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path,\n      function(error) {\n        if (error) {\n          if (error.code === 'ENOTDIR') return test();\n          if (error.code === 'ENOENT') return test();\n          end(error);\n        } else {\n          end(undefined, path);\n        }\n      }\n    );\n  }\n  test();\n}\n\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER; // Applet shell scripts require $USER.\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(\n        temp,\n        instance.uuid,\n        instance.options.name + '.app'\n      );\n      function end(error, stdout, stderr) {\n        Remove(Node.path.dirname(instance.path),\n          function(errorRemove) {\n            if (error) return callback(error);\n            if (errorRemove) return callback(errorRemove);\n            callback(undefined, stdout, stderr);\n          }\n        );\n      }\n      MacApplet(instance,\n        function(error, stdout, stderr) {\n          if (error) return end(error, stdout, stderr);\n          MacIcon(instance,\n            function(error) {\n              if (error) return end(error);\n              MacPropertyList(instance,\n                function(error, stdout, stderr) {\n                  if (error) return end(error, stdout, stderr);\n                  MacCommand(instance,\n                    function(error) {\n                      if (error) return end(error);\n                      MacOpen(instance,\n                        function(error, stdout, stderr) {\n                          if (error) return end(error, stdout, stderr);\n                          MacResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent,\n    function(error) {\n      if (error) return end(error);\n      var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n      Node.fs.writeFile(zip, APPLET, 'base64',\n        function(error) {\n          if (error) return end(error);\n          var command = [];\n          command.push('/usr/bin/unzip');\n          command.push('-o'); // Overwrite any existing applet.\n          command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n          command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n          command = command.join(' ');\n          Node.child.exec(command, { encoding: 'utf-8' }, end);\n        }\n      );\n    }\n  );\n}\n\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(\n    instance.path,\n    'Contents',\n    'MacOS',\n    'sudo-prompt-command'\n  );\n  var script = [];\n  // Preserve current working directory:\n  // We do this for commands that rely on relative paths.\n  // This runs in a subshell and will not change the cwd of sudo-prompt-script.\n  script.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    var value = instance.options.env[key];\n    script.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\"');\n  }\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\n\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns,\n    function(error, buffer) {\n      if (error) return end(error);\n      var icns = Node.path.join(\n        instance.path,\n        'Contents',\n        'Resources',\n        'applet.icns'\n      );\n      Node.fs.writeFile(icns, buffer, end);\n    }\n  );\n}\n\nfunction MacOpen(instance, end) {\n  // We must run the binary directly so that the cwd will apply.\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  // We must set the cwd so that the AppleScript can find the shell scripts.\n  var options = {\n    cwd: Node.path.dirname(binary),\n    encoding: 'utf-8'\n  };\n  // We use the relative path rather than the absolute path. The instance.path\n  // may contain spaces which the cwd can handle, but which exec() cannot.\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\n\nfunction MacPropertyList(instance, end) {\n  // Value must be in single quotes (not double quotes) according to man entry.\n  // e.g. defaults write com.companyname.appname \"Default Color\" '(255, 0, 0)'\n  // The defaults command will be changed in an upcoming major release to only\n  // operate on preferences domains. General plist manipulation utilities will\n  // be folded into a different command-line program.\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\"); // We must use single quotes for value.\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8',\n    function(error, code) {\n      if (error) {\n        if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n        end(error);\n      } else {\n        Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8',\n          function(error, stdout) {\n            if (error) return end(error);\n            Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8',\n              function(error, stderr) {\n                if (error) return end(error);\n                code = parseInt(code.trim(), 10); // Includes trailing newline.\n                if (code === 0) {\n                  end(undefined, stdout, stderr);\n                } else {\n                  error = new Error(\n                    'Command failed: ' + instance.command + '\\n' + stderr\n                  );\n                  error.code = code;\n                  end(error, stdout, stderr);\n                }\n              }\n            );\n          }\n        );\n      }\n    }\n  );\n}\n\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256,\n    function(error, random) {\n      if (error) random = Date.now() + '' + Math.random();\n      var hash = Node.crypto.createHash('SHA256');\n      hash.update('sudo-prompt-3');\n      hash.update(instance.options.name);\n      hash.update(instance.command);\n      hash.update(random);\n      var uuid = hash.digest('hex').slice(-32);\n      if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n        // This is critical to ensure we don't remove the wrong temp directory.\n        return end(new Error('Expected a valid UUID.'));\n      }\n      end(undefined, uuid);\n    }\n  );\n}\n\nfunction ValidName(string) {\n  // We use 70 characters as a limit to side-step any issues with Unicode\n  // normalization form causing a 255 character string to exceed the fs limit.\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\n\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(temp, instance.uuid);\n      if (/\"/.test(instance.path)) {\n        // We expect double quotes to be reserved on Windows.\n        // Even so, we test for this and abort if they are present.\n        return callback(\n          new Error('instance.path cannot contain double-quotes.')\n        );\n      }\n      instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n      instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n      instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n      instance.pathStdout = Node.path.join(instance.path, 'stdout');\n      instance.pathStderr = Node.path.join(instance.path, 'stderr');\n      instance.pathStatus = Node.path.join(instance.path, 'status');\n      Node.fs.mkdir(instance.path,\n        function(error) {\n          if (error) return callback(error);\n          function end(error, stdout, stderr) {\n            Remove(instance.path,\n              function(errorRemove) {\n                if (error) return callback(error);\n                if (errorRemove) return callback(errorRemove);\n                callback(undefined, stdout, stderr);\n              }\n            );\n          }\n          WindowsWriteExecuteScript(instance,\n            function(error) {\n              if (error) return end(error);\n              WindowsWriteCommandScript(instance,\n                function(error) {\n                  if (error) return end(error);\n                  WindowsElevate(instance,\n                    function(error, stdout, stderr) {\n                      if (error) return end(error, stdout, stderr);\n                      WindowsWaitForStatus(instance,\n                        function(error) {\n                          if (error) return end(error);\n                          WindowsResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsElevate(instance, end) {\n  // We used to use this for executing elevate.vbs:\n  // var command = 'cscript.exe //NoLogo \"' + instance.pathElevate + '\"';\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  // Escape characters for cmd using double quotes:\n  // Escape characters for PowerShell using single quotes:\n  // Escape single quotes for PowerShell using backtick:\n  // See: https://ss64.com/ps/syntax-esc.html\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command, { encoding: 'utf-8' },\n    function(error, stdout, stderr) {\n      // We used to return PERMISSION_DENIED only for error messages containing\n      // the string 'canceled by the user'. However, Windows internationalizes\n      // error messages (issue 96) so now we must assume all errors here are\n      // permission errors. This seems reasonable, given that we already run the\n      // user's command in a subshell.\n      if (error) return end(new Error(PERMISSION_DENIED), stdout, stderr);\n      end();\n    }\n  );\n  child.stdin.end(); // Otherwise PowerShell waits indefinitely on Windows 7.\n}\n\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8',\n    function(error, code) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStdout, 'utf-8',\n        function(error, stdout) {\n          if (error) return end(error);\n          Node.fs.readFile(instance.pathStderr, 'utf-8',\n            function(error, stderr) {\n              if (error) return end(error);\n              code = parseInt(code.trim(), 10);\n              if (code === 0) {\n                end(undefined, stdout, stderr);\n              } else {\n                error = new Error(\n                  'Command failed: ' + instance.command + '\\r\\n' + stderr\n                );\n                error.code = code;\n                end(error, stdout, stderr);\n              }\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsWaitForStatus(instance, end) {\n  // VBScript cannot wait for the elevated process to finish so we have to poll.\n  // VBScript cannot return error code if user does not grant permission.\n  // PowerShell can be used to elevate and wait on Windows 10.\n  // PowerShell can be used to elevate on Windows 7 but it cannot wait.\n  // powershell.exe Start-Process cmd.exe -Verb runAs -Wait\n  Node.fs.stat(instance.pathStatus,\n    function(error, stats) {\n      if ((error && error.code === 'ENOENT') || stats.size < 2) {\n        // Retry if file does not exist or is not finished writing.\n        // We expect a file size of 2. That should cover at least \"0\\r\".\n        // We use a 1 second timeout to keep a light footprint for long-lived\n        // sudo-prompt processes.\n        setTimeout(\n          function() {\n            // If administrator has no password and user clicks Yes, then\n            // PowerShell returns no error and execute (and command) never runs.\n            // We check that command output has been redirected to stdout file:\n            Node.fs.stat(instance.pathStdout,\n              function(error) {\n                if (error) return end(new Error(PERMISSION_DENIED));\n                WindowsWaitForStatus(instance, end);\n              }\n            );\n          },\n          1000\n        );\n      } else if (error) {\n        end(error);\n      } else {\n        end();\n      }\n    }\n  );\n}\n\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    // We expect double quotes to be reserved on Windows.\n    // Even so, we test for this and abort if they are present.\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  // Set code page to UTF-8:\n  script.push('chcp 65001>nul');\n  // Preserve current working directory:\n  // We pass /d as an option in case the cwd is on another drive (issue 70).\n  script.push('cd /d \"' + cwd + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    // \"The characters <, >, |, &, ^ are special command shell characters, and\n    // they must be preceded by the escape character (^) or enclosed in\n    // quotation marks. If you use quotation marks to enclose a string that\n    // contains one of the special characters, the quotation marks are set as\n    // part of the environment variable value.\"\n    // In other words, Windows assigns everything that follows the equals sign\n    // to the value of the variable, whereas Unix systems ignore double quotes.\n    var value = instance.options.env[key];\n    script.push('set ' + key + '=' + value.replace(/([<>\\\\|&^])/g, '^$1'));\n  }\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\n\nfunction WindowsWriteElevateScript(instance, end) {\n  // We do not use VBScript to elevate since it does not return an error if\n  // the user does not grant permission. This is here for reference.\n  // var script = [];\n  // script.push('Set objShell = CreateObject(\"Shell.Application\")');\n  // script.push(\n  // 'objShell.ShellExecute \"' + instance.pathExecute + '\", \"\", \"\", \"runas\", 0'\n  // );\n  // script = script.join('\\r\\n');\n  // Node.fs.writeFile(instance.pathElevate, script, 'utf-8', end);\n}\n\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push(\n    'call \"' + instance.pathCommand + '\"' +\n    ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"'\n  );\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\n\nmodule.exports.exec = Exec;\n\n// We used to expect that applet.app would be included with this module.\n// This could not be copied when sudo-prompt was packaged within an asar file.\n// We now store applet.app as a zip file in base64 within index.js instead.\n// To recreate: \"zip -r ../applet.zip Contents\" (with applet.app as CWD).\n// The zip file must not include applet.app as the root directory so that we\n// can extract it directly to the target app directory.\nvar APPLET = '';\n\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\n\n// See issue 66:\nvar MAX_BUFFER = 134217728;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}