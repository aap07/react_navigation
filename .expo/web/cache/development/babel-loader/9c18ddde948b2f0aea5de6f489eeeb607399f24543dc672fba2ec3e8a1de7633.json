{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _resolvePlatform = require(\"./resolvePlatform\");\nvar HistoryFallbackMiddleware = function () {\n  function HistoryFallbackMiddleware(indexMiddleware) {\n    _classCallCheck(this, HistoryFallbackMiddleware);\n    this.indexMiddleware = indexMiddleware;\n  }\n  _createClass(HistoryFallbackMiddleware, [{\n    key: \"getHandler\",\n    value: function getHandler() {\n      var _this = this;\n      return function (req, res, next) {\n        var platform = (0, _resolvePlatform).parsePlatformHeader(req);\n        if (!platform || platform === \"web\") {\n          return _this.indexMiddleware(req, res, next);\n        }\n        return next();\n      };\n    }\n  }]);\n  return HistoryFallbackMiddleware;\n}();\nexports.HistoryFallbackMiddleware = HistoryFallbackMiddleware;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_resolvePlatform","HistoryFallbackMiddleware","indexMiddleware","key","value","getHandler","_this","req","res","next","platform","parsePlatformHeader"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\middleware\\HistoryFallbackMiddleware.ts"],"sourcesContent":["import { parsePlatformHeader } from './resolvePlatform';\nimport { ServerNext, ServerRequest, ServerResponse } from './server.types';\n\n/**\n * Create a web-only middleware which redirects to the index middleware without losing the path component.\n * This is useful for things like React Navigation which need to render the index.html and then direct the user in-memory.\n */\nexport class HistoryFallbackMiddleware {\n  constructor(\n    private indexMiddleware: (\n      req: ServerRequest,\n      res: ServerResponse,\n      next: ServerNext\n    ) => Promise<void>\n  ) {}\n  getHandler() {\n    return (req: ServerRequest, res: ServerResponse, next: any) => {\n      const platform = parsePlatformHeader(req);\n\n      if (!platform || platform === 'web') {\n        // Redirect unknown to the manifest handler while preserving the path.\n        // This implements the HTML5 history fallback API.\n        return this.indexMiddleware(req, res, next);\n      }\n\n      return next();\n    };\n  }\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;;;;AAAoC,IAAAE,gBAAmB,GAAAF,OAAA;AAAA,IAO1CG,yBAAyB;EACpC,SAAAA,0BACUC,eAIU,EAClB;IAAAL,eAAA,OAAAI,yBAAA;SALQC,eAIU,GAJVA,eAIU;;EAChBH,YAAA,CAAAE,yBAAA;IAAAE,GAAA;IAAAC,KAAA,EACJ,SAAAC,WAAA,EAAa;MAAA,IAAAC,KAAA;MACX,OAAO,UAACC,GAAkB,EAAEC,GAAmB,EAAEC,IAAS,EAAK;QAC7D,IAAMC,QAAQ,GAAG,IAAAV,gBAAmB,EAAKW,mBAAL,CAACJ,GAAG,CAAC;QAEzC,IAAI,CAACG,QAAQ,IAAIA,QAAQ,KAAK,KAAK,EAAE;UAGnC,OAAOJ,KAAI,CAACJ,eAAe,CAACK,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;;QAG7C,OAAOA,IAAI,EAAE;OACd;;EACF;EAAA,OAAAR,yBAAA;AAAA;QApBUA,yBAAyB,GAAzBA,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}