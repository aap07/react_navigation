{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnexpectedError = exports.PluginError = void 0;\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar UnexpectedError = function (_Error) {\n  _inherits(UnexpectedError, _Error);\n  var _super = _createSuper(UnexpectedError);\n  function UnexpectedError(message) {\n    var _this;\n    _classCallCheck(this, UnexpectedError);\n    _this = _super.call(this, `${message}\\nPlease report this as an issue on https://github.com/expo/expo-cli/issues`);\n    _defineProperty(_assertThisInitialized(_this), \"name\", 'UnexpectedError');\n    return _this;\n  }\n  return _createClass(UnexpectedError);\n}(_wrapNativeSuper(Error));\nexports.UnexpectedError = UnexpectedError;\nvar PluginError = function (_Error2) {\n  _inherits(PluginError, _Error2);\n  var _super2 = _createSuper(PluginError);\n  function PluginError(message, code, cause) {\n    var _this2;\n    _classCallCheck(this, PluginError);\n    _this2 = _super2.call(this, cause ? `${message}\\n└─ Cause: ${cause.name}: ${cause.message}` : message);\n    _this2.code = code;\n    _this2.cause = cause;\n    _defineProperty(_assertThisInitialized(_this2), \"name\", 'PluginError');\n    _defineProperty(_assertThisInitialized(_this2), \"isPluginError\", true);\n    return _this2;\n  }\n  return _createClass(PluginError);\n}(_wrapNativeSuper(Error));\nexports.PluginError = PluginError;","map":{"version":3,"names":["UnexpectedError","_Error","_inherits","_super","_createSuper","message","_this","_classCallCheck","call","_defineProperty","_assertThisInitialized","_createClass","_wrapNativeSuper","Error","exports","PluginError","_Error2","_super2","code","cause","_this2","name"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\utils\\errors.ts"],"sourcesContent":["export class UnexpectedError extends Error {\n  readonly name = 'UnexpectedError';\n\n  constructor(message: string) {\n    super(`${message}\\nPlease report this as an issue on https://github.com/expo/expo-cli/issues`);\n  }\n}\n\nexport type PluginErrorCode =\n  | 'INVALID_PLUGIN_TYPE'\n  | 'INVALID_PLUGIN_IMPORT'\n  | 'PLUGIN_NOT_FOUND'\n  | 'CONFLICTING_PROVIDER'\n  | 'INVALID_MOD_ORDER'\n  | 'MISSING_PROVIDER';\n\n/**\n * Based on `JsonFileError` from `@expo/json-file`\n */\nexport class PluginError extends Error {\n  readonly name = 'PluginError';\n  readonly isPluginError = true;\n\n  constructor(message: string, public code: PluginErrorCode, public cause?: Error) {\n    super(cause ? `${message}\\n└─ Cause: ${cause.name}: ${cause.message}` : message);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAaA,eAAe,aAAAC,MAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAG1B,SAAAA,gBAAYK,OAAe,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,eAAA;IAC3BM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAO,GAAEH,OAAQ,6EAA4E;IAAEI,eAAA,CAAAC,sBAAA,CAAAJ,KAAA,WAHjF,iBAAiB;IAAA,OAAAA,KAAA;EAIjC;EAAA,OAAAK,YAAA,CAAAX,eAAA;AAAA,EAAAY,gBAAA,CALmCC,KAAK;AAMzCC,OAAA,CAAAd,eAAA,GAAAA,eAAA;AAAA,IAaYe,WAAW,aAAAC,OAAA;EAAAd,SAAA,CAAAa,WAAA,EAAAC,OAAA;EAAA,IAAAC,OAAA,GAAAb,YAAA,CAAAW,WAAA;EAItB,SAAAA,YAAYV,OAAe,EAASa,IAAqB,EAASC,KAAa,EAAE;IAAA,IAAAC,MAAA;IAAAb,eAAA,OAAAQ,WAAA;IAC/EK,MAAA,GAAAH,OAAA,CAAAT,IAAA,OAAMW,KAAK,GAAI,GAAEd,OAAQ,eAAcc,KAAK,CAACE,IAAK,KAAIF,KAAK,CAACd,OAAQ,EAAC,GAAGA,OAAO;IAAEe,MAAA,CAD/CF,IAAqB,GAArBA,IAAqB;IAAAE,MAAA,CAASD,KAAa,GAAbA,KAAa;IAAAV,eAAA,CAAAC,sBAAA,CAAAU,MAAA,WAH/D,aAAa;IAAAX,eAAA,CAAAC,sBAAA,CAAAU,MAAA,oBACJ,IAAI;IAAA,OAAAA,MAAA;EAI7B;EAAA,OAAAT,YAAA,CAAAI,WAAA;AAAA,EAAAH,gBAAA,CAN+BC,KAAK;AAOrCC,OAAA,CAAAC,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}