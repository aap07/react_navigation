{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport GestureHandler from \"./GestureHandler\";\nvar NativeViewGestureHandler = function (_GestureHandler) {\n  _inherits(NativeViewGestureHandler, _GestureHandler);\n  var _super = _createSuper(NativeViewGestureHandler);\n  function NativeViewGestureHandler() {\n    _classCallCheck(this, NativeViewGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(NativeViewGestureHandler);\n}(GestureHandler);\nexport { NativeViewGestureHandler as default };","map":{"version":3,"names":["GestureHandler","NativeViewGestureHandler","_GestureHandler","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web/handlers/NativeViewGestureHandler.d.ts"],"sourcesContent":["import { AdaptedEvent, Config } from '../interfaces';\nimport GestureHandler from './GestureHandler';\nexport default class NativeViewGestureHandler extends GestureHandler {\n    private buttonRole;\n    private shouldActivateOnStart;\n    private disallowInterruption;\n    private startX;\n    private startY;\n    private minDistSq;\n    init(ref: number, propsRef: React.RefObject<unknown>): void;\n    updateGestureConfig({ enabled, ...props }: Config): void;\n    protected resetConfig(): void;\n    protected onPointerDown(event: AdaptedEvent): void;\n    protected onPointerAdd(event: AdaptedEvent): void;\n    private newPointerAction;\n    protected onPointerMove(event: AdaptedEvent): void;\n    protected onPointerOut(): void;\n    protected onPointerUp(event: AdaptedEvent): void;\n    protected onPointerRemove(event: AdaptedEvent): void;\n    private onUp;\n    shouldRecognizeSimultaneously(handler: GestureHandler): boolean;\n    shouldBeCancelledByOther(_handler: GestureHandler): boolean;\n    disallowsInterruption(): boolean;\n}\n"],"mappings":";;;;;;;AACA,OAAOA,cAAc;AAAyB,IACzBC,wBAAwB,aAAAC,eAAA;EAAAC,SAAA,CAAAF,wBAAA,EAAAC,eAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,wBAAA;EAAA,SAAAA,yBAAA;IAAAK,eAAA,OAAAL,wBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAA,OAAAC,YAAA,CAAAR,wBAAA;AAAA,EAASD,cAAc;AAAA,SAA/CC,wBAAwB,IAAAS,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}