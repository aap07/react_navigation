{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _stream = require(\"stream\");\nvar tls = _interopRequireWildcard(require(\"tls\"));\nvar _errors = require(\"../../../utils/errors\");\nvar _afcclient = require(\"./client/AFCClient\");\nvar _debugserverClient = require(\"./client/DebugserverClient\");\nvar _installationProxyClient = require(\"./client/InstallationProxyClient\");\nvar _lockdowndClient = require(\"./client/LockdowndClient\");\nvar _mobileImageMounterClient = require(\"./client/MobileImageMounterClient\");\nvar _usbmuxdClient = require(\"./client/UsbmuxdClient\");\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar ClientManager = function () {\n  function ClientManager(pairRecord, device, lockdowndClient) {\n    _classCallCheck(this, ClientManager);\n    this.pairRecord = pairRecord;\n    this.device = device;\n    this.lockdowndClient = lockdowndClient;\n    this.connections = [lockdowndClient.socket];\n  }\n  _createClass(ClientManager, [{\n    key: \"getUsbmuxdClient\",\n    value: function () {\n      var _getUsbmuxdClient = _asyncToGenerator(function* () {\n        var usbmuxClient = new _usbmuxdClient.UsbmuxdClient(_usbmuxdClient.UsbmuxdClient.connectUsbmuxdSocket());\n        this.connections.push(usbmuxClient.socket);\n        return usbmuxClient;\n      });\n      function getUsbmuxdClient() {\n        return _getUsbmuxdClient.apply(this, arguments);\n      }\n      return getUsbmuxdClient;\n    }()\n  }, {\n    key: \"getLockdowndClient\",\n    value: function () {\n      var _getLockdowndClient = _asyncToGenerator(function* () {\n        var usbmuxClient = new _usbmuxdClient.UsbmuxdClient(_usbmuxdClient.UsbmuxdClient.connectUsbmuxdSocket());\n        var lockdownSocket = yield usbmuxClient.connect(this.device, 62078);\n        var lockdownClient = new _lockdowndClient.LockdowndClient(lockdownSocket);\n        this.connections.push(lockdownClient.socket);\n        return lockdownClient;\n      });\n      function getLockdowndClient() {\n        return _getLockdowndClient.apply(this, arguments);\n      }\n      return getLockdowndClient;\n    }()\n  }, {\n    key: \"getLockdowndClientWithHandshake\",\n    value: function () {\n      var _getLockdowndClientWithHandshake = _asyncToGenerator(function* () {\n        var lockdownClient = yield this.getLockdowndClient();\n        yield lockdownClient.doHandshake(this.pairRecord);\n        return lockdownClient;\n      });\n      function getLockdowndClientWithHandshake() {\n        return _getLockdowndClientWithHandshake.apply(this, arguments);\n      }\n      return getLockdowndClientWithHandshake;\n    }()\n  }, {\n    key: \"getAFCClient\",\n    value: function () {\n      var _getAFCClient = _asyncToGenerator(function* () {\n        return this.getServiceClient(\"com.apple.afc\", _afcclient.AFCClient);\n      });\n      function getAFCClient() {\n        return _getAFCClient.apply(this, arguments);\n      }\n      return getAFCClient;\n    }()\n  }, {\n    key: \"getInstallationProxyClient\",\n    value: function () {\n      var _getInstallationProxyClient = _asyncToGenerator(function* () {\n        return this.getServiceClient(\"com.apple.mobile.installation_proxy\", _installationProxyClient.InstallationProxyClient);\n      });\n      function getInstallationProxyClient() {\n        return _getInstallationProxyClient.apply(this, arguments);\n      }\n      return getInstallationProxyClient;\n    }()\n  }, {\n    key: \"getMobileImageMounterClient\",\n    value: function () {\n      var _getMobileImageMounterClient = _asyncToGenerator(function* () {\n        return this.getServiceClient(\"com.apple.mobile.mobile_image_mounter\", _mobileImageMounterClient.MobileImageMounterClient);\n      });\n      function getMobileImageMounterClient() {\n        return _getMobileImageMounterClient.apply(this, arguments);\n      }\n      return getMobileImageMounterClient;\n    }()\n  }, {\n    key: \"getDebugserverClient\",\n    value: function () {\n      var _getDebugserverClient = _asyncToGenerator(function* () {\n        try {\n          return yield this.getServiceClient(\"com.apple.debugserver.DVTSecureSocketProxy\", _debugserverClient.DebugserverClient);\n        } catch (_unused) {\n          return this.getServiceClient(\"com.apple.debugserver\", _debugserverClient.DebugserverClient, true);\n        }\n      });\n      function getDebugserverClient() {\n        return _getDebugserverClient.apply(this, arguments);\n      }\n      return getDebugserverClient;\n    }()\n  }, {\n    key: \"getServiceClient\",\n    value: function () {\n      var _getServiceClient = _asyncToGenerator(function* (name, ServiceType) {\n        var disableSSL = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var _yield$this$lockdownd = yield this.lockdowndClient.startService(name),\n          servicePort = _yield$this$lockdownd.port,\n          enableServiceSSL = _yield$this$lockdownd.enableServiceSSL;\n        var usbmuxClient = new _usbmuxdClient.UsbmuxdClient(_usbmuxdClient.UsbmuxdClient.connectUsbmuxdSocket());\n        var usbmuxdSocket = yield usbmuxClient.connect(this.device, servicePort);\n        if (enableServiceSSL) {\n          var tlsOptions = {\n            rejectUnauthorized: false,\n            secureContext: tls.createSecureContext({\n              cert: this.pairRecord.RootCertificate,\n              key: this.pairRecord.RootPrivateKey\n            })\n          };\n          if (disableSSL) {\n            var proxy = new UsbmuxdProxy(usbmuxdSocket);\n            tlsOptions.socket = proxy;\n            yield new Promise(function (resolve, reject) {\n              var timeoutId = setTimeout(function () {\n                reject(new _errors.CommandError(\"APPLE_DEVICE\", \"The TLS handshake failed to complete after 5s.\"));\n              }, 5000);\n              tls.connect(tlsOptions, function () {\n                clearTimeout(timeoutId);\n                this.destroy();\n                resolve();\n              });\n            });\n          } else {\n            tlsOptions.socket = usbmuxdSocket;\n            usbmuxdSocket = tls.connect(tlsOptions);\n          }\n        }\n        var client = new ServiceType(usbmuxdSocket);\n        this.connections.push(client.socket);\n        return client;\n      });\n      function getServiceClient(_x, _x2) {\n        return _getServiceClient.apply(this, arguments);\n      }\n      return getServiceClient;\n    }()\n  }, {\n    key: \"end\",\n    value: function end() {\n      for (var socket of this.connections) {\n        try {\n          socket.end();\n        } catch (_unused2) {}\n      }\n    }\n  }], [{\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator(function* (udid) {\n        var usbmuxClient = new _usbmuxdClient.UsbmuxdClient(_usbmuxdClient.UsbmuxdClient.connectUsbmuxdSocket());\n        var device = yield usbmuxClient.getDevice(udid);\n        var pairRecord = yield usbmuxClient.readPairRecord(device.Properties.SerialNumber);\n        var lockdownSocket = yield usbmuxClient.connect(device, 62078);\n        var lockdownClient = new _lockdowndClient.LockdowndClient(lockdownSocket);\n        yield lockdownClient.doHandshake(pairRecord);\n        return new ClientManager(pairRecord, device, lockdownClient);\n      });\n      function create(_x3) {\n        return _create.apply(this, arguments);\n      }\n      return create;\n    }()\n  }]);\n  return ClientManager;\n}();\nexports.ClientManager = ClientManager;\nvar UsbmuxdProxy = function (_stream$Duplex) {\n  _inherits(UsbmuxdProxy, _stream$Duplex);\n  var _super = _createSuper(UsbmuxdProxy);\n  function UsbmuxdProxy(usbmuxdSock) {\n    var _this;\n    _classCallCheck(this, UsbmuxdProxy);\n    _this = _super.call(this);\n    _this.usbmuxdSock = usbmuxdSock;\n    _this.usbmuxdSock.on(\"data\", function (data) {\n      _this.push(data);\n    });\n    return _this;\n  }\n  _createClass(UsbmuxdProxy, [{\n    key: \"_write\",\n    value: function _write(chunk, encoding, callback) {\n      this.usbmuxdSock.write(chunk);\n      callback();\n    }\n  }, {\n    key: \"_read\",\n    value: function _read(size) {}\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      this.usbmuxdSock.removeAllListeners();\n    }\n  }]);\n  return UsbmuxdProxy;\n}(_stream.Duplex);","map":{"version":3,"names":["_inherits","require","_possibleConstructorReturn","_getPrototypeOf","_asyncToGenerator","_classCallCheck","_createClass","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_stream","tls","_interopRequireWildcard","_errors","_afcclient","_debugserverClient","_installationProxyClient","_lockdowndClient","_mobileImageMounterClient","_usbmuxdClient","ClientManager","pairRecord","device","lockdowndClient","connections","socket","key","value","_getUsbmuxdClient","usbmuxClient","UsbmuxdClient","connectUsbmuxdSocket","push","getUsbmuxdClient","_getLockdowndClient","lockdownSocket","connect","lockdownClient","LockdowndClient","getLockdowndClient","_getLockdowndClientWithHandshake","doHandshake","getLockdowndClientWithHandshake","_getAFCClient","getServiceClient","AFCClient","getAFCClient","_getInstallationProxyClient","InstallationProxyClient","getInstallationProxyClient","_getMobileImageMounterClient","MobileImageMounterClient","getMobileImageMounterClient","_getDebugserverClient","DebugserverClient","_unused","getDebugserverClient","_getServiceClient","name","ServiceType","disableSSL","length","undefined","_yield$this$lockdownd","startService","servicePort","port","enableServiceSSL","usbmuxdSocket","tlsOptions","rejectUnauthorized","secureContext","createSecureContext","cert","RootCertificate","RootPrivateKey","proxy","UsbmuxdProxy","Promise","resolve","reject","timeoutId","setTimeout","CommandError","clearTimeout","destroy","client","_x","_x2","end","_unused2","_create","udid","getDevice","readPairRecord","Properties","SerialNumber","create","_x3","_stream$Duplex","_super","usbmuxdSock","_this","on","data","_write","chunk","encoding","callback","write","_read","size","_destroy","removeAllListeners","Duplex"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\ios\\appleDevice\\ClientManager.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Socket } from 'net';\nimport { Duplex } from 'stream';\nimport * as tls from 'tls';\n\nimport { CommandError } from '../../../utils/errors';\nimport { AFCClient } from './client/AFCClient';\nimport { DebugserverClient } from './client/DebugserverClient';\nimport { InstallationProxyClient } from './client/InstallationProxyClient';\nimport { LockdowndClient } from './client/LockdowndClient';\nimport { MobileImageMounterClient } from './client/MobileImageMounterClient';\nimport { ServiceClient } from './client/ServiceClient';\nimport { UsbmuxdClient, UsbmuxdDevice, UsbmuxdPairRecord } from './client/UsbmuxdClient';\n\nexport class ClientManager {\n  private connections: Socket[];\n  constructor(\n    public pairRecord: UsbmuxdPairRecord,\n    public device: UsbmuxdDevice,\n    private lockdowndClient: LockdowndClient\n  ) {\n    this.connections = [lockdowndClient.socket];\n  }\n\n  static async create(udid?: string) {\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    const device = await usbmuxClient.getDevice(udid);\n    const pairRecord = await usbmuxClient.readPairRecord(device.Properties.SerialNumber);\n    const lockdownSocket = await usbmuxClient.connect(device, 62078);\n    const lockdownClient = new LockdowndClient(lockdownSocket);\n    await lockdownClient.doHandshake(pairRecord);\n    return new ClientManager(pairRecord, device, lockdownClient);\n  }\n\n  async getUsbmuxdClient() {\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    this.connections.push(usbmuxClient.socket);\n    return usbmuxClient;\n  }\n\n  async getLockdowndClient() {\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    const lockdownSocket = await usbmuxClient.connect(this.device, 62078);\n    const lockdownClient = new LockdowndClient(lockdownSocket);\n    this.connections.push(lockdownClient.socket);\n    return lockdownClient;\n  }\n\n  async getLockdowndClientWithHandshake() {\n    const lockdownClient = await this.getLockdowndClient();\n    await lockdownClient.doHandshake(this.pairRecord);\n    return lockdownClient;\n  }\n\n  async getAFCClient() {\n    return this.getServiceClient('com.apple.afc', AFCClient);\n  }\n\n  async getInstallationProxyClient() {\n    return this.getServiceClient('com.apple.mobile.installation_proxy', InstallationProxyClient);\n  }\n\n  async getMobileImageMounterClient() {\n    return this.getServiceClient('com.apple.mobile.mobile_image_mounter', MobileImageMounterClient);\n  }\n\n  async getDebugserverClient() {\n    try {\n      // iOS 14 added support for a secure debug service so try to connect to that first\n      return await this.getServiceClient(\n        'com.apple.debugserver.DVTSecureSocketProxy',\n        DebugserverClient\n      );\n    } catch {\n      // otherwise, fall back to the previous implementation\n      return this.getServiceClient('com.apple.debugserver', DebugserverClient, true);\n    }\n  }\n\n  private async getServiceClient<T extends ServiceClient<any>>(\n    name: string,\n    ServiceType: new (...args: any[]) => T,\n    disableSSL = false\n  ) {\n    const { port: servicePort, enableServiceSSL } = await this.lockdowndClient.startService(name);\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    let usbmuxdSocket = await usbmuxClient.connect(this.device, servicePort);\n\n    if (enableServiceSSL) {\n      const tlsOptions: tls.ConnectionOptions = {\n        rejectUnauthorized: false,\n        secureContext: tls.createSecureContext({\n          // Avoid using `secureProtocol` fixing the socket to a single TLS version.\n          // Newer Node versions might not support older TLS versions.\n          // By using the default `minVersion` and `maxVersion` options,\n          // The socket will automatically use the appropriate TLS version.\n          // See: https://nodejs.org/api/tls.html#tlscreatesecurecontextoptions\n          cert: this.pairRecord.RootCertificate,\n          key: this.pairRecord.RootPrivateKey,\n        }),\n      };\n\n      // Some services seem to not support TLS/SSL after the initial handshake\n      // More info: https://github.com/libimobiledevice/libimobiledevice/issues/793\n      if (disableSSL) {\n        // According to https://nodejs.org/api/tls.html#tls_tls_connect_options_callback we can\n        // pass any Duplex in to tls.connect instead of a Socket. So we'll use our proxy to keep\n        // the TLS wrapper and underlying usbmuxd socket separate.\n        const proxy: any = new UsbmuxdProxy(usbmuxdSocket);\n        tlsOptions.socket = proxy;\n\n        await new Promise<void>((resolve, reject) => {\n          const timeoutId = setTimeout(() => {\n            reject(\n              new CommandError('APPLE_DEVICE', 'The TLS handshake failed to complete after 5s.')\n            );\n          }, 5000);\n          tls.connect(tlsOptions, function (this: tls.TLSSocket) {\n            clearTimeout(timeoutId);\n            // After the handshake, we don't need TLS or the proxy anymore,\n            // since we'll just pass in the naked usbmuxd socket to the service client\n            this.destroy();\n            resolve();\n          });\n        });\n      } else {\n        tlsOptions.socket = usbmuxdSocket;\n        usbmuxdSocket = tls.connect(tlsOptions);\n      }\n    }\n    const client = new ServiceType(usbmuxdSocket);\n    this.connections.push(client.socket);\n    return client;\n  }\n\n  end() {\n    for (const socket of this.connections) {\n      // may already be closed\n      try {\n        socket.end();\n      } catch {}\n    }\n  }\n}\n\nclass UsbmuxdProxy extends Duplex {\n  constructor(private usbmuxdSock: Socket) {\n    super();\n\n    this.usbmuxdSock.on('data', (data) => {\n      this.push(data);\n    });\n  }\n\n  _write(chunk: any, encoding: string, callback: (err?: Error) => void) {\n    this.usbmuxdSock.write(chunk);\n    callback();\n  }\n\n  _read(size: number) {\n    // Stub so we don't error, since we push everything we get from usbmuxd as it comes in.\n    // TODO: better way to do this?\n  }\n\n  _destroy() {\n    this.usbmuxdSock.removeAllListeners();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}