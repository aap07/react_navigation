{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _configPlugins = require(\"@expo/config-plugins\");\nvar _plist = _interopRequireDefault(require(\"@expo/plist\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _appIdResolver = require(\"../AppIdResolver\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:start:platforms:ios:AppleAppIdResolver\");\nvar AppleAppIdResolver = function (_appIdResolver$AppIdR) {\n  _inherits(AppleAppIdResolver, _appIdResolver$AppIdR);\n  var _super = _createSuper(AppleAppIdResolver);\n  function AppleAppIdResolver(projectRoot) {\n    _classCallCheck(this, AppleAppIdResolver);\n    return _super.call(this, projectRoot, \"ios\", \"ios.bundleIdentifier\");\n  }\n  _createClass(AppleAppIdResolver, [{\n    key: \"hasNativeProjectAsync\",\n    value: function () {\n      var _hasNativeProjectAsync = _asyncToGenerator(function* () {\n        try {\n          return !!_configPlugins.IOSConfig.Paths.getAllPBXProjectPaths(this.projectRoot).length;\n        } catch (error) {\n          debug(\"Expected error checking for native project:\", error);\n          return false;\n        }\n      });\n      function hasNativeProjectAsync() {\n        return _hasNativeProjectAsync.apply(this, arguments);\n      }\n      return hasNativeProjectAsync;\n    }()\n  }, {\n    key: \"resolveAppIdFromNativeAsync\",\n    value: function () {\n      var _resolveAppIdFromNativeAsync = _asyncToGenerator(function* () {\n        try {\n          var bundleId = _configPlugins.IOSConfig.BundleIdentifier.getBundleIdentifierFromPbxproj(this.projectRoot);\n          if (bundleId) {\n            return bundleId;\n          }\n        } catch (error) {\n          debug(\"Expected error resolving the bundle identifier from the pbxproj:\", error);\n        }\n        try {\n          var infoPlistPath = _configPlugins.IOSConfig.Paths.getInfoPlistPath(this.projectRoot);\n          var data = yield _plist.default.parse(_fs.default.readFileSync(infoPlistPath, \"utf8\"));\n          if (data.CFBundleIdentifier && !data.CFBundleIdentifier.startsWith(\"$(\")) {\n            return data.CFBundleIdentifier;\n          }\n        } catch (error1) {\n          debug(\"Expected error resolving the bundle identifier from the project Info.plist:\", error1);\n        }\n        return null;\n      });\n      function resolveAppIdFromNativeAsync() {\n        return _resolveAppIdFromNativeAsync.apply(this, arguments);\n      }\n      return resolveAppIdFromNativeAsync;\n    }()\n  }]);\n  return AppleAppIdResolver;\n}(_appIdResolver.AppIdResolver);\nexports.AppleAppIdResolver = AppleAppIdResolver;","map":{"version":3,"names":["_asyncToGenerator","require","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_configPlugins","_plist","_interopRequireDefault","_fs","_appIdResolver","debug","AppleAppIdResolver","_appIdResolver$AppIdR","_super","projectRoot","key","value","_hasNativeProjectAsync","IOSConfig","Paths","getAllPBXProjectPaths","length","error","hasNativeProjectAsync","_resolveAppIdFromNativeAsync","bundleId","BundleIdentifier","getBundleIdentifierFromPbxproj","infoPlistPath","getInfoPlistPath","data","default","parse","readFileSync","CFBundleIdentifier","startsWith","error1","resolveAppIdFromNativeAsync","AppIdResolver"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\platforms\\ios\\AppleAppIdResolver.ts"],"sourcesContent":["import { IOSConfig } from '@expo/config-plugins';\nimport plist from '@expo/plist';\nimport fs from 'fs';\n\nimport { AppIdResolver } from '../AppIdResolver';\n\nconst debug = require('debug')('expo:start:platforms:ios:AppleAppIdResolver') as typeof console.log;\n\n/** Resolves the iOS bundle identifier from the Expo config or native files. */\nexport class AppleAppIdResolver extends AppIdResolver {\n  constructor(projectRoot: string) {\n    super(projectRoot, 'ios', 'ios.bundleIdentifier');\n  }\n\n  /** @return `true` if the app has valid `*.pbxproj` file */\n  async hasNativeProjectAsync(): Promise<boolean> {\n    try {\n      // Never returns nullish values.\n      return !!IOSConfig.Paths.getAllPBXProjectPaths(this.projectRoot).length;\n    } catch (error: any) {\n      debug('Expected error checking for native project:', error);\n      return false;\n    }\n  }\n\n  async resolveAppIdFromNativeAsync(): Promise<string | null> {\n    // Check xcode project\n    try {\n      const bundleId = IOSConfig.BundleIdentifier.getBundleIdentifierFromPbxproj(this.projectRoot);\n      if (bundleId) {\n        return bundleId;\n      }\n    } catch (error: any) {\n      debug('Expected error resolving the bundle identifier from the pbxproj:', error);\n    }\n\n    // Check Info.plist\n    try {\n      const infoPlistPath = IOSConfig.Paths.getInfoPlistPath(this.projectRoot);\n      const data = await plist.parse(fs.readFileSync(infoPlistPath, 'utf8'));\n      if (data.CFBundleIdentifier && !data.CFBundleIdentifier.startsWith('$(')) {\n        return data.CFBundleIdentifier;\n      }\n    } catch (error) {\n      debug('Expected error resolving the bundle identifier from the project Info.plist:', error);\n    }\n\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}