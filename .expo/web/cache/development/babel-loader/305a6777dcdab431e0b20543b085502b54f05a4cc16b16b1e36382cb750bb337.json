{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inline = inline;\nexports.logMessage = exports.logManualInstallation = exports.logError = void 0;\nexports.removeMessage = removeMessage;\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _readline() {\n  var data = _interopRequireDefault(require(\"readline\"));\n  _readline = function _readline() {\n    return data;\n  };\n  return data;\n}\nfunction _wcwidth() {\n  var data = _interopRequireDefault(require(\"wcwidth\"));\n  _wcwidth = function _wcwidth() {\n    return data;\n  };\n  return data;\n}\nfunction _stripAnsi() {\n  var data = _interopRequireDefault(require(\"strip-ansi\"));\n  _stripAnsi = function _stripAnsi() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar logMessage = function logMessage(message) {\n  var indentation = '   ';\n  if (typeof message !== 'string') {\n    _cliTools().logger.log();\n    return;\n  }\n  var messageByLine = message.split('\\n');\n  return _cliTools().logger.log(`${indentation}${messageByLine.join(`\\n${indentation}`)}`);\n};\nexports.logMessage = logMessage;\nvar addBlankLine = function addBlankLine() {\n  return logMessage();\n};\nvar logManualInstallation = function logManualInstallation(_ref) {\n  var healthcheck = _ref.healthcheck,\n    url = _ref.url,\n    command = _ref.command,\n    message = _ref.message;\n  if (message) {\n    return logMessage(message);\n  }\n  if (url) {\n    logMessage(`Read more about how to download ${healthcheck} at ${_chalk().default.dim.underline(url)}`);\n    return;\n  }\n  if (command) {\n    logMessage(`Please install ${healthcheck} by running ${_chalk().default.bold(command)}`);\n  }\n};\nexports.logManualInstallation = logManualInstallation;\nvar logError = function logError(_ref2) {\n  var healthcheck = _ref2.healthcheck,\n    loader = _ref2.loader,\n    error = _ref2.error,\n    message = _ref2.message,\n    command = _ref2.command;\n  if (loader) {\n    loader.fail();\n  }\n  addBlankLine();\n  logMessage(_chalk().default.dim(error.message));\n  if (message) {\n    logMessage(message);\n    addBlankLine();\n    return;\n  }\n  logMessage(`The error above occured while trying to install ${healthcheck}. Please try again manually: ${_chalk().default.bold(command)}`);\n  addBlankLine();\n};\nexports.logError = logError;\nfunction calculateMessageSize(message) {\n  return Math.max(1, Math.ceil((0, _wcwidth().default)((0, _stripAnsi().default)(message)) / (process.stdout.columns || 80)));\n}\nfunction removeMessage(message) {\n  _readline().default.moveCursor(process.stdout, 0, -calculateMessageSize(message));\n  _readline().default.clearScreenDown(process.stdout);\n}\nfunction inline(strings) {\n  for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    values[_key - 1] = arguments[_key];\n  }\n  var zipped = strings.map(function (str, i) {\n    var _values$i;\n    return `${str}${(_values$i = values[i]) != null ? _values$i : ''}`;\n  }).join('');\n  return zipped.trim().split('\\n').filter(function (line) {\n    return !/^\\W*$/.test(line);\n  }).map(function (line) {\n    return line.trim();\n  }).join('; ');\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","inline","logMessage","logManualInstallation","logError","removeMessage","_chalk","data","_interopRequireDefault","require","_readline","_wcwidth","_stripAnsi","_cliTools","obj","__esModule","default","message","indentation","logger","log","messageByLine","split","join","addBlankLine","_ref","healthcheck","url","command","dim","underline","bold","_ref2","loader","error","fail","calculateMessageSize","Math","max","ceil","process","stdout","columns","moveCursor","clearScreenDown","strings","_len","arguments","length","values","Array","_key","zipped","map","str","i","_values$i","trim","filter","line","test"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/healthchecks/common.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.inline = inline;\nexports.logMessage = exports.logManualInstallation = exports.logError = void 0;\nexports.removeMessage = removeMessage;\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _readline() {\n  const data = _interopRequireDefault(require(\"readline\"));\n  _readline = function () {\n    return data;\n  };\n  return data;\n}\nfunction _wcwidth() {\n  const data = _interopRequireDefault(require(\"wcwidth\"));\n  _wcwidth = function () {\n    return data;\n  };\n  return data;\n}\nfunction _stripAnsi() {\n  const data = _interopRequireDefault(require(\"strip-ansi\"));\n  _stripAnsi = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// Space is necessary to keep correct ordering on screen\nconst logMessage = message => {\n  const indentation = '   ';\n  if (typeof message !== 'string') {\n    _cliTools().logger.log();\n    return;\n  }\n  const messageByLine = message.split('\\n');\n  return _cliTools().logger.log(`${indentation}${messageByLine.join(`\\n${indentation}`)}`);\n};\nexports.logMessage = logMessage;\nconst addBlankLine = () => logMessage();\nconst logManualInstallation = ({\n  healthcheck,\n  url,\n  command,\n  message\n}) => {\n  if (message) {\n    return logMessage(message);\n  }\n  if (url) {\n    logMessage(`Read more about how to download ${healthcheck} at ${_chalk().default.dim.underline(url)}`);\n    return;\n  }\n  if (command) {\n    logMessage(`Please install ${healthcheck} by running ${_chalk().default.bold(command)}`);\n  }\n};\nexports.logManualInstallation = logManualInstallation;\nconst logError = ({\n  healthcheck,\n  loader,\n  error,\n  message,\n  command\n}) => {\n  if (loader) {\n    loader.fail();\n  }\n  addBlankLine();\n  logMessage(_chalk().default.dim(error.message));\n  if (message) {\n    logMessage(message);\n    addBlankLine();\n    return;\n  }\n  logMessage(`The error above occured while trying to install ${healthcheck}. Please try again manually: ${_chalk().default.bold(command)}`);\n  addBlankLine();\n};\n\n// Calculate the size of a message on terminal based on rows\nexports.logError = logError;\nfunction calculateMessageSize(message) {\n  return Math.max(1, Math.ceil((0, _wcwidth().default)((0, _stripAnsi().default)(message)) / (process.stdout.columns || 80)));\n}\n\n// Clear the message from the terminal\nfunction removeMessage(message) {\n  _readline().default.moveCursor(process.stdout, 0, -calculateMessageSize(message));\n  _readline().default.clearScreenDown(process.stdout);\n}\n\n/**\n * Inline a series of Ruby statements:\n *\n * In:\n *  puts \"a\"\n *  puts \"b\"\n *\n * Out:\n *  puts \"a\"; puts \"b\";\n */\nfunction inline(strings, ...values) {\n  const zipped = strings.map((str, i) => `${str}${values[i] ?? ''}`).join('');\n  return zipped.trim().split('\\n').filter(line => !/^\\W*$/.test(line)).map(line => line.trim()).join('; ');\n}\n\n//# sourceMappingURL=common.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}