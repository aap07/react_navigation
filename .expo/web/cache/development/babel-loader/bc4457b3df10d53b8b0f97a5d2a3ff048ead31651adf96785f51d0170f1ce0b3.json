{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport path from 'path';\nimport { writeFileSync as writeFile, existsSync as exists, readFileSync as read } from 'fs';\nimport createDebug from 'debug';\nimport { sync as commandExists } from 'command-exists';\nimport { run, sudoAppend } from \"../utils\";\nimport { addCertificateToNSSCertDB, assertNotTouchingFiles, openCertificateInFirefox, closeFirefox, removeCertificateFromNSSCertDB } from \"./shared\";\nvar debug = createDebug('devcert:platforms:macos');\nvar getCertUtilPath = function getCertUtilPath() {\n  return path.join(run('brew', ['--prefix', 'nss']).toString().trim(), 'bin', 'certutil');\n};\nvar MacOSPlatform = function () {\n  function MacOSPlatform() {\n    _classCallCheck(this, MacOSPlatform);\n    this.FIREFOX_BUNDLE_PATH = '/Applications/Firefox.app';\n    this.FIREFOX_BIN_PATH = path.join(this.FIREFOX_BUNDLE_PATH, 'Contents/MacOS/firefox');\n    this.FIREFOX_NSS_DIR = path.join(process.env.HOME, 'Library/Application Support/Firefox/Profiles/*');\n    this.HOST_FILE_PATH = '/etc/hosts';\n  }\n  _createClass(MacOSPlatform, [{\n    key: \"addToTrustStores\",\n    value: function () {\n      var _addToTrustStores = _asyncToGenerator(function* (certificatePath) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        debug('Adding devcert root CA to macOS system keychain');\n        run('sudo', ['security', 'add-trusted-cert', '-d', '-r', 'trustRoot', '-k', '/Library/Keychains/System.keychain', '-p', 'ssl', '-p', 'basic', certificatePath]);\n        if (this.isFirefoxInstalled()) {\n          debug('Firefox install detected. Adding devcert root CA to Firefox trust store');\n          if (!this.isNSSInstalled()) {\n            if (!options.skipCertutilInstall) {\n              if (commandExists('brew')) {\n                debug(`certutil is not already installed, but Homebrew is detected. Trying to install certutil via Homebrew...`);\n                try {\n                  run('brew', ['install', 'nss'], {\n                    stdio: 'ignore'\n                  });\n                } catch (e) {\n                  debug(`brew install nss failed`);\n                }\n              } else {\n                debug(`Homebrew didn't work, so we can't try to install certutil. Falling back to manual certificate install`);\n                return yield openCertificateInFirefox(this.FIREFOX_BIN_PATH, certificatePath);\n              }\n            } else {\n              debug(`certutil is not already installed, and skipCertutilInstall is true, so we have to fall back to a manual install`);\n              return yield openCertificateInFirefox(this.FIREFOX_BIN_PATH, certificatePath);\n            }\n          }\n          yield closeFirefox();\n          yield addCertificateToNSSCertDB(this.FIREFOX_NSS_DIR, certificatePath, getCertUtilPath());\n        } else {\n          debug('Firefox does not appear to be installed, skipping Firefox-specific steps...');\n        }\n      });\n      function addToTrustStores(_x) {\n        return _addToTrustStores.apply(this, arguments);\n      }\n      return addToTrustStores;\n    }()\n  }, {\n    key: \"removeFromTrustStores\",\n    value: function removeFromTrustStores(certificatePath) {\n      debug('Removing devcert root CA from macOS system keychain');\n      try {\n        run('sudo', ['security', 'remove-trusted-cert', '-d', certificatePath], {\n          stdio: 'ignore'\n        });\n      } catch (e) {\n        debug(`failed to remove ${certificatePath} from macOS cert store, continuing. ${e.toString()}`);\n      }\n      if (this.isFirefoxInstalled() && this.isNSSInstalled()) {\n        debug('Firefox install and certutil install detected. Trying to remove root CA from Firefox NSS databases');\n        removeCertificateFromNSSCertDB(this.FIREFOX_NSS_DIR, certificatePath, getCertUtilPath());\n      }\n    }\n  }, {\n    key: \"addDomainToHostFileIfMissing\",\n    value: function () {\n      var _addDomainToHostFileIfMissing = _asyncToGenerator(function* (domain) {\n        var trimDomain = domain.trim().replace(/[\\s;]/g, '');\n        var hostsFileContents = read(this.HOST_FILE_PATH, 'utf8');\n        if (!hostsFileContents.includes(trimDomain)) {\n          sudoAppend(this.HOST_FILE_PATH, `127.0.0.1 ${trimDomain}\\n`);\n        }\n      });\n      function addDomainToHostFileIfMissing(_x2) {\n        return _addDomainToHostFileIfMissing.apply(this, arguments);\n      }\n      return addDomainToHostFileIfMissing;\n    }()\n  }, {\n    key: \"deleteProtectedFiles\",\n    value: function deleteProtectedFiles(filepath) {\n      assertNotTouchingFiles(filepath, 'delete');\n      run('sudo', ['rm', '-rf', filepath]);\n    }\n  }, {\n    key: \"readProtectedFile\",\n    value: function () {\n      var _readProtectedFile = _asyncToGenerator(function* (filepath) {\n        assertNotTouchingFiles(filepath, 'read');\n        return (yield run('sudo', ['cat', filepath])).toString().trim();\n      });\n      function readProtectedFile(_x3) {\n        return _readProtectedFile.apply(this, arguments);\n      }\n      return readProtectedFile;\n    }()\n  }, {\n    key: \"writeProtectedFile\",\n    value: function () {\n      var _writeProtectedFile = _asyncToGenerator(function* (filepath, contents) {\n        assertNotTouchingFiles(filepath, 'write');\n        if (exists(filepath)) {\n          yield run('sudo', ['rm', filepath]);\n        }\n        writeFile(filepath, contents);\n        yield run('sudo', ['chown', '0', filepath]);\n        yield run('sudo', ['chmod', '600', filepath]);\n      });\n      function writeProtectedFile(_x4, _x5) {\n        return _writeProtectedFile.apply(this, arguments);\n      }\n      return writeProtectedFile;\n    }()\n  }, {\n    key: \"isFirefoxInstalled\",\n    value: function isFirefoxInstalled() {\n      return exists(this.FIREFOX_BUNDLE_PATH);\n    }\n  }, {\n    key: \"isNSSInstalled\",\n    value: function isNSSInstalled() {\n      try {\n        return run('brew', ['list', '-1']).toString().includes('\\nnss\\n');\n      } catch (e) {\n        return false;\n      }\n    }\n  }]);\n  return MacOSPlatform;\n}();\nexport { MacOSPlatform as default };\n;","map":{"version":3,"names":["path","writeFileSync","writeFile","existsSync","exists","readFileSync","read","createDebug","sync","commandExists","run","sudoAppend","addCertificateToNSSCertDB","assertNotTouchingFiles","openCertificateInFirefox","closeFirefox","removeCertificateFromNSSCertDB","debug","getCertUtilPath","join","toString","trim","MacOSPlatform","_classCallCheck","FIREFOX_BUNDLE_PATH","FIREFOX_BIN_PATH","FIREFOX_NSS_DIR","process","env","HOME","HOST_FILE_PATH","_createClass","key","value","_addToTrustStores","_asyncToGenerator","certificatePath","options","arguments","length","undefined","isFirefoxInstalled","isNSSInstalled","skipCertutilInstall","stdio","e","addToTrustStores","_x","apply","removeFromTrustStores","_addDomainToHostFileIfMissing","domain","trimDomain","replace","hostsFileContents","includes","addDomainToHostFileIfMissing","_x2","deleteProtectedFiles","filepath","_readProtectedFile","readProtectedFile","_x3","_writeProtectedFile","contents","writeProtectedFile","_x4","_x5","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/devcert/src/platforms/darwin.ts"],"sourcesContent":["import path from 'path';\nimport { writeFileSync as writeFile, existsSync as exists, readFileSync as read } from 'fs';\nimport createDebug from 'debug';\nimport { sync as commandExists } from 'command-exists';\nimport { run, sudoAppend } from '../utils';\nimport { Options } from '../index';\nimport { addCertificateToNSSCertDB, assertNotTouchingFiles, openCertificateInFirefox, closeFirefox, removeCertificateFromNSSCertDB } from './shared';\nimport { Platform } from '.';\n\nconst debug = createDebug('devcert:platforms:macos');\n\nconst getCertUtilPath = () => path.join(run('brew', ['--prefix', 'nss']).toString().trim(), 'bin', 'certutil');\n\nexport default class MacOSPlatform implements Platform {\n\n  private FIREFOX_BUNDLE_PATH = '/Applications/Firefox.app';\n  private FIREFOX_BIN_PATH = path.join(this.FIREFOX_BUNDLE_PATH, 'Contents/MacOS/firefox');\n  private FIREFOX_NSS_DIR = path.join(process.env.HOME, 'Library/Application Support/Firefox/Profiles/*');\n\n  private HOST_FILE_PATH = '/etc/hosts';\n\n  /**\n   * macOS is pretty simple - just add the certificate to the system keychain,\n   * and most applications will delegate to that for determining trusted\n   * certificates. Firefox, of course, does it's own thing. We can try to\n   * automatically install the cert with Firefox if we can use certutil via the\n   * `nss` Homebrew package, otherwise we go manual with user-facing prompts.\n   */\n  async addToTrustStores(certificatePath: string, options: Options = {}): Promise<void> {\n\n    // Chrome, Safari, system utils\n    debug('Adding devcert root CA to macOS system keychain');\n    run('sudo', [\n      'security',\n      'add-trusted-cert',\n      '-d',\n      '-r',\n      'trustRoot',\n      '-k',\n      '/Library/Keychains/System.keychain',\n      '-p',\n      'ssl',\n      '-p',\n      'basic',\n      certificatePath\n    ]);\n\n    if (this.isFirefoxInstalled()) {\n      // Try to use certutil to install the cert automatically\n      debug('Firefox install detected. Adding devcert root CA to Firefox trust store');\n      if (!this.isNSSInstalled()) {\n        if (!options.skipCertutilInstall) {\n          if (commandExists('brew')) {\n            debug(`certutil is not already installed, but Homebrew is detected. Trying to install certutil via Homebrew...`);\n            try {\n              run('brew', ['install', 'nss'], { stdio: 'ignore' });\n            } catch (e) {\n              debug(`brew install nss failed`);\n            }\n          } else {\n            debug(`Homebrew didn't work, so we can't try to install certutil. Falling back to manual certificate install`);\n            return await openCertificateInFirefox(this.FIREFOX_BIN_PATH, certificatePath);\n          }\n        } else {\n          debug(`certutil is not already installed, and skipCertutilInstall is true, so we have to fall back to a manual install`)\n          return await openCertificateInFirefox(this.FIREFOX_BIN_PATH, certificatePath);\n        }\n      }\n      await closeFirefox();\n      await addCertificateToNSSCertDB(this.FIREFOX_NSS_DIR, certificatePath, getCertUtilPath());\n    } else {\n      debug('Firefox does not appear to be installed, skipping Firefox-specific steps...');\n    }\n  }\n  \n  removeFromTrustStores(certificatePath: string) {\n    debug('Removing devcert root CA from macOS system keychain');\n    try {\n      run('sudo', [\n        'security',\n        'remove-trusted-cert',\n        '-d',\n        certificatePath\n      ], {\n        stdio: 'ignore'\n      });\n    } catch(e) {\n      debug(`failed to remove ${ certificatePath } from macOS cert store, continuing. ${ e.toString() }`);\n    }\n    if (this.isFirefoxInstalled() && this.isNSSInstalled()) {\n      debug('Firefox install and certutil install detected. Trying to remove root CA from Firefox NSS databases');\n      removeCertificateFromNSSCertDB(this.FIREFOX_NSS_DIR, certificatePath, getCertUtilPath());\n    }\n  }\n\n  async addDomainToHostFileIfMissing(domain: string) {\n    const trimDomain = domain.trim().replace(/[\\s;]/g,'')\n    let hostsFileContents = read(this.HOST_FILE_PATH, 'utf8');\n    if (!hostsFileContents.includes(trimDomain)) {\n      sudoAppend(this.HOST_FILE_PATH, `127.0.0.1 ${trimDomain}\\n`);\n    }\n  }\n\n  deleteProtectedFiles(filepath: string) {\n    assertNotTouchingFiles(filepath, 'delete');\n    run('sudo', ['rm', '-rf', filepath]);\n  }\n\n  async readProtectedFile(filepath: string) {\n    assertNotTouchingFiles(filepath, 'read');\n    return (await run('sudo', ['cat', filepath])).toString().trim();\n  }\n\n  async writeProtectedFile(filepath: string, contents: string) {\n    assertNotTouchingFiles(filepath, 'write');\n    if (exists(filepath)) {\n      await run('sudo', ['rm', filepath]);\n    }\n    writeFile(filepath, contents);\n    await run('sudo', ['chown', '0', filepath]);\n    await run('sudo', ['chmod', '600', filepath]);\n  }\n\n  private isFirefoxInstalled() {\n    return exists(this.FIREFOX_BUNDLE_PATH);\n  }\n\n  private isNSSInstalled() {\n    try {\n      return run('brew', ['list', '-1']).toString().includes('\\nnss\\n');\n    } catch (e) {\n      return false;\n    }\n  }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}