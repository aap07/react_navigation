{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { getNextHandlerTag } from \"../handlersRegistry\";\nimport { isRemoteDebuggingEnabled } from \"../../utils\";\nexport var CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10\n};\nexport var Gesture = _createClass(function Gesture() {\n  _classCallCheck(this, Gesture);\n});\nvar nextGestureId = 0;\nexport var BaseGesture = function (_Gesture) {\n  _inherits(BaseGesture, _Gesture);\n  var _super = _createSuper(BaseGesture);\n  function BaseGesture() {\n    var _this;\n    _classCallCheck(this, BaseGesture);\n    _this = _super.call(this);\n    _this.gestureId = -1;\n    _this.handlerTag = -1;\n    _this.handlerName = '';\n    _this.config = {};\n    _this.handlers = {\n      gestureId: -1,\n      handlerTag: -1,\n      isWorklet: []\n    };\n    _this.gestureId = nextGestureId++;\n    _this.handlers.gestureId = _this.gestureId;\n    return _this;\n  }\n  _createClass(BaseGesture, [{\n    key: \"addDependency\",\n    value: function addDependency(key, gesture) {\n      var value = this.config[key];\n      this.config[key] = value ? Array().concat(value, gesture) : [gesture];\n    }\n  }, {\n    key: \"withRef\",\n    value: function withRef(ref) {\n      this.config.ref = ref;\n      return this;\n    }\n  }, {\n    key: \"isWorklet\",\n    value: function isWorklet(callback) {\n      return callback.__workletHash !== undefined;\n    }\n  }, {\n    key: \"onBegin\",\n    value: function onBegin(callback) {\n      this.handlers.onBegin = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(callback) {\n      this.handlers.onStart = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(callback) {\n      this.handlers.onEnd = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onFinalize\",\n    value: function onFinalize(callback) {\n      this.handlers.onFinalize = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesDown\",\n    value: function onTouchesDown(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesDown = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesMove\",\n    value: function onTouchesMove(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesMove = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesUp\",\n    value: function onTouchesUp(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesUp = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesCancelled\",\n    value: function onTouchesCancelled(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesCancelled = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"enabled\",\n    value: function enabled(_enabled) {\n      this.config.enabled = _enabled;\n      return this;\n    }\n  }, {\n    key: \"shouldCancelWhenOutside\",\n    value: function shouldCancelWhenOutside(value) {\n      this.config.shouldCancelWhenOutside = value;\n      return this;\n    }\n  }, {\n    key: \"hitSlop\",\n    value: function hitSlop(_hitSlop) {\n      this.config.hitSlop = _hitSlop;\n      return this;\n    }\n  }, {\n    key: \"runOnJS\",\n    value: function runOnJS(_runOnJS) {\n      this.config.runOnJS = _runOnJS;\n      return this;\n    }\n  }, {\n    key: \"simultaneousWithExternalGesture\",\n    value: function simultaneousWithExternalGesture() {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      for (var gesture of gestures) {\n        this.addDependency('simultaneousWith', gesture);\n      }\n      return this;\n    }\n  }, {\n    key: \"requireExternalGestureToFail\",\n    value: function requireExternalGestureToFail() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      for (var gesture of gestures) {\n        this.addDependency('requireToFail', gesture);\n      }\n      return this;\n    }\n  }, {\n    key: \"withTestId\",\n    value: function withTestId(id) {\n      this.config.testId = id;\n      return this;\n    }\n  }, {\n    key: \"cancelsTouchesInView\",\n    value: function cancelsTouchesInView(value) {\n      this.config.cancelsTouchesInView = value;\n      return this;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.handlerTag = getNextHandlerTag();\n      this.handlers = _objectSpread(_objectSpread({}, this.handlers), {}, {\n        handlerTag: this.handlerTag\n      });\n      if (this.config.ref) {\n        this.config.ref.current = this;\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return [this];\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {}\n  }, {\n    key: \"shouldUseReanimated\",\n    get: function get() {\n      return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !isRemoteDebuggingEnabled();\n    }\n  }]);\n  return BaseGesture;\n}(Gesture);\nexport var ContinousBaseGesture = function (_BaseGesture) {\n  _inherits(ContinousBaseGesture, _BaseGesture);\n  var _super2 = _createSuper(ContinousBaseGesture);\n  function ContinousBaseGesture() {\n    _classCallCheck(this, ContinousBaseGesture);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(ContinousBaseGesture, [{\n    key: \"onUpdate\",\n    value: function onUpdate(callback) {\n      this.handlers.onUpdate = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.onChange = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"manualActivation\",\n    value: function manualActivation(_manualActivation) {\n      this.config.manualActivation = _manualActivation;\n      return this;\n    }\n  }]);\n  return ContinousBaseGesture;\n}(BaseGesture);","map":{"version":3,"names":["getNextHandlerTag","isRemoteDebuggingEnabled","CALLBACK_TYPE","UNDEFINED","BEGAN","START","UPDATE","CHANGE","END","FINALIZE","TOUCHES_DOWN","TOUCHES_MOVE","TOUCHES_UP","TOUCHES_CANCELLED","Gesture","_createClass","_classCallCheck","nextGestureId","BaseGesture","_Gesture","_inherits","_super","_createSuper","_this","call","gestureId","handlerTag","handlerName","config","handlers","isWorklet","key","value","addDependency","gesture","Array","concat","withRef","ref","callback","__workletHash","undefined","onBegin","onStart","onEnd","onFinalize","onTouchesDown","needsPointerData","onTouchesMove","onTouchesUp","onTouchesCancelled","enabled","shouldCancelWhenOutside","hitSlop","runOnJS","simultaneousWithExternalGesture","_len","arguments","length","gestures","_key","requireExternalGestureToFail","_len2","_key2","withTestId","id","testId","cancelsTouchesInView","initialize","_objectSpread","current","toGestureArray","prepare","get","includes","ContinousBaseGesture","_BaseGesture","_super2","apply","onUpdate","onChange","manualActivation"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/handlers/gestures/gesture.ts"],"sourcesContent":["import { FlingGestureHandlerEventPayload } from '../FlingGestureHandler';\nimport { ForceTouchGestureHandlerEventPayload } from '../ForceTouchGestureHandler';\nimport {\n  HitSlop,\n  CommonGestureConfig,\n  GestureTouchEvent,\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../gestureHandlerCommon';\nimport { getNextHandlerTag } from '../handlersRegistry';\nimport { GestureStateManagerType } from './gestureStateManager';\nimport { LongPressGestureHandlerEventPayload } from '../LongPressGestureHandler';\nimport { PanGestureHandlerEventPayload } from '../PanGestureHandler';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\nimport { TapGestureHandlerEventPayload } from '../TapGestureHandler';\nimport { NativeViewGestureHandlerPayload } from '../NativeViewGestureHandler';\nimport { isRemoteDebuggingEnabled } from '../../utils';\n\nexport type GestureType =\n  | BaseGesture<Record<string, unknown>>\n  | BaseGesture<Record<string, never>>\n  | BaseGesture<TapGestureHandlerEventPayload>\n  | BaseGesture<PanGestureHandlerEventPayload>\n  | BaseGesture<LongPressGestureHandlerEventPayload>\n  | BaseGesture<RotationGestureHandlerEventPayload>\n  | BaseGesture<PinchGestureHandlerEventPayload>\n  | BaseGesture<FlingGestureHandlerEventPayload>\n  | BaseGesture<ForceTouchGestureHandlerEventPayload>\n  | BaseGesture<NativeViewGestureHandlerPayload>;\n\nexport type GestureRef =\n  | number\n  | GestureType\n  | React.RefObject<GestureType | undefined>\n  | React.RefObject<React.ComponentType | undefined>; // allow adding a ref to a gesture handler\nexport interface BaseGestureConfig\n  extends CommonGestureConfig,\n    Record<string, unknown> {\n  ref?: React.MutableRefObject<GestureType | undefined>;\n  requireToFail?: GestureRef[];\n  simultaneousWith?: GestureRef[];\n  needsPointerData?: boolean;\n  manualActivation?: boolean;\n  runOnJS?: boolean;\n  testId?: string;\n  cancelsTouchesInView?: boolean;\n}\n\ntype TouchEventHandlerType = (\n  event: GestureTouchEvent,\n  stateManager: GestureStateManagerType\n) => void;\n\nexport type HandlerCallbacks<EventPayloadT extends Record<string, unknown>> = {\n  gestureId: number;\n  handlerTag: number;\n  onBegin?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onStart?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onEnd?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onFinalize?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onUpdate?: (event: GestureUpdateEvent<EventPayloadT>) => void;\n  onChange?: (event: any) => void;\n  onTouchesDown?: TouchEventHandlerType;\n  onTouchesMove?: TouchEventHandlerType;\n  onTouchesUp?: TouchEventHandlerType;\n  onTouchesCancelled?: TouchEventHandlerType;\n  changeEventCalculator?: (\n    current: GestureUpdateEvent<Record<string, unknown>>,\n    previous?: GestureUpdateEvent<Record<string, unknown>>\n  ) => GestureUpdateEvent<Record<string, unknown>>;\n  isWorklet: boolean[];\n};\n\nexport const CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10,\n} as const;\n\n// Allow using CALLBACK_TYPE as object and type\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type CALLBACK_TYPE = typeof CALLBACK_TYPE[keyof typeof CALLBACK_TYPE];\n\nexport abstract class Gesture {\n  /**\n   * Return array of gestures, providing the same interface for creating and updating\n   * handlers, no matter which object was used to create gesture instance.\n   */\n  abstract toGestureArray(): GestureType[];\n\n  /**\n   * Assign handlerTag to the gesture instance and set ref.current (if a ref is set)\n   */\n  abstract initialize(): void;\n\n  /**\n   * Make sure that values of properties defining relations are arrays. Do any necessary\n   * preprocessing required to configure relations between handlers. Called just before\n   * updating the handler on the native side.\n   */\n  abstract prepare(): void;\n}\n\nlet nextGestureId = 0;\nexport abstract class BaseGesture<\n  EventPayloadT extends Record<string, unknown>\n> extends Gesture {\n  private gestureId = -1;\n  public handlerTag = -1;\n  public handlerName = '';\n  public config: BaseGestureConfig = {};\n  public handlers: HandlerCallbacks<EventPayloadT> = {\n    gestureId: -1,\n    handlerTag: -1,\n    isWorklet: [],\n  };\n\n  constructor() {\n    super();\n\n    // Used to check whether the gesture config has been updated when wrapping it\n    // with `useMemo`. Since every config will have a unique id, when the dependencies\n    // don't change, the config won't be recreated and the id will stay the same.\n    // If the id is different, it means that the config has changed and the gesture\n    // needs to be updated.\n    this.gestureId = nextGestureId++;\n    this.handlers.gestureId = this.gestureId;\n  }\n\n  private addDependency(\n    key: 'simultaneousWith' | 'requireToFail',\n    gesture: Exclude<GestureRef, number>\n  ) {\n    const value = this.config[key];\n    this.config[key] = value\n      ? Array<GestureRef>().concat(value, gesture)\n      : [gesture];\n  }\n\n  withRef(ref: React.MutableRefObject<GestureType | undefined>) {\n    this.config.ref = ref;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  protected isWorklet(callback: Function) {\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    return callback.__workletHash !== undefined;\n  }\n\n  onBegin(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onBegin = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n    return this;\n  }\n\n  onStart(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onStart = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n    return this;\n  }\n\n  onEnd(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onEnd = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n    return this;\n  }\n\n  onFinalize(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onFinalize = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onTouchesDown(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesDown = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesMove(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesMove = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesUp(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesUp = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesCancelled(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesCancelled = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  enabled(enabled: boolean) {\n    this.config.enabled = enabled;\n    return this;\n  }\n\n  shouldCancelWhenOutside(value: boolean) {\n    this.config.shouldCancelWhenOutside = value;\n    return this;\n  }\n\n  hitSlop(hitSlop: HitSlop) {\n    this.config.hitSlop = hitSlop;\n    return this;\n  }\n\n  runOnJS(runOnJS: boolean) {\n    this.config.runOnJS = runOnJS;\n    return this;\n  }\n\n  simultaneousWithExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('simultaneousWith', gesture);\n    }\n    return this;\n  }\n\n  requireExternalGestureToFail(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('requireToFail', gesture);\n    }\n    return this;\n  }\n\n  withTestId(id: string) {\n    this.config.testId = id;\n    return this;\n  }\n\n  cancelsTouchesInView(value: boolean) {\n    this.config.cancelsTouchesInView = value;\n    return this;\n  }\n\n  initialize() {\n    this.handlerTag = getNextHandlerTag();\n\n    this.handlers = { ...this.handlers, handlerTag: this.handlerTag };\n\n    if (this.config.ref) {\n      this.config.ref.current = this as GestureType;\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return [this as GestureType];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  prepare() {}\n\n  get shouldUseReanimated(): boolean {\n    // use Reanimated when runOnJS isn't set explicitly,\n    // and all defined callbacks are worklets,\n    // and remote debugging is disabled\n    return (\n      this.config.runOnJS !== true &&\n      !this.handlers.isWorklet.includes(false) &&\n      !isRemoteDebuggingEnabled()\n    );\n  }\n}\n\nexport abstract class ContinousBaseGesture<\n  EventPayloadT extends Record<string, unknown>,\n  EventChangePayloadT extends Record<string, unknown>\n> extends BaseGesture<EventPayloadT> {\n  onUpdate(callback: (event: GestureUpdateEvent<EventPayloadT>) => void) {\n    this.handlers.onUpdate = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<EventPayloadT & EventChangePayloadT>\n    ) => void\n  ) {\n    this.handlers.onChange = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n    return this;\n  }\n\n  manualActivation(manualActivation: boolean) {\n    this.config.manualActivation = manualActivation;\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}