{"ast":null,"code":"import { isCollection, isNode, isScalar, isSeq } from \"../nodes/identity.js\";\nimport { Scalar } from \"../nodes/Scalar.js\";\nimport { stringify } from \"./stringify.js\";\nimport { lineComment, indentComment } from \"./stringifyComment.js\";\nfunction stringifyPair(_ref, ctx, onComment, onChompKeep) {\n  var key = _ref.key,\n    value = _ref.value;\n  var _ctx = ctx,\n    allNullValues = _ctx.allNullValues,\n    doc = _ctx.doc,\n    indent = _ctx.indent,\n    indentStep = _ctx.indentStep,\n    _ctx$options = _ctx.options,\n    commentString = _ctx$options.commentString,\n    indentSeq = _ctx$options.indentSeq,\n    simpleKeys = _ctx$options.simpleKeys;\n  var keyComment = isNode(key) && key.comment || null;\n  if (simpleKeys) {\n    if (keyComment) {\n      throw new Error('With simple keys, key nodes cannot have comments');\n    }\n    if (isCollection(key)) {\n      var msg = 'With simple keys, collection cannot be used as a key value';\n      throw new Error(msg);\n    }\n  }\n  var explicitKey = !simpleKeys && (!key || keyComment && value == null && !ctx.inFlow || isCollection(key) || (isScalar(key) ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL : typeof key === 'object'));\n  ctx = Object.assign({}, ctx, {\n    allNullValues: false,\n    implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n    indent: indent + indentStep\n  });\n  var keyCommentDone = false;\n  var chompKeep = false;\n  var str = stringify(key, ctx, function () {\n    return keyCommentDone = true;\n  }, function () {\n    return chompKeep = true;\n  });\n  if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n    if (simpleKeys) throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n    explicitKey = true;\n  }\n  if (ctx.inFlow) {\n    if (allNullValues || value == null) {\n      if (keyCommentDone && onComment) onComment();\n      return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n    }\n  } else if (allNullValues && !simpleKeys || value == null && explicitKey) {\n    str = `? ${str}`;\n    if (keyComment && !keyCommentDone) {\n      str += lineComment(str, ctx.indent, commentString(keyComment));\n    } else if (chompKeep && onChompKeep) onChompKeep();\n    return str;\n  }\n  if (keyCommentDone) keyComment = null;\n  if (explicitKey) {\n    if (keyComment) str += lineComment(str, ctx.indent, commentString(keyComment));\n    str = `? ${str}\\n${indent}:`;\n  } else {\n    str = `${str}:`;\n    if (keyComment) str += lineComment(str, ctx.indent, commentString(keyComment));\n  }\n  var vsb, vcb, valueComment;\n  if (isNode(value)) {\n    vsb = !!value.spaceBefore;\n    vcb = value.commentBefore;\n    valueComment = value.comment;\n  } else {\n    vsb = false;\n    vcb = null;\n    valueComment = null;\n    if (value && typeof value === 'object') value = doc.createNode(value);\n  }\n  ctx.implicitKey = false;\n  if (!explicitKey && !keyComment && isScalar(value)) ctx.indentAtStart = str.length + 1;\n  chompKeep = false;\n  if (!indentSeq && indentStep.length >= 2 && !ctx.inFlow && !explicitKey && isSeq(value) && !value.flow && !value.tag && !value.anchor) {\n    ctx.indent = ctx.indent.substring(2);\n  }\n  var valueCommentDone = false;\n  var valueStr = stringify(value, ctx, function () {\n    return valueCommentDone = true;\n  }, function () {\n    return chompKeep = true;\n  });\n  var ws = ' ';\n  if (keyComment || vsb || vcb) {\n    ws = vsb ? '\\n' : '';\n    if (vcb) {\n      var cs = commentString(vcb);\n      ws += `\\n${indentComment(cs, ctx.indent)}`;\n    }\n    if (valueStr === '' && !ctx.inFlow) {\n      if (ws === '\\n') ws = '\\n\\n';\n    } else {\n      ws += `\\n${ctx.indent}`;\n    }\n  } else if (!explicitKey && isCollection(value)) {\n    var _ref2, _ctx$inFlow;\n    var vs0 = valueStr[0];\n    var nl0 = valueStr.indexOf('\\n');\n    var hasNewline = nl0 !== -1;\n    var flow = (_ref2 = (_ctx$inFlow = ctx.inFlow) != null ? _ctx$inFlow : value.flow) != null ? _ref2 : value.items.length === 0;\n    if (hasNewline || !flow) {\n      var hasPropsLine = false;\n      if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n        var sp0 = valueStr.indexOf(' ');\n        if (vs0 === '&' && sp0 !== -1 && sp0 < nl0 && valueStr[sp0 + 1] === '!') {\n          sp0 = valueStr.indexOf(' ', sp0 + 1);\n        }\n        if (sp0 === -1 || nl0 < sp0) hasPropsLine = true;\n      }\n      if (!hasPropsLine) ws = `\\n${ctx.indent}`;\n    }\n  } else if (valueStr === '' || valueStr[0] === '\\n') {\n    ws = '';\n  }\n  str += ws + valueStr;\n  if (ctx.inFlow) {\n    if (valueCommentDone && onComment) onComment();\n  } else if (valueComment && !valueCommentDone) {\n    str += lineComment(str, ctx.indent, commentString(valueComment));\n  } else if (chompKeep && onChompKeep) {\n    onChompKeep();\n  }\n  return str;\n}\nexport { stringifyPair };","map":{"version":3,"names":["isCollection","isNode","isScalar","isSeq","Scalar","stringify","lineComment","indentComment","stringifyPair","_ref","ctx","onComment","onChompKeep","key","value","_ctx","allNullValues","doc","indent","indentStep","_ctx$options","options","commentString","indentSeq","simpleKeys","keyComment","comment","Error","msg","explicitKey","inFlow","type","BLOCK_FOLDED","BLOCK_LITERAL","Object","assign","implicitKey","keyCommentDone","chompKeep","str","length","vsb","vcb","valueComment","spaceBefore","commentBefore","createNode","indentAtStart","flow","tag","anchor","substring","valueCommentDone","valueStr","ws","cs","_ref2","_ctx$inFlow","vs0","nl0","indexOf","hasNewline","items","hasPropsLine","sp0"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/browser/dist/stringify/stringifyPair.js"],"sourcesContent":["import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}