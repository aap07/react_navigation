{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.delayAsync = delayAsync;\nexports.waitForActionAsync = waitForActionAsync;\nexports.resolveWithTimeout = resolveWithTimeout;\nvar _errors = require(\"./errors\");\nfunction delayAsync(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n}\nfunction waitForActionAsync(_x) {\n  return _waitForActionAsync.apply(this, arguments);\n}\nfunction _waitForActionAsync() {\n  _waitForActionAsync = _asyncToGenerator(function* (_ref) {\n    var action = _ref.action,\n      _ref$interval = _ref.interval,\n      interval = _ref$interval === void 0 ? 100 : _ref$interval,\n      _ref$maxWaitTime = _ref.maxWaitTime,\n      maxWaitTime = _ref$maxWaitTime === void 0 ? 20000 : _ref$maxWaitTime;\n    var complete;\n    var start = Date.now();\n    do {\n      var actionStartTime = Date.now();\n      complete = yield action();\n      var actionTimeElapsed = Date.now() - actionStartTime;\n      var remainingDelayInterval = interval - actionTimeElapsed;\n      if (remainingDelayInterval > 0) {\n        yield delayAsync(remainingDelayInterval);\n      }\n      if (Date.now() - start > maxWaitTime) {\n        break;\n      }\n    } while (!complete);\n    return complete;\n  });\n  return _waitForActionAsync.apply(this, arguments);\n}\nfunction resolveWithTimeout(action, _ref2) {\n  var timeout = _ref2.timeout,\n    errorMessage = _ref2.errorMessage;\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      reject(new _errors.CommandError(\"TIMEOUT\", errorMessage));\n    }, timeout);\n    action().then(resolve, reject);\n  });\n}","map":{"version":3,"names":["_asyncToGenerator","require","delayAsync","waitForActionAsync","resolveWithTimeout","_errors","timeout","Promise","resolve","setTimeout","_x","_waitForActionAsync","apply","arguments","_ref","action","_ref$interval","interval","_ref$maxWaitTime","maxWaitTime","complete","start","Date","now","actionStartTime","actionTimeElapsed","remainingDelayInterval","_ref2","errorMessage","reject","CommandError","then"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\delay.ts"],"sourcesContent":["import { CommandError } from './errors';\n\n/** Await for a given duration of milliseconds. */\nexport function delayAsync(timeout: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, timeout));\n}\n\n/** Wait for a given action to return a truthy value. */\nexport async function waitForActionAsync<T>({\n  action,\n  interval = 100,\n  maxWaitTime = 20000,\n}: {\n  action: () => T | Promise<T>;\n  interval?: number;\n  maxWaitTime?: number;\n}): Promise<T> {\n  let complete: T;\n  const start = Date.now();\n  do {\n    const actionStartTime = Date.now();\n    complete = await action();\n\n    const actionTimeElapsed = Date.now() - actionStartTime;\n    const remainingDelayInterval = interval - actionTimeElapsed;\n    if (remainingDelayInterval > 0) {\n      await delayAsync(remainingDelayInterval);\n    }\n    if (Date.now() - start > maxWaitTime) {\n      break;\n    }\n  } while (!complete);\n\n  return complete;\n}\n\n/** Resolves a given function or rejects if the provided timeout is passed. */\nexport function resolveWithTimeout<T>(\n  action: () => Promise<T>,\n  {\n    timeout,\n    errorMessage,\n  }: {\n    /** Duration in milliseconds to wait before asserting a timeout. */\n    timeout: number;\n    /** Optional error message to use in the assertion. */\n    errorMessage?: string;\n  }\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      reject(new CommandError('TIMEOUT', errorMessage));\n    }, timeout);\n    action().then(resolve, reject);\n  });\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAGgBC,UAAU,GAAVA,UAAU;QAKJC,kBAAkB,GAAlBA,kBAAkB;QA6BxBC,kBAAkB,GAAlBA,kBAAkB;AArCL,IAAAC,OAAU,GAAAJ,OAAA;AAGhC,SAASC,UAAUA,CAACI,OAAe,EAAiB;EACzD,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO;IAAA,OAAKC,UAAU,CAACD,OAAO,EAAEF,OAAO,CAAC;EAAA,EAAC;;AAC9D,SAGqBH,kBAAkBA,CAAAO,EAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,oBAAA;EAAAA,mBAAA,GAAAX,iBAAA,CAAjC,WAAAc,IAAA,EAQQ;IAAA,IAPbC,MAAM,GAAAD,IAAA,CAANC,MAAM;MAAAC,aAAA,GAAAF,IAAA,CACNG,QAAQ;MAARA,QAAQ,GAAAD,aAAA,cAAG,GAAG,GAAAA,aAAA;MAAAE,gBAAA,GAAAJ,IAAA,CACdK,WAAW;MAAXA,WAAW,GAAAD,gBAAA,cAAG,KAAK,GAAAA,gBAAA;IAMnB,IAAIE,QAAQ;IACZ,IAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,EAAE;IACxB,GAAG;MACD,IAAMC,eAAe,GAAGF,IAAI,CAACC,GAAG,EAAE;MAClCH,QAAQ,SAASL,MAAM,EAAE;MAEzB,IAAMU,iBAAiB,GAAGH,IAAI,CAACC,GAAG,EAAE,GAAGC,eAAe;MACtD,IAAME,sBAAsB,GAAGT,QAAQ,GAAGQ,iBAAiB;MAC3D,IAAIC,sBAAsB,GAAG,CAAC,EAAE;QAC9B,MAAMxB,UAAU,CAACwB,sBAAsB,CAAC;;MAE1C,IAAIJ,IAAI,CAACC,GAAG,EAAE,GAAGF,KAAK,GAAGF,WAAW,EAAE;QACpC;;KAEH,QAAQ,CAACC,QAAQ;IAElB,OAAOA,QAAQ;GAChB;EAAA,OAAAT,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAGM,SAAST,kBAAkBA,CAChCW,MAAwB,EAAAY,KAAA,EAUZ;EAAA,IARVrB,OAAO,GAAAqB,KAAA,CAAPrB,OAAO;IACPsB,YAAY,GAAAD,KAAA,CAAZC,YAAY;EAQd,OAAO,IAAIrB,OAAO,CAAC,UAACC,OAAO,EAAEqB,MAAM,EAAK;IACtCpB,UAAU,CAAC,YAAM;MACfoB,MAAM,CAAC,IAAIxB,OAAY,CAAAyB,YAAA,CAAC,SAAS,EAAEF,YAAY,CAAC,CAAC;KAClD,EAAEtB,OAAO,CAAC;IACXS,MAAM,EAAE,CAACgB,IAAI,CAACvB,OAAO,EAAEqB,MAAM,CAAC;GAC/B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}