{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _path() {\n  var data = require(\"path\");\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nvar _versionRanges = _interopRequireDefault(require(\"../versionRanges\"));\nvar _checkInstallation = require(\"../checkInstallation\");\nvar _downloadAndUnzip = require(\"../downloadAndUnzip\");\nvar _environmentVariables = require(\"../windows/environmentVariables\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar _default = {\n  label: 'JDK',\n  description: 'Required to compile Java code',\n  getDiagnostics: function () {\n    var _getDiagnostics = _asyncToGenerator(function* (_ref) {\n      var Languages = _ref.Languages;\n      return {\n        needsToBeFixed: (0, _checkInstallation.doesSoftwareNeedToBeFixed)({\n          version: typeof Languages.Java === 'string' ? Languages.Java : Languages.Java.version,\n          versionRange: _versionRanges.default.JAVA\n        }),\n        version: typeof Languages.Java === 'string' ? Languages.Java : Languages.Java.version,\n        versionRange: _versionRanges.default.JAVA\n      };\n    });\n    function getDiagnostics(_x) {\n      return _getDiagnostics.apply(this, arguments);\n    }\n    return getDiagnostics;\n  }(),\n  win32AutomaticFix: function () {\n    var _win32AutomaticFix = _asyncToGenerator(function* (_ref2) {\n      var loader = _ref2.loader;\n      try {\n        var installerUrl = 'https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_windows-x64_bin.zip';\n        var installPath = process.env.LOCALAPPDATA || '';\n        yield (0, _downloadAndUnzip.downloadAndUnzip)({\n          loader: loader,\n          downloadUrl: installerUrl,\n          component: 'JDK',\n          installPath: installPath\n        });\n        loader.text = 'Updating environment variables';\n        var jdkPath = (0, _path().join)(installPath, 'jdk-11.0.2');\n        yield (0, _environmentVariables.setEnvironment)('JAVA_HOME', jdkPath);\n        yield (0, _environmentVariables.updateEnvironment)('PATH', (0, _path().join)(jdkPath, 'bin'));\n        loader.succeed('JDK installed successfully. Please restart your shell to see the changes');\n      } catch (e) {\n        loader.fail(e);\n      }\n    });\n    function win32AutomaticFix(_x2) {\n      return _win32AutomaticFix.apply(this, arguments);\n    }\n    return win32AutomaticFix;\n  }(),\n  runAutomaticFix: function () {\n    var _runAutomaticFix = _asyncToGenerator(function* (_ref3) {\n      var logManualInstallation = _ref3.logManualInstallation,\n        loader = _ref3.loader;\n      loader.fail();\n      logManualInstallation({\n        healthcheck: 'JDK',\n        url: _cliTools().link.docs('environment-setup', {\n          hash: 'jdk-studio',\n          guide: 'native',\n          platform: 'android'\n        })\n      });\n    });\n    function runAutomaticFix(_x3) {\n      return _runAutomaticFix.apply(this, arguments);\n    }\n    return runAutomaticFix;\n  }()\n};\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_path","data","_cliTools","_versionRanges","_interopRequireDefault","_checkInstallation","_downloadAndUnzip","_environmentVariables","obj","__esModule","_default","label","description","getDiagnostics","_getDiagnostics","_ref","Languages","needsToBeFixed","doesSoftwareNeedToBeFixed","version","Java","versionRange","JAVA","_x","apply","arguments","win32AutomaticFix","_win32AutomaticFix","_ref2","loader","installerUrl","installPath","process","env","LOCALAPPDATA","downloadAndUnzip","downloadUrl","component","text","jdkPath","join","setEnvironment","updateEnvironment","succeed","e","fail","_x2","runAutomaticFix","_runAutomaticFix","_ref3","logManualInstallation","healthcheck","url","link","docs","hash","guide","platform","_x3"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/healthchecks/jdk.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _path() {\n  const data = require(\"path\");\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nvar _versionRanges = _interopRequireDefault(require(\"../versionRanges\"));\nvar _checkInstallation = require(\"../checkInstallation\");\nvar _downloadAndUnzip = require(\"../downloadAndUnzip\");\nvar _environmentVariables = require(\"../windows/environmentVariables\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar _default = {\n  label: 'JDK',\n  description: 'Required to compile Java code',\n  getDiagnostics: async ({\n    Languages\n  }) => ({\n    needsToBeFixed: (0, _checkInstallation.doesSoftwareNeedToBeFixed)({\n      version: typeof Languages.Java === 'string' ? Languages.Java : Languages.Java.version,\n      versionRange: _versionRanges.default.JAVA\n    }),\n    version: typeof Languages.Java === 'string' ? Languages.Java : Languages.Java.version,\n    versionRange: _versionRanges.default.JAVA\n  }),\n  win32AutomaticFix: async ({\n    loader\n  }) => {\n    try {\n      // Installing JDK 11 because later versions seem to cause issues with gradle at the moment\n      const installerUrl = 'https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_windows-x64_bin.zip';\n      const installPath = process.env.LOCALAPPDATA || ''; // The zip is in a folder `jdk-11.02` so it can be unzipped directly there\n\n      await (0, _downloadAndUnzip.downloadAndUnzip)({\n        loader,\n        downloadUrl: installerUrl,\n        component: 'JDK',\n        installPath\n      });\n      loader.text = 'Updating environment variables';\n      const jdkPath = (0, _path().join)(installPath, 'jdk-11.0.2');\n      await (0, _environmentVariables.setEnvironment)('JAVA_HOME', jdkPath);\n      await (0, _environmentVariables.updateEnvironment)('PATH', (0, _path().join)(jdkPath, 'bin'));\n      loader.succeed('JDK installed successfully. Please restart your shell to see the changes');\n    } catch (e) {\n      loader.fail(e);\n    }\n  },\n  runAutomaticFix: async ({\n    logManualInstallation,\n    loader\n  }) => {\n    loader.fail();\n    logManualInstallation({\n      healthcheck: 'JDK',\n      url: _cliTools().link.docs('environment-setup', {\n        hash: 'jdk-studio',\n        guide: 'native',\n        platform: 'android'\n      })\n    });\n  }\n};\nexports.default = _default;\n\n//# sourceMappingURL=jdk.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}