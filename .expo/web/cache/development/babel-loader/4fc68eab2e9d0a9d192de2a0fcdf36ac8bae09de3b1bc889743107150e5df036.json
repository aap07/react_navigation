{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/expo-pwa/build/Manifest.types.d.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport type { ImageOptions } from '@expo/image-utils';\nimport type { ExpoConfig } from 'expo/config';\ndeclare type ExpoWebConfig = Required<ExpoConfig>['web'];\nexport declare type WebPlatformConfigWithDefaults = Omit<ExpoWebConfig, 'build' | 'lang' | 'meta'> & Required<Pick<ExpoWebConfig, 'build' | 'lang' | 'meta'>>;\nexport declare type PWAConfig = ExpoConfig & {\n    web: WebPlatformConfigWithDefaults;\n};\nexport declare type Direction = 'ltr' | 'rtl' | 'auto';\nexport declare type Display = 'fullscreen' | 'standalone' | 'minimal-ui' | 'browser';\nexport declare type Orientation = 'any' | 'natural' | 'landscape' | 'landscape-primary' | 'landscape-secondary' | 'portrait' | 'portrait-primary' | 'portrait-secondary' | 'omit';\nexport declare type CrossOrigin = 'use-credentials' | 'anonymous';\nexport interface RelatedApplications {\n    platform?: string;\n    url: string;\n    id?: string;\n}\nexport declare type Manifest = Partial<{\n    background_color: string;\n    description: string;\n    dir: Direction;\n    display: Display;\n    lang: string;\n    name: string;\n    orientation: Orientation;\n    prefer_related_applications: boolean;\n    related_applications: RelatedApplications[];\n    scope: string;\n    short_name: string;\n    start_url: string;\n    theme_color: string;\n    crossorigin: CrossOrigin;\n}>;\nexport declare type WebpackAsset = {\n    source: Buffer;\n    path: string;\n};\nexport declare type HtmlTag = {\n    tagName: 'link';\n    attributes: {\n        rel?: string;\n        href?: string;\n        media?: string;\n        sizes?: string;\n        type?: string;\n    };\n};\nexport declare type SplashIcon = ImageOptions & {\n    media: string;\n};\nexport declare type ProjectOptions = {\n    projectRoot: string;\n    publicPath: string;\n    destination?: string;\n};\nexport declare type HTMLOutput = {\n    asset: WebpackAsset;\n    tag?: HtmlTag;\n    manifest?: ManifestIcon;\n};\nexport declare type IconOptions = Omit<ImageOptions, 'name' | 'width' | 'height'>;\nexport declare type ManifestIcon = {\n    src: string;\n    sizes: string;\n    type: 'image/png';\n    purpose?: string;\n};\nexport {};\n"],"mappings":"AAmEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}