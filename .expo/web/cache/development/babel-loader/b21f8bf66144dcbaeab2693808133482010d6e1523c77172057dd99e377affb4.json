{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _require = require(\"./errors\"),\n  ParserError = _require.ParserError;\nvar path = require('path');\nfunction extractNativeModuleName(filename) {\n  return path.basename(filename).split('.')[0];\n}\nfunction createParserErrorCapturer() {\n  var errors = [];\n  function guard(fn) {\n    try {\n      return fn();\n    } catch (error) {\n      if (!(error instanceof ParserError)) {\n        throw error;\n      }\n      errors.push(error);\n      return null;\n    }\n  }\n  return [errors, guard];\n}\nfunction verifyPlatforms(hasteModuleName, moduleName) {\n  var cxxOnly = false;\n  var excludedPlatforms = new Set();\n  var namesToValidate = [moduleName, hasteModuleName];\n  namesToValidate.forEach(function (name) {\n    if (name.endsWith('Android')) {\n      excludedPlatforms.add('iOS');\n      return;\n    }\n    if (name.endsWith('IOS')) {\n      excludedPlatforms.add('android');\n      return;\n    }\n    if (name.endsWith('Cxx')) {\n      cxxOnly = true;\n      excludedPlatforms.add('iOS');\n      excludedPlatforms.add('android');\n      return;\n    }\n  });\n  return {\n    cxxOnly: cxxOnly,\n    excludedPlatforms: Array.from(excludedPlatforms)\n  };\n}\nfunction visit(astNode, visitor) {\n  var queue = [astNode];\n  while (queue.length !== 0) {\n    var item = queue.shift();\n    if (!(typeof item === 'object' && item != null)) {\n      continue;\n    }\n    if (typeof item.type === 'string' && typeof visitor[item.type] === 'function') {\n      visitor[item.type](item);\n    } else if (Array.isArray(item)) {\n      queue.push.apply(queue, _toConsumableArray(item));\n    } else {\n      queue.push.apply(queue, _toConsumableArray(Object.values(item)));\n    }\n  }\n}\nfunction getConfigType(ast, Visitor) {\n  var infoMap = {\n    isComponent: false,\n    isModule: false\n  };\n  visit(ast, Visitor(infoMap));\n  var isModule = infoMap.isModule,\n    isComponent = infoMap.isComponent;\n  if (isModule && isComponent) {\n    throw new Error('Found type extending \"TurboModule\" and exported \"codegenNativeComponent\" declaration in one file. Split them into separated files.');\n  }\n  if (isModule) {\n    return 'module';\n  } else if (isComponent) {\n    return 'component';\n  } else {\n    return 'none';\n  }\n}\nfunction isModuleRegistryCall(node) {\n  if (node.type !== 'CallExpression') {\n    return false;\n  }\n  var callExpression = node;\n  if (callExpression.callee.type !== 'MemberExpression') {\n    return false;\n  }\n  var memberExpression = callExpression.callee;\n  if (!(memberExpression.object.type === 'Identifier' && memberExpression.object.name === 'TurboModuleRegistry')) {\n    return false;\n  }\n  if (!(memberExpression.property.type === 'Identifier' && (memberExpression.property.name === 'get' || memberExpression.property.name === 'getEnforcing'))) {\n    return false;\n  }\n  if (memberExpression.computed) {\n    return false;\n  }\n  return true;\n}\nmodule.exports = {\n  getConfigType: getConfigType,\n  extractNativeModuleName: extractNativeModuleName,\n  createParserErrorCapturer: createParserErrorCapturer,\n  verifyPlatforms: verifyPlatforms,\n  visit: visit,\n  isModuleRegistryCall: isModuleRegistryCall\n};","map":{"version":3,"names":["_toConsumableArray","require","_require","ParserError","path","extractNativeModuleName","filename","basename","split","createParserErrorCapturer","errors","guard","fn","error","push","verifyPlatforms","hasteModuleName","moduleName","cxxOnly","excludedPlatforms","Set","namesToValidate","forEach","name","endsWith","add","Array","from","visit","astNode","visitor","queue","length","item","shift","type","isArray","apply","Object","values","getConfigType","ast","Visitor","infoMap","isComponent","isModule","Error","isModuleRegistryCall","node","callExpression","callee","memberExpression","object","property","computed","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/parsers/utils.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst _require = require('./errors'),\n  ParserError = _require.ParserError;\nconst path = require('path');\nfunction extractNativeModuleName(filename) {\n  // this should drop everything after the file name. For Example it will drop:\n  // .android.js, .android.ts, .android.tsx, .ios.js, .ios.ts, .ios.tsx, .js, .ts, .tsx\n  return path.basename(filename).split('.')[0];\n}\nfunction createParserErrorCapturer() {\n  // $FlowFixMe[missing-empty-array-annot]\n  const errors = [];\n  function guard(fn) {\n    try {\n      return fn();\n    } catch (error) {\n      if (!(error instanceof ParserError)) {\n        throw error;\n      }\n      // $FlowFixMe[incompatible-call]\n      errors.push(error);\n      return null;\n    }\n  }\n\n  // $FlowFixMe[incompatible-return]\n  return [errors, guard];\n}\nfunction verifyPlatforms(hasteModuleName, moduleName) {\n  let cxxOnly = false;\n  const excludedPlatforms = new Set();\n  const namesToValidate = [moduleName, hasteModuleName];\n  namesToValidate.forEach(name => {\n    if (name.endsWith('Android')) {\n      excludedPlatforms.add('iOS');\n      return;\n    }\n    if (name.endsWith('IOS')) {\n      excludedPlatforms.add('android');\n      return;\n    }\n    if (name.endsWith('Cxx')) {\n      cxxOnly = true;\n      excludedPlatforms.add('iOS');\n      excludedPlatforms.add('android');\n      return;\n    }\n  });\n  return {\n    cxxOnly,\n    excludedPlatforms: Array.from(excludedPlatforms),\n  };\n}\n\n// TODO(T108222691): Use flow-types for @babel/parser\nfunction visit(astNode, visitor) {\n  const queue = [astNode];\n  while (queue.length !== 0) {\n    let item = queue.shift();\n    if (!(typeof item === 'object' && item != null)) {\n      continue;\n    }\n    if (\n      typeof item.type === 'string' &&\n      typeof visitor[item.type] === 'function'\n    ) {\n      // Don't visit any children\n      visitor[item.type](item);\n    } else if (Array.isArray(item)) {\n      queue.push(...item);\n    } else {\n      queue.push(...Object.values(item));\n    }\n  }\n}\nfunction getConfigType(\n  // TODO(T71778680): Flow-type this node.\n  ast,\n  Visitor,\n) {\n  let infoMap = {\n    isComponent: false,\n    isModule: false,\n  };\n  visit(ast, Visitor(infoMap));\n  const isModule = infoMap.isModule,\n    isComponent = infoMap.isComponent;\n  if (isModule && isComponent) {\n    throw new Error(\n      'Found type extending \"TurboModule\" and exported \"codegenNativeComponent\" declaration in one file. Split them into separated files.',\n    );\n  }\n  if (isModule) {\n    return 'module';\n  } else if (isComponent) {\n    return 'component';\n  } else {\n    return 'none';\n  }\n}\n\n// TODO(T71778680): Flow-type ASTNodes.\nfunction isModuleRegistryCall(node) {\n  if (node.type !== 'CallExpression') {\n    return false;\n  }\n  const callExpression = node;\n  if (callExpression.callee.type !== 'MemberExpression') {\n    return false;\n  }\n  const memberExpression = callExpression.callee;\n  if (\n    !(\n      memberExpression.object.type === 'Identifier' &&\n      memberExpression.object.name === 'TurboModuleRegistry'\n    )\n  ) {\n    return false;\n  }\n  if (\n    !(\n      memberExpression.property.type === 'Identifier' &&\n      (memberExpression.property.name === 'get' ||\n        memberExpression.property.name === 'getEnforcing')\n    )\n  ) {\n    return false;\n  }\n  if (memberExpression.computed) {\n    return false;\n  }\n  return true;\n}\nmodule.exports = {\n  getConfigType,\n  extractNativeModuleName,\n  createParserErrorCapturer,\n  verifyPlatforms,\n  visit,\n  isModuleRegistryCall,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}