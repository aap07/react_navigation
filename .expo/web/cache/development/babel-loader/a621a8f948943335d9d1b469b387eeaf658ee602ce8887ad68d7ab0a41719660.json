{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/xcpretty/build/utils/PodfileTracer.d.ts"],"sourcesContent":["import { PodfileLock } from './parsePodfileLock';\n/**\n * A utility for tracing dependencies from a Podfile.lock.\n */\nexport declare class PodfileTracer {\n    props: {\n        projectRoot: string;\n        rootTargetName?: string;\n        podfile: PodfileLock;\n    };\n    static create(projectRoot: string, { xcodeProject }?: {\n        xcodeProject?: {\n            name: string;\n        };\n    }): PodfileTracer;\n    get podfile(): PodfileLock;\n    constructor(props: {\n        projectRoot: string;\n        rootTargetName?: string;\n        podfile: PodfileLock;\n    });\n    getNodeModuleNameForTarget: (key: string) => {\n        name: string;\n        isRootTarget: boolean;\n    } | null;\n    getNodeModuleNameForTargetWithoutCache(target: string): {\n        name: string;\n        isRootTarget: boolean;\n    } | null;\n    isRootTarget(target: string): boolean | \"\" | undefined;\n    getNodeModuleName(filePath: string, target?: string): {\n        name: string;\n        isRootTarget: boolean;\n    } | null;\n    getExternalSourceForPod: (key: string) => {\n        pod: string;\n        source: string;\n    } | null;\n    getExternalSourceForPodWithoutCache(pod?: string): {\n        pod: string;\n        source: string;\n    } | null;\n    private memoizedGetPackageJsonAnyFilePathInModule;\n    /** This can be a path like `/app/node_modules/expo-camera/ios` or `/app/node_modules/react-native-webrtc` depending on where the podspec is. */\n    getPackageJsonAnyFilePathInModule(props: {\n        target: string;\n        filePath: string;\n    }): Record<string, any> | null;\n    getPackageJsonAnyFilePathInModuleWithoutCache(filePath: string): Record<string, any> | null;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}