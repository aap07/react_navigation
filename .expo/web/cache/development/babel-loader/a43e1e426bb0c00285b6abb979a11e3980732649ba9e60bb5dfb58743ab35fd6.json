{"ast":null,"code":"'use strict';\n\nvar PojoCollector = require(\"./PojoCollector\");\nvar _require = require(\"../../Utils\"),\n  capitalize = _require.capitalize;\nvar _require2 = require(\"./serializePojo\"),\n  serializePojo = _require2.serializePojo;\nmodule.exports = {\n  generate: function generate(libraryName, schema, packageName) {\n    var pojoCollector = new PojoCollector();\n    var basePackageName = 'com.facebook.react.viewmanagers';\n    Object.keys(schema.modules).forEach(function (hasteModuleName) {\n      var module = schema.modules[hasteModuleName];\n      if (module.type !== 'Component') {\n        return;\n      }\n      var components = module.components;\n      if (components == null) {\n        return null;\n      }\n      Object.keys(components).filter(function (componentName) {\n        var component = components[componentName];\n        return !(component.excludedPlatforms && component.excludedPlatforms.includes('android'));\n      }).forEach(function (componentName) {\n        var component = components[componentName];\n        if (component == null) {\n          return;\n        }\n        var props = component.props;\n        pojoCollector.process(capitalize(hasteModuleName), `${capitalize(componentName)}Props`, {\n          type: 'ObjectTypeAnnotation',\n          properties: props\n        });\n      });\n    });\n    var pojoDir = basePackageName.split('.').join('/');\n    return new Map(pojoCollector.getAllPojos().map(function (pojo) {\n      return [`java/${pojoDir}/${pojo.namespace}/${pojo.name}.java`, serializePojo(pojo, basePackageName)];\n    }));\n  }\n};","map":{"version":3,"names":["PojoCollector","require","_require","capitalize","_require2","serializePojo","module","exports","generate","libraryName","schema","packageName","pojoCollector","basePackageName","Object","keys","modules","forEach","hasteModuleName","type","components","filter","componentName","component","excludedPlatforms","includes","props","process","properties","pojoDir","split","join","Map","getAllPojos","map","pojo","namespace","name"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/GeneratePropsJavaPojo/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst PojoCollector = require('./PojoCollector');\nconst _require = require('../../Utils'),\n  capitalize = _require.capitalize;\nconst _require2 = require('./serializePojo'),\n  serializePojo = _require2.serializePojo;\nmodule.exports = {\n  generate(libraryName, schema, packageName) {\n    const pojoCollector = new PojoCollector();\n    const basePackageName = 'com.facebook.react.viewmanagers';\n    Object.keys(schema.modules).forEach(hasteModuleName => {\n      const module = schema.modules[hasteModuleName];\n      if (module.type !== 'Component') {\n        return;\n      }\n      const components = module.components;\n      // No components in this module\n      if (components == null) {\n        return null;\n      }\n      Object.keys(components)\n        .filter(componentName => {\n          const component = components[componentName];\n          return !(\n            component.excludedPlatforms &&\n            component.excludedPlatforms.includes('android')\n          );\n        })\n        .forEach(componentName => {\n          const component = components[componentName];\n          if (component == null) {\n            return;\n          }\n          const props = component.props;\n          pojoCollector.process(\n            capitalize(hasteModuleName),\n            `${capitalize(componentName)}Props`,\n            {\n              type: 'ObjectTypeAnnotation',\n              properties: props,\n            },\n          );\n        });\n    });\n    const pojoDir = basePackageName.split('.').join('/');\n    return new Map(\n      pojoCollector.getAllPojos().map(pojo => {\n        return [\n          `java/${pojoDir}/${pojo.namespace}/${pojo.name}.java`,\n          serializePojo(pojo, basePackageName),\n        ];\n      }),\n    );\n  },\n};\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,aAAa,GAAGC,OAAO,kBAAkB,CAAC;AAChD,IAAMC,QAAQ,GAAGD,OAAO,cAAc,CAAC;EACrCE,UAAU,GAAGD,QAAQ,CAACC,UAAU;AAClC,IAAMC,SAAS,GAAGH,OAAO,kBAAkB,CAAC;EAC1CI,aAAa,GAAGD,SAAS,CAACC,aAAa;AACzCC,MAAM,CAACC,OAAO,GAAG;EACfC,QAAQ,WAAAA,SAACC,WAAW,EAAEC,MAAM,EAAEC,WAAW,EAAE;IACzC,IAAMC,aAAa,GAAG,IAAIZ,aAAa,CAAC,CAAC;IACzC,IAAMa,eAAe,GAAG,iCAAiC;IACzDC,MAAM,CAACC,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,CAACC,OAAO,CAAC,UAAAC,eAAe,EAAI;MACrD,IAAMZ,MAAM,GAAGI,MAAM,CAACM,OAAO,CAACE,eAAe,CAAC;MAC9C,IAAIZ,MAAM,CAACa,IAAI,KAAK,WAAW,EAAE;QAC/B;MACF;MACA,IAAMC,UAAU,GAAGd,MAAM,CAACc,UAAU;MAEpC,IAAIA,UAAU,IAAI,IAAI,EAAE;QACtB,OAAO,IAAI;MACb;MACAN,MAAM,CAACC,IAAI,CAACK,UAAU,CAAC,CACpBC,MAAM,CAAC,UAAAC,aAAa,EAAI;QACvB,IAAMC,SAAS,GAAGH,UAAU,CAACE,aAAa,CAAC;QAC3C,OAAO,EACLC,SAAS,CAACC,iBAAiB,IAC3BD,SAAS,CAACC,iBAAiB,CAACC,QAAQ,CAAC,SAAS,CAAC,CAChD;MACH,CAAC,CAAC,CACDR,OAAO,CAAC,UAAAK,aAAa,EAAI;QACxB,IAAMC,SAAS,GAAGH,UAAU,CAACE,aAAa,CAAC;QAC3C,IAAIC,SAAS,IAAI,IAAI,EAAE;UACrB;QACF;QACA,IAAMG,KAAK,GAAGH,SAAS,CAACG,KAAK;QAC7Bd,aAAa,CAACe,OAAO,CACnBxB,UAAU,CAACe,eAAe,CAAC,EAC1B,GAAEf,UAAU,CAACmB,aAAa,CAAE,OAAM,EACnC;UACEH,IAAI,EAAE,sBAAsB;UAC5BS,UAAU,EAAEF;QACd,CACF,CAAC;MACH,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAMG,OAAO,GAAGhB,eAAe,CAACiB,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACpD,OAAO,IAAIC,GAAG,CACZpB,aAAa,CAACqB,WAAW,CAAC,CAAC,CAACC,GAAG,CAAC,UAAAC,IAAI,EAAI;MACtC,OAAO,CACJ,QAAON,OAAQ,IAAGM,IAAI,CAACC,SAAU,IAAGD,IAAI,CAACE,IAAK,OAAM,EACrDhC,aAAa,CAAC8B,IAAI,EAAEtB,eAAe,CAAC,CACrC;IACH,CAAC,CACH,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}