{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _envinfo() {\n  var data = _interopRequireDefault(require(\"envinfo\"));\n  _envinfo = function _envinfo() {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  var data = require(\"os\");\n  _os = function _os() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getEnvironmentInfo() {\n  return _getEnvironmentInfo.apply(this, arguments);\n}\nfunction _getEnvironmentInfo() {\n  _getEnvironmentInfo = _asyncToGenerator(function* () {\n    var json = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    var options = {\n      json: json,\n      showNotFound: true\n    };\n    var packages = ['react', 'react-native', '@react-native-community/cli'];\n    var outOfTreePlatforms = {\n      darwin: 'react-native-macos',\n      win32: 'react-native-windows'\n    };\n    var outOfTreePlatformPackage = outOfTreePlatforms[(0, _os().platform)()];\n    if (outOfTreePlatformPackage) {\n      packages.push(outOfTreePlatformPackage);\n    }\n    var info = yield _envinfo().default.run({\n      System: ['OS', 'CPU', 'Memory', 'Shell'],\n      Binaries: ['Node', 'Yarn', 'npm', 'Watchman'],\n      IDEs: ['Xcode', 'Android Studio', 'Visual Studio'],\n      Managers: ['CocoaPods'],\n      Languages: ['Java', 'Ruby'],\n      SDKs: ['iOS SDK', 'Android SDK', 'Windows SDK'],\n      npmPackages: packages,\n      npmGlobalPackages: ['*react-native*']\n    }, options);\n    if (options.json) {\n      return JSON.parse(info);\n    }\n    return info.trim();\n  });\n  return _getEnvironmentInfo.apply(this, arguments);\n}\nvar _default = getEnvironmentInfo;\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_envinfo","data","_interopRequireDefault","_os","obj","__esModule","getEnvironmentInfo","_getEnvironmentInfo","apply","arguments","json","length","undefined","options","showNotFound","packages","outOfTreePlatforms","darwin","win32","outOfTreePlatformPackage","platform","push","info","run","System","Binaries","IDEs","Managers","Languages","SDKs","npmPackages","npmGlobalPackages","JSON","parse","trim","_default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/envinfo.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _envinfo() {\n  const data = _interopRequireDefault(require(\"envinfo\"));\n  _envinfo = function () {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  const data = require(\"os\");\n  _os = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nasync function getEnvironmentInfo(json = true) {\n  const options = {\n    json,\n    showNotFound: true\n  };\n  const packages = ['react', 'react-native', '@react-native-community/cli'];\n  const outOfTreePlatforms = {\n    darwin: 'react-native-macos',\n    win32: 'react-native-windows'\n  };\n  const outOfTreePlatformPackage = outOfTreePlatforms[(0, _os().platform)()];\n  if (outOfTreePlatformPackage) {\n    packages.push(outOfTreePlatformPackage);\n  }\n  const info = await _envinfo().default.run({\n    System: ['OS', 'CPU', 'Memory', 'Shell'],\n    Binaries: ['Node', 'Yarn', 'npm', 'Watchman'],\n    IDEs: ['Xcode', 'Android Studio', 'Visual Studio'],\n    Managers: ['CocoaPods'],\n    Languages: ['Java', 'Ruby'],\n    SDKs: ['iOS SDK', 'Android SDK', 'Windows SDK'],\n    npmPackages: packages,\n    npmGlobalPackages: ['*react-native*']\n  }, options);\n  if (options.json) {\n    return JSON.parse(info);\n  }\n  return info.trim();\n}\nvar _default = getEnvironmentInfo;\nexports.default = _default;\n\n//# sourceMappingURL=envinfo.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,SAASC,QAAQA,CAAA,EAAG;EAClB,IAAMC,IAAI,GAAGC,sBAAsB,CAACR,OAAO,CAAC,SAAS,CAAC,CAAC;EACvDM,QAAQ,GAAG,SAAAA,SAAA,EAAY;IACrB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASE,GAAGA,CAAA,EAAG;EACb,IAAMF,IAAI,GAAGP,OAAO,CAAC,IAAI,CAAC;EAC1BS,GAAG,GAAG,SAAAA,IAAA,EAAY;IAChB,OAAOF,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASC,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEL,OAAO,EAAEK;EAAI,CAAC;AAAE;AAAC,SAChFE,kBAAkBA,CAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,oBAAA;EAAAA,mBAAA,GAAAd,iBAAA,CAAjC,aAA+C;IAAA,IAAbiB,IAAI,GAAAD,SAAA,CAAAE,MAAA,QAAAF,SAAA,QAAAG,SAAA,GAAAH,SAAA,MAAG,IAAI;IAC3C,IAAMI,OAAO,GAAG;MACdH,IAAI,EAAJA,IAAI;MACJI,YAAY,EAAE;IAChB,CAAC;IACD,IAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,cAAc,EAAE,6BAA6B,CAAC;IACzE,IAAMC,kBAAkB,GAAG;MACzBC,MAAM,EAAE,oBAAoB;MAC5BC,KAAK,EAAE;IACT,CAAC;IACD,IAAMC,wBAAwB,GAAGH,kBAAkB,CAAC,CAAC,CAAC,EAAEb,GAAG,CAAC,CAAC,CAACiB,QAAQ,EAAE,CAAC,CAAC;IAC1E,IAAID,wBAAwB,EAAE;MAC5BJ,QAAQ,CAACM,IAAI,CAACF,wBAAwB,CAAC;IACzC;IACA,IAAMG,IAAI,SAAStB,QAAQ,CAAC,CAAC,CAACD,OAAO,CAACwB,GAAG,CAAC;MACxCC,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;MACxCC,QAAQ,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC;MAC7CC,IAAI,EAAE,CAAC,OAAO,EAAE,gBAAgB,EAAE,eAAe,CAAC;MAClDC,QAAQ,EAAE,CAAC,WAAW,CAAC;MACvBC,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;MAC3BC,IAAI,EAAE,CAAC,SAAS,EAAE,aAAa,EAAE,aAAa,CAAC;MAC/CC,WAAW,EAAEf,QAAQ;MACrBgB,iBAAiB,EAAE,CAAC,gBAAgB;IACtC,CAAC,EAAElB,OAAO,CAAC;IACX,IAAIA,OAAO,CAACH,IAAI,EAAE;MAChB,OAAOsB,IAAI,CAACC,KAAK,CAACX,IAAI,CAAC;IACzB;IACA,OAAOA,IAAI,CAACY,IAAI,CAAC,CAAC;EACpB,CAAC;EAAA,OAAA3B,mBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,IAAI0B,QAAQ,GAAG7B,kBAAkB;AACjCT,OAAO,CAACE,OAAO,GAAGoC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}