{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar path = require('path');\nvar fs = require('fs');\nvar _require = require('util'),\n  promisify = _require.promisify;\nvar pLocate = require('p-locate');\nvar fsStat = promisify(fs.stat);\nvar fsLStat = promisify(fs.lstat);\nvar typeMappings = {\n  directory: 'isDirectory',\n  file: 'isFile'\n};\nfunction checkType(_ref) {\n  var type = _ref.type;\n  if (type in typeMappings) {\n    return;\n  }\n  throw new Error(`Invalid type specified: ${type}`);\n}\nvar matchType = function matchType(type, stat) {\n  return type === undefined || stat[typeMappings[type]]();\n};\nmodule.exports = function () {\n  var _ref2 = _asyncToGenerator(function* (paths, options) {\n    options = _objectSpread({\n      cwd: process.cwd(),\n      type: 'file',\n      allowSymlinks: true\n    }, options);\n    checkType(options);\n    var statFn = options.allowSymlinks ? fsStat : fsLStat;\n    return pLocate(paths, function () {\n      var _ref3 = _asyncToGenerator(function* (path_) {\n        try {\n          var stat = yield statFn(path.resolve(options.cwd, path_));\n          return matchType(options.type, stat);\n        } catch (_) {\n          return false;\n        }\n      });\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }(), options);\n  });\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nmodule.exports.sync = function (paths, options) {\n  options = _objectSpread({\n    cwd: process.cwd(),\n    allowSymlinks: true,\n    type: 'file'\n  }, options);\n  checkType(options);\n  var statFn = options.allowSymlinks ? fs.statSync : fs.lstatSync;\n  for (var path_ of paths) {\n    try {\n      var stat = statFn(path.resolve(options.cwd, path_));\n      if (matchType(options.type, stat)) {\n        return path_;\n      }\n    } catch (_) {}\n  }\n};","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","path","fs","_require","promisify","pLocate","fsStat","stat","fsLStat","lstat","typeMappings","directory","file","checkType","_ref","type","Error","matchType","undefined","module","exports","_ref2","paths","options","cwd","process","allowSymlinks","statFn","_ref3","path_","resolve","_","_x3","_x","_x2","sync","statSync","lstatSync"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli/node_modules/locate-path/index.js"],"sourcesContent":["'use strict';\nconst path = require('path');\nconst fs = require('fs');\nconst {promisify} = require('util');\nconst pLocate = require('p-locate');\n\nconst fsStat = promisify(fs.stat);\nconst fsLStat = promisify(fs.lstat);\n\nconst typeMappings = {\n\tdirectory: 'isDirectory',\n\tfile: 'isFile'\n};\n\nfunction checkType({type}) {\n\tif (type in typeMappings) {\n\t\treturn;\n\t}\n\n\tthrow new Error(`Invalid type specified: ${type}`);\n}\n\nconst matchType = (type, stat) => type === undefined || stat[typeMappings[type]]();\n\nmodule.exports = async (paths, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\ttype: 'file',\n\t\tallowSymlinks: true,\n\t\t...options\n\t};\n\tcheckType(options);\n\tconst statFn = options.allowSymlinks ? fsStat : fsLStat;\n\n\treturn pLocate(paths, async path_ => {\n\t\ttry {\n\t\t\tconst stat = await statFn(path.resolve(options.cwd, path_));\n\t\t\treturn matchType(options.type, stat);\n\t\t} catch (_) {\n\t\t\treturn false;\n\t\t}\n\t}, options);\n};\n\nmodule.exports.sync = (paths, options) => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\tallowSymlinks: true,\n\t\ttype: 'file',\n\t\t...options\n\t};\n\tcheckType(options);\n\tconst statFn = options.allowSymlinks ? fs.statSync : fs.lstatSync;\n\n\tfor (const path_ of paths) {\n\t\ttry {\n\t\t\tconst stat = statFn(path.resolve(options.cwd, path_));\n\n\t\t\tif (matchType(options.type, stat)) {\n\t\t\t\treturn path_;\n\t\t\t}\n\t\t} catch (_) {\n\t\t}\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}