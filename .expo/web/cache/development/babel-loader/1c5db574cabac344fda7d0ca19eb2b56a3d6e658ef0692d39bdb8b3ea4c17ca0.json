{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.executeCommand = void 0;\nfunction _fs() {\n  var data = require(\"fs\");\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  var data = require(\"os\");\n  _os = function _os() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = require(\"path\");\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _execa() {\n  var data = _interopRequireDefault(require(\"execa\"));\n  _execa = function _execa() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar runElevated = function runElevated(command) {\n  var script = `If WScript.Arguments.length = 0 Then\n  Set objShell = CreateObject(\"Shell.Application\")\n  'Pass a bogus argument, say [ uac]\n  objShell.ShellExecute \"wscript.exe\", Chr(34) & _\n    WScript.ScriptFullName & Chr(34) & \" uac\", \"\", \"runas\", 1\nElse\n  Dim oShell\n  Set oShell = WScript.CreateObject (\"WSCript.shell\")\n  oShell.run \"${command}\"\n  Set oShell = Nothing\nEnd If`;\n  var elevatedPath = (0, _path().join)((0, _os().tmpdir)(), `elevated-${Math.random()}.vbs`);\n  (0, _fs().writeFileSync)(elevatedPath, script, 'utf-8');\n  return (0, _execa().default)(elevatedPath);\n};\nvar groupArgs = function groupArgs(args) {\n  var isStringArgument = false;\n  var newArgs = args.reduce(function (acum, current) {\n    if (isStringArgument) {\n      var last = acum[acum.length - 1];\n      acum[acum.length - 1] = `${last} ${current}`;\n      if (current.endsWith('\"')) {\n        isStringArgument = false;\n      }\n      return acum;\n    }\n    if (current.startsWith('\"')) {\n      if (!current.endsWith('\"')) {\n        isStringArgument = true;\n        acum.push(current);\n        return acum;\n      }\n      acum.push(current.replace(/\"/g, ''));\n      return acum;\n    }\n    acum.push(current);\n    return acum;\n  }, []);\n  return newArgs;\n};\nvar executeShellCommand = function executeShellCommand(command) {\n  var elevated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var args = groupArgs(command.split(' '));\n  var program = args.shift();\n  if (elevated) {\n    return runElevated(command);\n  }\n  return (0, _execa().default)(program, args, {\n    shell: true\n  });\n};\nexports.executeCommand = executeShellCommand;","map":{"version":3,"names":["Object","defineProperty","exports","value","executeCommand","_fs","data","require","_os","_path","_execa","_interopRequireDefault","obj","__esModule","default","runElevated","command","script","elevatedPath","join","tmpdir","Math","random","writeFileSync","groupArgs","args","isStringArgument","newArgs","reduce","acum","current","last","length","endsWith","startsWith","push","replace","executeShellCommand","elevated","arguments","undefined","split","program","shift","shell"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/windows/executeWinCommand.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.executeCommand = void 0;\nfunction _fs() {\n  const data = require(\"fs\");\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  const data = require(\"os\");\n  _os = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = require(\"path\");\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _execa() {\n  const data = _interopRequireDefault(require(\"execa\"));\n  _execa = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/** Runs a command requestion permission to run elevated. */\nconst runElevated = command => {\n  // TODO: escape double quotes in args\n  // https://www.winhelponline.com/blog/vbscripts-and-uac-elevation/\n  /**\n   * Need to use a couple of intermediary files to make this work as\n   * `ShellExecute` only accepts a command so\n   */\n\n  // prettier-ignore\n  const script = `If WScript.Arguments.length = 0 Then\n  Set objShell = CreateObject(\"Shell.Application\")\n  'Pass a bogus argument, say [ uac]\n  objShell.ShellExecute \"wscript.exe\", Chr(34) & _\n    WScript.ScriptFullName & Chr(34) & \" uac\", \"\", \"runas\", 1\nElse\n  Dim oShell\n  Set oShell = WScript.CreateObject (\"WSCript.shell\")\n  oShell.run \"${command}\"\n  Set oShell = Nothing\nEnd If`;\n  const elevatedPath = (0, _path().join)((0, _os().tmpdir)(), `elevated-${Math.random()}.vbs`);\n  (0, _fs().writeFileSync)(elevatedPath, script, 'utf-8');\n  return (0, _execa().default)(elevatedPath);\n};\n\n/**\n * Groups all string arguments into a single one. E.g.:\n * ```js\n * ['-m', '\"Upgrade:', 'to', 'latest', 'version\"'] --> ['-m', '\"Upgrade: to latest version\"']`\n * ```\n * @param args The arguments\n * Â© webhint project\n * (https://github.com/webhintio/hint/blob/30b8ba74f122d8b66fc5596d788dd1c7738f2d83/release/lib/utils.ts#L82)\n * License: Apache-2\n */\nconst groupArgs = args => {\n  let isStringArgument = false;\n  const newArgs = args.reduce((acum, current) => {\n    if (isStringArgument) {\n      const last = acum[acum.length - 1];\n      acum[acum.length - 1] = `${last} ${current}`;\n      if (current.endsWith('\"')) {\n        isStringArgument = false;\n      }\n      return acum;\n    }\n    if (current.startsWith('\"')) {\n      /**\n       * Argument is split. I.e.: `['\"part1', 'part2\"'];`\n       */\n      if (!current.endsWith('\"')) {\n        isStringArgument = true;\n        acum.push(current);\n        return acum;\n      }\n\n      /**\n       * Argument is surrounded by \"\" that need to be removed.\n       * We just remove all the quotes because we don't escape any in our commands\n       */\n      acum.push(current.replace(/\"/g, ''));\n      return acum;\n    }\n    acum.push(current);\n    return acum;\n  }, []);\n  return newArgs;\n};\n\n/**\n * Executes the given `command` on a shell taking care of slicing the parameters\n * if needed.\n */\nconst executeShellCommand = (command, elevated = false) => {\n  const args = groupArgs(command.split(' '));\n  const program = args.shift();\n  if (elevated) {\n    return runElevated(command);\n  }\n  return (0, _execa().default)(program, args, {\n    shell: true\n  });\n};\nexports.executeCommand = executeShellCommand;\n\n//# sourceMappingURL=executeWinCommand.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}