{"ast":null,"code":"// @licenselint-loose-mode\nvar EMPTY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_OBJECTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  readonly getObject: (arg: {const1: {const1: boolean}}) => {\n    const1: {const1: boolean},\n  };\n  readonly getReadOnlyObject: (arg: Readonly<{const1: Readonly<{const1: boolean}>}>) => Readonly<{\n    const1: {const1: boolean},\n  }>;\n  readonly getObject2: (arg: { a: String }) => Object;\n  readonly getObjectInArray: (arg: {const1: {const1: boolean}}) => Array<{\n    const1: {const1: boolean},\n  }>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {\n    isTesting: boolean;\n    reactNativeVersion: {\n      major: number;\n      minor: number;\n      patch?: number;\n      prerelease: number | null | undefined;\n    };\n    forceTouchAvailable: boolean;\n    osVersion: string;\n    systemName: string;\n    interfaceIdiom: string;\n  };\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_BASIC_PARAM_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly passBool?: (arg: boolean) => void;\n  readonly passNumber: (arg: number) => void;\n  readonly passString: (arg: string) => void;\n  readonly passStringish: (arg: Stringish) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\ntype NumNum = number;\nexport type Num = (arg: NumNum) => void;\ntype Num2 = Num;\nexport type Void = void;\nexport type A = number;\nexport type B = number;\nexport type ObjectAlias = {\n  x: number;\n  y: number;\n  label: string;\n  truthy: boolean;\n};\nexport type ReadOnlyAlias = Readonly<ObjectAlias>;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  readonly getNumber: Num2;\n  readonly getVoid: () => Void;\n  readonly getArray: (a: Array<A>) => {a: B};\n  readonly getStringFromAlias: (a: ObjectAlias) => string;\n  readonly getStringFromNullableAlias: (a: ObjectAlias | null) => string;\n  readonly getStringFromReadOnlyAlias: (a: ReadOnlyAlias) => string;\n  readonly getStringFromNullableReadOnlyAlias: (a: ReadOnlyAlias | null) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_NESTED_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype Bar = {\n  z: number\n};\n\ntype Foo = {\n  bar1: Bar,\n  bar2: Bar,\n};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_NESTED_INTERFACES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ninterface Bar {\n  z: number\n};\n\ninterface Base1 {\n  bar1: Bar,\n}\n\ninterface Base2 {\n  bar2: Bar,\n}\n\ninterface Base3 extends Base2 {\n  bar3: Bar,\n}\n\ninterface Foo extends Base1, Base3 {\n  bar4: Bar,\n};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_INTERSECTION_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype Bar  = {\n  z: number\n};\n\ntype Base1 = {\n  bar1: Bar,\n}\n\ntype Base2 = {\n  bar2: Bar,\n}\n\ntype Base3 = Base2 & {\n  bar3: Bar,\n}\n\ntype Foo = Base1 & Base3 & {\n  bar4: Bar,\n};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULE_WITH_FLOAT_AND_INT32 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport type {Int32, Float} from 'react-native/Libraries/Types/CodegenTypes';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getInt: (arg: Int32) => Int32;\n  readonly getFloat: (arg: Float) => Float;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_SIMPLE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getObject: (o: Object) => Object,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_UNSAFE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\nimport type {UnsafeObject} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  readonly getUnsafeObject: (o: UnsafeObject) => UnsafeObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_PARTIALS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeObj = {\n  a: string,\n  b?: boolean,\n};\n\nexport interface Spec extends TurboModule {\n  getSomeObj: () => SomeObj;\n  getPartialSomeObj: () => Partial<SomeObj>;\n  getSomeObjFromPartialSomeObj: (value: Partial<SomeObj>) => SomeObj;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_PARTIALS_COMPLEX = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeObj = {\n  a: string,\n  b?: boolean,\n};\n\nexport type PartialSomeObj = Partial<SomeObj>;\n\nexport interface Spec extends TurboModule {\n  getPartialPartial: (value1: Partial<SomeObj>, value2: PartialSomeObj) => SomeObj;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_ROOT_TAG = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {\n  TurboModule,\n  RootTag,\n} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getRootTag: (rootTag: RootTag) => RootTag;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_NULLABLE_PARAM = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly voidFunc: (arg: string | null | undefined) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_BASIC_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: Array<string>) => (Array<(string)>);\n  readonly getArray: (arg: ReadonlyArray<string>) => (ReadonlyArray<(string)>);\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_BASIC_ARRAY2 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: string[]) => ((string)[]);\n  readonly getArray: (arg: readonly string[]) => (readonly (string)[]);\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\ntype DisplayMetricsAndroid = {\n  width: number;\n};\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {\n    readonly Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid;\n    };\n  };\n  readonly getConstants2: () => Readonly<{\n    readonly Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid;\n    };\n  }>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (\n    arg: Array<[string, string]>,\n  ) => Array<string | number | boolean>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_ARRAY2_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getArray(\n    arg: [string, string][],\n  ): (string | number | boolean)[];\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: Array<SomeString>) => Array<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_ARRAY2_WITH_ALIAS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: SomeString[]) => string[];\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (\n    arg: Array<Array<Array<Array<Array<string>>>>>,\n  ) => Array<Array<Array<string>>>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_COMPLEX_ARRAY2 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (\n    arg: string[][][][][],\n  ) => string[][][];\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_PROMISE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type String = string;\nexport type SomeObj = { a: string };\n\nexport interface Spec extends TurboModule {\n  readonly getValueWithPromise: () => Promise<string>;\n  readonly getValueWithPromiseDefinedSomewhereElse: () => Promise<String>;\n  readonly getValueWithPromiseObjDefinedSomewhereElse: () => Promise<SomeObj>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_CALLBACK = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getValueWithCallback: (\n    callback: (value: string, arr: Array<Array<string>>) => void,\n  ) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nvar NATIVE_MODULE_WITH_UNION = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport interface Spec extends TurboModule {\n  readonly getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar ANDROID_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'SampleTurboModuleAndroid',\n);\n`;\nvar IOS_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport interface Spec extends TurboModule {\n  readonly getEnums: (quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'SampleTurboModuleIOS',\n);\n`;\nvar CXX_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport interface Spec extends TurboModule {\n  readonly getCallback: () => () => void;\n  readonly getMixed: (arg: unknown) => unknown;\n  readonly getEnums: (quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions) => string;\n  readonly getMap: (arg: {[a: string]: number | null;}) => {[b: string]: number | null;};\n  readonly getAnotherMap: (arg: {[key: string]: string}) => {[key: string]: string};\n  readonly getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'SampleTurboModuleCxx',\n);\n`;\nmodule.exports = {\n  NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY: NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE: NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_ARRAY2_WITH_UNION_AND_TOUPLE: NATIVE_MODULE_WITH_ARRAY2_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_FLOAT_AND_INT32: NATIVE_MODULE_WITH_FLOAT_AND_INT32,\n  NATIVE_MODULE_WITH_ALIASES: NATIVE_MODULE_WITH_ALIASES,\n  NATIVE_MODULE_WITH_NESTED_ALIASES: NATIVE_MODULE_WITH_NESTED_ALIASES,\n  NATIVE_MODULE_WITH_NESTED_INTERFACES: NATIVE_MODULE_WITH_NESTED_INTERFACES,\n  NATIVE_MODULE_WITH_INTERSECTION_TYPES: NATIVE_MODULE_WITH_INTERSECTION_TYPES,\n  NATIVE_MODULE_WITH_PROMISE: NATIVE_MODULE_WITH_PROMISE,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS: NATIVE_MODULE_WITH_COMPLEX_OBJECTS,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY: NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY,\n  NATIVE_MODULE_WITH_SIMPLE_OBJECT: NATIVE_MODULE_WITH_SIMPLE_OBJECT,\n  NATIVE_MODULE_WITH_UNSAFE_OBJECT: NATIVE_MODULE_WITH_UNSAFE_OBJECT,\n  NATIVE_MODULE_WITH_PARTIALS: NATIVE_MODULE_WITH_PARTIALS,\n  NATIVE_MODULE_WITH_PARTIALS_COMPLEX: NATIVE_MODULE_WITH_PARTIALS_COMPLEX,\n  NATIVE_MODULE_WITH_ROOT_TAG: NATIVE_MODULE_WITH_ROOT_TAG,\n  NATIVE_MODULE_WITH_NULLABLE_PARAM: NATIVE_MODULE_WITH_NULLABLE_PARAM,\n  NATIVE_MODULE_WITH_BASIC_ARRAY: NATIVE_MODULE_WITH_BASIC_ARRAY,\n  NATIVE_MODULE_WITH_BASIC_ARRAY2: NATIVE_MODULE_WITH_BASIC_ARRAY2,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY: NATIVE_MODULE_WITH_COMPLEX_ARRAY,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY2: NATIVE_MODULE_WITH_COMPLEX_ARRAY2,\n  NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS: NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS,\n  NATIVE_MODULE_WITH_ARRAY2_WITH_ALIAS: NATIVE_MODULE_WITH_ARRAY2_WITH_ALIAS,\n  NATIVE_MODULE_WITH_BASIC_PARAM_TYPES: NATIVE_MODULE_WITH_BASIC_PARAM_TYPES,\n  NATIVE_MODULE_WITH_CALLBACK: NATIVE_MODULE_WITH_CALLBACK,\n  NATIVE_MODULE_WITH_UNION: NATIVE_MODULE_WITH_UNION,\n  EMPTY_NATIVE_MODULE: EMPTY_NATIVE_MODULE,\n  ANDROID_ONLY_NATIVE_MODULE: ANDROID_ONLY_NATIVE_MODULE,\n  IOS_ONLY_NATIVE_MODULE: IOS_ONLY_NATIVE_MODULE,\n  CXX_ONLY_NATIVE_MODULE: CXX_ONLY_NATIVE_MODULE\n};","map":{"version":3,"names":["EMPTY_NATIVE_MODULE","NATIVE_MODULE_WITH_COMPLEX_OBJECTS","NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY","NATIVE_MODULE_WITH_BASIC_PARAM_TYPES","NATIVE_MODULE_WITH_ALIASES","NATIVE_MODULE_WITH_NESTED_ALIASES","NATIVE_MODULE_WITH_NESTED_INTERFACES","NATIVE_MODULE_WITH_INTERSECTION_TYPES","NATIVE_MODULE_WITH_FLOAT_AND_INT32","NATIVE_MODULE_WITH_SIMPLE_OBJECT","NATIVE_MODULE_WITH_UNSAFE_OBJECT","NATIVE_MODULE_WITH_PARTIALS","NATIVE_MODULE_WITH_PARTIALS_COMPLEX","NATIVE_MODULE_WITH_ROOT_TAG","NATIVE_MODULE_WITH_NULLABLE_PARAM","NATIVE_MODULE_WITH_BASIC_ARRAY","NATIVE_MODULE_WITH_BASIC_ARRAY2","NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY","NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE","NATIVE_MODULE_WITH_ARRAY2_WITH_UNION_AND_TOUPLE","NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS","NATIVE_MODULE_WITH_ARRAY2_WITH_ALIAS","NATIVE_MODULE_WITH_COMPLEX_ARRAY","NATIVE_MODULE_WITH_COMPLEX_ARRAY2","NATIVE_MODULE_WITH_PROMISE","NATIVE_MODULE_WITH_CALLBACK","NATIVE_MODULE_WITH_UNION","ANDROID_ONLY_NATIVE_MODULE","IOS_ONLY_NATIVE_MODULE","CXX_ONLY_NATIVE_MODULE","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/parsers/typescript/modules/__test_fixtures__/fixtures.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n// @licenselint-loose-mode\n\nconst EMPTY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_OBJECTS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  readonly getObject: (arg: {const1: {const1: boolean}}) => {\n    const1: {const1: boolean},\n  };\n  readonly getReadOnlyObject: (arg: Readonly<{const1: Readonly<{const1: boolean}>}>) => Readonly<{\n    const1: {const1: boolean},\n  }>;\n  readonly getObject2: (arg: { a: String }) => Object;\n  readonly getObjectInArray: (arg: {const1: {const1: boolean}}) => Array<{\n    const1: {const1: boolean},\n  }>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type String = string;\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {\n    isTesting: boolean;\n    reactNativeVersion: {\n      major: number;\n      minor: number;\n      patch?: number;\n      prerelease: number | null | undefined;\n    };\n    forceTouchAvailable: boolean;\n    osVersion: string;\n    systemName: string;\n    interfaceIdiom: string;\n  };\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_BASIC_PARAM_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly passBool?: (arg: boolean) => void;\n  readonly passNumber: (arg: number) => void;\n  readonly passString: (arg: string) => void;\n  readonly passStringish: (arg: Stringish) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\ntype NumNum = number;\nexport type Num = (arg: NumNum) => void;\ntype Num2 = Num;\nexport type Void = void;\nexport type A = number;\nexport type B = number;\nexport type ObjectAlias = {\n  x: number;\n  y: number;\n  label: string;\n  truthy: boolean;\n};\nexport type ReadOnlyAlias = Readonly<ObjectAlias>;\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  readonly getNumber: Num2;\n  readonly getVoid: () => Void;\n  readonly getArray: (a: Array<A>) => {a: B};\n  readonly getStringFromAlias: (a: ObjectAlias) => string;\n  readonly getStringFromNullableAlias: (a: ObjectAlias | null) => string;\n  readonly getStringFromReadOnlyAlias: (a: ReadOnlyAlias) => string;\n  readonly getStringFromNullableReadOnlyAlias: (a: ReadOnlyAlias | null) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_NESTED_ALIASES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype Bar = {\n  z: number\n};\n\ntype Foo = {\n  bar1: Bar,\n  bar2: Bar,\n};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_NESTED_INTERFACES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ninterface Bar {\n  z: number\n};\n\ninterface Base1 {\n  bar1: Bar,\n}\n\ninterface Base2 {\n  bar2: Bar,\n}\n\ninterface Base3 extends Base2 {\n  bar3: Bar,\n}\n\ninterface Foo extends Base1, Base3 {\n  bar4: Bar,\n};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_INTERSECTION_TYPES = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\ntype Bar  = {\n  z: number\n};\n\ntype Base1 = {\n  bar1: Bar,\n}\n\ntype Base2 = {\n  bar2: Bar,\n}\n\ntype Base3 = Base2 & {\n  bar3: Bar,\n}\n\ntype Foo = Base1 & Base3 & {\n  bar4: Bar,\n};\n\nexport interface Spec extends TurboModule {\n  // Exported methods.\n  foo1: (x: Foo) => Foo;\n  foo2: (x: Foo) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULE_WITH_FLOAT_AND_INT32 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport type {Int32, Float} from 'react-native/Libraries/Types/CodegenTypes';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getInt: (arg: Int32) => Int32;\n  readonly getFloat: (arg: Float) => Float;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_SIMPLE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getObject: (o: Object) => Object,\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_UNSAFE_OBJECT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\nimport type {UnsafeObject} from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  readonly getUnsafeObject: (o: UnsafeObject) => UnsafeObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_PARTIALS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeObj = {\n  a: string,\n  b?: boolean,\n};\n\nexport interface Spec extends TurboModule {\n  getSomeObj: () => SomeObj;\n  getPartialSomeObj: () => Partial<SomeObj>;\n  getSomeObjFromPartialSomeObj: (value: Partial<SomeObj>) => SomeObj;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_PARTIALS_COMPLEX = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeObj = {\n  a: string,\n  b?: boolean,\n};\n\nexport type PartialSomeObj = Partial<SomeObj>;\n\nexport interface Spec extends TurboModule {\n  getPartialPartial: (value1: Partial<SomeObj>, value2: PartialSomeObj) => SomeObj;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_ROOT_TAG = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {\n  TurboModule,\n  RootTag,\n} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getRootTag: (rootTag: RootTag) => RootTag;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_NULLABLE_PARAM = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly voidFunc: (arg: string | null | undefined) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_BASIC_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: Array<string>) => (Array<(string)>);\n  readonly getArray: (arg: ReadonlyArray<string>) => (ReadonlyArray<(string)>);\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_BASIC_ARRAY2 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: string[]) => ((string)[]);\n  readonly getArray: (arg: readonly string[]) => (readonly (string)[]);\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\ntype DisplayMetricsAndroid = {\n  width: number;\n};\n\nexport interface Spec extends TurboModule {\n  readonly getConstants: () => {\n    readonly Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid;\n    };\n  };\n  readonly getConstants2: () => Readonly<{\n    readonly Dimensions: {\n      windowPhysicalPixels: DisplayMetricsAndroid;\n    };\n  }>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (\n    arg: Array<[string, string]>,\n  ) => Array<string | number | boolean>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_ARRAY2_WITH_UNION_AND_TOUPLE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getArray(\n    arg: [string, string][],\n  ): (string | number | boolean)[];\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: Array<SomeString>) => Array<string>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_ARRAY2_WITH_ALIAS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type SomeString = string;\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (arg: SomeString[]) => string[];\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_ARRAY = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (\n    arg: Array<Array<Array<Array<Array<string>>>>>,\n  ) => Array<Array<Array<string>>>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_COMPLEX_ARRAY2 = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getArray: (\n    arg: string[][][][][],\n  ) => string[][][];\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_PROMISE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type String = string;\nexport type SomeObj = { a: string };\n\nexport interface Spec extends TurboModule {\n  readonly getValueWithPromise: () => Promise<string>;\n  readonly getValueWithPromiseDefinedSomewhereElse: () => Promise<String>;\n  readonly getValueWithPromiseObjDefinedSomewhereElse: () => Promise<SomeObj>;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_CALLBACK = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  readonly getValueWithCallback: (\n    callback: (value: string, arr: Array<Array<string>>) => void,\n  ) => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n`;\nconst NATIVE_MODULE_WITH_UNION = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport interface Spec extends TurboModule {\n  readonly getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst ANDROID_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'SampleTurboModuleAndroid',\n);\n`;\nconst IOS_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport interface Spec extends TurboModule {\n  readonly getEnums: (quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'SampleTurboModuleIOS',\n);\n`;\nconst CXX_ONLY_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\nimport * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';\n\nexport enum Quality {\n  SD,\n  HD,\n}\n\nexport enum Resolution {\n  Low = 720,\n  High = 1080,\n}\n\nexport enum Floppy {\n  LowDensity = 0.72,\n  HighDensity = 1.44,\n}\n\nexport enum StringOptions {\n  One = 'one',\n  Two = 'two',\n  Three = 'three',\n}\n\nexport type ChooseInt = 1 | 2 | 3;\nexport type ChooseFloat = 1.44 | 2.88 | 5.76;\nexport type ChooseObject = {} | {low: string};\nexport type ChooseString = 'One' | 'Two' | 'Three';\n\nexport interface Spec extends TurboModule {\n  readonly getCallback: () => () => void;\n  readonly getMixed: (arg: unknown) => unknown;\n  readonly getEnums: (quality: Quality, resolution?: Resolution, floppy: Floppy, stringOptions: StringOptions) => string;\n  readonly getMap: (arg: {[a: string]: number | null;}) => {[b: string]: number | null;};\n  readonly getAnotherMap: (arg: {[key: string]: string}) => {[key: string]: string};\n  readonly getUnion: (chooseInt: ChooseInt, chooseFloat: ChooseFloat, chooseObject: ChooseObject, chooseString: ChooseString) => ChooseObject;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'SampleTurboModuleCxx',\n);\n`;\nmodule.exports = {\n  NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY,\n  NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_ARRAY2_WITH_UNION_AND_TOUPLE,\n  NATIVE_MODULE_WITH_FLOAT_AND_INT32,\n  NATIVE_MODULE_WITH_ALIASES,\n  NATIVE_MODULE_WITH_NESTED_ALIASES,\n  NATIVE_MODULE_WITH_NESTED_INTERFACES,\n  NATIVE_MODULE_WITH_INTERSECTION_TYPES,\n  NATIVE_MODULE_WITH_PROMISE,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS,\n  NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY,\n  NATIVE_MODULE_WITH_SIMPLE_OBJECT,\n  NATIVE_MODULE_WITH_UNSAFE_OBJECT,\n  NATIVE_MODULE_WITH_PARTIALS,\n  NATIVE_MODULE_WITH_PARTIALS_COMPLEX,\n  NATIVE_MODULE_WITH_ROOT_TAG,\n  NATIVE_MODULE_WITH_NULLABLE_PARAM,\n  NATIVE_MODULE_WITH_BASIC_ARRAY,\n  NATIVE_MODULE_WITH_BASIC_ARRAY2,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY,\n  NATIVE_MODULE_WITH_COMPLEX_ARRAY2,\n  NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS,\n  NATIVE_MODULE_WITH_ARRAY2_WITH_ALIAS,\n  NATIVE_MODULE_WITH_BASIC_PARAM_TYPES,\n  NATIVE_MODULE_WITH_CALLBACK,\n  NATIVE_MODULE_WITH_UNION,\n  EMPTY_NATIVE_MODULE,\n  ANDROID_ONLY_NATIVE_MODULE,\n  IOS_ONLY_NATIVE_MODULE,\n  CXX_ONLY_NATIVE_MODULE,\n};\n"],"mappings":"AAUA;AAEA,IAAMA,mBAAmB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,kCAAkC,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oDAAoD,GAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oCAAoC,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oCAAoC,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,qCAAqC,GAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,kCAAkC,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2BAA2B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,mCAAmC,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2BAA2B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,8BAA8B,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,+BAA+B,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iEAAiE,GAAI;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,8CAA8C,GAAI;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,+CAA+C,GAAI;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,mCAAmC,GAAI;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oCAAoC,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2BAA2B,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wBAAwB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,0BAA0B,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,sBAAsB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,sBAAsB,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAACC,OAAO,GAAG;EACfd,iEAAiE,EAAjEA,iEAAiE;EACjEC,8CAA8C,EAA9CA,8CAA8C;EAC9CC,+CAA+C,EAA/CA,+CAA+C;EAC/CX,kCAAkC,EAAlCA,kCAAkC;EAClCJ,0BAA0B,EAA1BA,0BAA0B;EAC1BC,iCAAiC,EAAjCA,iCAAiC;EACjCC,oCAAoC,EAApCA,oCAAoC;EACpCC,qCAAqC,EAArCA,qCAAqC;EACrCiB,0BAA0B,EAA1BA,0BAA0B;EAC1BvB,kCAAkC,EAAlCA,kCAAkC;EAClCC,oDAAoD,EAApDA,oDAAoD;EACpDO,gCAAgC,EAAhCA,gCAAgC;EAChCC,gCAAgC,EAAhCA,gCAAgC;EAChCC,2BAA2B,EAA3BA,2BAA2B;EAC3BC,mCAAmC,EAAnCA,mCAAmC;EACnCC,2BAA2B,EAA3BA,2BAA2B;EAC3BC,iCAAiC,EAAjCA,iCAAiC;EACjCC,8BAA8B,EAA9BA,8BAA8B;EAC9BC,+BAA+B,EAA/BA,+BAA+B;EAC/BM,gCAAgC,EAAhCA,gCAAgC;EAChCC,iCAAiC,EAAjCA,iCAAiC;EACjCH,mCAAmC,EAAnCA,mCAAmC;EACnCC,oCAAoC,EAApCA,oCAAoC;EACpClB,oCAAoC,EAApCA,oCAAoC;EACpCsB,2BAA2B,EAA3BA,2BAA2B;EAC3BC,wBAAwB,EAAxBA,wBAAwB;EACxB1B,mBAAmB,EAAnBA,mBAAmB;EACnB2B,0BAA0B,EAA1BA,0BAA0B;EAC1BC,sBAAsB,EAAtBA,sBAAsB;EACtBC,sBAAsB,EAAtBA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}