{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.time = time;\nexports.timeEnd = timeEnd;\nexports.error = error;\nexports.exception = exception;\nexports.warn = warn;\nexports.log = log;\nexports.debug = debug;\nexports.clear = clear;\nexports.exit = exit;\nexports.Log = void 0;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction time(label) {\n  console.time(label);\n}\nfunction timeEnd(label) {\n  console.timeEnd(label);\n}\nfunction error() {\n  var _console;\n  (_console = console).error.apply(_console, arguments);\n}\nfunction exception(e) {\n  var _require = require(\"./utils/env\"),\n    env = _require.env;\n  error(_chalk.default.red(e.toString()) + (env.EXPO_DEBUG ? \"\\n\" + _chalk.default.gray(e.stack) : \"\"));\n}\nfunction warn() {\n  var _console2;\n  for (var _len = arguments.length, message = new Array(_len), _key = 0; _key < _len; _key++) {\n    message[_key] = arguments[_key];\n  }\n  (_console2 = console).warn.apply(_console2, _toConsumableArray(message.map(function (value) {\n    return _chalk.default.yellow(value);\n  })));\n}\nfunction log() {\n  var _console3;\n  (_console3 = console).log.apply(_console3, arguments);\n}\nfunction debug() {\n  var _console4;\n  if (require(\"./utils/env\").env.EXPO_DEBUG) (_console4 = console).log.apply(_console4, arguments);\n}\nfunction clear() {\n  process.stdout.write(process.platform === \"win32\" ? \"\\x1b[2J\\x1b[0f\" : \"\\x1b[2J\\x1b[3J\\x1b[H\");\n}\nfunction exit(message) {\n  var code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (message instanceof Error) {\n    exception(message);\n    process.exit(code);\n  }\n  if (message) {\n    if (code === 0) {\n      log(message);\n    } else {\n      error(message);\n    }\n  }\n  process.exit(code);\n}\nvar Log = {\n  time: time,\n  timeEnd: timeEnd,\n  error: error,\n  exception: exception,\n  warn: warn,\n  log: log,\n  debug: debug,\n  clear: clear,\n  exit: exit\n};\nexports.Log = Log;","map":{"version":3,"names":["_toConsumableArray","require","time","timeEnd","error","exception","warn","log","debug","clear","exit","_chalk","_interopRequireDefault","label","console","_console","apply","arguments","e","_require","env","default","red","toString","EXPO_DEBUG","gray","stack","_console2","_len","length","message","Array","_key","map","value","yellow","_console3","_console4","process","stdout","write","platform","code","undefined","Error","Log"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\log.ts"],"sourcesContent":["import chalk from 'chalk';\n\nexport function time(label?: string): void {\n  console.time(label);\n}\n\nexport function timeEnd(label?: string): void {\n  console.timeEnd(label);\n}\n\nexport function error(...message: string[]): void {\n  console.error(...message);\n}\n\n/** Print an error and provide additional info (the stack trace) in debug mode. */\nexport function exception(e: Error): void {\n  const { env } = require('./utils/env');\n  error(chalk.red(e.toString()) + (env.EXPO_DEBUG ? '\\n' + chalk.gray(e.stack) : ''));\n}\n\nexport function warn(...message: string[]): void {\n  console.warn(...message.map((value) => chalk.yellow(value)));\n}\n\nexport function log(...message: string[]): void {\n  console.log(...message);\n}\n\n/** @deprecated use `debug` package with the `expo:` prefix instead.  */\nexport function debug(...message: any[]): void {\n  if (require('./utils/env').env.EXPO_DEBUG) console.log(...message);\n}\n\n/** Clear the terminal of all text. */\nexport function clear(): void {\n  process.stdout.write(process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H');\n}\n\n/** Log a message and exit the current process. If the `code` is non-zero then `console.error` will be used instead of `console.log`. */\nexport function exit(message: string | Error, code: number = 1): never {\n  if (message instanceof Error) {\n    exception(message);\n    process.exit(code);\n  }\n\n  if (message) {\n    if (code === 0) {\n      log(message);\n    } else {\n      error(message);\n    }\n  }\n\n  process.exit(code);\n}\n\n// The re-export makes auto importing easier.\nexport const Log = {\n  time,\n  timeEnd,\n  error,\n  exception,\n  warn,\n  log,\n  debug,\n  clear,\n  exit,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}