{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _class;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _spawnAsync = _interopRequireDefault(require(\"@expo/spawn-async\"));\nvar _prerequisite = require(\"./Prerequisite\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar SecurityBinPrerequisite = function (_prerequisite$Prerequ) {\n  _inherits(SecurityBinPrerequisite, _prerequisite$Prerequ);\n  var _super = _createSuper(SecurityBinPrerequisite);\n  function SecurityBinPrerequisite() {\n    _classCallCheck(this, SecurityBinPrerequisite);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SecurityBinPrerequisite, [{\n    key: \"assertImplementation\",\n    value: function () {\n      var _assertImplementation = _asyncToGenerator(function* () {\n        try {\n          yield (0, _spawnAsync).default(\"which\", [\"security\"]);\n        } catch (_unused) {\n          throw new _prerequisite.PrerequisiteCommandError(\"SECURITY_BIN\", \"Cannot code sign project because the CLI `security` is not available on your computer.\\nPlease ensure it's installed and try again.\");\n        }\n      });\n      function assertImplementation() {\n        return _assertImplementation.apply(this, arguments);\n      }\n      return assertImplementation;\n    }()\n  }]);\n  return SecurityBinPrerequisite;\n}(_prerequisite.Prerequisite);\n_class = SecurityBinPrerequisite;\nSecurityBinPrerequisite.instance = new _class();\nexports.SecurityBinPrerequisite = SecurityBinPrerequisite;","map":{"version":3,"names":["_asyncToGenerator","require","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_class","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_spawnAsync","_interopRequireDefault","_prerequisite","SecurityBinPrerequisite","_prerequisite$Prerequ","_super","key","value","_assertImplementation","default","_unused","PrerequisiteCommandError","assertImplementation","Prerequisite","instance"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\doctor\\SecurityBinPrerequisite.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\n\nimport { Prerequisite, PrerequisiteCommandError } from './Prerequisite';\n\nexport class SecurityBinPrerequisite extends Prerequisite {\n  static instance = new SecurityBinPrerequisite();\n\n  async assertImplementation(): Promise<void> {\n    try {\n      // make sure we can run security\n      await spawnAsync('which', ['security']);\n    } catch {\n      throw new PrerequisiteCommandError(\n        'SECURITY_BIN',\n        \"Cannot code sign project because the CLI `security` is not available on your computer.\\nPlease ensure it's installed and try again.\"\n      );\n    }\n  }\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AAAA,IAAAC,eAAA,GAAAD,OAAA;AAAA,IAAAE,YAAA,GAAAF,OAAA;AAAA,IAAAG,SAAA,GAAAH,OAAA;AAAA,IAAAI,0BAAA,GAAAJ,OAAA;AAAA,IAAAK,eAAA,GAAAL,OAAA;AAAA,IAAAM,MAAA;AAAA,SAAAC,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAP,eAAA,CAAAG,OAAA,GAAAK,MAAA,MAAAJ,yBAAA,QAAAK,SAAA,GAAAT,eAAA,OAAAU,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAD,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAd,0BAAA,OAAAS,MAAA;AAAA,SAAAH,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAI,CAAA;;;;AAAuB,IAAAC,WAAmB,GAAAC,sBAAA,CAAA5B,OAAA,CAAnB,mBAAmB;AAEa,IAAA6B,aAAgB,GAAA7B,OAAA;;;;;;IAE1D8B,uBAAuB,aAAAC,qBAAA;EAAA5B,SAAA,CAAA2B,uBAAA,EAAAC,qBAAA;EAAA,IAAAC,MAAA,GAAAzB,YAAA,CAAAuB,uBAAA;EAAA,SAAAA,wBAAA;IAAA7B,eAAA,OAAA6B,uBAAA;IAAA,OAAAE,MAAA,CAAAb,KAAA,OAAAD,SAAA;EAAA;EAAAhB,YAAA,CAAA4B,uBAAA;IAAAG,GAAA;IAAAC,KAAA;MAAA,IAAAC,qBAAA,GAAApC,iBAAA,CAGlC,aAA4C;QAC1C,IAAI;UAEF,MAAM,IAAA4B,WAAU,EAAuBS,OAAvB,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,CAAC;SACxC,CAAC,OAAAC,OAAA,EAAM;UACN,MAAM,IAAIR,aAAwB,CAAAS,wBAAA,CAChC,cAAc,EACd,qIAAqI,CACtI;;OAEJ;MAAA,SAAAC,qBAAA;QAAA,OAAAJ,qBAAA,CAAAhB,KAAA,OAAAD,SAAA;MAAA;MAAA,OAAAqB,oBAAA;IAAA;EAAA;EAAA,OAAAT,uBAAA;AAAA,EAb0CD,aAAY,CAAAW,YAAA;AAAAlC,MAAA,GAA5CwB,uBAAuB;AAAvBA,uBAAuB,CAC3BW,QAAQ,GAAG,IAAIX,MAAuB,EAAE;QADpCA,uBAAuB,GAAvBA,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}