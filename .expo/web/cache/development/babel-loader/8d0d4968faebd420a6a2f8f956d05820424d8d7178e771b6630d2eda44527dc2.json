{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction applyReviver(reviver, obj, key, val) {\n  if (val && typeof val === 'object') {\n    if (Array.isArray(val)) {\n      for (var i = 0, len = val.length; i < len; ++i) {\n        var v0 = val[i];\n        var v1 = applyReviver(reviver, val, String(i), v0);\n        if (v1 === undefined) delete val[i];else if (v1 !== v0) val[i] = v1;\n      }\n    } else if (val instanceof Map) {\n      for (var k of Array.from(val.keys())) {\n        var _v = val.get(k);\n        var _v2 = applyReviver(reviver, val, k, _v);\n        if (_v2 === undefined) val.delete(k);else if (_v2 !== _v) val.set(k, _v2);\n      }\n    } else if (val instanceof Set) {\n      for (var _v3 of Array.from(val)) {\n        var _v4 = applyReviver(reviver, val, _v3, _v3);\n        if (_v4 === undefined) val.delete(_v3);else if (_v4 !== _v3) {\n          val.delete(_v3);\n          val.add(_v4);\n        }\n      }\n    } else {\n      for (var _ref of Object.entries(val)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var _k = _ref2[0];\n        var _v5 = _ref2[1];\n        {\n          var _v6 = applyReviver(reviver, val, _k, _v5);\n          if (_v6 === undefined) delete val[_k];else if (_v6 !== _v5) val[_k] = _v6;\n        }\n      }\n    }\n  }\n  return reviver.call(obj, key, val);\n}\nexport { applyReviver };","map":{"version":3,"names":["applyReviver","reviver","obj","key","val","Array","isArray","i","len","length","v0","v1","String","undefined","Map","k","from","keys","get","delete","set","Set","add","_ref","Object","entries","_ref2","_slicedToArray","call"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/browser/dist/doc/applyReviver.js"],"sourcesContent":["/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n"],"mappings":";AAOA,SAASA,YAAYA,CAACC,OAAO,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAC1C,IAAIA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAChC,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;MACpB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGJ,GAAG,CAACK,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAE,EAAED,CAAC,EAAE;QAC5C,IAAMG,EAAE,GAAGN,GAAG,CAACG,CAAC,CAAC;QACjB,IAAMI,EAAE,GAAGX,YAAY,CAACC,OAAO,EAAEG,GAAG,EAAEQ,MAAM,CAACL,CAAC,CAAC,EAAEG,EAAE,CAAC;QACpD,IAAIC,EAAE,KAAKE,SAAS,EAChB,OAAOT,GAAG,CAACG,CAAC,CAAC,CAAC,KACb,IAAII,EAAE,KAAKD,EAAE,EACdN,GAAG,CAACG,CAAC,CAAC,GAAGI,EAAE;MACnB;IACJ,CAAC,MACI,IAAIP,GAAG,YAAYU,GAAG,EAAE;MACzB,KAAK,IAAMC,CAAC,IAAIV,KAAK,CAACW,IAAI,CAACZ,GAAG,CAACa,IAAI,CAAC,CAAC,CAAC,EAAE;QACpC,IAAMP,EAAE,GAAGN,GAAG,CAACc,GAAG,CAACH,CAAC,CAAC;QACrB,IAAMJ,GAAE,GAAGX,YAAY,CAACC,OAAO,EAAEG,GAAG,EAAEW,CAAC,EAAEL,EAAE,CAAC;QAC5C,IAAIC,GAAE,KAAKE,SAAS,EAChBT,GAAG,CAACe,MAAM,CAACJ,CAAC,CAAC,CAAC,KACb,IAAIJ,GAAE,KAAKD,EAAE,EACdN,GAAG,CAACgB,GAAG,CAACL,CAAC,EAAEJ,GAAE,CAAC;MACtB;IACJ,CAAC,MACI,IAAIP,GAAG,YAAYiB,GAAG,EAAE;MACzB,KAAK,IAAMX,GAAE,IAAIL,KAAK,CAACW,IAAI,CAACZ,GAAG,CAAC,EAAE;QAC9B,IAAMO,GAAE,GAAGX,YAAY,CAACC,OAAO,EAAEG,GAAG,EAAEM,GAAE,EAAEA,GAAE,CAAC;QAC7C,IAAIC,GAAE,KAAKE,SAAS,EAChBT,GAAG,CAACe,MAAM,CAACT,GAAE,CAAC,CAAC,KACd,IAAIC,GAAE,KAAKD,GAAE,EAAE;UAChBN,GAAG,CAACe,MAAM,CAACT,GAAE,CAAC;UACdN,GAAG,CAACkB,GAAG,CAACX,GAAE,CAAC;QACf;MACJ;IACJ,CAAC,MACI;MACD,SAAAY,IAAA,IAAsBC,MAAM,CAACC,OAAO,CAACrB,GAAG,CAAC;QAAA,IAAAsB,KAAA,GAAAC,cAAA,CAAAJ,IAAA;QAAA,IAA7BR,EAAC,GAAAW,KAAA;QAAA,IAAEhB,GAAE,GAAAgB,KAAA;QAA0B;UACvC,IAAMf,GAAE,GAAGX,YAAY,CAACC,OAAO,EAAEG,GAAG,EAAEW,EAAC,EAAEL,GAAE,CAAC;UAC5C,IAAIC,GAAE,KAAKE,SAAS,EAChB,OAAOT,GAAG,CAACW,EAAC,CAAC,CAAC,KACb,IAAIJ,GAAE,KAAKD,GAAE,EACdN,GAAG,CAACW,EAAC,CAAC,GAAGJ,GAAE;QACnB;MAAC;IACL;EACJ;EACA,OAAOV,OAAO,CAAC2B,IAAI,CAAC1B,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC;AACtC;AAEA,SAASJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}