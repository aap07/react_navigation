{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/doc/anchors.d.ts"],"sourcesContent":["import type { Node } from '../nodes/Node.js';\nimport type { Document } from './Document.js';\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nexport declare function anchorIsValid(anchor: string): true;\nexport declare function anchorNames(root: Document<Node, boolean> | Node): Set<string>;\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nexport declare function findNewAnchor(prefix: string, exclude: Set<string>): string;\nexport declare function createNodeAnchors(doc: Document<Node, boolean>, prefix: string): {\n    onAnchor: (source: unknown) => string;\n    /**\n     * With circular references, the source node is only resolved after all\n     * of its child nodes are. This is why anchors are set only after all of\n     * the nodes have been created.\n     */\n    setAnchors: () => void;\n    sourceObjects: Map<unknown, {\n        anchor: string | null;\n        node: Node | null;\n    }>;\n};\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}