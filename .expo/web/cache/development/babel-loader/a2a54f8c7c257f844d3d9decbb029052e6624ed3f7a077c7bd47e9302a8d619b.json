{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/metro-config/build/serializer/getCssDeps.d.ts"],"sourcesContent":["import type { Module } from 'metro';\nimport { SerialAsset } from './serializerAssets';\nexport type ReadOnlyDependencies<T = any> = ReadonlyMap<string, Module<T>>;\ntype Options = {\n    processModuleFilter: (modules: Module) => boolean;\n    assetPlugins: readonly string[];\n    platform?: string | null;\n    projectRoot: string;\n    publicPath: string;\n};\nexport type JSModule = Module<{\n    data: {\n        code: string;\n        map: unknown;\n        lineCount: number;\n        css?: {\n            code: string;\n            map: unknown;\n            lineCount: number;\n        };\n    };\n    type: 'js/module';\n}>;\nexport declare function filterJsModules(dependencies: ReadOnlyDependencies, { processModuleFilter, projectRoot }: Pick<Options, 'projectRoot' | 'processModuleFilter'>): JSModule[];\nexport declare function getCssSerialAssets<T extends any>(dependencies: ReadOnlyDependencies<T>, { processModuleFilter, projectRoot }: Pick<Options, 'projectRoot' | 'processModuleFilter'>): SerialAsset[];\nexport declare function fileNameFromContents({ filepath, src }: {\n    filepath: string;\n    src: string;\n}): string;\nexport declare function getFileName(module: string): string;\nexport {};\n"],"mappings":"AA8BA"},"metadata":{},"sourceType":"module","externalDependencies":[]}