{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _class;\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getXcodeVersionAsync = void 0;\nvar _childProcess = require(\"child_process\");\nvar _semver = _interopRequireDefault(require(\"semver\"));\nvar Log = _interopRequireWildcard(require(\"../../../log\"));\nvar _errors = require(\"../../../utils/errors\");\nvar _profile = require(\"../../../utils/profile\");\nvar _prompts = require(\"../../../utils/prompts\");\nvar _prerequisite = require(\"../Prerequisite\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:doctor:apple:xcode\");\nvar MIN_XCODE_VERSION = 9.4;\nvar APP_STORE_ID = \"497799835\";\nvar SUGGESTED_XCODE_VERSION = `${MIN_XCODE_VERSION}.0`;\nvar promptToOpenAppStoreAsync = function () {\n  var _ref = _asyncToGenerator(function* (message) {\n    var confirm = yield (0, _prompts).confirmAsync({\n      initial: true,\n      message: message\n    });\n    if (confirm) {\n      Log.log(`Going to the App Store, re-run Expo CLI when Xcode has finished installing.`);\n      openAppStore(APP_STORE_ID);\n    }\n  });\n  return function promptToOpenAppStoreAsync(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getXcodeVersionAsync = function getXcodeVersionAsync() {\n  try {\n    var ref;\n    var last = (ref = (0, _childProcess).execSync(\"xcodebuild -version\", {\n      stdio: \"pipe\"\n    }).toString().match(/^Xcode (\\d+\\.\\d+)/)) == null ? void 0 : ref[1];\n    if (last) {\n      var version = `${last}.0`;\n      if (!_semver.default.valid(version)) {\n        Log.error(`Xcode version is in an unknown format: ${version}`);\n        return false;\n      }\n      return version;\n    }\n    Log.error(\"Unable to check Xcode version. Command ran successfully but no version number was found.\");\n  } catch (_unused) {}\n  return null;\n};\nexports.getXcodeVersionAsync = getXcodeVersionAsync;\nfunction openAppStore(appId) {\n  var link = getAppStoreLink(appId);\n  (0, _childProcess).execSync(`open ${link}`, {\n    stdio: \"ignore\"\n  });\n}\nfunction getAppStoreLink(appId) {\n  if (process.platform === \"darwin\") {\n    return `macappstore://itunes.apple.com/app/id${appId}`;\n  }\n  return `https://apps.apple.com/us/app/id${appId}`;\n}\nvar XcodePrerequisite = function (_prerequisite$Prerequ) {\n  _inherits(XcodePrerequisite, _prerequisite$Prerequ);\n  var _super = _createSuper(XcodePrerequisite);\n  function XcodePrerequisite() {\n    _classCallCheck(this, XcodePrerequisite);\n    return _super.apply(this, arguments);\n  }\n  _createClass(XcodePrerequisite, [{\n    key: \"assertImplementation\",\n    value: function () {\n      var _assertImplementation = _asyncToGenerator(function* () {\n        var version = (0, _profile).profile(getXcodeVersionAsync)();\n        debug(`Xcode version: ${version}`);\n        if (!version) {\n          yield promptToOpenAppStoreAsync(`Xcode must be fully installed before you can continue. Continue to the App Store?`);\n          throw new _errors.AbortCommandError();\n        }\n        if (_semver.default.lt(version, SUGGESTED_XCODE_VERSION)) {\n          yield promptToOpenAppStoreAsync(`Xcode (${version}) needs to be updated to at least version ${MIN_XCODE_VERSION}. Continue to the App Store?`);\n          throw new _errors.AbortCommandError();\n        }\n      });\n      function assertImplementation() {\n        return _assertImplementation.apply(this, arguments);\n      }\n      return assertImplementation;\n    }()\n  }]);\n  return XcodePrerequisite;\n}(_prerequisite.Prerequisite);\n_class = XcodePrerequisite;\nXcodePrerequisite.instance = new _class();\nexports.XcodePrerequisite = XcodePrerequisite;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_asyncToGenerator","_class","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_childProcess","_semver","_interopRequireDefault","Log","_interopRequireWildcard","_errors","_profile","_prompts","_prerequisite","debug","MIN_XCODE_VERSION","APP_STORE_ID","SUGGESTED_XCODE_VERSION","promptToOpenAppStoreAsync","_ref","message","confirm","confirmAsync","initial","log","openAppStore","_x","getXcodeVersionAsync","ref","last","execSync","stdio","toString","match","version","default","valid","error","_unused","appId","link","getAppStoreLink","process","platform","XcodePrerequisite","_prerequisite$Prerequ","_super","key","value","_assertImplementation","profile","AbortCommandError","lt","assertImplementation","Prerequisite","instance"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\doctor\\apple\\XcodePrerequisite.ts"],"sourcesContent":["import { execSync } from 'child_process';\nimport semver from 'semver';\n\nimport * as Log from '../../../log';\nimport { AbortCommandError } from '../../../utils/errors';\nimport { profile } from '../../../utils/profile';\nimport { confirmAsync } from '../../../utils/prompts';\nimport { Prerequisite } from '../Prerequisite';\n\nconst debug = require('debug')('expo:doctor:apple:xcode') as typeof console.log;\n\n// Based on the RN docs (Aug 2020).\nconst MIN_XCODE_VERSION = 9.4;\nconst APP_STORE_ID = '497799835';\n\nconst SUGGESTED_XCODE_VERSION = `${MIN_XCODE_VERSION}.0`;\n\nconst promptToOpenAppStoreAsync = async (message: string) => {\n  // This prompt serves no purpose accept informing the user what to do next, we could just open the App Store but it could be confusing if they don't know what's going on.\n  const confirm = await confirmAsync({ initial: true, message });\n  if (confirm) {\n    Log.log(`Going to the App Store, re-run Expo CLI when Xcode has finished installing.`);\n    openAppStore(APP_STORE_ID);\n  }\n};\n\n/** Exposed for testing, use `getXcodeVersion` */\nexport const getXcodeVersionAsync = (): string | null | false => {\n  try {\n    const last = execSync('xcodebuild -version', { stdio: 'pipe' })\n      .toString()\n      .match(/^Xcode (\\d+\\.\\d+)/)?.[1];\n    // Convert to a semver string\n    if (last) {\n      const version = `${last}.0`;\n\n      if (!semver.valid(version)) {\n        // Not sure why this would happen, if it does we should add a more confident error message.\n        Log.error(`Xcode version is in an unknown format: ${version}`);\n        return false;\n      }\n\n      return version;\n    }\n    // not sure what's going on\n    Log.error(\n      'Unable to check Xcode version. Command ran successfully but no version number was found.'\n    );\n  } catch {\n    // not installed\n  }\n  return null;\n};\n\n/**\n * Open a link to the App Store. Just link in mobile apps, **never** redirect without prompting first.\n *\n * @param appId\n */\nfunction openAppStore(appId: string) {\n  const link = getAppStoreLink(appId);\n  execSync(`open ${link}`, { stdio: 'ignore' });\n}\n\nfunction getAppStoreLink(appId: string): string {\n  if (process.platform === 'darwin') {\n    // TODO: Is there ever a case where the macappstore isn't available on mac?\n    return `macappstore://itunes.apple.com/app/id${appId}`;\n  }\n  return `https://apps.apple.com/us/app/id${appId}`;\n}\n\nexport class XcodePrerequisite extends Prerequisite {\n  static instance = new XcodePrerequisite();\n\n  /**\n   * Ensure Xcode is installed and recent enough to be used with Expo.\n   */\n  async assertImplementation(): Promise<void> {\n    const version = profile(getXcodeVersionAsync)();\n    debug(`Xcode version: ${version}`);\n    if (!version) {\n      // Almost certainly Xcode isn't installed.\n      await promptToOpenAppStoreAsync(\n        `Xcode must be fully installed before you can continue. Continue to the App Store?`\n      );\n      throw new AbortCommandError();\n    }\n\n    if (semver.lt(version, SUGGESTED_XCODE_VERSION)) {\n      // Xcode version is too old.\n      await promptToOpenAppStoreAsync(\n        `Xcode (${version}) needs to be updated to at least version ${MIN_XCODE_VERSION}. Continue to the App Store?`\n      );\n      throw new AbortCommandError();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}