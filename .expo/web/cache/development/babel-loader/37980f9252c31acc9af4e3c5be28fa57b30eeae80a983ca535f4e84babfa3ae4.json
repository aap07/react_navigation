{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addMetaDataItemToMainApplication = addMetaDataItemToMainApplication;\nexports.addUsesLibraryItemToMainApplication = addUsesLibraryItemToMainApplication;\nexports.ensureToolsAvailable = ensureToolsAvailable;\nexports.findMetaDataItem = findMetaDataItem;\nexports.findUsesLibraryItem = findUsesLibraryItem;\nexports.getMainActivity = getMainActivity;\nexports.getMainActivityOrThrow = getMainActivityOrThrow;\nexports.getMainApplication = getMainApplication;\nexports.getMainApplicationMetaDataValue = getMainApplicationMetaDataValue;\nexports.getMainApplicationOrThrow = getMainApplicationOrThrow;\nexports.getRunnableActivity = getRunnableActivity;\nexports.prefixAndroidKeys = prefixAndroidKeys;\nexports.readAndroidManifestAsync = readAndroidManifestAsync;\nexports.removeMetaDataItemFromMainApplication = removeMetaDataItemFromMainApplication;\nexports.removeUsesLibraryItemFromMainApplication = removeUsesLibraryItemFromMainApplication;\nexports.writeAndroidManifestAsync = writeAndroidManifestAsync;\nfunction _assert() {\n  var data = _interopRequireDefault(require(\"assert\"));\n  _assert = function _assert() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction XML() {\n  var data = _interopRequireWildcard(require(\"../utils/XML\"));\n  XML = function XML() {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction writeAndroidManifestAsync(_x, _x2) {\n  return _writeAndroidManifestAsync.apply(this, arguments);\n}\nfunction _writeAndroidManifestAsync() {\n  _writeAndroidManifestAsync = _asyncToGenerator(function* (manifestPath, androidManifest) {\n    var manifestXml = XML().format(androidManifest);\n    yield _fs().default.promises.mkdir(_path().default.dirname(manifestPath), {\n      recursive: true\n    });\n    yield _fs().default.promises.writeFile(manifestPath, manifestXml);\n  });\n  return _writeAndroidManifestAsync.apply(this, arguments);\n}\nfunction readAndroidManifestAsync(_x3) {\n  return _readAndroidManifestAsync.apply(this, arguments);\n}\nfunction _readAndroidManifestAsync() {\n  _readAndroidManifestAsync = _asyncToGenerator(function* (manifestPath) {\n    var xml = yield XML().readXMLAsync({\n      path: manifestPath\n    });\n    if (!isManifest(xml)) {\n      throw new Error('Invalid manifest found at: ' + manifestPath);\n    }\n    return xml;\n  });\n  return _readAndroidManifestAsync.apply(this, arguments);\n}\nfunction isManifest(xml) {\n  return !!xml.manifest;\n}\nfunction getMainApplication(androidManifest) {\n  var _androidManifest$mani, _androidManifest$mani2, _androidManifest$mani3;\n  return (_androidManifest$mani = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani2 = androidManifest.manifest) === null || _androidManifest$mani2 === void 0 ? void 0 : (_androidManifest$mani3 = _androidManifest$mani2.application) === null || _androidManifest$mani3 === void 0 ? void 0 : _androidManifest$mani3.filter(function (e) {\n    var _e$$;\n    return e === null || e === void 0 ? void 0 : (_e$$ = e.$) === null || _e$$ === void 0 ? void 0 : _e$$['android:name'].endsWith('.MainApplication');\n  })[0]) !== null && _androidManifest$mani !== void 0 ? _androidManifest$mani : null;\n}\nfunction getMainApplicationOrThrow(androidManifest) {\n  var mainApplication = getMainApplication(androidManifest);\n  (0, _assert().default)(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\nfunction getMainActivityOrThrow(androidManifest) {\n  var mainActivity = getMainActivity(androidManifest);\n  (0, _assert().default)(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\nfunction getRunnableActivity(androidManifest) {\n  var _androidManifest$mani4, _androidManifest$mani5, _androidManifest$mani6, _androidManifest$mani7, _androidManifest$mani8;\n  var enabledActivities = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani4 = androidManifest.manifest) === null || _androidManifest$mani4 === void 0 ? void 0 : (_androidManifest$mani5 = _androidManifest$mani4.application) === null || _androidManifest$mani5 === void 0 ? void 0 : (_androidManifest$mani6 = _androidManifest$mani5[0]) === null || _androidManifest$mani6 === void 0 ? void 0 : (_androidManifest$mani7 = _androidManifest$mani6.activity) === null || _androidManifest$mani7 === void 0 ? void 0 : (_androidManifest$mani8 = _androidManifest$mani7.filter) === null || _androidManifest$mani8 === void 0 ? void 0 : _androidManifest$mani8.call(_androidManifest$mani7, function (e) {\n    return e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false;\n  });\n  if (!enabledActivities) {\n    return null;\n  }\n  for (var activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (var intentFilter of activity['intent-filter']) {\n        var _intentFilter$action, _intentFilter$categor;\n        if ((_intentFilter$action = intentFilter.action) !== null && _intentFilter$action !== void 0 && _intentFilter$action.find(function (action) {\n          return action.$['android:name'] === 'android.intent.action.MAIN';\n        }) && (_intentFilter$categor = intentFilter.category) !== null && _intentFilter$categor !== void 0 && _intentFilter$categor.find(function (category) {\n          return category.$['android:name'] === 'android.intent.category.LAUNCHER';\n        })) {\n          return activity;\n        }\n      }\n    }\n  }\n  return null;\n}\nfunction getMainActivity(androidManifest) {\n  var _androidManifest$mani9, _androidManifest$mani10, _androidManifest$mani11, _androidManifest$mani12, _androidManifest$mani13, _mainActivity$;\n  var mainActivity = androidManifest === null || androidManifest === void 0 ? void 0 : (_androidManifest$mani9 = androidManifest.manifest) === null || _androidManifest$mani9 === void 0 ? void 0 : (_androidManifest$mani10 = _androidManifest$mani9.application) === null || _androidManifest$mani10 === void 0 ? void 0 : (_androidManifest$mani11 = _androidManifest$mani10[0]) === null || _androidManifest$mani11 === void 0 ? void 0 : (_androidManifest$mani12 = _androidManifest$mani11.activity) === null || _androidManifest$mani12 === void 0 ? void 0 : (_androidManifest$mani13 = _androidManifest$mani12.filter) === null || _androidManifest$mani13 === void 0 ? void 0 : _androidManifest$mani13.call(_androidManifest$mani12, function (e) {\n    return e.$['android:name'] === '.MainActivity';\n  });\n  return (_mainActivity$ = mainActivity === null || mainActivity === void 0 ? void 0 : mainActivity[0]) !== null && _mainActivity$ !== void 0 ? _mainActivity$ : null;\n}\nfunction addMetaDataItemToMainApplication(mainApplication, itemName, itemValue) {\n  var itemType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'value';\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(_defineProperty({\n      name: itemName\n    }, itemType, itemValue))\n  };\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[`android:${itemType}`] = itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\nfunction removeMetaDataItemFromMainApplication(mainApplication, itemName) {\n  var index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\nfunction findApplicationSubItem(mainApplication, category, itemName) {\n  var parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    var index = parent.findIndex(function (e) {\n      return e.$['android:name'] === itemName;\n    });\n    return index;\n  }\n  return -1;\n}\nfunction findMetaDataItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\nfunction findUsesLibraryItem(mainApplication, itemName) {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\nfunction getMainApplicationMetaDataValue(androidManifest, name) {\n  var mainApplication = getMainApplication(androidManifest);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication.hasOwnProperty('meta-data')) {\n    var _mainApplication$meta, _item$$$androidValue;\n    var item = mainApplication === null || mainApplication === void 0 ? void 0 : (_mainApplication$meta = mainApplication['meta-data']) === null || _mainApplication$meta === void 0 ? void 0 : _mainApplication$meta.find(function (e) {\n      return e.$['android:name'] === name;\n    });\n    return (_item$$$androidValue = item === null || item === void 0 ? void 0 : item.$['android:value']) !== null && _item$$$androidValue !== void 0 ? _item$$$androidValue : null;\n  }\n  return null;\n}\nfunction addUsesLibraryItemToMainApplication(mainApplication, item) {\n  var existingMetaDataItem;\n  var newItem = {\n    $: prefixAndroidKeys(item)\n  };\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(function (e) {\n      return e.$['android:name'] === item.name;\n    });\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\nfunction removeUsesLibraryItemFromMainApplication(mainApplication, itemName) {\n  var index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication !== null && mainApplication !== void 0 && mainApplication['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\nfunction prefixAndroidKeys(head) {\n  return Object.entries(head).reduce(function (prev, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      curr = _ref2[1];\n    return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, `android:${key}`, curr));\n  }, {});\n}\nfunction ensureToolsAvailable(manifest) {\n  return ensureManifestHasNamespace(manifest, {\n    namespace: 'xmlns:tools',\n    url: 'http://schemas.android.com/tools'\n  });\n}\nfunction ensureManifestHasNamespace(manifest, _ref3) {\n  var namespace = _ref3.namespace,\n    url = _ref3.url;\n  var _manifest$manifest, _manifest$manifest$$;\n  if (manifest !== null && manifest !== void 0 && (_manifest$manifest = manifest.manifest) !== null && _manifest$manifest !== void 0 && (_manifest$manifest$$ = _manifest$manifest.$) !== null && _manifest$manifest$$ !== void 0 && _manifest$manifest$$[namespace]) {\n    return manifest;\n  }\n  manifest.manifest.$[namespace] = url;\n  return manifest;\n}","map":{"version":3,"names":["_assert","data","_interopRequireDefault","require","_fs","_path","XML","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","writeAndroidManifestAsync","_x","_x2","_writeAndroidManifestAsync","apply","arguments","_asyncToGenerator","manifestPath","androidManifest","manifestXml","format","promises","mkdir","dirname","recursive","writeFile","readAndroidManifestAsync","_x3","_readAndroidManifestAsync","xml","readXMLAsync","path","isManifest","Error","manifest","getMainApplication","_androidManifest$mani","_androidManifest$mani2","_androidManifest$mani3","application","filter","e","_e$$","$","endsWith","getMainApplicationOrThrow","mainApplication","getMainActivityOrThrow","mainActivity","getMainActivity","getRunnableActivity","_androidManifest$mani4","_androidManifest$mani5","_androidManifest$mani6","_androidManifest$mani7","_androidManifest$mani8","enabledActivities","activity","Array","isArray","intentFilter","_intentFilter$action","_intentFilter$categor","action","find","category","_androidManifest$mani9","_androidManifest$mani10","_androidManifest$mani11","_androidManifest$mani12","_androidManifest$mani13","_mainActivity$","addMetaDataItemToMainApplication","itemName","itemValue","itemType","length","undefined","existingMetaDataItem","newItem","prefixAndroidKeys","_defineProperty","name","push","removeMetaDataItemFromMainApplication","index","findMetaDataItem","splice","findApplicationSubItem","parent","findIndex","findUsesLibraryItem","getMainApplicationMetaDataValue","_mainApplication$meta","_item$$$androidValue","item","addUsesLibraryItemToMainApplication","removeUsesLibraryItemFromMainApplication","head","entries","reduce","prev","_ref","_ref2","_slicedToArray","curr","_objectSpread","ensureToolsAvailable","ensureManifestHasNamespace","namespace","url","_ref3","_manifest$manifest","_manifest$manifest$$"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\android\\Manifest.ts"],"sourcesContent":["import assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\n\nimport * as XML from '../utils/XML';\n\nexport type StringBoolean = 'true' | 'false';\n\ntype ManifestMetaDataAttributes = AndroidManifestAttributes & {\n  'android:value'?: string;\n  'android:resource'?: string;\n};\n\ntype AndroidManifestAttributes = {\n  'android:name': string | 'android.intent.action.VIEW';\n  'tools:node'?: string | 'remove';\n};\n\ntype ManifestAction = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestCategory = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestData = {\n  $: {\n    [key: string]: string | undefined;\n    'android:host'?: string;\n    'android:pathPrefix'?: string;\n    'android:scheme'?: string;\n  };\n};\n\ntype ManifestReceiver = {\n  $: AndroidManifestAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:enabled'?: StringBoolean;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\nexport type ManifestIntentFilter = {\n  $?: {\n    'android:autoVerify'?: StringBoolean;\n    'data-generated'?: StringBoolean;\n  };\n  action?: ManifestAction[];\n  data?: ManifestData[];\n  category?: ManifestCategory[];\n};\n\nexport type ManifestMetaData = {\n  $: ManifestMetaDataAttributes;\n};\n\ntype ManifestServiceAttributes = AndroidManifestAttributes & {\n  'android:enabled'?: StringBoolean;\n  'android:exported'?: StringBoolean;\n  'android:permission'?: string;\n  // ...\n};\n\ntype ManifestService = {\n  $: ManifestServiceAttributes;\n  'intent-filter'?: ManifestIntentFilter[];\n};\n\ntype ManifestApplicationAttributes = {\n  'android:name': string | '.MainApplication';\n  'android:icon'?: string;\n  'android:roundIcon'?: string;\n  'android:label'?: string;\n  'android:allowBackup'?: StringBoolean;\n  'android:largeHeap'?: StringBoolean;\n  'android:requestLegacyExternalStorage'?: StringBoolean;\n  'android:usesCleartextTraffic'?: StringBoolean;\n  [key: string]: string | undefined;\n};\n\nexport type ManifestActivity = {\n  $: ManifestApplicationAttributes & {\n    'android:exported'?: StringBoolean;\n    'android:launchMode'?: string;\n    'android:theme'?: string;\n    'android:windowSoftInputMode'?:\n      | string\n      | 'stateUnspecified'\n      | 'stateUnchanged'\n      | 'stateHidden'\n      | 'stateAlwaysHidden'\n      | 'stateVisible'\n      | 'stateAlwaysVisible'\n      | 'adjustUnspecified'\n      | 'adjustResize'\n      | 'adjustPan';\n    [key: string]: string | undefined;\n  };\n  'intent-filter'?: ManifestIntentFilter[];\n  // ...\n};\n\nexport type ManifestUsesLibrary = {\n  $: AndroidManifestAttributes & {\n    'android:required'?: StringBoolean;\n  };\n};\n\nexport type ManifestApplication = {\n  $: ManifestApplicationAttributes;\n  activity?: ManifestActivity[];\n  service?: ManifestService[];\n  receiver?: ManifestReceiver[];\n  'meta-data'?: ManifestMetaData[];\n  'uses-library'?: ManifestUsesLibrary[];\n  // ...\n};\n\ntype ManifestPermission = {\n  $: AndroidManifestAttributes & {\n    'android:protectionLevel'?: string | 'signature';\n  };\n};\n\nexport type ManifestUsesPermission = {\n  $: AndroidManifestAttributes;\n};\n\ntype ManifestUsesFeature = {\n  $: AndroidManifestAttributes & {\n    'android:glEsVersion'?: string;\n    'android:required': StringBoolean;\n  };\n};\n\nexport type AndroidManifest = {\n  manifest: {\n    // Probably more, but this is currently all we'd need for most cases in Expo.\n    $: {\n      'xmlns:android': string;\n      'xmlns:tools'?: string;\n      package?: string;\n      [key: string]: string | undefined;\n    };\n    permission?: ManifestPermission[];\n    'uses-permission'?: ManifestUsesPermission[];\n    'uses-permission-sdk-23'?: ManifestUsesPermission[];\n    'uses-feature'?: ManifestUsesFeature[];\n    application?: ManifestApplication[];\n  };\n};\n\nexport async function writeAndroidManifestAsync(\n  manifestPath: string,\n  androidManifest: AndroidManifest\n): Promise<void> {\n  const manifestXml = XML.format(androidManifest);\n  await fs.promises.mkdir(path.dirname(manifestPath), { recursive: true });\n  await fs.promises.writeFile(manifestPath, manifestXml);\n}\n\nexport async function readAndroidManifestAsync(manifestPath: string): Promise<AndroidManifest> {\n  const xml = await XML.readXMLAsync({ path: manifestPath });\n  if (!isManifest(xml)) {\n    throw new Error('Invalid manifest found at: ' + manifestPath);\n  }\n  return xml;\n}\n\nfunction isManifest(xml: XML.XMLObject): xml is AndroidManifest {\n  // TODO: Maybe more validation\n  return !!xml.manifest;\n}\n\n/** Returns the `manifest.application` tag ending in `.MainApplication` */\nexport function getMainApplication(androidManifest: AndroidManifest): ManifestApplication | null {\n  return (\n    androidManifest?.manifest?.application?.filter((e) =>\n      e?.$?.['android:name'].endsWith('.MainApplication')\n    )[0] ?? null\n  );\n}\n\nexport function getMainApplicationOrThrow(androidManifest: AndroidManifest): ManifestApplication {\n  const mainApplication = getMainApplication(androidManifest);\n  assert(mainApplication, 'AndroidManifest.xml is missing the required MainApplication element');\n  return mainApplication;\n}\n\nexport function getMainActivityOrThrow(androidManifest: AndroidManifest): ManifestActivity {\n  const mainActivity = getMainActivity(androidManifest);\n  assert(mainActivity, 'AndroidManifest.xml is missing the required MainActivity element');\n  return mainActivity;\n}\n\nexport function getRunnableActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  // Get enabled activities\n  const enabledActivities = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:enabled'] !== 'false' && e.$['android:enabled'] !== false\n  );\n\n  if (!enabledActivities) {\n    return null;\n  }\n\n  // Get the activity that has a runnable intent-filter\n  for (const activity of enabledActivities) {\n    if (Array.isArray(activity['intent-filter'])) {\n      for (const intentFilter of activity['intent-filter']) {\n        if (\n          intentFilter.action?.find(\n            (action) => action.$['android:name'] === 'android.intent.action.MAIN'\n          ) &&\n          intentFilter.category?.find(\n            (category) => category.$['android:name'] === 'android.intent.category.LAUNCHER'\n          )\n        ) {\n          return activity;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function getMainActivity(androidManifest: AndroidManifest): ManifestActivity | null {\n  const mainActivity = androidManifest?.manifest?.application?.[0]?.activity?.filter?.(\n    (e: any) => e.$['android:name'] === '.MainActivity'\n  );\n  return mainActivity?.[0] ?? null;\n}\n\nexport function addMetaDataItemToMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string,\n  itemValue: string,\n  itemType: 'resource' | 'value' = 'value'\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys({ name: itemName, [itemType]: itemValue }),\n  } as ManifestMetaData;\n  if (mainApplication['meta-data']) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(\n      (e: any) => e.$['android:name'] === itemName\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$[`android:${itemType}` as keyof ManifestMetaDataAttributes] =\n        itemValue;\n    } else {\n      mainApplication['meta-data'].push(newItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeMetaDataItemFromMainApplication(mainApplication: any, itemName: string) {\n  const index = findMetaDataItem(mainApplication, itemName);\n  if (mainApplication?.['meta-data'] && index > -1) {\n    mainApplication['meta-data'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nfunction findApplicationSubItem(\n  mainApplication: ManifestApplication,\n  category: keyof ManifestApplication,\n  itemName: string\n): number {\n  const parent = mainApplication[category];\n  if (Array.isArray(parent)) {\n    const index = parent.findIndex((e: any) => e.$['android:name'] === itemName);\n\n    return index;\n  }\n  return -1;\n}\n\nexport function findMetaDataItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'meta-data', itemName);\n}\n\nexport function findUsesLibraryItem(mainApplication: any, itemName: string): number {\n  return findApplicationSubItem(mainApplication, 'uses-library', itemName);\n}\n\nexport function getMainApplicationMetaDataValue(\n  androidManifest: AndroidManifest,\n  name: string\n): string | null {\n  const mainApplication = getMainApplication(androidManifest);\n\n  if (mainApplication?.hasOwnProperty('meta-data')) {\n    const item = mainApplication?.['meta-data']?.find((e: any) => e.$['android:name'] === name);\n    return item?.$['android:value'] ?? null;\n  }\n\n  return null;\n}\n\nexport function addUsesLibraryItemToMainApplication(\n  mainApplication: ManifestApplication,\n  item: { name: string; required?: boolean }\n): ManifestApplication {\n  let existingMetaDataItem;\n  const newItem = {\n    $: prefixAndroidKeys(item),\n  } as ManifestUsesLibrary;\n\n  if (mainApplication['uses-library']) {\n    existingMetaDataItem = mainApplication['uses-library'].filter(\n      (e) => e.$['android:name'] === item.name\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0].$ = newItem.$;\n    } else {\n      mainApplication['uses-library'].push(newItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newItem];\n  }\n  return mainApplication;\n}\n\nexport function removeUsesLibraryItemFromMainApplication(\n  mainApplication: ManifestApplication,\n  itemName: string\n) {\n  const index = findUsesLibraryItem(mainApplication, itemName);\n  if (mainApplication?.['uses-library'] && index > -1) {\n    mainApplication['uses-library'].splice(index, 1);\n  }\n  return mainApplication;\n}\n\nexport function prefixAndroidKeys<T extends Record<string, any> = Record<string, string>>(\n  head: T\n): Record<string, any> {\n  // prefix all keys with `android:`\n  return Object.entries(head).reduce(\n    (prev, [key, curr]) => ({ ...prev, [`android:${key}`]: curr }),\n    {} as T\n  );\n}\n\n/**\n * Ensure the `tools:*` namespace is available in the manifest.\n *\n * @param manifest AndroidManifest.xml\n * @returns manifest with the `tools:*` namespace available\n */\nexport function ensureToolsAvailable(manifest: AndroidManifest) {\n  return ensureManifestHasNamespace(manifest, {\n    namespace: 'xmlns:tools',\n    url: 'http://schemas.android.com/tools',\n  });\n}\n\n/**\n * Ensure a particular namespace is available in the manifest.\n *\n * @param manifest `AndroidManifest.xml`\n * @returns manifest with the provided namespace available\n */\nfunction ensureManifestHasNamespace(\n  manifest: AndroidManifest,\n  { namespace, url }: { namespace: string; url: string }\n) {\n  if (manifest?.manifest?.$?.[namespace]) {\n    return manifest;\n  }\n  manifest.manifest.$[namespace] = url;\n  return manifest;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}