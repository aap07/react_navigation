{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAppDeltaDirectory = getAppDeltaDirectory;\nexports.installOnDeviceAsync = installOnDeviceAsync;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _os = _interopRequireDefault(require(\"os\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _dir = require(\"../../../utils/dir\");\nvar _errors = require(\"../../../utils/errors\");\nvar _interactive = require(\"../../../utils/interactive\");\nvar _ora = require(\"../../../utils/ora\");\nvar _prompts = require(\"../../../utils/prompts\");\nvar AppleDevice = _interopRequireWildcard(require(\"./AppleDevice\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction getAppDeltaDirectory(bundleId) {\n  var deltaFolder = _path.default.join(_os.default.tmpdir(), \"ios\", \"app-delta\", bundleId);\n  (0, _dir).ensureDirectory(deltaFolder);\n  return deltaFolder;\n}\nfunction installOnDeviceAsync(_x) {\n  return _installOnDeviceAsync.apply(this, arguments);\n}\nfunction _installOnDeviceAsync() {\n  _installOnDeviceAsync = _asyncToGenerator(function* (props) {\n    var bundle = props.bundle,\n      bundleIdentifier = props.bundleIdentifier,\n      appDeltaDirectory = props.appDeltaDirectory,\n      udid = props.udid,\n      deviceName = props.deviceName;\n    var indicator;\n    try {\n      yield AppleDevice.runOnDevice({\n        udid: udid,\n        appPath: bundle,\n        bundleId: bundleIdentifier,\n        waitForApp: false,\n        deltaPath: appDeltaDirectory,\n        onProgress: function onProgress(_ref) {\n          var status = _ref.status,\n            isComplete = _ref.isComplete,\n            progress = _ref.progress;\n          if (!indicator) {\n            indicator = (0, _ora).ora(status).start();\n          }\n          indicator.text = `${_chalk.default.bold(status)} ${progress}%`;\n          if (isComplete) {\n            indicator.succeed();\n          }\n        }\n      });\n    } catch (error) {\n      if (indicator) {\n        indicator.fail();\n      }\n      if (error.code === \"APPLE_DEVICE_LOCKED\") {\n        var ref;\n        var appName = (ref = _path.default.basename(bundle).split(\".\")[0]) != null ? ref : \"app\";\n        if ((0, _interactive).isInteractive() && (yield (0, _prompts).confirmAsync({\n          message: `Cannot launch ${appName} because the device is locked. Unlock ${deviceName} to continue...`,\n          initial: true\n        }))) {\n          return installOnDeviceAsync(props);\n        }\n        throw new _errors.CommandError(`Cannot launch ${appName} on ${deviceName} because the device is locked.`);\n      }\n      throw error;\n    }\n  });\n  return _installOnDeviceAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","getAppDeltaDirectory","installOnDeviceAsync","_chalk","_interopRequireDefault","_os","_path","_dir","_errors","_interactive","_ora","_prompts","AppleDevice","_interopRequireWildcard","bundleId","deltaFolder","default","join","tmpdir","ensureDirectory","_x","_installOnDeviceAsync","apply","arguments","props","bundle","bundleIdentifier","appDeltaDirectory","udid","deviceName","indicator","runOnDevice","appPath","waitForApp","deltaPath","onProgress","_ref","status","isComplete","progress","ora","start","text","bold","succeed","error","fail","code","ref","appName","basename","split","isInteractive","confirmAsync","message","initial","CommandError"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\ios\\appleDevice\\installOnDeviceAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Ora } from 'ora';\nimport os from 'os';\nimport path from 'path';\n\nimport { ensureDirectory } from '../../../utils/dir';\nimport { CommandError } from '../../../utils/errors';\nimport { isInteractive } from '../../../utils/interactive';\nimport { ora } from '../../../utils/ora';\nimport { confirmAsync } from '../../../utils/prompts';\nimport * as AppleDevice from './AppleDevice';\n\n/** Get the app_delta folder for faster subsequent rebuilds on devices. */\nexport function getAppDeltaDirectory(bundleId: string): string {\n  // TODO: Maybe use .expo folder instead for debugging\n  // TODO: Reuse existing folder from xcode?\n  const deltaFolder = path.join(os.tmpdir(), 'ios', 'app-delta', bundleId);\n  ensureDirectory(deltaFolder);\n  return deltaFolder;\n}\n\n/**\n * Wraps the apple device method for installing and running an app,\n * adds indicator and retry loop for when the device is locked.\n */\nexport async function installOnDeviceAsync(props: {\n  bundle: string;\n  bundleIdentifier: string;\n  appDeltaDirectory: string;\n  udid: string;\n  deviceName: string;\n}): Promise<void> {\n  const { bundle, bundleIdentifier, appDeltaDirectory, udid, deviceName } = props;\n  let indicator: Ora | undefined;\n\n  try {\n    // TODO: Connect for logs\n    await AppleDevice.runOnDevice({\n      udid,\n      appPath: bundle,\n      bundleId: bundleIdentifier,\n      waitForApp: false,\n      deltaPath: appDeltaDirectory,\n      onProgress({\n        status,\n        isComplete,\n        progress,\n      }: {\n        status: string;\n        isComplete: boolean;\n        progress: number;\n      }) {\n        if (!indicator) {\n          indicator = ora(status).start();\n        }\n        indicator.text = `${chalk.bold(status)} ${progress}%`;\n        if (isComplete) {\n          indicator.succeed();\n        }\n      },\n    });\n  } catch (error: any) {\n    if (indicator) {\n      indicator.fail();\n    }\n    if (error.code === 'APPLE_DEVICE_LOCKED') {\n      // Get the app name from the binary path.\n      const appName = path.basename(bundle).split('.')[0] ?? 'app';\n      if (\n        isInteractive() &&\n        (await confirmAsync({\n          message: `Cannot launch ${appName} because the device is locked. Unlock ${deviceName} to continue...`,\n          initial: true,\n        }))\n      ) {\n        return installOnDeviceAsync(props);\n      }\n      throw new CommandError(\n        `Cannot launch ${appName} on ${deviceName} because the device is locked.`\n      );\n    }\n    throw error;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}