{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/parse/cst-visit.d.ts"],"sourcesContent":["import type { CollectionItem, Document } from './cst.js';\nexport type VisitPath = readonly ['key' | 'value', number][];\nexport type Visitor = (item: CollectionItem, path: VisitPath) => number | symbol | Visitor | void;\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nexport declare function visit(cst: Document | CollectionItem, visitor: Visitor): void;\nexport declare namespace visit {\n    var BREAK: symbol;\n    var SKIP: symbol;\n    var REMOVE: symbol;\n    var itemAtPath: (cst: Document | CollectionItem, path: VisitPath) => CollectionItem | undefined;\n    var parentCollection: (cst: Document | CollectionItem, path: VisitPath) => import(\"./cst.js\").BlockMap | import(\"./cst.js\").BlockSequence | import(\"./cst.js\").FlowCollection;\n}\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}