{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar password_prompt_1 = tslib_1.__importDefault(require(\"password-prompt\"));\nvar utils_1 = require(\"./utils\");\nvar DefaultUI = {\n  getWindowsEncryptionPassword: function getWindowsEncryptionPassword() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return yield password_prompt_1.default('devcert password (http://bit.ly/devcert-what-password?):');\n    });\n  },\n  warnChromeOnLinuxWithoutCertutil: function warnChromeOnLinuxWithoutCertutil() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      console.warn(`\n      WARNING: It looks like you have Chrome installed, but you specified\n      'skipCertutilInstall: true'. Unfortunately, without installing\n      certutil, it's impossible get Chrome to trust devcert's certificates\n      The certificates will work, but Chrome will continue to warn you that\n      they are untrusted.\n    `);\n    });\n  },\n  closeFirefoxBeforeContinuing: function closeFirefoxBeforeContinuing() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      console.log('Please close Firefox before continuing');\n    });\n  },\n  startFirefoxWizard: function startFirefoxWizard(certificateHost) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      console.log(`\n      devcert was unable to automatically configure Firefox. You'll need to\n      complete this process manually. Don't worry though - Firefox will walk\n      you through it.\n\n      When you're ready, hit any key to continue. Firefox will launch and\n      display a wizard to walk you through how to trust the devcert\n      certificate. When you are finished, come back here and we'll finish up.\n\n      (If Firefox doesn't start, go ahead and start it and navigate to\n      ${certificateHost} in a new tab.)\n\n      If you are curious about why all this is necessary, check out\n      https://github.com/davewasmer/devcert#how-it-works\n\n      <Press any key to launch Firefox wizard>\n    `);\n      yield utils_1.waitForUser();\n    });\n  },\n  firefoxWizardPromptPage: function firefoxWizardPromptPage(certificateURL) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return `\n      <html>\n        <head>\n          <meta http-equiv=\"refresh\" content=\"0; url=${certificateURL}\" />\n        </head>\n      </html>\n    `;\n    });\n  },\n  waitForFirefoxWizard: function waitForFirefoxWizard() {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      console.log(`\n      Launching Firefox ...\n\n      Great! Once you've finished the Firefox wizard for adding the devcert\n      certificate, just hit any key here again and we'll wrap up.\n\n      <Press any key to continue>\n    `);\n      yield utils_1.waitForUser();\n    });\n  }\n};\nexports.default = DefaultUI;","map":{"version":3,"names":["password_prompt_1","tslib_1","__importDefault","require","utils_1","DefaultUI","getWindowsEncryptionPassword","default","warnChromeOnLinuxWithoutCertutil","console","warn","closeFirefoxBeforeContinuing","log","startFirefoxWizard","certificateHost","waitForUser","firefoxWizardPromptPage","certificateURL","waitForFirefoxWizard","exports"],"sources":["\\Users\\evanbacon\\Documents\\GitHub\\devcert\\user-interface.ts"],"sourcesContent":["import passwordPrompt from 'password-prompt';\nimport { waitForUser } from './utils';\n\nexport interface UserInterface {\n  getWindowsEncryptionPassword(): Promise<string>;\n  warnChromeOnLinuxWithoutCertutil(): Promise<void>;\n  closeFirefoxBeforeContinuing(): Promise<void>;\n  startFirefoxWizard(certificateHost: string): Promise<void>;\n  firefoxWizardPromptPage(certificateURL: string): Promise<string>;\n  waitForFirefoxWizard(): Promise<void>;\n}\n\nconst DefaultUI: UserInterface = {\n  async getWindowsEncryptionPassword() {\n    return await passwordPrompt('devcert password (http://bit.ly/devcert-what-password?):');\n  },\n  async warnChromeOnLinuxWithoutCertutil() {\n    console.warn(`\n      WARNING: It looks like you have Chrome installed, but you specified\n      'skipCertutilInstall: true'. Unfortunately, without installing\n      certutil, it's impossible get Chrome to trust devcert's certificates\n      The certificates will work, but Chrome will continue to warn you that\n      they are untrusted.\n    `);\n  },\n  async closeFirefoxBeforeContinuing() {\n    console.log('Please close Firefox before continuing');\n  },\n  async startFirefoxWizard(certificateHost) {\n    console.log(`\n      devcert was unable to automatically configure Firefox. You'll need to\n      complete this process manually. Don't worry though - Firefox will walk\n      you through it.\n\n      When you're ready, hit any key to continue. Firefox will launch and\n      display a wizard to walk you through how to trust the devcert\n      certificate. When you are finished, come back here and we'll finish up.\n\n      (If Firefox doesn't start, go ahead and start it and navigate to\n      ${ certificateHost } in a new tab.)\n\n      If you are curious about why all this is necessary, check out\n      https://github.com/davewasmer/devcert#how-it-works\n\n      <Press any key to launch Firefox wizard>\n    `);\n    await waitForUser();\n  },\n  async firefoxWizardPromptPage(certificateURL: string) {\n    return `\n      <html>\n        <head>\n          <meta http-equiv=\"refresh\" content=\"0; url=${certificateURL}\" />\n        </head>\n      </html>\n    `;\n  },\n  async waitForFirefoxWizard() {\n    console.log(`\n      Launching Firefox ...\n\n      Great! Once you've finished the Firefox wizard for adding the devcert\n      certificate, just hit any key here again and we'll wrap up.\n\n      <Press any key to continue>\n    `)\n    await waitForUser();\n  }\n}\n\nexport default DefaultUI;"],"mappings":";;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA,CAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAWA,IAAME,SAAS,GAAkB;EACzBC,4BAA4B,WAAAA,6BAAA;;MAChC,OAAO,MAAMN,iBAAA,CAAAO,OAAc,CAAC,0DAA0D,CAAC;IACzF,CAAC;GAAA;EACKC,gCAAgC,WAAAA,iCAAA;;MACpCC,OAAO,CAACC,IAAI,CAAC;;;;;;KAMZ,CAAC;IACJ,CAAC;GAAA;EACKC,4BAA4B,WAAAA,6BAAA;;MAChCF,OAAO,CAACG,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC;GAAA;EACKC,kBAAkB,WAAAA,mBAACC,eAAe;;MACtCL,OAAO,CAACG,GAAG,CAAC;;;;;;;;;;QAUPE,eAAgB;;;;;;KAMpB,CAAC;MACF,MAAMV,OAAA,CAAAW,WAAW,EAAE;IACrB,CAAC;GAAA;EACKC,uBAAuB,WAAAA,wBAACC,cAAsB;;MAClD,OAAO;;;uDAG4CA,cAAc;;;KAGhE;IACH,CAAC;GAAA;EACKC,oBAAoB,WAAAA,qBAAA;;MACxBT,OAAO,CAACG,GAAG,CAAC;;;;;;;KAOX,CAAC;MACF,MAAMR,OAAA,CAAAW,WAAW,EAAE;IACrB,CAAC;;CACF;AAEDI,OAAA,CAAAZ,OAAA,GAAeF,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}