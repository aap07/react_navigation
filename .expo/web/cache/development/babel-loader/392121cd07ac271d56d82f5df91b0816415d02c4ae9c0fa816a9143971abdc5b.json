{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.directoryExistsAsync = directoryExistsAsync;\nexports.fileExists = fileExists;\nexports.fileExistsAsync = fileExistsAsync;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction statAsync(_x) {\n  return _statAsync.apply(this, arguments);\n}\nfunction _statAsync() {\n  _statAsync = _asyncToGenerator(function* (file) {\n    try {\n      return yield _fs().default.promises.stat(file);\n    } catch (_unused2) {\n      return null;\n    }\n  });\n  return _statAsync.apply(this, arguments);\n}\nfunction fileExistsAsync(_x2) {\n  return _fileExistsAsync.apply(this, arguments);\n}\nfunction _fileExistsAsync() {\n  _fileExistsAsync = _asyncToGenerator(function* (file) {\n    var _await$statAsync$isFi, _await$statAsync;\n    return (_await$statAsync$isFi = (_await$statAsync = yield statAsync(file)) === null || _await$statAsync === void 0 ? void 0 : _await$statAsync.isFile()) !== null && _await$statAsync$isFi !== void 0 ? _await$statAsync$isFi : false;\n  });\n  return _fileExistsAsync.apply(this, arguments);\n}\nfunction directoryExistsAsync(_x3) {\n  return _directoryExistsAsync.apply(this, arguments);\n}\nfunction _directoryExistsAsync() {\n  _directoryExistsAsync = _asyncToGenerator(function* (file) {\n    var _await$statAsync$isDi, _await$statAsync2;\n    return (_await$statAsync$isDi = (_await$statAsync2 = yield statAsync(file)) === null || _await$statAsync2 === void 0 ? void 0 : _await$statAsync2.isDirectory()) !== null && _await$statAsync$isDi !== void 0 ? _await$statAsync$isDi : false;\n  });\n  return _directoryExistsAsync.apply(this, arguments);\n}\nfunction fileExists(file) {\n  try {\n    return _fs().default.statSync(file).isFile();\n  } catch (_unused) {\n    return false;\n  }\n}","map":{"version":3,"names":["_fs","data","_interopRequireDefault","require","obj","__esModule","default","statAsync","_x","_statAsync","apply","arguments","_asyncToGenerator","file","promises","stat","_unused2","fileExistsAsync","_x2","_fileExistsAsync","_await$statAsync$isFi","_await$statAsync","isFile","directoryExistsAsync","_x3","_directoryExistsAsync","_await$statAsync$isDi","_await$statAsync2","isDirectory","fileExists","statSync","_unused"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\utils\\modules.ts"],"sourcesContent":["import fs from 'fs';\n\n/**\n * A non-failing version of async FS stat.\n *\n * @param file\n */\nasync function statAsync(file: string): Promise<fs.Stats | null> {\n  try {\n    return await fs.promises.stat(file);\n  } catch {\n    return null;\n  }\n}\n\nexport async function fileExistsAsync(file: string): Promise<boolean> {\n  return (await statAsync(file))?.isFile() ?? false;\n}\n\nexport async function directoryExistsAsync(file: string): Promise<boolean> {\n  return (await statAsync(file))?.isDirectory() ?? false;\n}\n\nexport function fileExists(file: string): boolean {\n  try {\n    return fs.statSync(file).isFile();\n  } catch {\n    return false;\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,SAAAA,IAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,GAAA,YAAAA,IAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAoB,SAAAC,uBAAAE,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAAA,SAOLG,SAASA,CAAAC,EAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,CAAxB,WAAyBC,IAAY,EAA4B;IAC/D,IAAI;MACF,aAAab,GAAA,GAAAM,OAAE,CAACQ,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC;IACrC,CAAC,CAAC,OAAAG,QAAA,EAAM;MACN,OAAO,IAAI;IACb;EACF;EAAA,OAAAP,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEsBM,eAAeA,CAAAC,GAAA;EAAA,OAAAC,gBAAA,CAAAT,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAQ,iBAAA;EAAAA,gBAAA,GAAAP,iBAAA,CAA9B,WAA+BC,IAAY,EAAoB;IAAA,IAAAO,qBAAA,EAAAC,gBAAA;IACpE,QAAAD,qBAAA,IAAAC,gBAAA,SAAcd,SAAS,CAACM,IAAI,CAAC,cAAAQ,gBAAA,uBAAtBA,gBAAA,CAAyBC,MAAM,EAAE,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,KAAK;EACnD;EAAA,OAAAD,gBAAA,CAAAT,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEsBY,oBAAoBA,CAAAC,GAAA;EAAA,OAAAC,qBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAc,sBAAA;EAAAA,qBAAA,GAAAb,iBAAA,CAAnC,WAAoCC,IAAY,EAAoB;IAAA,IAAAa,qBAAA,EAAAC,iBAAA;IACzE,QAAAD,qBAAA,IAAAC,iBAAA,SAAcpB,SAAS,CAACM,IAAI,CAAC,cAAAc,iBAAA,uBAAtBA,iBAAA,CAAyBC,WAAW,EAAE,cAAAF,qBAAA,cAAAA,qBAAA,GAAI,KAAK;EACxD;EAAA,OAAAD,qBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAEO,SAASkB,UAAUA,CAAChB,IAAY,EAAW;EAChD,IAAI;IACF,OAAOb,GAAA,GAAAM,OAAE,CAACwB,QAAQ,CAACjB,IAAI,CAAC,CAACS,MAAM,EAAE;EACnC,CAAC,CAAC,OAAAS,OAAA,EAAM;IACN,OAAO,KAAK;EACd;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}