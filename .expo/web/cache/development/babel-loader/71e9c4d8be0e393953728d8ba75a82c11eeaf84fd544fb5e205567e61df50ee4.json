{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { PanGestureHandler as PanGestureHandlerNative } from 'react-native-gesture-handler';\nimport GestureHandlerRefContext from \"../utils/GestureHandlerRefContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function PanGestureHandler(props) {\n  var gestureRef = React.useRef(null);\n  return _jsx(GestureHandlerRefContext.Provider, {\n    value: gestureRef,\n    children: _jsx(PanGestureHandlerNative, _objectSpread(_objectSpread({}, props), {}, {\n      ref: gestureRef\n    }))\n  });\n}\nexport { GestureHandlerRootView, State as GestureState } from 'react-native-gesture-handler';","map":{"version":3,"names":["React","PanGestureHandler","PanGestureHandlerNative","GestureHandlerRefContext","jsx","_jsx","props","gestureRef","useRef","Provider","value","children","_objectSpread","ref","GestureHandlerRootView","State","GestureState"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-navigation/stack/src/views/GestureHandlerNative.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  PanGestureHandler as PanGestureHandlerNative,\n  PanGestureHandlerProperties,\n} from 'react-native-gesture-handler';\n\nimport GestureHandlerRefContext from '../utils/GestureHandlerRefContext';\n\nexport function PanGestureHandler(props: PanGestureHandlerProperties) {\n  const gestureRef = React.useRef<PanGestureHandlerNative>(null);\n\n  return (\n    <GestureHandlerRefContext.Provider value={gestureRef}>\n      <PanGestureHandlerNative {...props} ref={gestureRef} />\n    </GestureHandlerRefContext.Provider>\n  );\n}\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\nexport {\n  GestureHandlerRootView,\n  State as GestureState,\n} from 'react-native-gesture-handler';\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,iBAAiB,IAAIC,uBAAuB,QAEvC,8BAA8B;AAErC,OAAOC,wBAAwB;AAA0C,SAAAC,GAAA,IAAAC,IAAA;AAEzE,OAAO,SAASJ,iBAAiBA,CAACK,KAAkC,EAAE;EACpE,IAAMC,UAAU,GAAGP,KAAK,CAACQ,MAAM,CAA0B,IAAI,CAAC;EAE9D,OACEH,IAAA,CAACF,wBAAwB,CAACM,QAAQ;IAACC,KAAK,EAAEH,UAAW;IAAAI,QAAA,EACnDN,IAAA,CAACH,uBAAuB,EAAAU,aAAA,CAAAA,aAAA,KAAKN,KAAK;MAAEO,GAAG,EAAEN;IAAW,EAAE;EAAC,CACtB,CAAC;AAExC;AAGA,SACEO,sBAAsB,EACtBC,KAAK,IAAIC,YAAY,QAChB,8BAA8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}