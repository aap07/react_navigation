{"ast":null,"code":"import React from 'react';\nexport {};","map":{"version":3,"names":["React"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/handlers/ForceTouchGestureHandler.d.ts"],"sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport { BaseGestureHandlerProps } from './gestureHandlerCommon';\nexport declare const forceTouchGestureHandlerProps: readonly [\"minForce\", \"maxForce\", \"feedbackOnActivation\"];\ndeclare class ForceTouchFallback extends React.Component<PropsWithChildren<unknown>> {\n    static forceTouchAvailable: boolean;\n    componentDidMount(): void;\n    render(): React.ReactNode;\n}\nexport declare type ForceTouchGestureHandlerEventPayload = {\n    x: number;\n    y: number;\n    absoluteX: number;\n    absoluteY: number;\n    /**\n     * The pressure of a touch.\n     */\n    force: number;\n};\nexport interface ForceTouchGestureConfig {\n    /**\n     *\n     * A minimal pressure that is required before handler can activate. Should be a\n     * value from range `[0.0, 1.0]`. Default is `0.2`.\n     */\n    minForce?: number;\n    /**\n     * A maximal pressure that could be applied for handler. If the pressure is\n     * greater, handler fails. Should be a value from range `[0.0, 1.0]`.\n     */\n    maxForce?: number;\n    /**\n     * Boolean value defining if haptic feedback has to be performed on\n     * activation.\n     */\n    feedbackOnActivation?: boolean;\n}\nexport interface ForceTouchGestureHandlerProps extends BaseGestureHandlerProps<ForceTouchGestureHandlerEventPayload>, ForceTouchGestureConfig {\n}\nexport declare type ForceTouchGestureHandler = typeof ForceTouchGestureHandler & {\n    forceTouchAvailable: boolean;\n};\nexport declare const forceTouchHandlerName = \"ForceTouchGestureHandler\";\nexport declare const ForceTouchGestureHandler: typeof ForceTouchFallback | React.ComponentType<ForceTouchGestureHandlerProps & React.RefAttributes<any>>;\nexport {};\n"],"mappings":"AAAA,OAAOA,KAAK,MAA6B,OAAO;AA2ChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}