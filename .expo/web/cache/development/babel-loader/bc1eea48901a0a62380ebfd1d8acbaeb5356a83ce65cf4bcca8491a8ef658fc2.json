{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapFetchWithProgress = wrapFetchWithProgress;\nvar Log = _interopRequireWildcard(require(\"../../log\"));\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:api:fetch:progress\");\nfunction wrapFetchWithProgress(fetch) {\n  return function (url, init) {\n    return fetch(url, init).then(function (res) {\n      if (res.ok && (init == null ? void 0 : init.onProgress)) {\n        var totalDownloadSize = res.headers.get(\"Content-Length\");\n        var total = Number(totalDownloadSize);\n        debug(`Download size: ${totalDownloadSize}`);\n        if (!totalDownloadSize || isNaN(total) || total < 0) {\n          Log.warn('Progress callback not supported for network request because \"Content-Length\" header missing or invalid in response from URL:', url.toString());\n          return res;\n        }\n        var length = 0;\n        debug(`Starting progress animation for ${url}`);\n        res.body.on(\"data\", function (chunk) {\n          length += Buffer.byteLength(chunk);\n          onProgress();\n        });\n        res.body.on(\"end\", function () {\n          debug(`Finished progress animation for ${url}`);\n          onProgress();\n        });\n        var onProgress = function onProgress() {\n          var progress = length / total || 0;\n          init.onProgress == null ? void 0 : init.onProgress({\n            progress: progress,\n            total: total,\n            loaded: length\n          });\n        };\n      }\n      return res;\n    });\n  };\n}","map":{"version":3,"names":["wrapFetchWithProgress","Log","_interopRequireWildcard","require","debug","fetch","url","init","then","res","ok","onProgress","totalDownloadSize","headers","get","total","Number","isNaN","warn","toString","length","body","on","chunk","Buffer","byteLength","progress","loaded"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\rest\\wrapFetchWithProgress.ts"],"sourcesContent":["import * as Log from '../../log';\nimport { FetchLike } from './client.types';\nconst debug = require('debug')('expo:api:fetch:progress') as typeof console.log;\n\nexport function wrapFetchWithProgress(fetch: FetchLike): FetchLike {\n  return (url, init) => {\n    return fetch(url, init).then((res) => {\n      if (res.ok && init?.onProgress) {\n        const totalDownloadSize = res.headers.get('Content-Length');\n        const total = Number(totalDownloadSize);\n\n        debug(`Download size: ${totalDownloadSize}`);\n        if (!totalDownloadSize || isNaN(total) || total < 0) {\n          Log.warn(\n            'Progress callback not supported for network request because \"Content-Length\" header missing or invalid in response from URL:',\n            url.toString()\n          );\n          return res;\n        }\n\n        let length = 0;\n\n        debug(`Starting progress animation for ${url}`);\n        res.body.on('data', (chunk) => {\n          length += Buffer.byteLength(chunk);\n          onProgress();\n        });\n\n        res.body.on('end', () => {\n          debug(`Finished progress animation for ${url}`);\n          onProgress();\n        });\n\n        const onProgress = () => {\n          const progress = length / total || 0;\n          init.onProgress?.({\n            progress,\n            total,\n            loaded: length,\n          });\n        };\n      }\n      return res;\n    });\n  };\n}\n"],"mappings":"AAAA;;;;;QAIgBA,qBAAqB,GAArBA,qBAAqB;AAJzB,IAAAC,GAAG,GAAAC,uBAAA,CAAAC,OAAA,YAAiB,EAAjB;;;;;;;;;;;;;;;;;;;;;;AAEf,IAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC,CAAC,yBAAyB,CAAC;AAElD,SAASH,qBAAqBA,CAACK,KAAgB,EAAa;EACjE,OAAO,UAACC,GAAG,EAAEC,IAAI,EAAK;IACpB,OAAOF,KAAK,CAACC,GAAG,EAAEC,IAAI,CAAC,CAACC,IAAI,CAAC,UAACC,GAAG,EAAK;MACpC,IAAIA,GAAG,CAACC,EAAE,KAAIH,IAAI,QAAY,GAAhB,MAAgB,GAAhBA,IAAI,CAAEI,UAAU,GAAE;QAC9B,IAAMC,iBAAiB,GAAGH,GAAG,CAACI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC3D,IAAMC,KAAK,GAAGC,MAAM,CAACJ,iBAAiB,CAAC;QAEvCR,KAAK,CAAE,kBAAiBQ,iBAAkB,EAAC,CAAC;QAC5C,IAAI,CAACA,iBAAiB,IAAIK,KAAK,CAACF,KAAK,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;UACnDd,GAAG,CAACiB,IAAI,CACN,8HAA8H,EAC9HZ,GAAG,CAACa,QAAQ,EAAE,CACf;UACD,OAAOV,GAAG;;QAGZ,IAAIW,MAAM,GAAG,CAAC;QAEdhB,KAAK,CAAE,mCAAkCE,GAAI,EAAC,CAAC;QAC/CG,GAAG,CAACY,IAAI,CAACC,EAAE,CAAC,MAAM,EAAE,UAACC,KAAK,EAAK;UAC7BH,MAAM,IAAII,MAAM,CAACC,UAAU,CAACF,KAAK,CAAC;UAClCZ,UAAU,EAAE;SACb,CAAC;QAEFF,GAAG,CAACY,IAAI,CAACC,EAAE,CAAC,KAAK,EAAE,YAAM;UACvBlB,KAAK,CAAE,mCAAkCE,GAAI,EAAC,CAAC;UAC/CK,UAAU,EAAE;SACb,CAAC;QAEF,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;UACvB,IAAMe,QAAQ,GAAGN,MAAM,GAAGL,KAAK,IAAI,CAAC;UACpCR,IAAI,CAACI,UAAU,QAIb,GAJF,MAIE,GAJFJ,IAAI,CAACI,UAAU,CAAG;YAChBe,QAAQ,EAARA,QAAQ;YACRX,KAAK,EAALA,KAAK;YACLY,MAAM,EAAEP;WACT,CAAC;SACH;;MAEH,OAAOX,GAAG;KACX,CAAC;GACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}