{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar fs_1 = require(\"fs\");\nvar node_forge_1 = require(\"node-forge\");\nvar path_1 = __importDefault(require(\"path\"));\nvar main_1 = require(\"../main\");\ndescribe(main_1.generateKeyPair, function () {\n  it('generates a key pair', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    expect(keyPair.privateKey).toBeTruthy();\n    expect(keyPair.publicKey).toBeTruthy();\n    expect(keyPair.publicKey.n.bitLength()).toEqual(2048);\n    var digest = node_forge_1.md.sha256.create().update('hello');\n    expect(keyPair.publicKey.verify(digest.digest().getBytes(), keyPair.privateKey.sign(digest))).toBeTruthy();\n  });\n});\ndescribe(main_1.convertKeyPairToPEM, function () {\n  it('converts key pair to PEM', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var keyPairPEM = (0, main_1.convertKeyPairToPEM)(keyPair);\n    expect(keyPairPEM.privateKeyPEM).toBeTruthy();\n    expect(keyPairPEM.publicKeyPEM).toBeTruthy();\n  });\n});\ndescribe(main_1.convertCertificateToCertificatePEM, function () {\n  it('converts certificate to PEM', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'test'\n    });\n    expect((0, main_1.convertCertificateToCertificatePEM)(certificate)).toBeTruthy();\n  });\n});\ndescribe(main_1.convertKeyPairPEMToKeyPair, function () {\n  it('converts key pair PEM to key pair', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var keyPairPEM = (0, main_1.convertKeyPairToPEM)(keyPair);\n    expect((0, main_1.convertKeyPairPEMToKeyPair)(keyPairPEM)).toBeTruthy();\n  });\n});\ndescribe(main_1.convertCertificatePEMToCertificate, function () {\n  it('converts certificate PEM to certificate', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'test'\n    });\n    expect((0, main_1.convertCertificatePEMToCertificate)((0, main_1.convertCertificateToCertificatePEM)(certificate))).toBeTruthy();\n  });\n});\ndescribe(main_1.generateSelfSignedCodeSigningCertificate, function () {\n  it('generates certificate with correct data', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'Test'\n    });\n    expect(certificate.verify(certificate)).toBe(true);\n    expect(certificate.getExtension('keyUsage')).toMatchObject({\n      critical: true,\n      dataEncipherment: false,\n      digitalSignature: true,\n      id: '2.5.29.15',\n      keyCertSign: false,\n      keyEncipherment: false,\n      name: 'keyUsage',\n      nonRepudiation: false\n    });\n    expect(certificate.getExtension('extKeyUsage')).toMatchObject({\n      clientAuth: false,\n      codeSigning: true,\n      critical: true,\n      emailProtection: false,\n      id: '2.5.29.37',\n      name: 'extKeyUsage',\n      serverAuth: false,\n      timeStamping: false\n    });\n  });\n});\ndescribe(main_1.validateSelfSignedCertificate, function () {\n  it('does not throw for certificate generated with generateSelfSignedCodeSigningCertificate', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'Test'\n    });\n    expect(function () {\n      return (0, main_1.validateSelfSignedCertificate)(certificate, keyPair);\n    }).not.toThrow();\n  });\n  it('throws when certificate is expired', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    var validity = new Date();\n    validity.setFullYear(validity.getFullYear() - 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: validity,\n      commonName: 'Test'\n    });\n    expect(function () {\n      return (0, main_1.validateSelfSignedCertificate)(certificate, keyPair);\n    }).toThrow('Certificate validity expired');\n  });\n  it('throws when missing keyUsage', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'Test'\n    });\n    certificate.setExtensions([{\n      name: 'keyUsage',\n      critical: true,\n      keyCertSign: false,\n      digitalSignature: false,\n      nonRepudiation: false,\n      keyEncipherment: false,\n      dataEncipherment: false\n    }]);\n    expect(function () {\n      return (0, main_1.validateSelfSignedCertificate)(certificate, keyPair);\n    }).toThrow('X509v3 Key Usage: Digital Signature not present');\n  });\n  it('throws when missing extKeyUsage', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'Test'\n    });\n    certificate.setExtensions([{\n      name: 'keyUsage',\n      critical: true,\n      keyCertSign: false,\n      digitalSignature: true,\n      nonRepudiation: false,\n      keyEncipherment: false,\n      dataEncipherment: false\n    }, {\n      name: 'extKeyUsage',\n      critical: true,\n      serverAuth: false,\n      clientAuth: false,\n      codeSigning: false,\n      emailProtection: false,\n      timeStamping: false\n    }]);\n    expect(function () {\n      return (0, main_1.validateSelfSignedCertificate)(certificate, keyPair);\n    }).toThrow('X509v3 Extended Key Usage: Code Signing not present');\n  });\n  it('throws when certificate public key does not match key pair', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var keyPair2 = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'Test'\n    });\n    expect(function () {\n      return (0, main_1.validateSelfSignedCertificate)(certificate, keyPair2);\n    }).toThrow('Certificate pubic key does not match key pair public key');\n  });\n  it('throws when private key does not match public key', function () {\n    var keyPair = (0, main_1.generateKeyPair)();\n    var keyPair2 = (0, main_1.generateKeyPair)();\n    var validityNotAfter = new Date();\n    validityNotAfter.setFullYear(validityNotAfter.getFullYear() + 1);\n    var certificate = (0, main_1.generateSelfSignedCodeSigningCertificate)({\n      keyPair: keyPair,\n      validityNotAfter: validityNotAfter,\n      validityNotBefore: new Date(),\n      commonName: 'Test'\n    });\n    var keyPairManual = {\n      publicKey: keyPair.publicKey,\n      privateKey: keyPair2.privateKey\n    };\n    expect(function () {\n      return (0, main_1.validateSelfSignedCertificate)(certificate, keyPairManual);\n    }).toThrow('keyPair key mismatch');\n  });\n});\ndescribe(main_1.signBufferRSASHA256AndVerify, function () {\n  it('signs and verifies', _asyncToGenerator(function* () {\n    var _yield$Promise$all = yield Promise.all([fs_1.promises.readFile(path_1.default.join(__dirname, './fixtures/test-private-key.pem'), 'utf8'), fs_1.promises.readFile(path_1.default.join(__dirname, './fixtures/test-certificate.pem'), 'utf8')]),\n      _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2),\n      privateKeyPEM = _yield$Promise$all2[0],\n      certificatePEM = _yield$Promise$all2[1];\n    var privateKey = (0, main_1.convertPrivateKeyPEMToPrivateKey)(privateKeyPEM);\n    var certificate = (0, main_1.convertCertificatePEMToCertificate)(certificatePEM);\n    var signature = (0, main_1.signBufferRSASHA256AndVerify)(privateKey, certificate, Buffer.from('hello', 'utf-8'));\n    expect(signature).toMatchSnapshot();\n  }));\n  test.each([['a', 'öäå']])('encoding assumption about node-forge: case %p', function (input) {\n    expect(Buffer.from(input).toString('binary')).toEqual(node_forge_1.util.encodeUtf8(input));\n    expect(Buffer.from(input, 'utf-8').toString('binary')).toEqual(node_forge_1.util.encodeUtf8(input));\n  });\n});\ndescribe('CSR generation and certificate generation from CA + CSR', function () {\n  it('generates a development certificate', _asyncToGenerator(function* () {\n    var _yield$Promise$all3 = yield Promise.all([fs_1.promises.readFile(path_1.default.join(__dirname, './fixtures/test-private-key.pem'), 'utf8'), fs_1.promises.readFile(path_1.default.join(__dirname, './fixtures/test-certificate.pem'), 'utf8')]),\n      _yield$Promise$all4 = _slicedToArray(_yield$Promise$all3, 2),\n      issuerPrivateKeyPEM = _yield$Promise$all4[0],\n      issuerCertificatePEM = _yield$Promise$all4[1];\n    var issuerPrivateKey = (0, main_1.convertPrivateKeyPEMToPrivateKey)(issuerPrivateKeyPEM);\n    var issuerCertificate = (0, main_1.convertCertificatePEMToCertificate)(issuerCertificatePEM);\n    var keyPair = (0, main_1.generateKeyPair)();\n    var csr1 = (0, main_1.generateCSR)(keyPair, 'Test common name');\n    var csrPEM = (0, main_1.convertCSRToCSRPEM)(csr1);\n    var csr = (0, main_1.convertCSRPEMToCSR)(csrPEM);\n    var certificate = (0, main_1.generateDevelopmentCertificateFromCSR)(issuerPrivateKey, issuerCertificate, csr, 'testApp', 'testScopeKey');\n    expect(issuerCertificate.verify(certificate)).toBe(true);\n    expect(certificate.subject.getField('CN').value).toEqual('Test common name');\n    expect(certificate.getExtension('keyUsage')).toMatchObject({\n      critical: true,\n      dataEncipherment: false,\n      digitalSignature: true,\n      id: '2.5.29.15',\n      keyCertSign: false,\n      keyEncipherment: false,\n      name: 'keyUsage',\n      nonRepudiation: false\n    });\n    expect(certificate.getExtension('extKeyUsage')).toMatchObject({\n      clientAuth: false,\n      codeSigning: true,\n      critical: true,\n      emailProtection: false,\n      id: '2.5.29.37',\n      name: 'extKeyUsage',\n      serverAuth: false,\n      timeStamping: false\n    });\n    expect(certificate.getExtension('expoProjectInformation')).toMatchObject({\n      name: 'expoProjectInformation',\n      id: main_1.expoProjectInformationOID,\n      value: 'testApp,testScopeKey'\n    });\n    expect(certificate.validity.notBefore.getTime()).toBeLessThanOrEqual(Date.now());\n    var expectedNotAfter = certificate.validity.notBefore;\n    expectedNotAfter.setDate(expectedNotAfter.getDate() + 30);\n    expect(certificate.validity.notAfter.getTime()).toEqual(expectedNotAfter.getTime());\n  }));\n});","map":{"version":3,"names":["fs_1","require","node_forge_1","path_1","__importDefault","main_1","describe","generateKeyPair","it","keyPair","expect","privateKey","toBeTruthy","publicKey","n","bitLength","toEqual","digest","md","sha256","create","update","verify","getBytes","sign","convertKeyPairToPEM","keyPairPEM","privateKeyPEM","publicKeyPEM","convertCertificateToCertificatePEM","validityNotAfter","Date","setFullYear","getFullYear","certificate","generateSelfSignedCodeSigningCertificate","validityNotBefore","commonName","convertKeyPairPEMToKeyPair","convertCertificatePEMToCertificate","toBe","getExtension","toMatchObject","critical","dataEncipherment","digitalSignature","id","keyCertSign","keyEncipherment","name","nonRepudiation","clientAuth","codeSigning","emailProtection","serverAuth","timeStamping","validateSelfSignedCertificate","not","toThrow","validity","setExtensions","keyPair2","keyPairManual","signBufferRSASHA256AndVerify","_asyncToGenerator","_yield$Promise$all","Promise","all","promises","readFile","default","join","__dirname","_yield$Promise$all2","_slicedToArray","certificatePEM","convertPrivateKeyPEMToPrivateKey","signature","Buffer","from","toMatchSnapshot","test","each","input","toString","util","encodeUtf8","_yield$Promise$all3","_yield$Promise$all4","issuerPrivateKeyPEM","issuerCertificatePEM","issuerPrivateKey","issuerCertificate","csr1","generateCSR","csrPEM","convertCSRToCSRPEM","csr","convertCSRPEMToCSR","generateDevelopmentCertificateFromCSR","subject","getField","value","expoProjectInformationOID","notBefore","getTime","toBeLessThanOrEqual","now","expectedNotAfter","setDate","getDate","notAfter"],"sources":["../../src/__tests__/main-test.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;AAAA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAC,eAAA,CAAAH,OAAA;AAEA,IAAAI,MAAA,GAAAJ,OAAA;AAiBAK,QAAQ,CAACD,MAAA,CAAAE,eAAe,EAAE,YAAK;EAC7BC,EAAE,CAAC,sBAAsB,EAAE,YAAK;IAC9B,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjCG,MAAM,CAACD,OAAO,CAACE,UAAU,CAAC,CAACC,UAAU,EAAE;IACvCF,MAAM,CAACD,OAAO,CAACI,SAAS,CAAC,CAACD,UAAU,EAAE;IACtCF,MAAM,CAACD,OAAO,CAACI,SAAS,CAACC,CAAC,CAACC,SAAS,EAAE,CAAC,CAACC,OAAO,CAAC,IAAI,CAAC;IAErD,IAAMC,MAAM,GAAGf,YAAA,CAAAgB,EAAE,CAACC,MAAM,CAACC,MAAM,EAAE,CAACC,MAAM,CAAC,OAAO,CAAC;IACjDX,MAAM,CACJD,OAAO,CAACI,SAAS,CAACS,MAAM,CAACL,MAAM,CAACA,MAAM,EAAE,CAACM,QAAQ,EAAE,EAAEd,OAAO,CAACE,UAAU,CAACa,IAAI,CAACP,MAAM,CAAC,CAAC,CACtF,CAACL,UAAU,EAAE;EAChB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFN,QAAQ,CAACD,MAAA,CAAAoB,mBAAmB,EAAE,YAAK;EACjCjB,EAAE,CAAC,0BAA0B,EAAE,YAAK;IAClC,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMmB,UAAU,GAAG,IAAArB,MAAA,CAAAoB,mBAAmB,EAAChB,OAAO,CAAC;IAC/CC,MAAM,CAACgB,UAAU,CAACC,aAAa,CAAC,CAACf,UAAU,EAAE;IAC7CF,MAAM,CAACgB,UAAU,CAACE,YAAY,CAAC,CAAChB,UAAU,EAAE;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFN,QAAQ,CAACD,MAAA,CAAAwB,kCAAkC,EAAE,YAAK;EAChDrB,EAAE,CAAC,6BAA6B,EAAE,YAAK;IACrC,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACF3B,MAAM,CAAC,IAAAL,MAAA,CAAAwB,kCAAkC,EAACK,WAAW,CAAC,CAAC,CAACtB,UAAU,EAAE;EACtE,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFN,QAAQ,CAACD,MAAA,CAAAiC,0BAA0B,EAAE,YAAK;EACxC9B,EAAE,CAAC,mCAAmC,EAAE,YAAK;IAC3C,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMmB,UAAU,GAAG,IAAArB,MAAA,CAAAoB,mBAAmB,EAAChB,OAAO,CAAC;IAC/CC,MAAM,CAAC,IAAAL,MAAA,CAAAiC,0BAA0B,EAACZ,UAAU,CAAC,CAAC,CAACd,UAAU,EAAE;EAC7D,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFN,QAAQ,CAACD,MAAA,CAAAkC,kCAAkC,EAAE,YAAK;EAChD/B,EAAE,CAAC,yCAAyC,EAAE,YAAK;IACjD,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACF3B,MAAM,CACJ,IAAAL,MAAA,CAAAkC,kCAAkC,EAAC,IAAAlC,MAAA,CAAAwB,kCAAkC,EAACK,WAAW,CAAC,CAAC,CACpF,CAACtB,UAAU,EAAE;EAChB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFN,QAAQ,CAACD,MAAA,CAAA8B,wCAAwC,EAAE,YAAK;EACtD3B,EAAE,CAAC,yCAAyC,EAAE,YAAK;IACjD,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IAEF3B,MAAM,CAACwB,WAAW,CAACZ,MAAM,CAACY,WAAW,CAAC,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC;IAElD9B,MAAM,CAACwB,WAAW,CAACO,YAAY,CAAC,UAAU,CAAC,CAAC,CAACC,aAAa,CAAC;MACzDC,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;MACvBC,gBAAgB,EAAE,IAAI;MACtBC,EAAE,EAAE,WAAW;MACfC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,UAAU;MAChBC,cAAc,EAAE;KACjB,CAAC;IACFxC,MAAM,CAACwB,WAAW,CAACO,YAAY,CAAC,aAAa,CAAC,CAAC,CAACC,aAAa,CAAC;MAC5DS,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,IAAI;MACjBT,QAAQ,EAAE,IAAI;MACdU,eAAe,EAAE,KAAK;MACtBP,EAAE,EAAE,WAAW;MACfG,IAAI,EAAE,aAAa;MACnBK,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE;KACf,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFjD,QAAQ,CAACD,MAAA,CAAAmD,6BAA6B,EAAE,YAAK;EAC3ChD,EAAE,CAAC,wFAAwF,EAAE,YAAK;IAChG,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACF3B,MAAM,CAAC;MAAA,OAAM,IAAAL,MAAA,CAAAmD,6BAA6B,EAACtB,WAAW,EAAEzB,OAAO,CAAC;IAAA,EAAC,CAACgD,GAAG,CAACC,OAAO,EAAE;EACjF,CAAC,CAAC;EAEFlD,EAAE,CAAC,oCAAoC,EAAE,YAAK;IAC5C,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnC,IAAM4B,QAAQ,GAAG,IAAI5B,IAAI,EAAE;IAC3B4B,QAAQ,CAAC3B,WAAW,CAAC2B,QAAQ,CAAC1B,WAAW,EAAE,GAAG,CAAC,CAAC;IAChD,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAEuB,QAAQ;MAC3BtB,UAAU,EAAE;KACb,CAAC;IACF3B,MAAM,CAAC;MAAA,OAAM,IAAAL,MAAA,CAAAmD,6BAA6B,EAACtB,WAAW,EAAEzB,OAAO,CAAC;IAAA,EAAC,CAACiD,OAAO,CACvE,8BAA8B,CAC/B;EACH,CAAC,CAAC;EAEFlD,EAAE,CAAC,8BAA8B,EAAE,YAAK;IACtC,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACFH,WAAW,CAAC0B,aAAa,CAAC,CACxB;MACEX,IAAI,EAAE,UAAU;MAChBN,QAAQ,EAAE,IAAI;MACdI,WAAW,EAAE,KAAK;MAClBF,gBAAgB,EAAE,KAAK;MACvBK,cAAc,EAAE,KAAK;MACrBF,eAAe,EAAE,KAAK;MACtBJ,gBAAgB,EAAE;KACnB,CACF,CAAC;IACFlC,MAAM,CAAC;MAAA,OAAM,IAAAL,MAAA,CAAAmD,6BAA6B,EAACtB,WAAW,EAAEzB,OAAO,CAAC;IAAA,EAAC,CAACiD,OAAO,CACvE,iDAAiD,CAClD;EACH,CAAC,CAAC;EAEFlD,EAAE,CAAC,iCAAiC,EAAE,YAAK;IACzC,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACFH,WAAW,CAAC0B,aAAa,CAAC,CACxB;MACEX,IAAI,EAAE,UAAU;MAChBN,QAAQ,EAAE,IAAI;MACdI,WAAW,EAAE,KAAK;MAClBF,gBAAgB,EAAE,IAAI;MACtBK,cAAc,EAAE,KAAK;MACrBF,eAAe,EAAE,KAAK;MACtBJ,gBAAgB,EAAE;KACnB,EACD;MACEK,IAAI,EAAE,aAAa;MACnBN,QAAQ,EAAE,IAAI;MACdW,UAAU,EAAE,KAAK;MACjBH,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE,KAAK;MACtBE,YAAY,EAAE;KACf,CACF,CAAC;IACF7C,MAAM,CAAC;MAAA,OAAM,IAAAL,MAAA,CAAAmD,6BAA6B,EAACtB,WAAW,EAAEzB,OAAO,CAAC;IAAA,EAAC,CAACiD,OAAO,CACvE,qDAAqD,CACtD;EACH,CAAC,CAAC;EAEFlD,EAAE,CAAC,4DAA4D,EAAE,YAAK;IACpE,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMsD,QAAQ,GAAG,IAAAxD,MAAA,CAAAE,eAAe,GAAE;IAClC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACF3B,MAAM,CAAC;MAAA,OAAM,IAAAL,MAAA,CAAAmD,6BAA6B,EAACtB,WAAW,EAAE2B,QAAQ,CAAC;IAAA,EAAC,CAACH,OAAO,CACxE,0DAA0D,CAC3D;EACH,CAAC,CAAC;EAEFlD,EAAE,CAAC,mDAAmD,EAAE,YAAK;IAC3D,IAAMC,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMsD,QAAQ,GAAG,IAAAxD,MAAA,CAAAE,eAAe,GAAE;IAClC,IAAMuB,gBAAgB,GAAG,IAAIC,IAAI,EAAE;IACnCD,gBAAgB,CAACE,WAAW,CAACF,gBAAgB,CAACG,WAAW,EAAE,GAAG,CAAC,CAAC;IAChE,IAAMC,WAAW,GAAG,IAAA7B,MAAA,CAAA8B,wCAAwC,EAAC;MAC3D1B,OAAO,EAAPA,OAAO;MACPqB,gBAAgB,EAAhBA,gBAAgB;MAChBM,iBAAiB,EAAE,IAAIL,IAAI,EAAE;MAC7BM,UAAU,EAAE;KACb,CAAC;IACF,IAAMyB,aAAa,GAAG;MACpBjD,SAAS,EAAEJ,OAAO,CAACI,SAAS;MAC5BF,UAAU,EAAEkD,QAAQ,CAAClD;KACtB;IACDD,MAAM,CAAC;MAAA,OAAM,IAAAL,MAAA,CAAAmD,6BAA6B,EAACtB,WAAW,EAAE4B,aAAa,CAAC;IAAA,EAAC,CAACJ,OAAO,CAC7E,sBAAsB,CACvB;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFpD,QAAQ,CAACD,MAAA,CAAA0D,4BAA4B,EAAE,YAAK;EAC1CvD,EAAE,CAAC,oBAAoB,EAAAwD,iBAAA,CAAE,aAAW;IAClC,IAAAC,kBAAA,SAA8CC,OAAO,CAACC,GAAG,CAAC,CACxDnE,IAAA,CAAAoE,QAAE,CAACC,QAAQ,CAAClE,MAAA,CAAAmE,OAAI,CAACC,IAAI,CAACC,SAAS,EAAE,iCAAiC,CAAC,EAAE,MAAM,CAAC,EAC5ExE,IAAA,CAAAoE,QAAE,CAACC,QAAQ,CAAClE,MAAA,CAAAmE,OAAI,CAACC,IAAI,CAACC,SAAS,EAAE,iCAAiC,CAAC,EAAE,MAAM,CAAC,CAC7E,CAAC;MAAAC,mBAAA,GAAAC,cAAA,CAAAT,kBAAA;MAHKtC,aAAa,GAAA8C,mBAAA;MAAEE,cAAc,GAAAF,mBAAA;IAIpC,IAAM9D,UAAU,GAAG,IAAAN,MAAA,CAAAuE,gCAAgC,EAACjD,aAAa,CAAC;IAClE,IAAMO,WAAW,GAAG,IAAA7B,MAAA,CAAAkC,kCAAkC,EAACoC,cAAc,CAAC;IACtE,IAAME,SAAS,GAAG,IAAAxE,MAAA,CAAA0D,4BAA4B,EAC5CpD,UAAU,EACVuB,WAAW,EACX4C,MAAM,CAACC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAC9B;IACDrE,MAAM,CAACmE,SAAS,CAAC,CAACG,eAAe,EAAE;EACrC,CAAC,EAAC;EAEFC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,+CAA+C,EAAE,UAACC,KAAK,EAAI;IACnFzE,MAAM,CAACoE,MAAM,CAACC,IAAI,CAACI,KAAK,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAACpE,OAAO,CAACd,YAAA,CAAAmF,IAAI,CAACC,UAAU,CAACH,KAAK,CAAC,CAAC;IAC7EzE,MAAM,CAACoE,MAAM,CAACC,IAAI,CAACI,KAAK,EAAE,OAAO,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAACpE,OAAO,CAACd,YAAA,CAAAmF,IAAI,CAACC,UAAU,CAACH,KAAK,CAAC,CAAC;EACxF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF7E,QAAQ,CAAC,yDAAyD,EAAE,YAAK;EACvEE,EAAE,CAAC,qCAAqC,EAAAwD,iBAAA,CAAE,aAAW;IACnD,IAAAuB,mBAAA,SAA0DrB,OAAO,CAACC,GAAG,CAAC,CACpEnE,IAAA,CAAAoE,QAAE,CAACC,QAAQ,CAAClE,MAAA,CAAAmE,OAAI,CAACC,IAAI,CAACC,SAAS,EAAE,iCAAiC,CAAC,EAAE,MAAM,CAAC,EAC5ExE,IAAA,CAAAoE,QAAE,CAACC,QAAQ,CAAClE,MAAA,CAAAmE,OAAI,CAACC,IAAI,CAACC,SAAS,EAAE,iCAAiC,CAAC,EAAE,MAAM,CAAC,CAC7E,CAAC;MAAAgB,mBAAA,GAAAd,cAAA,CAAAa,mBAAA;MAHKE,mBAAmB,GAAAD,mBAAA;MAAEE,oBAAoB,GAAAF,mBAAA;IAIhD,IAAMG,gBAAgB,GAAG,IAAAtF,MAAA,CAAAuE,gCAAgC,EAACa,mBAAmB,CAAC;IAC9E,IAAMG,iBAAiB,GAAG,IAAAvF,MAAA,CAAAkC,kCAAkC,EAACmD,oBAAoB,CAAC;IAElF,IAAMjF,OAAO,GAAG,IAAAJ,MAAA,CAAAE,eAAe,GAAE;IACjC,IAAMsF,IAAI,GAAG,IAAAxF,MAAA,CAAAyF,WAAW,EAACrF,OAAO,EAAE,kBAAkB,CAAC;IAErD,IAAMsF,MAAM,GAAG,IAAA1F,MAAA,CAAA2F,kBAAkB,EAACH,IAAI,CAAC;IACvC,IAAMI,GAAG,GAAG,IAAA5F,MAAA,CAAA6F,kBAAkB,EAACH,MAAM,CAAC;IAEtC,IAAM7D,WAAW,GAAG,IAAA7B,MAAA,CAAA8F,qCAAqC,EACvDR,gBAAgB,EAChBC,iBAAiB,EACjBK,GAAG,EACH,SAAS,EACT,cAAc,CACf;IAGDvF,MAAM,CAACkF,iBAAiB,CAACtE,MAAM,CAACY,WAAW,CAAC,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC;IAExD9B,MAAM,CAACwB,WAAW,CAACkE,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAACtF,OAAO,CAAC,kBAAkB,CAAC;IAE5EN,MAAM,CAACwB,WAAW,CAACO,YAAY,CAAC,UAAU,CAAC,CAAC,CAACC,aAAa,CAAC;MACzDC,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;MACvBC,gBAAgB,EAAE,IAAI;MACtBC,EAAE,EAAE,WAAW;MACfC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE,KAAK;MACtBC,IAAI,EAAE,UAAU;MAChBC,cAAc,EAAE;KACjB,CAAC;IACFxC,MAAM,CAACwB,WAAW,CAACO,YAAY,CAAC,aAAa,CAAC,CAAC,CAACC,aAAa,CAAC;MAC5DS,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,IAAI;MACjBT,QAAQ,EAAE,IAAI;MACdU,eAAe,EAAE,KAAK;MACtBP,EAAE,EAAE,WAAW;MACfG,IAAI,EAAE,aAAa;MACnBK,UAAU,EAAE,KAAK;MACjBC,YAAY,EAAE;KACf,CAAC;IACF7C,MAAM,CAACwB,WAAW,CAACO,YAAY,CAAC,wBAAwB,CAAC,CAAC,CAACC,aAAa,CAAC;MACvEO,IAAI,EAAE,wBAAwB;MAC9BH,EAAE,EAAEzC,MAAA,CAAAkG,yBAAyB;MAC7BD,KAAK,EAAE;KACR,CAAC;IACF5F,MAAM,CAACwB,WAAW,CAACyB,QAAQ,CAAC6C,SAAS,CAACC,OAAO,EAAE,CAAC,CAACC,mBAAmB,CAAC3E,IAAI,CAAC4E,GAAG,EAAE,CAAC;IAEhF,IAAMC,gBAAgB,GAAG1E,WAAW,CAACyB,QAAQ,CAAC6C,SAAS;IACvDI,gBAAgB,CAACC,OAAO,CAACD,gBAAgB,CAACE,OAAO,EAAE,GAAG,EAAE,CAAC;IACzDpG,MAAM,CAACwB,WAAW,CAACyB,QAAQ,CAACoD,QAAQ,CAACN,OAAO,EAAE,CAAC,CAACzF,OAAO,CAAC4F,gBAAgB,CAACH,OAAO,EAAE,CAAC;EACrF,CAAC,EAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}