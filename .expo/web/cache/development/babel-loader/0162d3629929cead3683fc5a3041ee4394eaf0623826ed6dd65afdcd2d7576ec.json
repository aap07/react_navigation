{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unsafeTemplate = unsafeTemplate;\nfunction unsafeTemplate(strings) {\n  for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n  return function () {\n    for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      values[_key2] = arguments[_key2];\n    }\n    var lastValue = values[values.length - 1];\n    var dict = typeof lastValue === \"object\" ? lastValue : {};\n    var result = [strings[0]];\n    keys.forEach(function (key, i) {\n      var value = typeof key === \"number\" && Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value, strings[i + 1]);\n    });\n    return result.join(\"\");\n  };\n}","map":{"version":3,"names":["unsafeTemplate","strings","_len","arguments","length","keys","Array","_key","_len2","values","_key2","lastValue","dict","result","forEach","key","i","value","Number","isInteger","push","join"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\template.ts"],"sourcesContent":["/**\n * Simple unsafe interpolation for template strings. Does NOT escape values.\n *\n * Arguments can be named or numeric.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates\n *\n * @example\n * const t1Closure = unsafeTemplate`${0}${1}${0}!`;\n * // const t1Closure = unsafeTemplate([\"\",\"\",\"\",\"!\"],0,1,0);\n * t1Closure(\"Y\", \"A\"); // \"YAY!\"\n *\n * @example\n * const t2Closure = unsafeTemplate`${0} ${\"foo\"}!`;\n * // const t2Closure = unsafeTemplate([\"\",\" \",\"!\"],0,\"foo\");\n * t2Closure(\"Hello\", { foo: \"World\" }); // \"Hello World!\"\n *\n * @example\n * const t3Closure = unsafeTemplate`I'm ${\"name\"}. I'm almost ${\"age\"} years old.`;\n * // const t3Closure = unsafeTemplate([\"I'm \", \". I'm almost \", \" years old.\"], \"name\", \"age\");\n * t3Closure(\"foo\", { name: \"MDN\", age: 30 }); // \"I'm MDN. I'm almost 30 years old.\"\n * t3Closure({ name: \"MDN\", age: 30 }); // \"I'm MDN. I'm almost 30 years old.\"\n */\nexport function unsafeTemplate(strings: TemplateStringsArray, ...keys: (string | number)[]) {\n  return (\n    ...values: (string | number)[] | [...(string | number)[], Record<string | number, string>]\n  ) => {\n    const lastValue = values[values.length - 1];\n    const dict = typeof lastValue === 'object' ? lastValue : {};\n    const result = [strings[0]];\n    keys.forEach((key, i) => {\n      const value = typeof key === 'number' && Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value as string, strings[i + 1]);\n    });\n    return result.join('');\n  };\n}\n"],"mappings":"AAuBA;;;;;QAAgBA,cAAc,GAAdA,cAAc;AAAvB,SAASA,cAAcA,CAACC,OAA6B,EAAgC;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAA3BC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EACnE,OAAO,YAEF;IAAA,SAAAC,KAAA,GAAAL,SAAA,CAAAC,MAAA,EADAK,MAAM,OAAAH,KAAA,CAAAE,KAAA,GAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;MAAND,MAAM,CAAAC,KAAA,IAAAP,SAAA,CAAAO,KAAA;IAAA;IAET,IAAMC,SAAS,GAAGF,MAAM,CAACA,MAAM,CAACL,MAAM,GAAG,CAAC,CAAC;IAC3C,IAAMQ,IAAI,GAAG,OAAOD,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAG,EAAE;IAC3D,IAAME,MAAM,GAAG,CAACZ,OAAO,CAAC,CAAC,CAAC,CAAC;IAC3BI,IAAI,CAACS,OAAO,CAAC,UAACC,GAAG,EAAEC,CAAC,EAAK;MACvB,IAAMC,KAAK,GAAG,OAAOF,GAAG,KAAK,QAAQ,IAAIG,MAAM,CAACC,SAAS,CAACJ,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC,GAAGH,IAAI,CAACG,GAAG,CAAC;MACxFF,MAAM,CAACO,IAAI,CAACH,KAAK,EAAYhB,OAAO,CAACe,CAAC,GAAG,CAAC,CAAC,CAAC;KAC7C,CAAC;IACF,OAAOH,MAAM,CAACQ,IAAI,CAAC,EAAE,CAAC;GACvB"},"metadata":{},"sourceType":"script","externalDependencies":[]}