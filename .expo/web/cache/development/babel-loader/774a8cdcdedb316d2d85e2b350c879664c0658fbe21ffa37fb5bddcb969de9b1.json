{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar _require = require('stream'),\n  Writable = _require.Writable;\nvar PerMessageDeflate = require(\"./permessage-deflate\");\nvar _require2 = require(\"./constants\"),\n  BINARY_TYPES = _require2.BINARY_TYPES,\n  EMPTY_BUFFER = _require2.EMPTY_BUFFER,\n  kStatusCode = _require2.kStatusCode,\n  kWebSocket = _require2.kWebSocket;\nvar _require3 = require(\"./buffer-util\"),\n  concat = _require3.concat,\n  toArrayBuffer = _require3.toArrayBuffer,\n  unmask = _require3.unmask;\nvar _require4 = require(\"./validation\"),\n  isValidStatusCode = _require4.isValidStatusCode,\n  isValidUTF8 = _require4.isValidUTF8;\nvar FastBuffer = Buffer[Symbol.species];\nvar promise = Promise.resolve();\nvar queueTask = typeof queueMicrotask === 'function' ? queueMicrotask : queueMicrotaskShim;\nvar GET_INFO = 0;\nvar GET_PAYLOAD_LENGTH_16 = 1;\nvar GET_PAYLOAD_LENGTH_64 = 2;\nvar GET_MASK = 3;\nvar GET_DATA = 4;\nvar INFLATING = 5;\nvar WAIT_MICROTASK = 6;\nvar Receiver = function (_Writable) {\n  _inherits(Receiver, _Writable);\n  var _super = _createSuper(Receiver);\n  function Receiver() {\n    var _this;\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Receiver);\n    _this = _super.call(this);\n    _this._binaryType = options.binaryType || BINARY_TYPES[0];\n    _this._extensions = options.extensions || {};\n    _this._isServer = !!options.isServer;\n    _this._maxPayload = options.maxPayload | 0;\n    _this._skipUTF8Validation = !!options.skipUTF8Validation;\n    _this[kWebSocket] = undefined;\n    _this._bufferedBytes = 0;\n    _this._buffers = [];\n    _this._compressed = false;\n    _this._payloadLength = 0;\n    _this._mask = undefined;\n    _this._fragmented = 0;\n    _this._masked = false;\n    _this._fin = false;\n    _this._opcode = 0;\n    _this._totalPayloadLength = 0;\n    _this._messageLength = 0;\n    _this._fragments = [];\n    _this._state = GET_INFO;\n    _this._loop = false;\n    return _this;\n  }\n  _createClass(Receiver, [{\n    key: \"_write\",\n    value: function _write(chunk, encoding, cb) {\n      if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n      this._bufferedBytes += chunk.length;\n      this._buffers.push(chunk);\n      this.startLoop(cb);\n    }\n  }, {\n    key: \"consume\",\n    value: function consume(n) {\n      this._bufferedBytes -= n;\n      if (n === this._buffers[0].length) return this._buffers.shift();\n      if (n < this._buffers[0].length) {\n        var buf = this._buffers[0];\n        this._buffers[0] = new FastBuffer(buf.buffer, buf.byteOffset + n, buf.length - n);\n        return new FastBuffer(buf.buffer, buf.byteOffset, n);\n      }\n      var dst = Buffer.allocUnsafe(n);\n      do {\n        var _buf = this._buffers[0];\n        var offset = dst.length - n;\n        if (n >= _buf.length) {\n          dst.set(this._buffers.shift(), offset);\n        } else {\n          dst.set(new Uint8Array(_buf.buffer, _buf.byteOffset, n), offset);\n          this._buffers[0] = new FastBuffer(_buf.buffer, _buf.byteOffset + n, _buf.length - n);\n        }\n        n -= _buf.length;\n      } while (n > 0);\n      return dst;\n    }\n  }, {\n    key: \"startLoop\",\n    value: function startLoop(cb) {\n      var _this2 = this;\n      var err;\n      this._loop = true;\n      do {\n        switch (this._state) {\n          case GET_INFO:\n            err = this.getInfo();\n            break;\n          case GET_PAYLOAD_LENGTH_16:\n            err = this.getPayloadLength16();\n            break;\n          case GET_PAYLOAD_LENGTH_64:\n            err = this.getPayloadLength64();\n            break;\n          case GET_MASK:\n            this.getMask();\n            break;\n          case GET_DATA:\n            err = this.getData(cb);\n            break;\n          case INFLATING:\n            this._loop = false;\n            return;\n          default:\n            this._loop = false;\n            queueTask(function () {\n              _this2._state = GET_INFO;\n              _this2.startLoop(cb);\n            });\n            return;\n        }\n      } while (this._loop);\n      cb(err);\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo() {\n      if (this._bufferedBytes < 2) {\n        this._loop = false;\n        return;\n      }\n      var buf = this.consume(2);\n      if ((buf[0] & 0x30) !== 0x00) {\n        this._loop = false;\n        return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_2_3');\n      }\n      var compressed = (buf[0] & 0x40) === 0x40;\n      if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n      }\n      this._fin = (buf[0] & 0x80) === 0x80;\n      this._opcode = buf[0] & 0x0f;\n      this._payloadLength = buf[1] & 0x7f;\n      if (this._opcode === 0x00) {\n        if (compressed) {\n          this._loop = false;\n          return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n        }\n        if (!this._fragmented) {\n          this._loop = false;\n          return error(RangeError, 'invalid opcode 0', true, 1002, 'WS_ERR_INVALID_OPCODE');\n        }\n        this._opcode = this._fragmented;\n      } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n        if (this._fragmented) {\n          this._loop = false;\n          return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');\n        }\n        this._compressed = compressed;\n      } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n        if (!this._fin) {\n          this._loop = false;\n          return error(RangeError, 'FIN must be set', true, 1002, 'WS_ERR_EXPECTED_FIN');\n        }\n        if (compressed) {\n          this._loop = false;\n          return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n        }\n        if (this._payloadLength > 0x7d || this._opcode === 0x08 && this._payloadLength === 1) {\n          this._loop = false;\n          return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');\n        }\n      } else {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');\n      }\n      if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n      this._masked = (buf[1] & 0x80) === 0x80;\n      if (this._isServer) {\n        if (!this._masked) {\n          this._loop = false;\n          return error(RangeError, 'MASK must be set', true, 1002, 'WS_ERR_EXPECTED_MASK');\n        }\n      } else if (this._masked) {\n        this._loop = false;\n        return error(RangeError, 'MASK must be clear', true, 1002, 'WS_ERR_UNEXPECTED_MASK');\n      }\n      if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;else return this.haveLength();\n    }\n  }, {\n    key: \"getPayloadLength16\",\n    value: function getPayloadLength16() {\n      if (this._bufferedBytes < 2) {\n        this._loop = false;\n        return;\n      }\n      this._payloadLength = this.consume(2).readUInt16BE(0);\n      return this.haveLength();\n    }\n  }, {\n    key: \"getPayloadLength64\",\n    value: function getPayloadLength64() {\n      if (this._bufferedBytes < 8) {\n        this._loop = false;\n        return;\n      }\n      var buf = this.consume(8);\n      var num = buf.readUInt32BE(0);\n      if (num > Math.pow(2, 53 - 32) - 1) {\n        this._loop = false;\n        return error(RangeError, 'Unsupported WebSocket frame: payload length > 2^53 - 1', false, 1009, 'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH');\n      }\n      this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n      return this.haveLength();\n    }\n  }, {\n    key: \"haveLength\",\n    value: function haveLength() {\n      if (this._payloadLength && this._opcode < 0x08) {\n        this._totalPayloadLength += this._payloadLength;\n        if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n          this._loop = false;\n          return error(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');\n        }\n      }\n      if (this._masked) this._state = GET_MASK;else this._state = GET_DATA;\n    }\n  }, {\n    key: \"getMask\",\n    value: function getMask() {\n      if (this._bufferedBytes < 4) {\n        this._loop = false;\n        return;\n      }\n      this._mask = this.consume(4);\n      this._state = GET_DATA;\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(cb) {\n      var data = EMPTY_BUFFER;\n      if (this._payloadLength) {\n        if (this._bufferedBytes < this._payloadLength) {\n          this._loop = false;\n          return;\n        }\n        data = this.consume(this._payloadLength);\n        if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) {\n          unmask(data, this._mask);\n        }\n      }\n      if (this._opcode > 0x07) return this.controlMessage(data);\n      if (this._compressed) {\n        this._state = INFLATING;\n        this.decompress(data, cb);\n        return;\n      }\n      if (data.length) {\n        this._messageLength = this._totalPayloadLength;\n        this._fragments.push(data);\n      }\n      return this.dataMessage();\n    }\n  }, {\n    key: \"decompress\",\n    value: function decompress(data, cb) {\n      var _this3 = this;\n      var perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n      perMessageDeflate.decompress(data, this._fin, function (err, buf) {\n        if (err) return cb(err);\n        if (buf.length) {\n          _this3._messageLength += buf.length;\n          if (_this3._messageLength > _this3._maxPayload && _this3._maxPayload > 0) {\n            return cb(error(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'));\n          }\n          _this3._fragments.push(buf);\n        }\n        var er = _this3.dataMessage();\n        if (er) return cb(er);\n        _this3.startLoop(cb);\n      });\n    }\n  }, {\n    key: \"dataMessage\",\n    value: function dataMessage() {\n      if (this._fin) {\n        var messageLength = this._messageLength;\n        var fragments = this._fragments;\n        this._totalPayloadLength = 0;\n        this._messageLength = 0;\n        this._fragmented = 0;\n        this._fragments = [];\n        if (this._opcode === 2) {\n          var data;\n          if (this._binaryType === 'nodebuffer') {\n            data = concat(fragments, messageLength);\n          } else if (this._binaryType === 'arraybuffer') {\n            data = toArrayBuffer(concat(fragments, messageLength));\n          } else {\n            data = fragments;\n          }\n          this.emit('message', data, true);\n        } else {\n          var buf = concat(fragments, messageLength);\n          if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n            this._loop = false;\n            return error(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');\n          }\n          this.emit('message', buf, false);\n        }\n      }\n      this._state = WAIT_MICROTASK;\n    }\n  }, {\n    key: \"controlMessage\",\n    value: function controlMessage(data) {\n      if (this._opcode === 0x08) {\n        this._loop = false;\n        if (data.length === 0) {\n          this.emit('conclude', 1005, EMPTY_BUFFER);\n          this.end();\n          this._state = GET_INFO;\n        } else {\n          var code = data.readUInt16BE(0);\n          if (!isValidStatusCode(code)) {\n            return error(RangeError, `invalid status code ${code}`, true, 1002, 'WS_ERR_INVALID_CLOSE_CODE');\n          }\n          var buf = new FastBuffer(data.buffer, data.byteOffset + 2, data.length - 2);\n          if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n            return error(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');\n          }\n          this.emit('conclude', code, buf);\n          this.end();\n          this._state = GET_INFO;\n        }\n      } else if (this._opcode === 0x09) {\n        this.emit('ping', data);\n        this._state = WAIT_MICROTASK;\n      } else {\n        this.emit('pong', data);\n        this._state = WAIT_MICROTASK;\n      }\n    }\n  }]);\n  return Receiver;\n}(Writable);\nmodule.exports = Receiver;\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  var err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\nfunction queueMicrotaskShim(cb) {\n  promise.then(cb).catch(throwErrorNextTick);\n}\nfunction throwError(err) {\n  throw err;\n}\nfunction throwErrorNextTick(err) {\n  process.nextTick(throwError, err);\n}","map":{"version":3,"names":["_classCallCheck","require","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","_require","Writable","PerMessageDeflate","_require2","BINARY_TYPES","EMPTY_BUFFER","kStatusCode","kWebSocket","_require3","concat","toArrayBuffer","unmask","_require4","isValidStatusCode","isValidUTF8","FastBuffer","Buffer","Symbol","species","promise","Promise","resolve","queueTask","queueMicrotask","queueMicrotaskShim","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","WAIT_MICROTASK","Receiver","_Writable","_super","_this","options","length","undefined","_binaryType","binaryType","_extensions","extensions","_isServer","isServer","_maxPayload","maxPayload","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_mask","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","key","value","_write","chunk","encoding","cb","push","startLoop","consume","n","shift","buf","buffer","byteOffset","dst","allocUnsafe","offset","set","Uint8Array","_this2","err","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","error","RangeError","compressed","extensionName","haveLength","readUInt16BE","num","readUInt32BE","Math","pow","data","controlMessage","decompress","dataMessage","_this3","perMessageDeflate","er","messageLength","fragments","emit","Error","end","code","module","exports","ErrorCtor","message","prefix","statusCode","errorCode","captureStackTrace","then","catch","throwErrorNextTick","throwError","process","nextTick"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/cli/node_modules/ws/lib/receiver.js"],"sourcesContent":["'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst promise = Promise.resolve();\n\n//\n// `queueMicrotask()` is not available in Node.js < 11.\n//\nconst queueTask =\n  typeof queueMicrotask === 'function' ? queueMicrotask : queueMicrotaskShim;\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst WAIT_MICROTASK = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        case INFLATING:\n          this._loop = false;\n          return;\n        default:\n          //\n          // `WAIT_MICROTASK`.\n          //\n          this._loop = false;\n\n          queueTask(() => {\n            this._state = GET_INFO;\n            this.startLoop(cb);\n          });\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = WAIT_MICROTASK;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n\n        this._state = GET_INFO;\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n\n        this._state = GET_INFO;\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n      this._state = WAIT_MICROTASK;\n    } else {\n      this.emit('pong', data);\n      this._state = WAIT_MICROTASK;\n    }\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n\n/**\n * A shim for `queueMicrotask()`.\n *\n * @param {Function} cb Callback\n */\nfunction queueMicrotaskShim(cb) {\n  promise.then(cb).catch(throwErrorNextTick);\n}\n\n/**\n * Throws an error.\n *\n * @param {Error} err The error to throw\n * @private\n */\nfunction throwError(err) {\n  throw err;\n}\n\n/**\n * Throws an error in the next tick.\n *\n * @param {Error} err The error to throw\n * @private\n */\nfunction throwErrorNextTick(err) {\n  process.nextTick(throwError, err);\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAAA,IAAAE,SAAA,GAAAF,OAAA;AAAA,IAAAG,0BAAA,GAAAH,OAAA;AAAA,IAAAI,eAAA,GAAAJ,OAAA;AAAA,SAAAK,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAN,eAAA,CAAAE,OAAA,GAAAK,MAAA,MAAAJ,yBAAA,QAAAK,SAAA,GAAAR,eAAA,OAAAS,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAD,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAb,0BAAA,OAAAQ,MAAA;AAAA,SAAAH,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAI,CAAA;AAEb,IAAAC,QAAA,GAAqBzB,OAAO,CAAC,QAAQ,CAAC;EAA9B0B,QAAQ,GAAAD,QAAA,CAARC,QAAQ;AAEhB,IAAMC,iBAAiB,GAAG3B,OAAO,uBAAuB,CAAC;AACzD,IAAA4B,SAAA,GAKI5B,OAAO,cAAc,CAAC;EAJxB6B,YAAY,GAAAD,SAAA,CAAZC,YAAY;EACZC,YAAY,GAAAF,SAAA,CAAZE,YAAY;EACZC,WAAW,GAAAH,SAAA,CAAXG,WAAW;EACXC,UAAU,GAAAJ,SAAA,CAAVI,UAAU;AAEZ,IAAAC,SAAA,GAA0CjC,OAAO,gBAAgB,CAAC;EAA1DkC,MAAM,GAAAD,SAAA,CAANC,MAAM;EAAEC,aAAa,GAAAF,SAAA,CAAbE,aAAa;EAAEC,MAAM,GAAAH,SAAA,CAANG,MAAM;AACrC,IAAAC,SAAA,GAA2CrC,OAAO,eAAe,CAAC;EAA1DsC,iBAAiB,GAAAD,SAAA,CAAjBC,iBAAiB;EAAEC,WAAW,GAAAF,SAAA,CAAXE,WAAW;AAEtC,IAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC;AACzC,IAAMC,OAAO,GAAGC,OAAO,CAACC,OAAO,CAAC,CAAC;AAKjC,IAAMC,SAAS,GACb,OAAOC,cAAc,KAAK,UAAU,GAAGA,cAAc,GAAGC,kBAAkB;AAE5E,IAAMC,QAAQ,GAAG,CAAC;AAClB,IAAMC,qBAAqB,GAAG,CAAC;AAC/B,IAAMC,qBAAqB,GAAG,CAAC;AAC/B,IAAMC,QAAQ,GAAG,CAAC;AAClB,IAAMC,QAAQ,GAAG,CAAC;AAClB,IAAMC,SAAS,GAAG,CAAC;AACnB,IAAMC,cAAc,GAAG,CAAC;AAAC,IAOnBC,QAAQ,aAAAC,SAAA;EAAAxD,SAAA,CAAAuD,QAAA,EAAAC,SAAA;EAAA,IAAAC,MAAA,GAAAtD,YAAA,CAAAoD,QAAA;EAcZ,SAAAA,SAAA,EAA0B;IAAA,IAAAG,KAAA;IAAA,IAAdC,OAAO,GAAA7C,SAAA,CAAA8C,MAAA,QAAA9C,SAAA,QAAA+C,SAAA,GAAA/C,SAAA,MAAG,CAAC,CAAC;IAAAjB,eAAA,OAAA0D,QAAA;IACtBG,KAAA,GAAAD,MAAA,CAAApC,IAAA;IAEAqC,KAAA,CAAKI,WAAW,GAAGH,OAAO,CAACI,UAAU,IAAIpC,YAAY,CAAC,CAAC,CAAC;IACxD+B,KAAA,CAAKM,WAAW,GAAGL,OAAO,CAACM,UAAU,IAAI,CAAC,CAAC;IAC3CP,KAAA,CAAKQ,SAAS,GAAG,CAAC,CAACP,OAAO,CAACQ,QAAQ;IACnCT,KAAA,CAAKU,WAAW,GAAGT,OAAO,CAACU,UAAU,GAAG,CAAC;IACzCX,KAAA,CAAKY,mBAAmB,GAAG,CAAC,CAACX,OAAO,CAACY,kBAAkB;IACvDb,KAAA,CAAK5B,UAAU,CAAC,GAAG+B,SAAS;IAE5BH,KAAA,CAAKc,cAAc,GAAG,CAAC;IACvBd,KAAA,CAAKe,QAAQ,GAAG,EAAE;IAElBf,KAAA,CAAKgB,WAAW,GAAG,KAAK;IACxBhB,KAAA,CAAKiB,cAAc,GAAG,CAAC;IACvBjB,KAAA,CAAKkB,KAAK,GAAGf,SAAS;IACtBH,KAAA,CAAKmB,WAAW,GAAG,CAAC;IACpBnB,KAAA,CAAKoB,OAAO,GAAG,KAAK;IACpBpB,KAAA,CAAKqB,IAAI,GAAG,KAAK;IACjBrB,KAAA,CAAKsB,OAAO,GAAG,CAAC;IAEhBtB,KAAA,CAAKuB,mBAAmB,GAAG,CAAC;IAC5BvB,KAAA,CAAKwB,cAAc,GAAG,CAAC;IACvBxB,KAAA,CAAKyB,UAAU,GAAG,EAAE;IAEpBzB,KAAA,CAAK0B,MAAM,GAAGpC,QAAQ;IACtBU,KAAA,CAAK2B,KAAK,GAAG,KAAK;IAAC,OAAA3B,KAAA;EACrB;EAAC3D,YAAA,CAAAwD,QAAA;IAAA+B,GAAA;IAAAC,KAAA,EAUD,SAAAC,OAAOC,KAAK,EAAEC,QAAQ,EAAEC,EAAE,EAAE;MAC1B,IAAI,IAAI,CAACX,OAAO,KAAK,IAAI,IAAI,IAAI,CAACI,MAAM,IAAIpC,QAAQ,EAAE,OAAO2C,EAAE,CAAC,CAAC;MAEjE,IAAI,CAACnB,cAAc,IAAIiB,KAAK,CAAC7B,MAAM;MACnC,IAAI,CAACa,QAAQ,CAACmB,IAAI,CAACH,KAAK,CAAC;MACzB,IAAI,CAACI,SAAS,CAACF,EAAE,CAAC;IACpB;EAAC;IAAAL,GAAA;IAAAC,KAAA,EASD,SAAAO,QAAQC,CAAC,EAAE;MACT,IAAI,CAACvB,cAAc,IAAIuB,CAAC;MAExB,IAAIA,CAAC,KAAK,IAAI,CAACtB,QAAQ,CAAC,CAAC,CAAC,CAACb,MAAM,EAAE,OAAO,IAAI,CAACa,QAAQ,CAACuB,KAAK,CAAC,CAAC;MAE/D,IAAID,CAAC,GAAG,IAAI,CAACtB,QAAQ,CAAC,CAAC,CAAC,CAACb,MAAM,EAAE;QAC/B,IAAMqC,GAAG,GAAG,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC;QAC5B,IAAI,CAACA,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAInC,UAAU,CAC/B2D,GAAG,CAACC,MAAM,EACVD,GAAG,CAACE,UAAU,GAAGJ,CAAC,EAClBE,GAAG,CAACrC,MAAM,GAAGmC,CACf,CAAC;QAED,OAAO,IAAIzD,UAAU,CAAC2D,GAAG,CAACC,MAAM,EAAED,GAAG,CAACE,UAAU,EAAEJ,CAAC,CAAC;MACtD;MAEA,IAAMK,GAAG,GAAG7D,MAAM,CAAC8D,WAAW,CAACN,CAAC,CAAC;MAEjC,GAAG;QACD,IAAME,IAAG,GAAG,IAAI,CAACxB,QAAQ,CAAC,CAAC,CAAC;QAC5B,IAAM6B,MAAM,GAAGF,GAAG,CAACxC,MAAM,GAAGmC,CAAC;QAE7B,IAAIA,CAAC,IAAIE,IAAG,CAACrC,MAAM,EAAE;UACnBwC,GAAG,CAACG,GAAG,CAAC,IAAI,CAAC9B,QAAQ,CAACuB,KAAK,CAAC,CAAC,EAAEM,MAAM,CAAC;QACxC,CAAC,MAAM;UACLF,GAAG,CAACG,GAAG,CAAC,IAAIC,UAAU,CAACP,IAAG,CAACC,MAAM,EAAED,IAAG,CAACE,UAAU,EAAEJ,CAAC,CAAC,EAAEO,MAAM,CAAC;UAC9D,IAAI,CAAC7B,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAInC,UAAU,CAC/B2D,IAAG,CAACC,MAAM,EACVD,IAAG,CAACE,UAAU,GAAGJ,CAAC,EAClBE,IAAG,CAACrC,MAAM,GAAGmC,CACf,CAAC;QACH;QAEAA,CAAC,IAAIE,IAAG,CAACrC,MAAM;MACjB,CAAC,QAAQmC,CAAC,GAAG,CAAC;MAEd,OAAOK,GAAG;IACZ;EAAC;IAAAd,GAAA;IAAAC,KAAA,EAQD,SAAAM,UAAUF,EAAE,EAAE;MAAA,IAAAc,MAAA;MACZ,IAAIC,GAAG;MACP,IAAI,CAACrB,KAAK,GAAG,IAAI;MAEjB,GAAG;QACD,QAAQ,IAAI,CAACD,MAAM;UACjB,KAAKpC,QAAQ;YACX0D,GAAG,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC;YACpB;UACF,KAAK1D,qBAAqB;YACxByD,GAAG,GAAG,IAAI,CAACE,kBAAkB,CAAC,CAAC;YAC/B;UACF,KAAK1D,qBAAqB;YACxBwD,GAAG,GAAG,IAAI,CAACG,kBAAkB,CAAC,CAAC;YAC/B;UACF,KAAK1D,QAAQ;YACX,IAAI,CAAC2D,OAAO,CAAC,CAAC;YACd;UACF,KAAK1D,QAAQ;YACXsD,GAAG,GAAG,IAAI,CAACK,OAAO,CAACpB,EAAE,CAAC;YACtB;UACF,KAAKtC,SAAS;YACZ,IAAI,CAACgC,KAAK,GAAG,KAAK;YAClB;UACF;YAIE,IAAI,CAACA,KAAK,GAAG,KAAK;YAElBxC,SAAS,CAAC,YAAM;cACd4D,MAAI,CAACrB,MAAM,GAAGpC,QAAQ;cACtByD,MAAI,CAACZ,SAAS,CAACF,EAAE,CAAC;YACpB,CAAC,CAAC;YACF;QACJ;MACF,CAAC,QAAQ,IAAI,CAACN,KAAK;MAEnBM,EAAE,CAACe,GAAG,CAAC;IACT;EAAC;IAAApB,GAAA;IAAAC,KAAA,EAQD,SAAAoB,QAAA,EAAU;MACR,IAAI,IAAI,CAACnC,cAAc,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACa,KAAK,GAAG,KAAK;QAClB;MACF;MAEA,IAAMY,GAAG,GAAG,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC;MAE3B,IAAI,CAACG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI,EAAE;QAC5B,IAAI,CAACZ,KAAK,GAAG,KAAK;QAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,6BAA6B,EAC7B,IAAI,EACJ,IAAI,EACJ,2BACF,CAAC;MACH;MAEA,IAAMC,UAAU,GAAG,CAACjB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI;MAE3C,IAAIiB,UAAU,IAAI,CAAC,IAAI,CAAClD,WAAW,CAACvC,iBAAiB,CAAC0F,aAAa,CAAC,EAAE;QACpE,IAAI,CAAC9B,KAAK,GAAG,KAAK;QAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,oBAAoB,EACpB,IAAI,EACJ,IAAI,EACJ,yBACF,CAAC;MACH;MAEA,IAAI,CAAClC,IAAI,GAAG,CAACkB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI;MACpC,IAAI,CAACjB,OAAO,GAAGiB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;MAC5B,IAAI,CAACtB,cAAc,GAAGsB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;MAEnC,IAAI,IAAI,CAACjB,OAAO,KAAK,IAAI,EAAE;QACzB,IAAIkC,UAAU,EAAE;UACd,IAAI,CAAC7B,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,oBAAoB,EACpB,IAAI,EACJ,IAAI,EACJ,yBACF,CAAC;QACH;QAEA,IAAI,CAAC,IAAI,CAACpC,WAAW,EAAE;UACrB,IAAI,CAACQ,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,kBAAkB,EAClB,IAAI,EACJ,IAAI,EACJ,uBACF,CAAC;QACH;QAEA,IAAI,CAACjC,OAAO,GAAG,IAAI,CAACH,WAAW;MACjC,CAAC,MAAM,IAAI,IAAI,CAACG,OAAO,KAAK,IAAI,IAAI,IAAI,CAACA,OAAO,KAAK,IAAI,EAAE;QACzD,IAAI,IAAI,CAACH,WAAW,EAAE;UACpB,IAAI,CAACQ,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACT,kBAAiB,IAAI,CAACjC,OAAQ,EAAC,EAChC,IAAI,EACJ,IAAI,EACJ,uBACF,CAAC;QACH;QAEA,IAAI,CAACN,WAAW,GAAGwC,UAAU;MAC/B,CAAC,MAAM,IAAI,IAAI,CAAClC,OAAO,GAAG,IAAI,IAAI,IAAI,CAACA,OAAO,GAAG,IAAI,EAAE;QACrD,IAAI,CAAC,IAAI,CAACD,IAAI,EAAE;UACd,IAAI,CAACM,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,iBAAiB,EACjB,IAAI,EACJ,IAAI,EACJ,qBACF,CAAC;QACH;QAEA,IAAIC,UAAU,EAAE;UACd,IAAI,CAAC7B,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,oBAAoB,EACpB,IAAI,EACJ,IAAI,EACJ,yBACF,CAAC;QACH;QAEA,IACE,IAAI,CAACtC,cAAc,GAAG,IAAI,IACzB,IAAI,CAACK,OAAO,KAAK,IAAI,IAAI,IAAI,CAACL,cAAc,KAAK,CAAE,EACpD;UACA,IAAI,CAACU,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACT,0BAAyB,IAAI,CAACtC,cAAe,EAAC,EAC/C,IAAI,EACJ,IAAI,EACJ,uCACF,CAAC;QACH;MACF,CAAC,MAAM;QACL,IAAI,CAACU,KAAK,GAAG,KAAK;QAClB,OAAO2B,KAAK,CACVC,UAAU,EACT,kBAAiB,IAAI,CAACjC,OAAQ,EAAC,EAChC,IAAI,EACJ,IAAI,EACJ,uBACF,CAAC;MACH;MAEA,IAAI,CAAC,IAAI,CAACD,IAAI,IAAI,CAAC,IAAI,CAACF,WAAW,EAAE,IAAI,CAACA,WAAW,GAAG,IAAI,CAACG,OAAO;MACpE,IAAI,CAACF,OAAO,GAAG,CAACmB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,IAAI;MAEvC,IAAI,IAAI,CAAC/B,SAAS,EAAE;QAClB,IAAI,CAAC,IAAI,CAACY,OAAO,EAAE;UACjB,IAAI,CAACO,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,kBAAkB,EAClB,IAAI,EACJ,IAAI,EACJ,sBACF,CAAC;QACH;MACF,CAAC,MAAM,IAAI,IAAI,CAACnC,OAAO,EAAE;QACvB,IAAI,CAACO,KAAK,GAAG,KAAK;QAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,oBAAoB,EACpB,IAAI,EACJ,IAAI,EACJ,wBACF,CAAC;MACH;MAEA,IAAI,IAAI,CAACtC,cAAc,KAAK,GAAG,EAAE,IAAI,CAACS,MAAM,GAAGnC,qBAAqB,CAAC,KAChE,IAAI,IAAI,CAAC0B,cAAc,KAAK,GAAG,EAAE,IAAI,CAACS,MAAM,GAAGlC,qBAAqB,CAAC,KACrE,OAAO,IAAI,CAACkE,UAAU,CAAC,CAAC;IAC/B;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EAQD,SAAAqB,mBAAA,EAAqB;MACnB,IAAI,IAAI,CAACpC,cAAc,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACa,KAAK,GAAG,KAAK;QAClB;MACF;MAEA,IAAI,CAACV,cAAc,GAAG,IAAI,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACuB,YAAY,CAAC,CAAC,CAAC;MACrD,OAAO,IAAI,CAACD,UAAU,CAAC,CAAC;IAC1B;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EAQD,SAAAsB,mBAAA,EAAqB;MACnB,IAAI,IAAI,CAACrC,cAAc,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACa,KAAK,GAAG,KAAK;QAClB;MACF;MAEA,IAAMY,GAAG,GAAG,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC;MAC3B,IAAMwB,GAAG,GAAGrB,GAAG,CAACsB,YAAY,CAAC,CAAC,CAAC;MAM/B,IAAID,GAAG,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE;QAClC,IAAI,CAACpC,KAAK,GAAG,KAAK;QAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,wDAAwD,EACxD,KAAK,EACL,IAAI,EACJ,wCACF,CAAC;MACH;MAEA,IAAI,CAACtC,cAAc,GAAG2C,GAAG,GAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAGxB,GAAG,CAACsB,YAAY,CAAC,CAAC,CAAC;MACjE,OAAO,IAAI,CAACH,UAAU,CAAC,CAAC;IAC1B;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EAQD,SAAA6B,WAAA,EAAa;MACX,IAAI,IAAI,CAACzC,cAAc,IAAI,IAAI,CAACK,OAAO,GAAG,IAAI,EAAE;QAC9C,IAAI,CAACC,mBAAmB,IAAI,IAAI,CAACN,cAAc;QAC/C,IAAI,IAAI,CAACM,mBAAmB,GAAG,IAAI,CAACb,WAAW,IAAI,IAAI,CAACA,WAAW,GAAG,CAAC,EAAE;UACvE,IAAI,CAACiB,KAAK,GAAG,KAAK;UAClB,OAAO2B,KAAK,CACVC,UAAU,EACV,2BAA2B,EAC3B,KAAK,EACL,IAAI,EACJ,mCACF,CAAC;QACH;MACF;MAEA,IAAI,IAAI,CAACnC,OAAO,EAAE,IAAI,CAACM,MAAM,GAAGjC,QAAQ,CAAC,KACpC,IAAI,CAACiC,MAAM,GAAGhC,QAAQ;IAC7B;EAAC;IAAAkC,GAAA;IAAAC,KAAA,EAOD,SAAAuB,QAAA,EAAU;MACR,IAAI,IAAI,CAACtC,cAAc,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACa,KAAK,GAAG,KAAK;QAClB;MACF;MAEA,IAAI,CAACT,KAAK,GAAG,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC;MAC5B,IAAI,CAACV,MAAM,GAAGhC,QAAQ;IACxB;EAAC;IAAAkC,GAAA;IAAAC,KAAA,EASD,SAAAwB,QAAQpB,EAAE,EAAE;MACV,IAAI+B,IAAI,GAAG9F,YAAY;MAEvB,IAAI,IAAI,CAAC+C,cAAc,EAAE;QACvB,IAAI,IAAI,CAACH,cAAc,GAAG,IAAI,CAACG,cAAc,EAAE;UAC7C,IAAI,CAACU,KAAK,GAAG,KAAK;UAClB;QACF;QAEAqC,IAAI,GAAG,IAAI,CAAC5B,OAAO,CAAC,IAAI,CAACnB,cAAc,CAAC;QAExC,IACE,IAAI,CAACG,OAAO,IACZ,CAAC,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,EACrE;UACA1C,MAAM,CAACwF,IAAI,EAAE,IAAI,CAAC9C,KAAK,CAAC;QAC1B;MACF;MAEA,IAAI,IAAI,CAACI,OAAO,GAAG,IAAI,EAAE,OAAO,IAAI,CAAC2C,cAAc,CAACD,IAAI,CAAC;MAEzD,IAAI,IAAI,CAAChD,WAAW,EAAE;QACpB,IAAI,CAACU,MAAM,GAAG/B,SAAS;QACvB,IAAI,CAACuE,UAAU,CAACF,IAAI,EAAE/B,EAAE,CAAC;QACzB;MACF;MAEA,IAAI+B,IAAI,CAAC9D,MAAM,EAAE;QAKf,IAAI,CAACsB,cAAc,GAAG,IAAI,CAACD,mBAAmB;QAC9C,IAAI,CAACE,UAAU,CAACS,IAAI,CAAC8B,IAAI,CAAC;MAC5B;MAEA,OAAO,IAAI,CAACG,WAAW,CAAC,CAAC;IAC3B;EAAC;IAAAvC,GAAA;IAAAC,KAAA,EASD,SAAAqC,WAAWF,IAAI,EAAE/B,EAAE,EAAE;MAAA,IAAAmC,MAAA;MACnB,IAAMC,iBAAiB,GAAG,IAAI,CAAC/D,WAAW,CAACvC,iBAAiB,CAAC0F,aAAa,CAAC;MAE3EY,iBAAiB,CAACH,UAAU,CAACF,IAAI,EAAE,IAAI,CAAC3C,IAAI,EAAE,UAAC2B,GAAG,EAAET,GAAG,EAAK;QAC1D,IAAIS,GAAG,EAAE,OAAOf,EAAE,CAACe,GAAG,CAAC;QAEvB,IAAIT,GAAG,CAACrC,MAAM,EAAE;UACdkE,MAAI,CAAC5C,cAAc,IAAIe,GAAG,CAACrC,MAAM;UACjC,IAAIkE,MAAI,CAAC5C,cAAc,GAAG4C,MAAI,CAAC1D,WAAW,IAAI0D,MAAI,CAAC1D,WAAW,GAAG,CAAC,EAAE;YAClE,OAAOuB,EAAE,CACPqB,KAAK,CACHC,UAAU,EACV,2BAA2B,EAC3B,KAAK,EACL,IAAI,EACJ,mCACF,CACF,CAAC;UACH;UAEAa,MAAI,CAAC3C,UAAU,CAACS,IAAI,CAACK,GAAG,CAAC;QAC3B;QAEA,IAAM+B,EAAE,GAAGF,MAAI,CAACD,WAAW,CAAC,CAAC;QAC7B,IAAIG,EAAE,EAAE,OAAOrC,EAAE,CAACqC,EAAE,CAAC;QAErBF,MAAI,CAACjC,SAAS,CAACF,EAAE,CAAC;MACpB,CAAC,CAAC;IACJ;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAQD,SAAAsC,YAAA,EAAc;MACZ,IAAI,IAAI,CAAC9C,IAAI,EAAE;QACb,IAAMkD,aAAa,GAAG,IAAI,CAAC/C,cAAc;QACzC,IAAMgD,SAAS,GAAG,IAAI,CAAC/C,UAAU;QAEjC,IAAI,CAACF,mBAAmB,GAAG,CAAC;QAC5B,IAAI,CAACC,cAAc,GAAG,CAAC;QACvB,IAAI,CAACL,WAAW,GAAG,CAAC;QACpB,IAAI,CAACM,UAAU,GAAG,EAAE;QAEpB,IAAI,IAAI,CAACH,OAAO,KAAK,CAAC,EAAE;UACtB,IAAI0C,IAAI;UAER,IAAI,IAAI,CAAC5D,WAAW,KAAK,YAAY,EAAE;YACrC4D,IAAI,GAAG1F,MAAM,CAACkG,SAAS,EAAED,aAAa,CAAC;UACzC,CAAC,MAAM,IAAI,IAAI,CAACnE,WAAW,KAAK,aAAa,EAAE;YAC7C4D,IAAI,GAAGzF,aAAa,CAACD,MAAM,CAACkG,SAAS,EAAED,aAAa,CAAC,CAAC;UACxD,CAAC,MAAM;YACLP,IAAI,GAAGQ,SAAS;UAClB;UAEA,IAAI,CAACC,IAAI,CAAC,SAAS,EAAET,IAAI,EAAE,IAAI,CAAC;QAClC,CAAC,MAAM;UACL,IAAMzB,GAAG,GAAGjE,MAAM,CAACkG,SAAS,EAAED,aAAa,CAAC;UAE5C,IAAI,CAAC,IAAI,CAAC3D,mBAAmB,IAAI,CAACjC,WAAW,CAAC4D,GAAG,CAAC,EAAE;YAClD,IAAI,CAACZ,KAAK,GAAG,KAAK;YAClB,OAAO2B,KAAK,CACVoB,KAAK,EACL,wBAAwB,EACxB,IAAI,EACJ,IAAI,EACJ,qBACF,CAAC;UACH;UAEA,IAAI,CAACD,IAAI,CAAC,SAAS,EAAElC,GAAG,EAAE,KAAK,CAAC;QAClC;MACF;MAEA,IAAI,CAACb,MAAM,GAAG9B,cAAc;IAC9B;EAAC;IAAAgC,GAAA;IAAAC,KAAA,EASD,SAAAoC,eAAeD,IAAI,EAAE;MACnB,IAAI,IAAI,CAAC1C,OAAO,KAAK,IAAI,EAAE;QACzB,IAAI,CAACK,KAAK,GAAG,KAAK;QAElB,IAAIqC,IAAI,CAAC9D,MAAM,KAAK,CAAC,EAAE;UACrB,IAAI,CAACuE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAEvG,YAAY,CAAC;UACzC,IAAI,CAACyG,GAAG,CAAC,CAAC;UAEV,IAAI,CAACjD,MAAM,GAAGpC,QAAQ;QACxB,CAAC,MAAM;UACL,IAAMsF,IAAI,GAAGZ,IAAI,CAACL,YAAY,CAAC,CAAC,CAAC;UAEjC,IAAI,CAACjF,iBAAiB,CAACkG,IAAI,CAAC,EAAE;YAC5B,OAAOtB,KAAK,CACVC,UAAU,EACT,uBAAsBqB,IAAK,EAAC,EAC7B,IAAI,EACJ,IAAI,EACJ,2BACF,CAAC;UACH;UAEA,IAAMrC,GAAG,GAAG,IAAI3D,UAAU,CACxBoF,IAAI,CAACxB,MAAM,EACXwB,IAAI,CAACvB,UAAU,GAAG,CAAC,EACnBuB,IAAI,CAAC9D,MAAM,GAAG,CAChB,CAAC;UAED,IAAI,CAAC,IAAI,CAACU,mBAAmB,IAAI,CAACjC,WAAW,CAAC4D,GAAG,CAAC,EAAE;YAClD,OAAOe,KAAK,CACVoB,KAAK,EACL,wBAAwB,EACxB,IAAI,EACJ,IAAI,EACJ,qBACF,CAAC;UACH;UAEA,IAAI,CAACD,IAAI,CAAC,UAAU,EAAEG,IAAI,EAAErC,GAAG,CAAC;UAChC,IAAI,CAACoC,GAAG,CAAC,CAAC;UAEV,IAAI,CAACjD,MAAM,GAAGpC,QAAQ;QACxB;MACF,CAAC,MAAM,IAAI,IAAI,CAACgC,OAAO,KAAK,IAAI,EAAE;QAChC,IAAI,CAACmD,IAAI,CAAC,MAAM,EAAET,IAAI,CAAC;QACvB,IAAI,CAACtC,MAAM,GAAG9B,cAAc;MAC9B,CAAC,MAAM;QACL,IAAI,CAAC6E,IAAI,CAAC,MAAM,EAAET,IAAI,CAAC;QACvB,IAAI,CAACtC,MAAM,GAAG9B,cAAc;MAC9B;IACF;EAAC;EAAA,OAAAC,QAAA;AAAA,EA3kBoB/B,QAAQ;AA8kB/B+G,MAAM,CAACC,OAAO,GAAGjF,QAAQ;AAczB,SAASyD,KAAKA,CAACyB,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,SAAS,EAAE;EAChE,IAAMnC,GAAG,GAAG,IAAI+B,SAAS,CACvBE,MAAM,GAAI,4BAA2BD,OAAQ,EAAC,GAAGA,OACnD,CAAC;EAEDN,KAAK,CAACU,iBAAiB,CAACpC,GAAG,EAAEM,KAAK,CAAC;EACnCN,GAAG,CAAC4B,IAAI,GAAGO,SAAS;EACpBnC,GAAG,CAAC7E,WAAW,CAAC,GAAG+G,UAAU;EAC7B,OAAOlC,GAAG;AACZ;AAOA,SAAS3D,kBAAkBA,CAAC4C,EAAE,EAAE;EAC9BjD,OAAO,CAACqG,IAAI,CAACpD,EAAE,CAAC,CAACqD,KAAK,CAACC,kBAAkB,CAAC;AAC5C;AAQA,SAASC,UAAUA,CAACxC,GAAG,EAAE;EACvB,MAAMA,GAAG;AACX;AAQA,SAASuC,kBAAkBA,CAACvC,GAAG,EAAE;EAC/ByC,OAAO,CAACC,QAAQ,CAACF,UAAU,EAAExC,GAAG,CAAC;AACnC"},"metadata":{},"sourceType":"script","externalDependencies":[]}