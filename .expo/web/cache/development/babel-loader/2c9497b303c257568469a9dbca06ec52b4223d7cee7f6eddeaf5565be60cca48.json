{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _createLegacyPlugin() {\n  var data = require(\"./createLegacyPlugin\");\n  _createLegacyPlugin = function _createLegacyPlugin() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar LOCATION_USAGE = 'Allow $(PRODUCT_NAME) to access your location';\nvar withDefaultLocationPermissions = function withDefaultLocationPermissions(config) {\n  var _config$_internal, _config$_internal2;\n  var isLinked = !((_config$_internal = config._internal) !== null && _config$_internal !== void 0 && _config$_internal.autolinkedModules) || config._internal.autolinkedModules.includes('react-native-maps');\n  if ((_config$_internal2 = config._internal) !== null && _config$_internal2 !== void 0 && _config$_internal2.projectRoot && _resolveFrom().default.silent(config._internal.projectRoot, 'react-native-maps') && isLinked) {\n    config = (0, _configPlugins().withInfoPlist)(config, function (config) {\n      config.modResults.NSLocationWhenInUseUsageDescription = config.modResults.NSLocationWhenInUseUsageDescription || LOCATION_USAGE;\n      return config;\n    });\n    return _configPlugins().AndroidConfig.Permissions.withPermissions(config, ['android.permission.ACCESS_COARSE_LOCATION', 'android.permission.ACCESS_FINE_LOCATION']);\n  }\n  return config;\n};\nvar _default = (0, _createLegacyPlugin().createLegacyPlugin)({\n  packageName: 'react-native-maps',\n  fallback: [_configPlugins().AndroidConfig.GoogleMapsApiKey.withGoogleMapsApiKey, _configPlugins().IOSConfig.Maps.withMaps, withDefaultLocationPermissions]\n});\nexports.default = _default;","map":{"version":3,"names":["_configPlugins","data","require","_resolveFrom","_interopRequireDefault","_createLegacyPlugin","obj","__esModule","default","LOCATION_USAGE","withDefaultLocationPermissions","config","_config$_internal","_config$_internal2","isLinked","_internal","autolinkedModules","includes","projectRoot","silent","withInfoPlist","modResults","NSLocationWhenInUseUsageDescription","AndroidConfig","Permissions","withPermissions","_default","createLegacyPlugin","packageName","fallback","GoogleMapsApiKey","withGoogleMapsApiKey","IOSConfig","Maps","withMaps","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\react-native-maps.ts"],"sourcesContent":["import { AndroidConfig, ConfigPlugin, IOSConfig, withInfoPlist } from '@expo/config-plugins';\nimport resolveFrom from 'resolve-from';\n\nimport { createLegacyPlugin } from './createLegacyPlugin';\n\nconst LOCATION_USAGE = 'Allow $(PRODUCT_NAME) to access your location';\n\n// Copied from expo-location package, this gets used when the\n// user has react-native-maps installed but not expo-location.\nconst withDefaultLocationPermissions: ConfigPlugin = (config) => {\n  const isLinked =\n    !config._internal?.autolinkedModules ||\n    config._internal.autolinkedModules.includes('react-native-maps');\n  // Only add location permissions if react-native-maps is installed.\n  if (\n    config._internal?.projectRoot &&\n    resolveFrom.silent(config._internal.projectRoot, 'react-native-maps') &&\n    isLinked\n  ) {\n    config = withInfoPlist(config, (config) => {\n      config.modResults.NSLocationWhenInUseUsageDescription =\n        config.modResults.NSLocationWhenInUseUsageDescription || LOCATION_USAGE;\n      return config;\n    });\n\n    return AndroidConfig.Permissions.withPermissions(config, [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n    ]);\n  }\n  return config;\n};\n\nexport default createLegacyPlugin({\n  packageName: 'react-native-maps',\n  fallback: [\n    AndroidConfig.GoogleMapsApiKey.withGoogleMapsApiKey,\n    IOSConfig.Maps.withMaps,\n    withDefaultLocationPermissions,\n  ],\n});\n"],"mappings":";;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,aAAA;EAAA,IAAAF,IAAA,GAAAG,sBAAA,CAAAF,OAAA;EAAAC,YAAA,YAAAA,aAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAI,oBAAA;EAAA,IAAAJ,IAAA,GAAAC,OAAA;EAAAG,mBAAA,YAAAA,oBAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA0D,SAAAG,uBAAAE,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAE1D,IAAMG,cAAc,GAAG,+CAA+C;AAItE,IAAMC,8BAA4C,GAAI,SAAhDA,8BAA4CA,CAAIC,MAAM,EAAK;EAAA,IAAAC,iBAAA,EAAAC,kBAAA;EAC/D,IAAMC,QAAQ,GACZ,GAAAF,iBAAA,GAACD,MAAM,CAACI,SAAS,cAAAH,iBAAA,eAAhBA,iBAAA,CAAkBI,iBAAiB,KACpCL,MAAM,CAACI,SAAS,CAACC,iBAAiB,CAACC,QAAQ,CAAC,mBAAmB,CAAC;EAElE,IACE,CAAAJ,kBAAA,GAAAF,MAAM,CAACI,SAAS,cAAAF,kBAAA,eAAhBA,kBAAA,CAAkBK,WAAW,IAC7Bf,YAAA,GAAAK,OAAW,CAACW,MAAM,CAACR,MAAM,CAACI,SAAS,CAACG,WAAW,EAAE,mBAAmB,CAAC,IACrEJ,QAAQ,EACR;IACAH,MAAM,GAAG,IAAAX,cAAA,GAAAoB,aAAa,EAACT,MAAM,EAAG,UAAAA,MAAM,EAAK;MACzCA,MAAM,CAACU,UAAU,CAACC,mCAAmC,GACnDX,MAAM,CAACU,UAAU,CAACC,mCAAmC,IAAIb,cAAc;MACzE,OAAOE,MAAM;IACf,CAAC,CAAC;IAEF,OAAOX,cAAA,GAAAuB,aAAa,CAACC,WAAW,CAACC,eAAe,CAACd,MAAM,EAAE,CACvD,2CAA2C,EAC3C,yCAAyC,CAC1C,CAAC;EACJ;EACA,OAAOA,MAAM;AACf,CAAC;AAAC,IAAAe,QAAA,GAEa,IAAArB,mBAAA,GAAAsB,kBAAkB,EAAC;EAChCC,WAAW,EAAE,mBAAmB;EAChCC,QAAQ,EAAE,CACR7B,cAAA,GAAAuB,aAAa,CAACO,gBAAgB,CAACC,oBAAoB,EACnD/B,cAAA,GAAAgC,SAAS,CAACC,IAAI,CAACC,QAAQ,EACvBxB,8BAA8B;AAElC,CAAC,CAAC;AAAAyB,OAAA,CAAA3B,OAAA,GAAAkB,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}