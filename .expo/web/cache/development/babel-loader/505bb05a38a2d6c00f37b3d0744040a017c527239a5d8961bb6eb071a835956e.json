{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction arrayize(value) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return value != null ? [value] : [];\n}\nexport var ExpoModuleConfig = function () {\n  function ExpoModuleConfig(rawConfig) {\n    _classCallCheck(this, ExpoModuleConfig);\n    this.rawConfig = rawConfig;\n  }\n  _createClass(ExpoModuleConfig, [{\n    key: \"supportsPlatform\",\n    value: function supportsPlatform(platform) {\n      var _this$rawConfig$platf, _this$rawConfig$platf2;\n      return (_this$rawConfig$platf = (_this$rawConfig$platf2 = this.rawConfig.platforms) == null ? void 0 : _this$rawConfig$platf2.includes(platform)) != null ? _this$rawConfig$platf : false;\n    }\n  }, {\n    key: \"iosModules\",\n    value: function iosModules() {\n      var _ref, _iosConfig$modules;\n      var iosConfig = this.rawConfig.ios;\n      return (_ref = (_iosConfig$modules = iosConfig == null ? void 0 : iosConfig.modules) != null ? _iosConfig$modules : iosConfig == null ? void 0 : iosConfig.modulesClassNames) != null ? _ref : [];\n    }\n  }, {\n    key: \"iosAppDelegateSubscribers\",\n    value: function iosAppDelegateSubscribers() {\n      var _this$rawConfig$ios$a, _this$rawConfig$ios;\n      return (_this$rawConfig$ios$a = (_this$rawConfig$ios = this.rawConfig.ios) == null ? void 0 : _this$rawConfig$ios.appDelegateSubscribers) != null ? _this$rawConfig$ios$a : [];\n    }\n  }, {\n    key: \"iosReactDelegateHandlers\",\n    value: function iosReactDelegateHandlers() {\n      var _this$rawConfig$ios$r, _this$rawConfig$ios2;\n      return (_this$rawConfig$ios$r = (_this$rawConfig$ios2 = this.rawConfig.ios) == null ? void 0 : _this$rawConfig$ios2.reactDelegateHandlers) != null ? _this$rawConfig$ios$r : [];\n    }\n  }, {\n    key: \"iosPodspecPaths\",\n    value: function iosPodspecPaths() {\n      var _this$rawConfig$ios3;\n      return arrayize((_this$rawConfig$ios3 = this.rawConfig.ios) == null ? void 0 : _this$rawConfig$ios3.podspecPath);\n    }\n  }, {\n    key: \"iosSwiftModuleNames\",\n    value: function iosSwiftModuleNames() {\n      var _this$rawConfig$ios4;\n      return arrayize((_this$rawConfig$ios4 = this.rawConfig.ios) == null ? void 0 : _this$rawConfig$ios4.swiftModuleName);\n    }\n  }, {\n    key: \"iosDebugOnly\",\n    value: function iosDebugOnly() {\n      var _this$rawConfig$ios$d, _this$rawConfig$ios5;\n      return (_this$rawConfig$ios$d = (_this$rawConfig$ios5 = this.rawConfig.ios) == null ? void 0 : _this$rawConfig$ios5.debugOnly) != null ? _this$rawConfig$ios$d : false;\n    }\n  }, {\n    key: \"androidModules\",\n    value: function androidModules() {\n      var _ref2, _androidConfig$module;\n      var androidConfig = this.rawConfig.android;\n      return (_ref2 = (_androidConfig$module = androidConfig == null ? void 0 : androidConfig.modules) != null ? _androidConfig$module : androidConfig == null ? void 0 : androidConfig.modulesClassNames) != null ? _ref2 : [];\n    }\n  }, {\n    key: \"androidGradlePaths\",\n    value: function androidGradlePaths() {\n      var _this$rawConfig$andro, _this$rawConfig$andro2;\n      return arrayize((_this$rawConfig$andro = (_this$rawConfig$andro2 = this.rawConfig.android) == null ? void 0 : _this$rawConfig$andro2.gradlePath) != null ? _this$rawConfig$andro : []);\n    }\n  }, {\n    key: \"androidGradlePlugins\",\n    value: function androidGradlePlugins() {\n      var _this$rawConfig$andro3, _this$rawConfig$andro4;\n      return arrayize((_this$rawConfig$andro3 = (_this$rawConfig$andro4 = this.rawConfig.android) == null ? void 0 : _this$rawConfig$andro4.gradlePlugins) != null ? _this$rawConfig$andro3 : []);\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.rawConfig;\n    }\n  }]);\n  return ExpoModuleConfig;\n}();\nexport function requireAndResolveExpoModuleConfig(path) {\n  return new ExpoModuleConfig(require(path));\n}","map":{"version":3,"names":["arrayize","value","Array","isArray","ExpoModuleConfig","rawConfig","_classCallCheck","_createClass","key","supportsPlatform","platform","_this$rawConfig$platf","_this$rawConfig$platf2","platforms","includes","iosModules","_ref","_iosConfig$modules","iosConfig","ios","modules","modulesClassNames","iosAppDelegateSubscribers","_this$rawConfig$ios$a","_this$rawConfig$ios","appDelegateSubscribers","iosReactDelegateHandlers","_this$rawConfig$ios$r","_this$rawConfig$ios2","reactDelegateHandlers","iosPodspecPaths","_this$rawConfig$ios3","podspecPath","iosSwiftModuleNames","_this$rawConfig$ios4","swiftModuleName","iosDebugOnly","_this$rawConfig$ios$d","_this$rawConfig$ios5","debugOnly","androidModules","_ref2","_androidConfig$module","androidConfig","android","androidGradlePaths","_this$rawConfig$andro","_this$rawConfig$andro2","gradlePath","androidGradlePlugins","_this$rawConfig$andro3","_this$rawConfig$andro4","gradlePlugins","toJSON","requireAndResolveExpoModuleConfig","path","require"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/expo-modules-autolinking/src/ExpoModuleConfig.ts"],"sourcesContent":["import { AndroidGradlePluginDescriptor, RawExpoModuleConfig, SupportedPlatform } from './types';\n\nfunction arrayize<T>(value: T[] | T | undefined): T[] {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return value != null ? [value] : [];\n}\n\n/**\n * A class that wraps the raw config (`expo-module.json` or `unimodule.json`).\n */\nexport class ExpoModuleConfig {\n  constructor(readonly rawConfig: RawExpoModuleConfig) {}\n\n  /**\n   * Whether the module supports given platform.\n   */\n  supportsPlatform(platform: SupportedPlatform): boolean {\n    return this.rawConfig.platforms?.includes(platform) ?? false;\n  }\n\n  /**\n   * Returns a list of names of Swift native modules classes to put to the generated modules provider file.\n   */\n  iosModules() {\n    const iosConfig = this.rawConfig.ios;\n\n    // `modulesClassNames` is a legacy name for the same config.\n    return iosConfig?.modules ?? iosConfig?.modulesClassNames ?? [];\n  }\n\n  /**\n   * Returns a list of names of Swift classes that receives AppDelegate life-cycle events.\n   */\n  iosAppDelegateSubscribers(): string[] {\n    return this.rawConfig.ios?.appDelegateSubscribers ?? [];\n  }\n\n  /**\n   * Returns a list of names of Swift classes that implement `ExpoReactDelegateHandler`.\n   */\n  iosReactDelegateHandlers(): string[] {\n    return this.rawConfig.ios?.reactDelegateHandlers ?? [];\n  }\n\n  /**\n   * Returns podspec paths defined by the module author.\n   */\n  iosPodspecPaths(): string[] {\n    return arrayize(this.rawConfig.ios?.podspecPath);\n  }\n\n  /**\n   * Returns the product module names, if defined by the module author.\n   */\n  iosSwiftModuleNames(): string[] {\n    return arrayize(this.rawConfig.ios?.swiftModuleName);\n  }\n\n  /**\n   * Returns whether this module will be added only to the debug configuration\n   */\n  iosDebugOnly(): boolean {\n    return this.rawConfig.ios?.debugOnly ?? false;\n  }\n\n  /**\n   * Returns a list of names of Kotlin native modules classes to put to the generated package provider file.\n   */\n  androidModules() {\n    const androidConfig = this.rawConfig.android;\n\n    // `modulesClassNames` is a legacy name for the same config.\n    return androidConfig?.modules ?? androidConfig?.modulesClassNames ?? [];\n  }\n\n  /**\n   * Returns build.gradle file paths defined by the module author.\n   */\n  androidGradlePaths(): string[] {\n    return arrayize(this.rawConfig.android?.gradlePath ?? []);\n  }\n\n  /**\n   * Returns gradle plugins descriptors defined by the module author.\n   */\n  androidGradlePlugins(): AndroidGradlePluginDescriptor[] {\n    return arrayize(this.rawConfig.android?.gradlePlugins ?? []);\n  }\n\n  /**\n   * Returns serializable raw config.\n   */\n  toJSON(): RawExpoModuleConfig {\n    return this.rawConfig;\n  }\n}\n\n/**\n * Reads the config at given path and returns the config wrapped by `ExpoModuleConfig` class.\n */\nexport function requireAndResolveExpoModuleConfig(path: string): ExpoModuleConfig {\n  // TODO: Validate the raw config against a schema.\n  // TODO: Support for `*.js` files, not only static `*.json`.\n  return new ExpoModuleConfig(require(path) as RawExpoModuleConfig);\n}\n"],"mappings":";;AAEA,SAASA,QAAQA,CAAIC,KAA0B,EAAO;EACpD,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK;EACd;EACA,OAAOA,KAAK,IAAI,IAAI,GAAG,CAACA,KAAK,CAAC,GAAG,EAAE;AACrC;AAKA,WAAaG,gBAAgB;EAC3B,SAAAA,iBAAqBC,SAA8B,EAAE;IAAAC,eAAA,OAAAF,gBAAA;IAAA,KAAhCC,SAA8B,GAA9BA,SAA8B;EAAG;EAACE,YAAA,CAAAH,gBAAA;IAAAI,GAAA;IAAAP,KAAA,EAKvD,SAAAQ,iBAAiBC,QAA2B,EAAW;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MACrD,QAAAD,qBAAA,IAAAC,sBAAA,GAAO,IAAI,CAACP,SAAS,CAACQ,SAAS,qBAAxBD,sBAAA,CAA0BE,QAAQ,CAACJ,QAAQ,CAAC,YAAAC,qBAAA,GAAI,KAAK;IAC9D;EAAC;IAAAH,GAAA;IAAAP,KAAA,EAKD,SAAAc,WAAA,EAAa;MAAA,IAAAC,IAAA,EAAAC,kBAAA;MACX,IAAMC,SAAS,GAAG,IAAI,CAACb,SAAS,CAACc,GAAG;MAGpC,QAAAH,IAAA,IAAAC,kBAAA,GAAOC,SAAS,oBAATA,SAAS,CAAEE,OAAO,YAAAH,kBAAA,GAAIC,SAAS,oBAATA,SAAS,CAAEG,iBAAiB,YAAAL,IAAA,GAAI,EAAE;IACjE;EAAC;IAAAR,GAAA;IAAAP,KAAA,EAKD,SAAAqB,0BAAA,EAAsC;MAAA,IAAAC,qBAAA,EAAAC,mBAAA;MACpC,QAAAD,qBAAA,IAAAC,mBAAA,GAAO,IAAI,CAACnB,SAAS,CAACc,GAAG,qBAAlBK,mBAAA,CAAoBC,sBAAsB,YAAAF,qBAAA,GAAI,EAAE;IACzD;EAAC;IAAAf,GAAA;IAAAP,KAAA,EAKD,SAAAyB,yBAAA,EAAqC;MAAA,IAAAC,qBAAA,EAAAC,oBAAA;MACnC,QAAAD,qBAAA,IAAAC,oBAAA,GAAO,IAAI,CAACvB,SAAS,CAACc,GAAG,qBAAlBS,oBAAA,CAAoBC,qBAAqB,YAAAF,qBAAA,GAAI,EAAE;IACxD;EAAC;IAAAnB,GAAA;IAAAP,KAAA,EAKD,SAAA6B,gBAAA,EAA4B;MAAA,IAAAC,oBAAA;MAC1B,OAAO/B,QAAQ,EAAA+B,oBAAA,GAAC,IAAI,CAAC1B,SAAS,CAACc,GAAG,qBAAlBY,oBAAA,CAAoBC,WAAW,CAAC;IAClD;EAAC;IAAAxB,GAAA;IAAAP,KAAA,EAKD,SAAAgC,oBAAA,EAAgC;MAAA,IAAAC,oBAAA;MAC9B,OAAOlC,QAAQ,EAAAkC,oBAAA,GAAC,IAAI,CAAC7B,SAAS,CAACc,GAAG,qBAAlBe,oBAAA,CAAoBC,eAAe,CAAC;IACtD;EAAC;IAAA3B,GAAA;IAAAP,KAAA,EAKD,SAAAmC,aAAA,EAAwB;MAAA,IAAAC,qBAAA,EAAAC,oBAAA;MACtB,QAAAD,qBAAA,IAAAC,oBAAA,GAAO,IAAI,CAACjC,SAAS,CAACc,GAAG,qBAAlBmB,oBAAA,CAAoBC,SAAS,YAAAF,qBAAA,GAAI,KAAK;IAC/C;EAAC;IAAA7B,GAAA;IAAAP,KAAA,EAKD,SAAAuC,eAAA,EAAiB;MAAA,IAAAC,KAAA,EAAAC,qBAAA;MACf,IAAMC,aAAa,GAAG,IAAI,CAACtC,SAAS,CAACuC,OAAO;MAG5C,QAAAH,KAAA,IAAAC,qBAAA,GAAOC,aAAa,oBAAbA,aAAa,CAAEvB,OAAO,YAAAsB,qBAAA,GAAIC,aAAa,oBAAbA,aAAa,CAAEtB,iBAAiB,YAAAoB,KAAA,GAAI,EAAE;IACzE;EAAC;IAAAjC,GAAA;IAAAP,KAAA,EAKD,SAAA4C,mBAAA,EAA+B;MAAA,IAAAC,qBAAA,EAAAC,sBAAA;MAC7B,OAAO/C,QAAQ,EAAA8C,qBAAA,IAAAC,sBAAA,GAAC,IAAI,CAAC1C,SAAS,CAACuC,OAAO,qBAAtBG,sBAAA,CAAwBC,UAAU,YAAAF,qBAAA,GAAI,EAAE,CAAC;IAC3D;EAAC;IAAAtC,GAAA;IAAAP,KAAA,EAKD,SAAAgD,qBAAA,EAAwD;MAAA,IAAAC,sBAAA,EAAAC,sBAAA;MACtD,OAAOnD,QAAQ,EAAAkD,sBAAA,IAAAC,sBAAA,GAAC,IAAI,CAAC9C,SAAS,CAACuC,OAAO,qBAAtBO,sBAAA,CAAwBC,aAAa,YAAAF,sBAAA,GAAI,EAAE,CAAC;IAC9D;EAAC;IAAA1C,GAAA;IAAAP,KAAA,EAKD,SAAAoD,OAAA,EAA8B;MAC5B,OAAO,IAAI,CAAChD,SAAS;IACvB;EAAC;EAAA,OAAAD,gBAAA;AAAA;AAMH,OAAO,SAASkD,iCAAiCA,CAACC,IAAY,EAAoB;EAGhF,OAAO,IAAInD,gBAAgB,CAACoD,OAAO,CAACD,IAAI,CAAwB,CAAC;AACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}