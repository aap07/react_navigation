{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _excluded = [\"exp\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrebuildConfigAsync = getPrebuildConfigAsync;\nfunction _config() {\n  var data = require(\"@expo/config\");\n  _config = function _config() {\n    return data;\n  };\n  return data;\n}\nfunction _getAutolinkedPackages() {\n  var data = require(\"./getAutolinkedPackages\");\n  _getAutolinkedPackages = function _getAutolinkedPackages() {\n    return data;\n  };\n  return data;\n}\nfunction _withDefaultPlugins() {\n  var data = require(\"./plugins/withDefaultPlugins\");\n  _withDefaultPlugins = function _withDefaultPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction getPrebuildConfigAsync(_x, _x2) {\n  return _getPrebuildConfigAsync.apply(this, arguments);\n}\nfunction _getPrebuildConfigAsync() {\n  _getPrebuildConfigAsync = _asyncToGenerator(function* (projectRoot, props) {\n    var autolinkedModules = yield (0, _getAutolinkedPackages().getAutolinkedPackagesAsync)(projectRoot, props.platforms);\n    return getPrebuildConfig(projectRoot, _objectSpread(_objectSpread({}, props), {}, {\n      autolinkedModules: autolinkedModules\n    }));\n  });\n  return _getPrebuildConfigAsync.apply(this, arguments);\n}\nfunction getPrebuildConfig(projectRoot, _ref3) {\n  var platforms = _ref3.platforms,\n    bundleIdentifier = _ref3.bundleIdentifier,\n    packageName = _ref3.packageName,\n    autolinkedModules = _ref3.autolinkedModules,\n    expoUsername = _ref3.expoUsername;\n  var _ref4 = (0, _config().getConfig)(projectRoot, {\n      skipSDKVersionRequirement: true,\n      isModdedConfig: true\n    }),\n    config = _ref4.exp,\n    rest = _objectWithoutProperties(_ref4, _excluded);\n  if (autolinkedModules) {\n    if (!config._internal) {\n      config._internal = {};\n    }\n    config._internal.autolinkedModules = autolinkedModules;\n  }\n  var resolvedExpoUsername = typeof expoUsername === 'function' ? expoUsername(config) : expoUsername !== null && expoUsername !== void 0 ? expoUsername : (0, _config().getAccountUsername)(config);\n  config = (0, _withDefaultPlugins().withVersionedExpoSDKPlugins)(config, {\n    expoUsername: resolvedExpoUsername\n  });\n  config = (0, _withDefaultPlugins().withLegacyExpoPlugins)(config);\n  if (platforms.includes('ios')) {\n    var _ref;\n    if (!config.ios) config.ios = {};\n    config.ios.bundleIdentifier = (_ref = bundleIdentifier !== null && bundleIdentifier !== void 0 ? bundleIdentifier : config.ios.bundleIdentifier) !== null && _ref !== void 0 ? _ref : `com.placeholder.appid`;\n    config = (0, _withDefaultPlugins().withIosExpoPlugins)(config, {\n      bundleIdentifier: config.ios.bundleIdentifier\n    });\n  }\n  if (platforms.includes('android')) {\n    var _ref2;\n    if (!config.android) config.android = {};\n    config.android.package = (_ref2 = packageName !== null && packageName !== void 0 ? packageName : config.android.package) !== null && _ref2 !== void 0 ? _ref2 : `com.placeholder.appid`;\n    config = (0, _withDefaultPlugins().withAndroidExpoPlugins)(config, {\n      package: config.android.package\n    });\n  }\n  return _objectSpread({\n    exp: config\n  }, rest);\n}","map":{"version":3,"names":["_config","data","require","_getAutolinkedPackages","_withDefaultPlugins","getPrebuildConfigAsync","_x","_x2","_getPrebuildConfigAsync","apply","arguments","_asyncToGenerator","projectRoot","props","autolinkedModules","getAutolinkedPackagesAsync","platforms","getPrebuildConfig","_objectSpread","_ref3","bundleIdentifier","packageName","expoUsername","_ref4","getConfig","skipSDKVersionRequirement","isModdedConfig","config","exp","rest","_objectWithoutProperties","_excluded","_internal","resolvedExpoUsername","getAccountUsername","withVersionedExpoSDKPlugins","withLegacyExpoPlugins","includes","_ref","ios","withIosExpoPlugins","_ref2","android","package","withAndroidExpoPlugins"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\getPrebuildConfig.ts"],"sourcesContent":["import { getAccountUsername, getConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nimport { getAutolinkedPackagesAsync } from './getAutolinkedPackages';\nimport {\n  withAndroidExpoPlugins,\n  withIosExpoPlugins,\n  withLegacyExpoPlugins,\n  withVersionedExpoSDKPlugins,\n} from './plugins/withDefaultPlugins';\n\nexport async function getPrebuildConfigAsync(\n  projectRoot: string,\n  props: {\n    bundleIdentifier?: string;\n    packageName?: string;\n    platforms: ModPlatform[];\n    expoUsername?: string | ((config: ExpoConfig) => string | null);\n  }\n): Promise<ReturnType<typeof getConfig>> {\n  const autolinkedModules = await getAutolinkedPackagesAsync(projectRoot, props.platforms);\n\n  return getPrebuildConfig(projectRoot, {\n    ...props,\n    autolinkedModules,\n  });\n}\n\nfunction getPrebuildConfig(\n  projectRoot: string,\n  {\n    platforms,\n    bundleIdentifier,\n    packageName,\n    autolinkedModules,\n    expoUsername,\n  }: {\n    bundleIdentifier?: string;\n    packageName?: string;\n    platforms: ModPlatform[];\n    autolinkedModules?: string[];\n    expoUsername?: string | ((config: ExpoConfig) => string | null);\n  }\n) {\n  // let config: ExpoConfig;\n  let { exp: config, ...rest } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n    isModdedConfig: true,\n  });\n\n  if (autolinkedModules) {\n    if (!config._internal) {\n      config._internal = {};\n    }\n    config._internal.autolinkedModules = autolinkedModules;\n  }\n\n  const resolvedExpoUsername =\n    typeof expoUsername === 'function'\n      ? expoUsername(config)\n      : // If the user didn't pass a username then fallback on the static cached username.\n        expoUsername ?? getAccountUsername(config);\n\n  // Add all built-in plugins first because they should take\n  // priority over the unversioned plugins.\n  config = withVersionedExpoSDKPlugins(config, {\n    expoUsername: resolvedExpoUsername,\n  });\n  config = withLegacyExpoPlugins(config);\n\n  if (platforms.includes('ios')) {\n    if (!config.ios) config.ios = {};\n    config.ios.bundleIdentifier =\n      bundleIdentifier ?? config.ios.bundleIdentifier ?? `com.placeholder.appid`;\n\n    // Add all built-in plugins\n    config = withIosExpoPlugins(config, {\n      bundleIdentifier: config.ios.bundleIdentifier,\n    });\n  }\n\n  if (platforms.includes('android')) {\n    if (!config.android) config.android = {};\n    config.android.package = packageName ?? config.android.package ?? `com.placeholder.appid`;\n\n    // Add all built-in plugins\n    config = withAndroidExpoPlugins(config, {\n      package: config.android.package,\n    });\n  }\n\n  return { exp: config, ...rest };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}