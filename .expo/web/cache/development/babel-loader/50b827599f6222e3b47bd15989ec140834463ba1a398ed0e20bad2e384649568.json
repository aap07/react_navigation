{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar update_check_1 = __importDefault(require(\"update-check\"));\nfunction shouldUpdate() {\n  return _shouldUpdate.apply(this, arguments);\n}\nfunction _shouldUpdate() {\n  _shouldUpdate = _asyncToGenerator(function* () {\n    var packageJson = function packageJson() {\n      return require(\"../package.json\");\n    };\n    var update = (0, update_check_1.default)(packageJson()).catch(function () {\n      return null;\n    });\n    try {\n      var res = yield update;\n      if (res && res.latest) {\n        var _packageJson = packageJson();\n        console.log();\n        console.log(chalk_1.default.yellow.bold(`A new version of \\`${_packageJson.name}\\` is available`));\n        console.log('You can update by running: ' + chalk_1.default.cyan(`npm i -g ${_packageJson.name}`));\n        console.log();\n      }\n    } catch (_unused) {}\n  });\n  return _shouldUpdate.apply(this, arguments);\n}\nexports.default = shouldUpdate;","map":{"version":3,"names":["chalk_1","__importDefault","require","update_check_1","shouldUpdate","_shouldUpdate","apply","arguments","_asyncToGenerator","packageJson","update","default","catch","res","latest","_packageJson","console","log","yellow","bold","name","cyan","_unused","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\expo-pwa\\src\\update.ts"],"sourcesContent":["import chalk from 'chalk';\nimport checkForUpdate from 'update-check';\n\nexport default async function shouldUpdate() {\n  const packageJson = () => require('../package.json');\n\n  const update = checkForUpdate(packageJson()).catch(() => null);\n\n  try {\n    const res = await update;\n    if (res && res.latest) {\n      const _packageJson = packageJson();\n      console.log();\n      console.log(chalk.yellow.bold(`A new version of \\`${_packageJson.name}\\` is available`));\n      console.log('You can update by running: ' + chalk.cyan(`npm i -g ${_packageJson.name}`));\n      console.log();\n    }\n  } catch {\n    // ignore error\n  }\n}\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,OAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAF,eAAA,CAAAC,OAAA;AAA0C,SAEZE,YAAYA,CAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,CAA3B,aAA2B;IACxC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA;MAAA,OAASP,OAAO,kBAAkB,CAAC;IAAA;IAEpD,IAAMQ,MAAM,GAAG,IAAAP,cAAA,CAAAQ,OAAc,EAACF,WAAW,EAAE,CAAC,CAACG,KAAK,CAAC;MAAA,OAAM,IAAI;IAAA,EAAC;IAE9D,IAAI;MACF,IAAMC,GAAG,SAASH,MAAM;MACxB,IAAIG,GAAG,IAAIA,GAAG,CAACC,MAAM,EAAE;QACrB,IAAMC,YAAY,GAAGN,WAAW,EAAE;QAClCO,OAAO,CAACC,GAAG,EAAE;QACbD,OAAO,CAACC,GAAG,CAACjB,OAAA,CAAAW,OAAK,CAACO,MAAM,CAACC,IAAI,CAAC,sBAAsBJ,YAAY,CAACK,IAAI,iBAAiB,CAAC,CAAC;QACxFJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGjB,OAAA,CAAAW,OAAK,CAACU,IAAI,CAAC,YAAYN,YAAY,CAACK,IAAI,EAAE,CAAC,CAAC;QACxFJ,OAAO,CAACC,GAAG,EAAE;;KAEhB,CAAC,OAAAK,OAAA,EAAM,C;EAGV,CAAC;EAAA,OAAAjB,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAjBDgB,OAAA,CAAAZ,OAAA,GAAAP,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}