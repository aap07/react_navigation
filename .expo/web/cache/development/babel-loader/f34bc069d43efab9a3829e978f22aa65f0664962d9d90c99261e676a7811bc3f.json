{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBranchApiKey = getBranchApiKey;\nexports.setBranchApiKey = setBranchApiKey;\nexports.withIosBranch = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nvar withIosBranch = function withIosBranch(config) {\n  return (0, _configPlugins().withInfoPlist)(config, function (config) {\n    config.modResults = setBranchApiKey(config, config.modResults);\n    return config;\n  });\n};\nexports.withIosBranch = withIosBranch;\nfunction getBranchApiKey(config) {\n  var _config$ios$config$br, _config$ios, _config$ios$config, _config$ios$config$br2;\n  return (_config$ios$config$br = (_config$ios = config.ios) === null || _config$ios === void 0 ? void 0 : (_config$ios$config = _config$ios.config) === null || _config$ios$config === void 0 ? void 0 : (_config$ios$config$br2 = _config$ios$config.branch) === null || _config$ios$config$br2 === void 0 ? void 0 : _config$ios$config$br2.apiKey) !== null && _config$ios$config$br !== void 0 ? _config$ios$config$br : null;\n}\nfunction setBranchApiKey(config, infoPlist) {\n  var apiKey = getBranchApiKey(config);\n  if (apiKey === null) {\n    return infoPlist;\n  }\n  return _objectSpread(_objectSpread({}, infoPlist), {}, {\n    branch_key: {\n      live: apiKey\n    }\n  });\n}","map":{"version":3,"names":["_configPlugins","data","require","withIosBranch","config","withInfoPlist","modResults","setBranchApiKey","exports","getBranchApiKey","_config$ios$config$br","_config$ios","_config$ios$config","_config$ios$config$br2","ios","branch","apiKey","infoPlist","_objectSpread","branch_key","live"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-branch\\withIosBranch.ts"],"sourcesContent":["import { ConfigPlugin, InfoPlist, withInfoPlist } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nexport const withIosBranch: ConfigPlugin = (config) => {\n  return withInfoPlist(config, (config) => {\n    config.modResults = setBranchApiKey(config, config.modResults);\n    return config;\n  });\n};\n\nexport function getBranchApiKey(config: Pick<ExpoConfig, 'ios'>) {\n  return config.ios?.config?.branch?.apiKey ?? null;\n}\n\nexport function setBranchApiKey(config: Pick<ExpoConfig, 'ios'>, infoPlist: InfoPlist): InfoPlist {\n  const apiKey = getBranchApiKey(config);\n\n  if (apiKey === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    branch_key: {\n      live: apiKey,\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGO,IAAME,aAA2B,GAAI,SAA/BA,aAA2BA,CAAIC,MAAM,EAAK;EACrD,OAAO,IAAAJ,cAAA,GAAAK,aAAa,EAACD,MAAM,EAAG,UAAAA,MAAM,EAAK;IACvCA,MAAM,CAACE,UAAU,GAAGC,eAAe,CAACH,MAAM,EAAEA,MAAM,CAACE,UAAU,CAAC;IAC9D,OAAOF,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACI,OAAA,CAAAL,aAAA,GAAAA,aAAA;AAEK,SAASM,eAAeA,CAACL,MAA+B,EAAE;EAAA,IAAAM,qBAAA,EAAAC,WAAA,EAAAC,kBAAA,EAAAC,sBAAA;EAC/D,QAAAH,qBAAA,IAAAC,WAAA,GAAOP,MAAM,CAACU,GAAG,cAAAH,WAAA,wBAAAC,kBAAA,GAAVD,WAAA,CAAYP,MAAM,cAAAQ,kBAAA,wBAAAC,sBAAA,GAAlBD,kBAAA,CAAoBG,MAAM,cAAAF,sBAAA,uBAA1BA,sBAAA,CAA4BG,MAAM,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,IAAI;AACnD;AAEO,SAASH,eAAeA,CAACH,MAA+B,EAAEa,SAAoB,EAAa;EAChG,IAAMD,MAAM,GAAGP,eAAe,CAACL,MAAM,CAAC;EAEtC,IAAIY,MAAM,KAAK,IAAI,EAAE;IACnB,OAAOC,SAAS;EAClB;EAEA,OAAAC,aAAA,CAAAA,aAAA,KACKD,SAAS;IACZE,UAAU,EAAE;MACVC,IAAI,EAAEJ;IACR;EAAA;AAEJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}