{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importMetroConfig = importMetroConfig;\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction importMetroConfig(projectRoot) {\n  var modulePath = _resolveFrom().default.silent(projectRoot, 'metro-config');\n  if (!modulePath) {\n    return require('metro-config');\n  }\n  return require(modulePath);\n}","map":{"version":3,"names":["_resolveFrom","data","_interopRequireDefault","require","obj","__esModule","default","importMetroConfig","projectRoot","modulePath","silent"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\traveling\\metro-config.ts"],"sourcesContent":["// This package needs to be imported from within the project to\n\nimport resolveFrom from 'resolve-from';\n\n// ensure that Metro can bundle the project's assets (see: `watchFolders`).\nexport function importMetroConfig(projectRoot: string): typeof import('metro-config') & {\n  getDefaultConfig: import('metro-config/src/defaults/index').default;\n} {\n  const modulePath = resolveFrom.silent(projectRoot, 'metro-config');\n\n  if (!modulePath) {\n    return require('metro-config');\n  }\n  return require(modulePath);\n}\n"],"mappings":";;;;;;AAEA,SAAAA,aAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,YAAA,YAAAA,aAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAuC,SAAAC,uBAAAE,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAGhC,SAASG,iBAAiBA,CAACC,WAAmB,EAEnD;EACA,IAAMC,UAAU,GAAGT,YAAA,GAAAM,OAAW,CAACI,MAAM,CAACF,WAAW,EAAE,cAAc,CAAC;EAElE,IAAI,CAACC,UAAU,EAAE;IACf,OAAON,OAAO,CAAC,cAAc,CAAC;EAChC;EACA,OAAOA,OAAO,CAACM,UAAU,CAAC;AAC5B"},"metadata":{},"sourceType":"script","externalDependencies":[]}