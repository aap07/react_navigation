{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar debug = require(\"debug\")(\"expo:start:server:middleware:metro-context-modules\");\nvar ContextModuleSourceMapsMiddleware = function () {\n  function ContextModuleSourceMapsMiddleware() {\n    _classCallCheck(this, ContextModuleSourceMapsMiddleware);\n  }\n  _createClass(ContextModuleSourceMapsMiddleware, [{\n    key: \"getHandler\",\n    value: function getHandler() {\n      return function (req, res, next) {\n        if (!(req == null ? void 0 : req.url) || req.method !== \"GET\" && req.method !== \"HEAD\") {\n          return next();\n        }\n        if (req.url.match(/%3Fctx=[\\d\\w\\W]+\\.map\\?/)) {\n          debug(\"Skipping sourcemap request for context module %s\", req.url);\n          res.writeHead(200, {\n            \"Content-Type\": \"application/json\"\n          });\n          res.end(\"{}\");\n          return;\n        }\n        next();\n      };\n    }\n  }]);\n  return ContextModuleSourceMapsMiddleware;\n}();\nexports.ContextModuleSourceMapsMiddleware = ContextModuleSourceMapsMiddleware;","map":{"version":3,"names":["_classCallCheck","require","_createClass","debug","ContextModuleSourceMapsMiddleware","key","value","getHandler","req","res","next","url","method","match","writeHead","end"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\middleware\\ContextModuleSourceMapsMiddleware.ts"],"sourcesContent":["import { ServerRequest, ServerResponse } from './server.types';\n\nconst debug = require('debug')(\n  'expo:start:server:middleware:metro-context-modules'\n) as typeof console.log;\n\n/**\n * Source maps for `require.context` modules aren't supported in the Metro dev server\n * we should intercept the request and return a noop response to prevent Chrome/Metro\n * from erroring out.\n */\nexport class ContextModuleSourceMapsMiddleware {\n  getHandler() {\n    return (req: ServerRequest, res: ServerResponse, next: any) => {\n      if (!req?.url || (req.method !== 'GET' && req.method !== 'HEAD')) {\n        return next();\n      }\n\n      if (req.url.match(/%3Fctx=[\\d\\w\\W]+\\.map\\?/)) {\n        debug('Skipping sourcemap request for context module %s', req.url);\n        // Return a noop response for the sourcemap\n        res.writeHead(200, {\n          'Content-Type': 'application/json',\n        });\n        res.end('{}');\n        return;\n      }\n\n      next();\n    };\n  }\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;;;;AAEA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC,CAC5B,oDAAoD,CACrD;AAAuB,IAOXG,iCAAiC;EAAA,SAAAA,kCAAA;IAAAJ,eAAA,OAAAI,iCAAA;EAAA;EAAAF,YAAA,CAAAE,iCAAA;IAAAC,GAAA;IAAAC,KAAA,EAC5C,SAAAC,WAAA,EAAa;MACX,OAAO,UAACC,GAAkB,EAAEC,GAAmB,EAAEC,IAAS,EAAK;QAC7D,IAAI,EAACF,GAAG,QAAK,GAAR,MAAQ,GAARA,GAAG,CAAEG,GAAG,KAAKH,GAAG,CAACI,MAAM,KAAK,KAAK,IAAIJ,GAAG,CAACI,MAAM,KAAK,MAAM,EAAG;UAChE,OAAOF,IAAI,EAAE;;QAGf,IAAIF,GAAG,CAACG,GAAG,CAACE,KAAK,2BAA2B,EAAE;UAC5CV,KAAK,CAAC,kDAAkD,EAAEK,GAAG,CAACG,GAAG,CAAC;UAElEF,GAAG,CAACK,SAAS,CAAC,GAAG,EAAE;YACjB,cAAc,EAAE;WACjB,CAAC;UACFL,GAAG,CAACM,GAAG,CAAC,IAAI,CAAC;UACb;;QAGFL,IAAI,EAAE;OACP;;EACF;EAAA,OAAAN,iCAAA;AAAA;QAnBUA,iCAAiC,GAAjCA,iCAAiC"},"metadata":{},"sourceType":"script","externalDependencies":[]}