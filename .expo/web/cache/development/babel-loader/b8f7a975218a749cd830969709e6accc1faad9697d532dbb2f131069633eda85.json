{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/cli/node_modules/type-fest/source/tsconfig-json.d.ts"],"sourcesContent":["declare namespace TsConfigJson {\n\tnamespace CompilerOptions {\n\t\texport type JSX =\n\t\t\t| 'preserve'\n\t\t\t| 'react'\n\t\t\t| 'react-native';\n\n\t\texport type Module =\n\t\t\t| 'CommonJS'\n\t\t\t| 'AMD'\n\t\t\t| 'System'\n\t\t\t| 'UMD'\n\t\t\t| 'ES6'\n\t\t\t| 'ES2015'\n\t\t\t| 'ESNext'\n\t\t\t| 'None'\n\t\t\t// Lowercase alternatives\n\t\t\t| 'commonjs'\n\t\t\t| 'amd'\n\t\t\t| 'system'\n\t\t\t| 'umd'\n\t\t\t| 'es6'\n\t\t\t| 'es2015'\n\t\t\t| 'esnext'\n\t\t\t| 'none';\n\n\t\texport type NewLine =\n\t\t\t| 'CRLF'\n\t\t\t| 'LF'\n\t\t\t// Lowercase alternatives\n\t\t\t| 'crlf'\n\t\t\t| 'lf';\n\n\t\texport type Target =\n\t\t\t| 'ES3'\n\t\t\t| 'ES5'\n\t\t\t| 'ES6'\n\t\t\t| 'ES2015'\n\t\t\t| 'ES2016'\n\t\t\t| 'ES2017'\n\t\t\t| 'ES2018'\n\t\t\t| 'ES2019'\n\t\t\t| 'ES2020'\n\t\t\t| 'ESNext'\n\t\t\t// Lowercase alternatives\n\t\t\t| 'es3'\n\t\t\t| 'es5'\n\t\t\t| 'es6'\n\t\t\t| 'es2015'\n\t\t\t| 'es2016'\n\t\t\t| 'es2017'\n\t\t\t| 'es2018'\n\t\t\t| 'es2019'\n\t\t\t| 'es2020'\n\t\t\t| 'esnext';\n\n\t\texport type Lib =\n\t\t\t| 'ES5'\n\t\t\t| 'ES6'\n\t\t\t| 'ES7'\n\t\t\t| 'ES2015'\n\t\t\t| 'ES2015.Collection'\n\t\t\t| 'ES2015.Core'\n\t\t\t| 'ES2015.Generator'\n\t\t\t| 'ES2015.Iterable'\n\t\t\t| 'ES2015.Promise'\n\t\t\t| 'ES2015.Proxy'\n\t\t\t| 'ES2015.Reflect'\n\t\t\t| 'ES2015.Symbol.WellKnown'\n\t\t\t| 'ES2015.Symbol'\n\t\t\t| 'ES2016'\n\t\t\t| 'ES2016.Array.Include'\n\t\t\t| 'ES2017'\n\t\t\t| 'ES2017.Intl'\n\t\t\t| 'ES2017.Object'\n\t\t\t| 'ES2017.SharedMemory'\n\t\t\t| 'ES2017.String'\n\t\t\t| 'ES2017.TypedArrays'\n\t\t\t| 'ES2018'\n\t\t\t| 'ES2018.AsyncIterable'\n\t\t\t| 'ES2018.Intl'\n\t\t\t| 'ES2018.Promise'\n\t\t\t| 'ES2018.Regexp'\n\t\t\t| 'ES2019'\n\t\t\t| 'ES2019.Array'\n\t\t\t| 'ES2019.Object'\n\t\t\t| 'ES2019.String'\n\t\t\t| 'ES2019.Symbol'\n\t\t\t| 'ES2020'\n\t\t\t| 'ES2020.String'\n\t\t\t| 'ES2020.Symbol.WellKnown'\n\t\t\t| 'ESNext'\n\t\t\t| 'ESNext.Array'\n\t\t\t| 'ESNext.AsyncIterable'\n\t\t\t| 'ESNext.BigInt'\n\t\t\t| 'ESNext.Intl'\n\t\t\t| 'ESNext.Symbol'\n\t\t\t| 'DOM'\n\t\t\t| 'DOM.Iterable'\n\t\t\t| 'ScriptHost'\n\t\t\t| 'WebWorker'\n\t\t\t| 'WebWorker.ImportScripts'\n\t\t\t// Lowercase alternatives\n\t\t\t| 'es5'\n\t\t\t| 'es6'\n\t\t\t| 'es7'\n\t\t\t| 'es2015'\n\t\t\t| 'es2015.collection'\n\t\t\t| 'es2015.core'\n\t\t\t| 'es2015.generator'\n\t\t\t| 'es2015.iterable'\n\t\t\t| 'es2015.promise'\n\t\t\t| 'es2015.proxy'\n\t\t\t| 'es2015.reflect'\n\t\t\t| 'es2015.symbol.wellknown'\n\t\t\t| 'es2015.symbol'\n\t\t\t| 'es2016'\n\t\t\t| 'es2016.array.include'\n\t\t\t| 'es2017'\n\t\t\t| 'es2017.intl'\n\t\t\t| 'es2017.object'\n\t\t\t| 'es2017.sharedmemory'\n\t\t\t| 'es2017.string'\n\t\t\t| 'es2017.typedarrays'\n\t\t\t| 'es2018'\n\t\t\t| 'es2018.asynciterable'\n\t\t\t| 'es2018.intl'\n\t\t\t| 'es2018.promise'\n\t\t\t| 'es2018.regexp'\n\t\t\t| 'es2019'\n\t\t\t| 'es2019.array'\n\t\t\t| 'es2019.object'\n\t\t\t| 'es2019.string'\n\t\t\t| 'es2019.symbol'\n\t\t\t| 'es2020'\n\t\t\t| 'es2020.string'\n\t\t\t| 'es2020.symbol.wellknown'\n\t\t\t| 'esnext'\n\t\t\t| 'esnext.array'\n\t\t\t| 'esnext.asynciterable'\n\t\t\t| 'esnext.bigint'\n\t\t\t| 'esnext.intl'\n\t\t\t| 'esnext.symbol'\n\t\t\t| 'dom'\n\t\t\t| 'dom.iterable'\n\t\t\t| 'scripthost'\n\t\t\t| 'webworker'\n\t\t\t| 'webworker.importscripts';\n\n\t\texport interface Plugin {\n\t\t\t[key: string]: unknown;\n\t\t\t/**\n\t\t\tPlugin name.\n\t\t\t*/\n\t\t\tname?: string;\n\t\t}\n\t}\n\n\texport interface CompilerOptions {\n\t\t/**\n\t\tThe character set of the input files.\n\n\t\t@default 'utf8'\n\t\t*/\n\t\tcharset?: string;\n\n\t\t/**\n\t\tEnables building for project references.\n\n\t\t@default true\n\t\t*/\n\t\tcomposite?: boolean;\n\n\t\t/**\n\t\tGenerates corresponding d.ts files.\n\n\t\t@default false\n\t\t*/\n\t\tdeclaration?: boolean;\n\n\t\t/**\n\t\tSpecify output directory for generated declaration files.\n\n\t\tRequires TypeScript version 2.0 or later.\n\t\t*/\n\t\tdeclarationDir?: string;\n\n\t\t/**\n\t\tShow diagnostic information.\n\n\t\t@default false\n\t\t*/\n\t\tdiagnostics?: boolean;\n\n\t\t/**\n\t\tEmit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.\n\n\t\t@default false\n\t\t*/\n\t\temitBOM?: boolean;\n\n\t\t/**\n\t\tOnly emit `.d.ts` declaration files.\n\n\t\t@default false\n\t\t*/\n\t\temitDeclarationOnly?: boolean;\n\n\t\t/**\n\t\tEnable incremental compilation.\n\n\t\t@default `composite`\n\t\t*/\n\t\tincremental?: boolean;\n\n\t\t/**\n\t\tSpecify file to store incremental compilation information.\n\n\t\t@default '.tsbuildinfo'\n\t\t*/\n\t\ttsBuildInfoFile?: string;\n\n\t\t/**\n\t\tEmit a single file with source maps instead of having a separate file.\n\n\t\t@default false\n\t\t*/\n\t\tinlineSourceMap?: boolean;\n\n\t\t/**\n\t\tEmit the source alongside the sourcemaps within a single file.\n\n\t\tRequires `--inlineSourceMap` to be set.\n\n\t\t@default false\n\t\t*/\n\t\tinlineSources?: boolean;\n\n\t\t/**\n\t\tSpecify JSX code generation: `'preserve'`, `'react'`, or `'react-native'`.\n\n\t\t@default 'preserve'\n\t\t*/\n\t\tjsx?: CompilerOptions.JSX;\n\n\t\t/**\n\t\tSpecifies the object invoked for `createElement` and `__spread` when targeting `'react'` JSX emit.\n\n\t\t@default 'React'\n\t\t*/\n\t\treactNamespace?: string;\n\n\t\t/**\n\t\tPrint names of files part of the compilation.\n\n\t\t@default false\n\t\t*/\n\t\tlistFiles?: boolean;\n\n\t\t/**\n\t\tSpecifies the location where debugger should locate map files instead of generated locations.\n\t\t*/\n\t\tmapRoot?: string;\n\n\t\t/**\n\t\tSpecify module code generation: 'None', 'CommonJS', 'AMD', 'System', 'UMD', 'ES6', 'ES2015' or 'ESNext'. Only 'AMD' and 'System' can be used in conjunction with `--outFile`. 'ES6' and 'ES2015' values may be used when targeting 'ES5' or lower.\n\n\t\t@default ['ES3', 'ES5'].includes(target) ? 'CommonJS' : 'ES6'\n\t\t*/\n\t\tmodule?: CompilerOptions.Module;\n\n\t\t/**\n\t\tSpecifies the end of line sequence to be used when emitting files: 'crlf' (Windows) or 'lf' (Unix).\n\n\t\tDefault: Platform specific\n\t\t*/\n\t\tnewLine?: CompilerOptions.NewLine;\n\n\t\t/**\n\t\tDo not emit output.\n\n\t\t@default false\n\t\t*/\n\t\tnoEmit?: boolean;\n\n\t\t/**\n\t\tDo not generate custom helper functions like `__extends` in compiled output.\n\n\t\t@default false\n\t\t*/\n\t\tnoEmitHelpers?: boolean;\n\n\t\t/**\n\t\tDo not emit outputs if any type checking errors were reported.\n\n\t\t@default false\n\t\t*/\n\t\tnoEmitOnError?: boolean;\n\n\t\t/**\n\t\tWarn on expressions and declarations with an implied 'any' type.\n\n\t\t@default false\n\t\t*/\n\t\tnoImplicitAny?: boolean;\n\n\t\t/**\n\t\tRaise error on 'this' expressions with an implied any type.\n\n\t\t@default false\n\t\t*/\n\t\tnoImplicitThis?: boolean;\n\n\t\t/**\n\t\tReport errors on unused locals.\n\n\t\tRequires TypeScript version 2.0 or later.\n\n\t\t@default false\n\t\t*/\n\t\tnoUnusedLocals?: boolean;\n\n\t\t/**\n\t\tReport errors on unused parameters.\n\n\t\tRequires TypeScript version 2.0 or later.\n\n\t\t@default false\n\t\t*/\n\t\tnoUnusedParameters?: boolean;\n\n\t\t/**\n\t\tDo not include the default library file (lib.d.ts).\n\n\t\t@default false\n\t\t*/\n\t\tnoLib?: boolean;\n\n\t\t/**\n\t\tDo not add triple-slash references or module import targets to the list of compiled files.\n\n\t\t@default false\n\t\t*/\n\t\tnoResolve?: boolean;\n\n\t\t/**\n\t\tDisable strict checking of generic signatures in function types.\n\n\t\t@default false\n\t\t*/\n\t\tnoStrictGenericChecks?: boolean;\n\n\t\t/**\n\t\t@deprecated use `skipLibCheck` instead.\n\t\t*/\n\t\tskipDefaultLibCheck?: boolean;\n\n\t\t/**\n\t\tSkip type checking of declaration files.\n\n\t\tRequires TypeScript version 2.0 or later.\n\n\t\t@default false\n\t\t*/\n\t\tskipLibCheck?: boolean;\n\n\t\t/**\n\t\tConcatenate and emit output to single file.\n\t\t*/\n\t\toutFile?: string;\n\n\t\t/**\n\t\tRedirect output structure to the directory.\n\t\t*/\n\t\toutDir?: string;\n\n\t\t/**\n\t\tDo not erase const enum declarations in generated code.\n\n\t\t@default false\n\t\t*/\n\t\tpreserveConstEnums?: boolean;\n\n\t\t/**\n\t\tDo not resolve symlinks to their real path; treat a symlinked file like a real one.\n\n\t\t@default false\n\t\t*/\n\t\tpreserveSymlinks?: boolean;\n\n\t\t/**\n\t\tKeep outdated console output in watch mode instead of clearing the screen.\n\n\t\t@default false\n\t\t*/\n\t\tpreserveWatchOutput?: boolean;\n\n\t\t/**\n\t\tStylize errors and messages using color and context (experimental).\n\n\t\t@default true // Unless piping to another program or redirecting output to a file.\n\t\t*/\n\t\tpretty?: boolean;\n\n\t\t/**\n\t\tDo not emit comments to output.\n\n\t\t@default false\n\t\t*/\n\t\tremoveComments?: boolean;\n\n\t\t/**\n\t\tSpecifies the root directory of input files.\n\n\t\tUse to control the output directory structure with `--outDir`.\n\t\t*/\n\t\trootDir?: string;\n\n\t\t/**\n\t\tUnconditionally emit imports for unresolved files.\n\n\t\t@default false\n\t\t*/\n\t\tisolatedModules?: boolean;\n\n\t\t/**\n\t\tGenerates corresponding '.map' file.\n\n\t\t@default false\n\t\t*/\n\t\tsourceMap?: boolean;\n\n\t\t/**\n\t\tSpecifies the location where debugger should locate TypeScript files instead of source locations.\n\t\t*/\n\t\tsourceRoot?: string;\n\n\t\t/**\n\t\tSuppress excess property checks for object literals.\n\n\t\t@default false\n\t\t*/\n\t\tsuppressExcessPropertyErrors?: boolean;\n\n\t\t/**\n\t\tSuppress noImplicitAny errors for indexing objects lacking index signatures.\n\n\t\t@default false\n\t\t*/\n\t\tsuppressImplicitAnyIndexErrors?: boolean;\n\n\t\t/**\n\t\tDo not emit declarations for code that has an `@internal` annotation.\n\t\t*/\n\t\tstripInternal?: boolean;\n\n\t\t/**\n\t\tSpecify ECMAScript target version.\n\n\t\t@default 'es3'\n\t\t*/\n\t\ttarget?: CompilerOptions.Target;\n\n\t\t/**\n\t\tWatch input files.\n\n\t\t@default false\n\t\t*/\n\t\twatch?: boolean;\n\n\t\t/**\n\t\tEnables experimental support for ES7 decorators.\n\n\t\t@default false\n\t\t*/\n\t\texperimentalDecorators?: boolean;\n\n\t\t/**\n\t\tEmit design-type metadata for decorated declarations in source.\n\n\t\t@default false\n\t\t*/\n\t\temitDecoratorMetadata?: boolean;\n\n\t\t/**\n\t\tSpecifies module resolution strategy: 'node' (Node) or 'classic' (TypeScript pre 1.6).\n\n\t\t@default ['AMD', 'System', 'ES6'].includes(module) ? 'classic' : 'node'\n\t\t*/\n\t\tmoduleResolution?: 'classic' | 'node';\n\n\t\t/**\n\t\tDo not report errors on unused labels.\n\n\t\t@default false\n\t\t*/\n\t\tallowUnusedLabels?: boolean;\n\n\t\t/**\n\t\tReport error when not all code paths in function return a value.\n\n\t\t@default false\n\t\t*/\n\t\tnoImplicitReturns?: boolean;\n\n\t\t/**\n\t\tReport errors for fallthrough cases in switch statement.\n\n\t\t@default false\n\t\t*/\n\t\tnoFallthroughCasesInSwitch?: boolean;\n\n\t\t/**\n\t\tDo not report errors on unreachable code.\n\n\t\t@default false\n\t\t*/\n\t\tallowUnreachableCode?: boolean;\n\n\t\t/**\n\t\tDisallow inconsistently-cased references to the same file.\n\n\t\t@default false\n\t\t*/\n\t\tforceConsistentCasingInFileNames?: boolean;\n\n\t\t/**\n\t\tBase directory to resolve non-relative module names.\n\t\t*/\n\t\tbaseUrl?: string;\n\n\t\t/**\n\t\tSpecify path mapping to be computed relative to baseUrl option.\n\t\t*/\n\t\tpaths?: {\n\t\t\t[key: string]: string[];\n\t\t};\n\n\t\t/**\n\t\tList of TypeScript language server plugins to load.\n\n\t\tRequires TypeScript version 2.3 or later.\n\t\t*/\n\t\tplugins?: CompilerOptions.Plugin[];\n\n\t\t/**\n\t\tSpecify list of root directories to be used when resolving modules.\n\t\t*/\n\t\trootDirs?: string[];\n\n\t\t/**\n\t\tSpecify list of directories for type definition files to be included.\n\n\t\tRequires TypeScript version 2.0 or later.\n\t\t*/\n\t\ttypeRoots?: string[];\n\n\t\t/**\n\t\tType declaration files to be included in compilation.\n\n\t\tRequires TypeScript version 2.0 or later.\n\t\t*/\n\t\ttypes?: string[];\n\n\t\t/**\n\t\tEnable tracing of the name resolution process.\n\n\t\t@default false\n\t\t*/\n\t\ttraceResolution?: boolean;\n\n\t\t/**\n\t\tAllow javascript files to be compiled.\n\n\t\t@default false\n\t\t*/\n\t\tallowJs?: boolean;\n\n\t\t/**\n\t\tDo not truncate error messages.\n\n\t\t@default false\n\t\t*/\n\t\tnoErrorTruncation?: boolean;\n\n\t\t/**\n\t\tAllow default imports from modules with no default export. This does not affect code emit, just typechecking.\n\n\t\t@default module === 'system' || esModuleInterop\n\t\t*/\n\t\tallowSyntheticDefaultImports?: boolean;\n\n\t\t/**\n\t\tDo not emit `'use strict'` directives in module output.\n\n\t\t@default false\n\t\t*/\n\t\tnoImplicitUseStrict?: boolean;\n\n\t\t/**\n\t\tEnable to list all emitted files.\n\n\t\tRequires TypeScript version 2.0 or later.\n\n\t\t@default false\n\t\t*/\n\t\tlistEmittedFiles?: boolean;\n\n\t\t/**\n\t\tDisable size limit for JavaScript project.\n\n\t\tRequires TypeScript version 2.0 or later.\n\n\t\t@default false\n\t\t*/\n\t\tdisableSizeLimit?: boolean;\n\n\t\t/**\n\t\tList of library files to be included in the compilation.\n\n\t\tRequires TypeScript version 2.0 or later.\n\t\t*/\n\t\tlib?: CompilerOptions.Lib[];\n\n\t\t/**\n\t\tEnable strict null checks.\n\n\t\tRequires TypeScript version 2.0 or later.\n\n\t\t@default false\n\t\t*/\n\t\tstrictNullChecks?: boolean;\n\n\t\t/**\n\t\tThe maximum dependency depth to search under `node_modules` and load JavaScript files. Only applicable with `--allowJs`.\n\n\t\t@default 0\n\t\t*/\n\t\tmaxNodeModuleJsDepth?: number;\n\n\t\t/**\n\t\tImport emit helpers (e.g. `__extends`, `__rest`, etc..) from tslib.\n\n\t\tRequires TypeScript version 2.1 or later.\n\n\t\t@default false\n\t\t*/\n\t\timportHelpers?: boolean;\n\n\t\t/**\n\t\tSpecify the JSX factory function to use when targeting React JSX emit, e.g. `React.createElement` or `h`.\n\n\t\tRequires TypeScript version 2.1 or later.\n\n\t\t@default 'React.createElement'\n\t\t*/\n\t\tjsxFactory?: string;\n\n\t\t/**\n\t\tParse in strict mode and emit `'use strict'` for each source file.\n\n\t\tRequires TypeScript version 2.1 or later.\n\n\t\t@default false\n\t\t*/\n\t\talwaysStrict?: boolean;\n\n\t\t/**\n\t\tEnable all strict type checking options.\n\n\t\tRequires TypeScript version 2.3 or later.\n\n\t\t@default false\n\t\t*/\n\t\tstrict?: boolean;\n\n\t\t/**\n\t\tEnable stricter checking of of the `bind`, `call`, and `apply` methods on functions.\n\n\t\t@default false\n\t\t*/\n\t\tstrictBindCallApply?: boolean;\n\n\t\t/**\n\t\tProvide full support for iterables in `for-of`, spread, and destructuring when targeting `ES5` or `ES3`.\n\n\t\tRequires TypeScript version 2.3 or later.\n\n\t\t@default false\n\t\t*/\n\t\tdownlevelIteration?: boolean;\n\n\t\t/**\n\t\tReport errors in `.js` files.\n\n\t\tRequires TypeScript version 2.3 or later.\n\n\t\t@default false\n\t\t*/\n\t\tcheckJs?: boolean;\n\n\t\t/**\n\t\tDisable bivariant parameter checking for function types.\n\n\t\tRequires TypeScript version 2.6 or later.\n\n\t\t@default false\n\t\t*/\n\t\tstrictFunctionTypes?: boolean;\n\n\t\t/**\n\t\tEnsure non-undefined class properties are initialized in the constructor.\n\n\t\tRequires TypeScript version 2.7 or later.\n\n\t\t@default false\n\t\t*/\n\t\tstrictPropertyInitialization?: boolean;\n\n\t\t/**\n\t\tEmit `__importStar` and `__importDefault` helpers for runtime Babel ecosystem compatibility and enable `--allowSyntheticDefaultImports` for typesystem compatibility.\n\n\t\tRequires TypeScript version 2.7 or later.\n\n\t\t@default false\n\t\t*/\n\t\tesModuleInterop?: boolean;\n\n\t\t/**\n\t\tAllow accessing UMD globals from modules.\n\n\t\t@default false\n\t\t*/\n\t\tallowUmdGlobalAccess?: boolean;\n\n\t\t/**\n\t\tResolve `keyof` to string valued property names only (no numbers or symbols).\n\n\t\tRequires TypeScript version 2.9 or later.\n\n\t\t@default false\n\t\t*/\n\t\tkeyofStringsOnly?: boolean;\n\n\t\t/**\n\t\tEmit ECMAScript standard class fields.\n\n\t\tRequires TypeScript version 3.7 or later.\n\n\t\t@default false\n\t\t*/\n\t\tuseDefineForClassFields?: boolean;\n\n\t\t/**\n\t\tGenerates a sourcemap for each corresponding `.d.ts` file.\n\n\t\tRequires TypeScript version 2.9 or later.\n\n\t\t@default false\n\t\t*/\n\t\tdeclarationMap?: boolean;\n\n\t\t/**\n\t\tInclude modules imported with `.json` extension.\n\n\t\tRequires TypeScript version 2.9 or later.\n\n\t\t@default false\n\t\t*/\n\t\tresolveJsonModule?: boolean;\n\t}\n\n\t/**\n\tAuto type (.d.ts) acquisition options for this project.\n\n\tRequires TypeScript version 2.1 or later.\n\t*/\n\texport interface TypeAcquisition {\n\t\t/**\n\t\tEnable auto type acquisition.\n\t\t*/\n\t\tenable?: boolean;\n\n\t\t/**\n\t\tSpecifies a list of type declarations to be included in auto type acquisition. For example, `['jquery', 'lodash']`.\n\t\t*/\n\t\tinclude?: string[];\n\n\t\t/**\n\t\tSpecifies a list of type declarations to be excluded from auto type acquisition. For example, `['jquery', 'lodash']`.\n\t\t*/\n\t\texclude?: string[];\n\t}\n\n\texport interface References {\n\t\t/**\n\t\tA normalized path on disk.\n\t\t*/\n\t\tpath: string;\n\n\t\t/**\n\t\tThe path as the user originally wrote it.\n\t\t*/\n\t\toriginalPath?: string;\n\n\t\t/**\n\t\tTrue if the output of this reference should be prepended to the output of this project.\n\n\t\tOnly valid for `--outFile` compilations.\n\t\t*/\n\t\tprepend?: boolean;\n\n\t\t/**\n\t\tTrue if it is intended that this reference form a circularity.\n\t\t*/\n\t\tcircular?: boolean;\n\t}\n}\n\nexport interface TsConfigJson {\n\t/**\n\tInstructs the TypeScript compiler how to compile `.ts` files.\n\t*/\n\tcompilerOptions?: TsConfigJson.CompilerOptions;\n\n\t/**\n\tAuto type (.d.ts) acquisition options for this project.\n\n\tRequires TypeScript version 2.1 or later.\n\t*/\n\ttypeAcquisition?: TsConfigJson.TypeAcquisition;\n\n\t/**\n\tEnable Compile-on-Save for this project.\n\t*/\n\tcompileOnSave?: boolean;\n\n\t/**\n\tPath to base configuration file to inherit from.\n\n\tRequires TypeScript version 2.1 or later.\n\t*/\n\textends?: string;\n\n\t/**\n\tIf no `files` or `include` property is present in a `tsconfig.json`, the compiler defaults to including all files in the containing directory and subdirectories except those specified by `exclude`. When a `files` property is specified, only those files and those specified by `include` are included.\n\t*/\n\tfiles?: string[];\n\n\t/**\n\tSpecifies a list of files to be excluded from compilation. The `exclude` property only affects the files included via the `include` property and not the `files` property.\n\n\tGlob patterns require TypeScript version 2.0 or later.\n\t*/\n\texclude?: string[];\n\n\t/**\n\tSpecifies a list of glob patterns that match files to be included in compilation.\n\n\tIf no `files` or `include` property is present in a `tsconfig.json`, the compiler defaults to including all files in the containing directory and subdirectories except those specified by `exclude`.\n\n\tRequires TypeScript version 2.0 or later.\n\t*/\n\tinclude?: string[];\n\n\t/**\n\tReferenced projects.\n\n\tRequires TypeScript version 3.0 or later.\n\t*/\n\treferences?: TsConfigJson.References[];\n}\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}