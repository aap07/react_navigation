{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar GestureHandlerOrchestrator = _createClass(function GestureHandlerOrchestrator() {\n  _classCallCheck(this, GestureHandlerOrchestrator);\n});\nexport { GestureHandlerOrchestrator as default };","map":{"version":3,"names":["GestureHandlerOrchestrator","_createClass","_classCallCheck","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web/tools/GestureHandlerOrchestrator.d.ts"],"sourcesContent":["import { State } from '../../State';\nimport GestureHandler from '../handlers/GestureHandler';\nexport default class GestureHandlerOrchestrator {\n    private static instance;\n    private gestureHandlers;\n    private awaitingHandlers;\n    private handlersToCancel;\n    private handlingChangeSemaphore;\n    private activationIndex;\n    private constructor();\n    private scheduleFinishedHandlersCleanup;\n    private cleanHandler;\n    removeHandlerFromOrchestrator(handler: GestureHandler): void;\n    private cleanupFinishedHandlers;\n    private hasOtherHandlerToWaitFor;\n    private tryActivate;\n    private shouldActivate;\n    private cleanupAwaitingHandlers;\n    onHandlerStateChange(handler: GestureHandler, newState: State, oldState: State, sendIfDisabled?: boolean): void;\n    private makeActive;\n    private addAwaitingHandler;\n    recordHandlerIfNotPresent(handler: GestureHandler): void;\n    private shouldHandlerWaitForOther;\n    private canRunSimultaneously;\n    private shouldHandlerBeCancelledBy;\n    private checkOverlap;\n    private isFinished;\n    cancelMouseAndPenGestures(currentHandler: GestureHandler): void;\n    static getInstance(): GestureHandlerOrchestrator;\n}\n"],"mappings":";;IAEqBA,0BAA0B,GAAAC,YAAA,UAAAD,2BAAA;EAAAE,eAAA,OAAAF,0BAAA;AAAA;AAAA,SAA1BA,0BAA0B,IAAAG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}