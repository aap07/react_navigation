{"ast":null,"code":"'use strict';\n\nfunction upperCaseFirst(inString) {\n  return inString[0].toUpperCase() + inString.slice(1);\n}\nfunction getInterfaceJavaClassName(componentName) {\n  return `${componentName.replace(/^RCT/, '')}ManagerInterface`;\n}\nfunction getDelegateJavaClassName(componentName) {\n  return `${componentName.replace(/^RCT/, '')}ManagerDelegate`;\n}\nfunction toSafeJavaString(input, shouldUpperCaseFirst) {\n  var parts = input.split('-');\n  if (shouldUpperCaseFirst === false) {\n    return parts.join('');\n  }\n  return parts.map(upperCaseFirst).join('');\n}\nfunction getImports(component, type) {\n  var imports = new Set();\n  component.extendsProps.forEach(function (extendProps) {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            imports.add('import android.view.View;');\n            return;\n          default:\n            extendProps.knownTypeName;\n            throw new Error('Invalid knownTypeName');\n        }\n      default:\n        extendProps.type;\n        throw new Error('Invalid extended type');\n    }\n  });\n  function addImportsForNativeName(name) {\n    switch (name) {\n      case 'ColorPrimitive':\n        if (type === 'delegate') {\n          imports.add('import com.facebook.react.bridge.ColorPropConverter;');\n        }\n        return;\n      case 'ImageSourcePrimitive':\n        imports.add('import com.facebook.react.bridge.ReadableMap;');\n        return;\n      case 'PointPrimitive':\n        imports.add('import com.facebook.react.bridge.ReadableMap;');\n        return;\n      case 'EdgeInsetsPrimitive':\n        imports.add('import com.facebook.react.bridge.ReadableMap;');\n        return;\n      case 'DimensionPrimitive':\n        if (type === 'delegate') {\n          imports.add('import com.facebook.react.bridge.DimensionPropConverter;');\n        } else {\n          imports.add('import com.facebook.yoga.YogaValue;');\n        }\n        return;\n      default:\n        name;\n        throw new Error(`Invalid ReservedPropTypeAnnotation name, got ${name}`);\n    }\n  }\n  component.props.forEach(function (prop) {\n    var typeAnnotation = prop.typeAnnotation;\n    if (typeAnnotation.type === 'ReservedPropTypeAnnotation') {\n      addImportsForNativeName(typeAnnotation.name);\n    }\n    if (typeAnnotation.type === 'ArrayTypeAnnotation') {\n      imports.add('import com.facebook.react.bridge.ReadableArray;');\n    }\n    if (typeAnnotation.type === 'ObjectTypeAnnotation') {\n      imports.add('import com.facebook.react.bridge.ReadableMap;');\n    }\n    if (typeAnnotation.type === 'MixedTypeAnnotation') {\n      if (type === 'delegate') {\n        imports.add('import com.facebook.react.bridge.DynamicFromObject;');\n      } else {\n        imports.add('import com.facebook.react.bridge.Dynamic;');\n      }\n    }\n  });\n  return imports;\n}\nmodule.exports = {\n  getInterfaceJavaClassName: getInterfaceJavaClassName,\n  getDelegateJavaClassName: getDelegateJavaClassName,\n  toSafeJavaString: toSafeJavaString,\n  getImports: getImports\n};","map":{"version":3,"names":["upperCaseFirst","inString","toUpperCase","slice","getInterfaceJavaClassName","componentName","replace","getDelegateJavaClassName","toSafeJavaString","input","shouldUpperCaseFirst","parts","split","join","map","getImports","component","type","imports","Set","extendsProps","forEach","extendProps","knownTypeName","add","Error","addImportsForNativeName","name","props","prop","typeAnnotation","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/JavaHelpers.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nfunction upperCaseFirst(inString) {\n  return inString[0].toUpperCase() + inString.slice(1);\n}\nfunction getInterfaceJavaClassName(componentName) {\n  return `${componentName.replace(/^RCT/, '')}ManagerInterface`;\n}\nfunction getDelegateJavaClassName(componentName) {\n  return `${componentName.replace(/^RCT/, '')}ManagerDelegate`;\n}\nfunction toSafeJavaString(input, shouldUpperCaseFirst) {\n  const parts = input.split('-');\n  if (shouldUpperCaseFirst === false) {\n    return parts.join('');\n  }\n  return parts.map(upperCaseFirst).join('');\n}\nfunction getImports(component, type) {\n  const imports = new Set();\n  component.extendsProps.forEach(extendProps => {\n    switch (extendProps.type) {\n      case 'ReactNativeBuiltInType':\n        switch (extendProps.knownTypeName) {\n          case 'ReactNativeCoreViewProps':\n            imports.add('import android.view.View;');\n            return;\n          default:\n            extendProps.knownTypeName;\n            throw new Error('Invalid knownTypeName');\n        }\n      default:\n        extendProps.type;\n        throw new Error('Invalid extended type');\n    }\n  });\n  function addImportsForNativeName(name) {\n    switch (name) {\n      case 'ColorPrimitive':\n        if (type === 'delegate') {\n          imports.add('import com.facebook.react.bridge.ColorPropConverter;');\n        }\n        return;\n      case 'ImageSourcePrimitive':\n        imports.add('import com.facebook.react.bridge.ReadableMap;');\n        return;\n      case 'PointPrimitive':\n        imports.add('import com.facebook.react.bridge.ReadableMap;');\n        return;\n      case 'EdgeInsetsPrimitive':\n        imports.add('import com.facebook.react.bridge.ReadableMap;');\n        return;\n      case 'DimensionPrimitive':\n        if (type === 'delegate') {\n          imports.add(\n            'import com.facebook.react.bridge.DimensionPropConverter;',\n          );\n        } else {\n          imports.add('import com.facebook.yoga.YogaValue;');\n        }\n        return;\n      default:\n        name;\n        throw new Error(`Invalid ReservedPropTypeAnnotation name, got ${name}`);\n    }\n  }\n  component.props.forEach(prop => {\n    const typeAnnotation = prop.typeAnnotation;\n    if (typeAnnotation.type === 'ReservedPropTypeAnnotation') {\n      addImportsForNativeName(typeAnnotation.name);\n    }\n    if (typeAnnotation.type === 'ArrayTypeAnnotation') {\n      imports.add('import com.facebook.react.bridge.ReadableArray;');\n    }\n    if (typeAnnotation.type === 'ObjectTypeAnnotation') {\n      imports.add('import com.facebook.react.bridge.ReadableMap;');\n    }\n    if (typeAnnotation.type === 'MixedTypeAnnotation') {\n      if (type === 'delegate') {\n        imports.add('import com.facebook.react.bridge.DynamicFromObject;');\n      } else {\n        imports.add('import com.facebook.react.bridge.Dynamic;');\n      }\n    }\n  });\n  return imports;\n}\nmodule.exports = {\n  getInterfaceJavaClassName,\n  getDelegateJavaClassName,\n  toSafeJavaString,\n  getImports,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}