{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar WindowsPlatform = _createClass(function WindowsPlatform() {\n  _classCallCheck(this, WindowsPlatform);\n});\nexport { WindowsPlatform as default };","map":{"version":3,"names":["WindowsPlatform","_createClass","_classCallCheck","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/devcert/dist/platforms/win32.d.ts"],"sourcesContent":["import { Options } from '../index';\nimport { Platform } from '.';\nexport default class WindowsPlatform implements Platform {\n    private HOST_FILE_PATH;\n    /**\n     * Windows is at least simple. Like macOS, most applications will delegate to\n     * the system trust store, which is updated with the confusingly named\n     * `certutil` exe (not the same as the NSS/Mozilla certutil). Firefox does it's\n     * own thing as usual, and getting a copy of NSS certutil onto the Windows\n     * machine to try updating the Firefox store is basically a nightmare, so we\n     * don't even try it - we just bail out to the GUI.\n     */\n    addToTrustStores(certificatePath: string, options?: Options): Promise<void>;\n    removeFromTrustStores(certificatePath: string): void;\n    addDomainToHostFileIfMissing(domain: string): Promise<void>;\n    deleteProtectedFiles(filepath: string): void;\n    readProtectedFile(filepath: string): Promise<string>;\n    writeProtectedFile(filepath: string, contents: string): Promise<void>;\n    private encrypt;\n    private decrypt;\n}\n"],"mappings":";;IAEqBA,eAAe,GAAAC,YAAA,UAAAD,gBAAA;EAAAE,eAAA,OAAAF,eAAA;AAAA;AAAA,SAAfA,eAAe,IAAAG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}