{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/ios/XcodeProjectFile.d.ts"],"sourcesContent":["/// <reference types=\"xcode\" />\nimport { ConfigPlugin, XcodeProject } from '../Plugin.types';\n/**\n * Create a build source file and link it to Xcode.\n *\n * @param config\n * @param props.filePath relative to the build source folder. ex: `ViewController.swift` would be created in `ios/myapp/ViewController.swift`.\n * @param props.contents file contents to write.\n * @param props.overwrite should the contents overwrite any existing file in the same location on disk.\n * @returns\n */\nexport declare const withBuildSourceFile: ConfigPlugin<{\n    filePath: string;\n    contents: string;\n    overwrite?: boolean;\n}>;\n/**\n * Add a source file to the Xcode project and write it to the file system.\n *\n * @param nativeProjectRoot absolute path to the native app root `user/app/ios`\n * @param filePath path relative to the `nativeProjectRoot` for the file to create `user/app/ios/myapp/foobar.swift`\n * @param fileContents string file contents to write to the `filePath`\n * @param overwrite should write file even if one already exists\n */\nexport declare function createBuildSourceFile({ project, nativeProjectRoot, filePath, fileContents, overwrite, }: {\n    project: XcodeProject;\n    nativeProjectRoot: string;\n    filePath: string;\n    fileContents: string;\n    overwrite?: boolean;\n}): XcodeProject;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}