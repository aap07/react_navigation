{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { maybeInitializeFabric } from \"../init\";\nimport GestureHandlerRootViewContext from \"../GestureHandlerRootViewContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function GestureHandlerRootView(props) {\n  maybeInitializeFabric();\n  return _jsx(GestureHandlerRootViewContext.Provider, {\n    value: true,\n    children: _jsx(View, _objectSpread({}, props))\n  });\n}","map":{"version":3,"names":["React","View","maybeInitializeFabric","GestureHandlerRootViewContext","jsx","_jsx","GestureHandlerRootView","props","Provider","value","children","_objectSpread"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/components/GestureHandlerRootView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { View, ViewProps } from 'react-native';\nimport { maybeInitializeFabric } from '../init';\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\n\nexport interface GestureHandlerRootViewProps\n  extends PropsWithChildren<ViewProps> {}\n\nexport default function GestureHandlerRootView(\n  props: GestureHandlerRootViewProps\n) {\n  // try initialize fabric on the first render, at this point we can\n  // reliably check if fabric is enabled (the function contains a flag\n  // to make sure it's called only once)\n  maybeInitializeFabric();\n\n  return (\n    <GestureHandlerRootViewContext.Provider value>\n      <View {...props} />\n    </GestureHandlerRootViewContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAG/B,SAASC,qBAAqB;AAC9B,OAAOC,6BAA6B;AAAyC,SAAAC,GAAA,IAAAC,IAAA;AAK7E,eAAe,SAASC,sBAAsBA,CAC5CC,KAAkC,EAClC;EAIAL,qBAAqB,CAAC,CAAC;EAEvB,OACEG,IAAA,CAACF,6BAA6B,CAACK,QAAQ;IAACC,KAAK;IAAAC,QAAA,EAC3CL,IAAA,CAACJ,IAAI,EAAAU,aAAA,KAAKJ,KAAK,CAAG;EAAC,CACmB,CAAC;AAE7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}