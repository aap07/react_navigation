{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/webpack-config/webpack/utils/search.d.ts"],"sourcesContent":["import { Configuration, RuleSetCondition, RuleSetRule, RuleSetUse, RuleSetUseItem, WebpackPluginInstance } from 'webpack';\ninterface RuleItem {\n    rule: RuleSetRule;\n    index: number;\n}\ninterface PluginItem {\n    plugin: WebpackPluginInstance;\n    index: number;\n}\n/**\n *\n * @param rules\n * @category utils\n */\nexport declare function getRulesAsItems(rules: RuleSetRule[]): RuleItem[];\n/**\n *\n * @param config\n * @category utils\n */\nexport declare function getRules(config: Configuration): RuleItem[];\n/**\n * Get the babel-loader rule created by `@expo/webpack-config/loaders`\n *\n * @param config\n * @category utils\n */\nexport declare function getExpoBabelLoader(config: Configuration): RuleSetRule | null;\n/**\n *\n * @param rules\n * @category utils\n */\nexport declare function getRulesFromRules(rules: (RuleSetRule | '...')[]): RuleSetRule[];\n/**\n *\n * @param config\n * @param files\n * @category utils\n */\nexport declare function getRulesByMatchingFiles(config: Configuration, files: string[]): {\n    [key: string]: RuleItem[];\n};\n/**\n *\n * @param config\n * @param files\n * @category utils\n */\nexport declare function rulesMatchAnyFiles(config: Configuration, files: string[]): boolean;\n/**\n *\n * @param condition\n * @param file\n * @category utils\n */\nexport declare function conditionMatchesFile(condition: RuleSetCondition | undefined, file: string): boolean;\n/**\n *\n * @param param0\n * @category utils\n */\nexport declare function getPlugins({ plugins }: Configuration): PluginItem[];\n/**\n *\n * @param config\n * @param name\n * @category utils\n */\nexport declare function getPluginsByName(config: Configuration, name: string): PluginItem[];\n/**\n *\n * @param loader\n * @category utils\n */\nexport declare function isRuleSetItem(loader: RuleSetUse): loader is RuleSetUseItem;\nexport {};\n"],"mappings":"AA4EA"},"metadata":{},"sourceType":"module","externalDependencies":[]}