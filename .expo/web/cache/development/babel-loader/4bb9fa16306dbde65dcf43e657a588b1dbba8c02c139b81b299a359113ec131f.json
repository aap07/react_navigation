{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/handlers/createHandler.d.ts"],"sourcesContent":["import * as React from 'react';\nimport { BaseGestureHandlerProps } from './gestureHandlerCommon';\ndeclare type CreateHandlerArgs<HandlerPropsT extends Record<string, unknown>> = Readonly<{\n    name: string;\n    allowedProps: Readonly<Extract<keyof HandlerPropsT, string>[]>;\n    config: Readonly<Record<string, unknown>>;\n    transformProps?: (props: HandlerPropsT) => HandlerPropsT;\n    customNativeProps?: Readonly<string[]>;\n}>;\nexport default function createHandler<T extends BaseGestureHandlerProps<U>, U extends Record<string, unknown>>({ name, allowedProps, config, transformProps, customNativeProps, }: CreateHandlerArgs<T>): React.ComponentType<T & React.RefAttributes<any>>;\nexport {};\n"],"mappings":"AAUA"},"metadata":{},"sourceType":"module","externalDependencies":[]}