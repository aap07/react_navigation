{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config/build/evalConfig.d.ts"],"sourcesContent":["import { AppJSONConfig, ConfigContext, ExpoConfig } from './Config.types';\ntype RawDynamicConfig = AppJSONConfig | Partial<ExpoConfig> | null;\nexport type DynamicConfigResults = {\n    config: RawDynamicConfig;\n    exportedObjectType: string;\n};\n/**\n * Transpile and evaluate the dynamic config object.\n * This method is shared between the standard reading method in getConfig, and the headless script.\n *\n * @param options configFile path to the dynamic app.config.*, request to send to the dynamic config if it exports a function.\n * @returns the serialized and evaluated config along with the exported object type (object or function).\n */\nexport declare function evalConfig(configFile: string, request: ConfigContext | null): DynamicConfigResults;\n/**\n * - Resolve the exported contents of an Expo config (be it default or module.exports)\n * - Assert no promise exports\n * - Return config type\n * - Serialize config\n *\n * @param result\n * @param configFile\n * @param request\n */\nexport declare function resolveConfigExport(result: any, configFile: string, request: ConfigContext | null): {\n    config: any;\n    exportedObjectType: \"string\" | \"number\" | \"bigint\" | \"boolean\" | \"symbol\" | \"undefined\" | \"object\" | \"function\";\n};\nexport {};\n"],"mappings":"AA4BA"},"metadata":{},"sourceType":"module","externalDependencies":[]}