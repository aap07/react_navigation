{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar log = require(\"../log.js\");\nvar stringify = require(\"../stringify/stringify.js\");\nvar identity = require(\"./identity.js\");\nvar Scalar = require(\"./Scalar.js\");\nvar toJS = require(\"./toJS.js\");\nvar MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, _ref) {\n  var key = _ref.key,\n    value = _ref.value;\n  if (ctx != null && ctx.doc.schema.merge && isMergeKey(key)) {\n    value = identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (identity.isSeq(value)) for (var it of value.items) mergeToJSMap(ctx, map, it);else if (Array.isArray(value)) for (var _it of value) mergeToJSMap(ctx, map, _it);else mergeToJSMap(ctx, map, value);\n  } else {\n    var jsKey = toJS.toJS(key, '', ctx);\n    if (map instanceof Map) {\n      map.set(jsKey, toJS.toJS(value, jsKey, ctx));\n    } else if (map instanceof Set) {\n      map.add(jsKey);\n    } else {\n      var stringKey = stringifyKey(key, jsKey, ctx);\n      var jsValue = toJS.toJS(value, stringKey, ctx);\n      if (stringKey in map) Object.defineProperty(map, stringKey, {\n        value: jsValue,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });else map[stringKey] = jsValue;\n    }\n  }\n  return map;\n}\nvar isMergeKey = function isMergeKey(key) {\n  return key === MERGE_KEY || identity.isScalar(key) && key.value === MERGE_KEY && (!key.type || key.type === Scalar.Scalar.PLAIN);\n};\nfunction mergeToJSMap(ctx, map, value) {\n  var source = ctx && identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n  if (!identity.isMap(source)) throw new Error('Merge sources must be maps or map aliases');\n  var srcMap = source.toJSON(null, ctx, Map);\n  for (var _ref2 of srcMap) {\n    var _ref3 = _slicedToArray(_ref2, 2);\n    var key = _ref3[0];\n    var _value = _ref3[1];\n    if (map instanceof Map) {\n      if (!map.has(key)) map.set(key, _value);\n    } else if (map instanceof Set) {\n      map.add(key);\n    } else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n      Object.defineProperty(map, key, {\n        value: _value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      });\n    }\n  }\n  return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return '';\n  if (typeof jsKey !== 'object') return String(jsKey);\n  if (identity.isNode(key) && ctx != null && ctx.doc) {\n    var strCtx = stringify.createStringifyContext(ctx.doc, {});\n    strCtx.anchors = new Set();\n    for (var node of ctx.anchors.keys()) strCtx.anchors.add(node.anchor);\n    strCtx.inFlow = true;\n    strCtx.inStringifyKey = true;\n    var strKey = key.toString(strCtx);\n    if (!ctx.mapKeyWarned) {\n      var jsonStr = JSON.stringify(strKey);\n      if (jsonStr.length > 40) jsonStr = jsonStr.substring(0, 36) + '...\"';\n      log.warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n      ctx.mapKeyWarned = true;\n    }\n    return strKey;\n  }\n  return JSON.stringify(jsKey);\n}\nexports.addPairToJSMap = addPairToJSMap;","map":{"version":3,"names":["_slicedToArray","require","log","stringify","identity","Scalar","toJS","MERGE_KEY","addPairToJSMap","ctx","map","_ref","key","value","doc","schema","merge","isMergeKey","isAlias","resolve","isSeq","it","items","mergeToJSMap","Array","isArray","jsKey","Map","set","Set","add","stringKey","stringifyKey","jsValue","Object","defineProperty","writable","enumerable","configurable","isScalar","type","PLAIN","source","isMap","Error","srcMap","toJSON","_ref2","_ref3","has","prototype","hasOwnProperty","call","String","isNode","strCtx","createStringifyContext","anchors","node","keys","anchor","inFlow","inStringifyKey","strKey","toString","mapKeyWarned","jsonStr","JSON","length","substring","warn","options","logLevel","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/nodes/addPairToJSMap.js"],"sourcesContent":["'use strict';\n\nvar log = require('../log.js');\nvar stringify = require('../stringify/stringify.js');\nvar identity = require('./identity.js');\nvar Scalar = require('./Scalar.js');\nvar toJS = require('./toJS.js');\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (identity.isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS.toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS.toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS.toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (identity.isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && identity.isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!identity.isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (identity.isNode(key) && ctx?.doc) {\n        const strCtx = stringify.createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            log.warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexports.addPairToJSMap = addPairToJSMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}