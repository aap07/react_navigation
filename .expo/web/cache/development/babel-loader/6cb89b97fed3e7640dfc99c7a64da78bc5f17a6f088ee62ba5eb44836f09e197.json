{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"id\", \"initialRouteName\", \"children\", \"screenListeners\", \"screenOptions\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _warnOnce = _interopRequireDefault(require(\"warn-once\"));\nvar _StackView = _interopRequireDefault(require(\"../views/Stack/StackView\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction StackNavigator(_ref) {\n  var id = _ref.id,\n    initialRouteName = _ref.initialRouteName,\n    children = _ref.children,\n    screenListeners = _ref.screenListeners,\n    screenOptions = _ref.screenOptions,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var mode = rest.mode;\n  (0, _warnOnce.default)(mode != null, `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`);\n  var headerMode = rest.headerMode;\n  (0, _warnOnce.default)(headerMode === 'none', `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`);\n  (0, _warnOnce.default)(headerMode != null && headerMode !== 'none', `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`);\n  var keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\n  (0, _warnOnce.default)(keyboardHandlingEnabled !== undefined, `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`);\n  var defaultScreenOptions = {\n    presentation: mode,\n    headerShown: headerMode ? headerMode !== 'none' : true,\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\n    keyboardHandlingEnabled: keyboardHandlingEnabled\n  };\n  var _ref2 = (0, _native.useNavigationBuilder)(_native.StackRouter, {\n      id: id,\n      initialRouteName: initialRouteName,\n      children: children,\n      screenListeners: screenListeners,\n      screenOptions: screenOptions,\n      defaultScreenOptions: defaultScreenOptions\n    }),\n    state = _ref2.state,\n    descriptors = _ref2.descriptors,\n    navigation = _ref2.navigation,\n    NavigationContent = _ref2.NavigationContent;\n  React.useEffect(function () {\n    var _navigation$addListen;\n    return (_navigation$addListen = navigation.addListener) === null || _navigation$addListen === void 0 ? void 0 : _navigation$addListen.call(navigation, 'tabPress', function (e) {\n      var isFocused = navigation.isFocused();\n      requestAnimationFrame(function () {\n        if (state.index > 0 && isFocused && !e.defaultPrevented) {\n          navigation.dispatch(_objectSpread(_objectSpread({}, _native.StackActions.popToTop()), {}, {\n            target: state.key\n          }));\n        }\n      });\n    });\n  }, [navigation, state.index, state.key]);\n  return React.createElement(NavigationContent, null, React.createElement(_StackView.default, _extends({}, rest, {\n    state: state,\n    descriptors: descriptors,\n    navigation: navigation\n  })));\n}\nvar _default = (0, _native.createNavigatorFactory)(StackNavigator);\nexports.default = _default;","map":{"version":3,"names":["_native","require","React","_interopRequireWildcard","_warnOnce","_interopRequireDefault","_StackView","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","StackNavigator","_ref","id","initialRouteName","children","screenListeners","screenOptions","rest","_objectWithoutProperties","_excluded","mode","headerMode","keyboardHandlingEnabled","undefined","defaultScreenOptions","presentation","headerShown","_ref2","useNavigationBuilder","StackRouter","state","descriptors","navigation","NavigationContent","useEffect","_navigation$addListen","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","_objectSpread","StackActions","popToTop","createElement","_default","createNavigatorFactory","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@react-navigation\\stack\\src\\navigators\\createStackNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  EventArg,\n  ParamListBase,\n  StackActionHelpers,\n  StackActions,\n  StackNavigationState,\n  StackRouter,\n  StackRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\n\nimport type {\n  StackHeaderMode,\n  StackNavigationConfig,\n  StackNavigationEventMap,\n  StackNavigationOptions,\n} from '../types';\nimport StackView from '../views/Stack/StackView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap\n> &\n  StackRouterOptions &\n  StackNavigationConfig;\n\nfunction StackNavigator({\n  id,\n  initialRouteName,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  // @ts-expect-error: mode is deprecated\n  const mode = rest.mode as 'card' | 'modal' | undefined;\n\n  warnOnce(\n    mode != null,\n    `Stack Navigator: 'mode=\"${mode}\"' is deprecated. Use 'presentation: \"${mode}\"' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator#presentation for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const headerMode = rest.headerMode as StackHeaderMode | 'none' | undefined;\n\n  warnOnce(\n    headerMode === 'none',\n    `Stack Navigator: 'headerMode=\"none\"' is deprecated. Use 'headerShown: false' in 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headershown for more details.`\n  );\n\n  warnOnce(\n    headerMode != null && headerMode !== 'none',\n    `Stack Navigator: 'headerMode' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#headermode for more details.`\n  );\n\n  // @ts-expect-error: headerMode='none' is deprecated\n  const keyboardHandlingEnabled = rest.keyboardHandlingEnabled;\n\n  warnOnce(\n    keyboardHandlingEnabled !== undefined,\n    `Stack Navigator: 'keyboardHandlingEnabled' is moved to 'options'. Moved it to 'screenOptions' to keep current behavior.\\n\\nSee https://reactnavigation.org/docs/stack-navigator/#keyboardhandlingenabled for more details.`\n  );\n\n  const defaultScreenOptions: StackNavigationOptions = {\n    presentation: mode,\n    headerShown: headerMode ? headerMode !== 'none' : true,\n    headerMode: headerMode && headerMode !== 'none' ? headerMode : undefined,\n    keyboardHandlingEnabled,\n  };\n\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      StackNavigationOptions,\n      StackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      screenListeners,\n      screenOptions,\n      defaultScreenOptions,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as unknown as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <StackView\n        {...rest}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  StackNavigationState<ParamListBase>,\n  StackNavigationOptions,\n  StackNavigationEventMap,\n  typeof StackNavigator\n>(StackNavigator);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}