{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _excluded = [\"prefersGlobalInstall\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PackageManager = _interopRequireWildcard(require(\"@expo/package-manager\"));\nvar _requireg = _interopRequireDefault(require(\"requireg\"));\nvar _resolveFrom = _interopRequireDefault(require(\"resolve-from\"));\nvar _semver = _interopRequireDefault(require(\"semver\"));\nvar Log = _interopRequireWildcard(require(\"../../../log\"));\nvar _delay = require(\"../../../utils/delay\");\nvar _env = require(\"../../../utils/env\");\nvar _errors = require(\"../../../utils/errors\");\nvar _prompts = require(\"../../../utils/prompts\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar _ref;\nvar debug = require(\"debug\")(\"expo:doctor:externalModule\");\nvar ExternalModuleVersionError = function (_errors$CommandError) {\n  _inherits(ExternalModuleVersionError, _errors$CommandError);\n  var _super = _createSuper(ExternalModuleVersionError);\n  function ExternalModuleVersionError(message, shouldGloballyInstall) {\n    var _this;\n    _classCallCheck(this, ExternalModuleVersionError);\n    _this = _super.call(this, \"EXTERNAL_MODULE_VERSION\", message);\n    _this.shouldGloballyInstall = shouldGloballyInstall;\n    return _this;\n  }\n  return _createClass(ExternalModuleVersionError);\n}(_errors.CommandError);\nexports.ExternalModuleVersionError = ExternalModuleVersionError;\nvar ExternalModule = function () {\n  function ExternalModule(projectRoot, pkg, promptMessage) {\n    _classCallCheck(this, ExternalModule);\n    this.projectRoot = projectRoot;\n    this.pkg = pkg;\n    this.promptMessage = promptMessage;\n    this.instance = null;\n  }\n  _createClass(ExternalModule, [{\n    key: \"resolveAsync\",\n    value: function () {\n      var _resolveAsync = _asyncToGenerator(function* () {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var prefersGlobalInstall = _ref2.prefersGlobalInstall,\n          options = _objectWithoutProperties(_ref2, _excluded);\n        try {\n          var ref;\n          return (ref = this.getVersioned()) != null ? ref : this.installAsync(_objectSpread(_objectSpread({}, options), {}, {\n            shouldGloballyInstall: prefersGlobalInstall\n          }));\n        } catch (error) {\n          if (error instanceof ExternalModuleVersionError) {\n            var _shouldGloballyInstall;\n            return this.installAsync(_objectSpread(_objectSpread({}, options), {}, {\n              shouldGloballyInstall: (_shouldGloballyInstall = error.shouldGloballyInstall) != null ? _shouldGloballyInstall : prefersGlobalInstall\n            }));\n          }\n          throw error;\n        }\n      });\n      function resolveAsync() {\n        return _resolveAsync.apply(this, arguments);\n      }\n      return resolveAsync;\n    }()\n  }, {\n    key: \"installAsync\",\n    value: function () {\n      var _installAsync = _asyncToGenerator(function* () {\n        var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$shouldPrompt = _ref3.shouldPrompt,\n          shouldPrompt = _ref3$shouldPrompt === void 0 ? true : _ref3$shouldPrompt,\n          autoInstall = _ref3.autoInstall,\n          shouldGloballyInstall = _ref3.shouldGloballyInstall;\n        var packageName = [this.pkg.name, this.pkg.versionRange].join(\"@\");\n        if (!autoInstall) {\n          yield (0, _delay).delayAsync(100);\n        }\n        var answer = autoInstall || shouldPrompt && (yield (0, _prompts).confirmAsync({\n          message: this.promptMessage(packageName),\n          initial: true\n        }));\n        if (answer) {\n          Log.log(`Installing ${packageName}...`);\n          var packageManager = shouldGloballyInstall ? new PackageManager.NpmPackageManager({\n            cwd: this.projectRoot,\n            log: Log.log,\n            silent: !(_env.env.EXPO_DEBUG || _env.env.CI)\n          }) : PackageManager.createForProject(this.projectRoot, {\n            silent: !(_env.env.EXPO_DEBUG || _env.env.CI)\n          });\n          try {\n            if (shouldGloballyInstall) {\n              yield packageManager.addGlobalAsync([packageName]);\n            } else {\n              yield packageManager.addDevAsync([packageName]);\n            }\n            Log.log(`Installed ${packageName}`);\n          } catch (error) {\n            error.message = `Failed to install ${packageName} ${shouldGloballyInstall ? \"globally\" : \"locally\"}: ${error.message}`;\n            throw error;\n          }\n          return yield this.resolveAsync({\n            shouldPrompt: false\n          });\n        }\n        throw new _errors.CommandError(\"EXTERNAL_MODULE_AVAILABILITY\", `Please install ${packageName} and try again`);\n      });\n      function installAsync() {\n        return _installAsync.apply(this, arguments);\n      }\n      return installAsync;\n    }()\n  }, {\n    key: \"get\",\n    value: function get() {\n      try {\n        return this.getVersioned();\n      } catch (_unused) {\n        return null;\n      }\n    }\n  }, {\n    key: \"getVersioned\",\n    value: function getVersioned() {\n      var ref, _instance;\n      (_instance = (_ref = this).instance) != null ? _instance : _ref.instance = (ref = this._resolveModule(true)) != null ? ref : this._resolveModule(false);\n      return this.instance;\n    }\n  }, {\n    key: \"_require\",\n    value: function _require(moduleId) {\n      return require(moduleId);\n    }\n  }, {\n    key: \"_resolveLocal\",\n    value: function _resolveLocal(moduleId) {\n      return (0, _resolveFrom).default(this.projectRoot, moduleId);\n    }\n  }, {\n    key: \"_resolveGlobal\",\n    value: function _resolveGlobal(moduleId) {\n      return _requireg.default.resolve(moduleId);\n    }\n  }, {\n    key: \"_resolveModule\",\n    value: function _resolveModule(isLocal) {\n      var resolver = isLocal ? this._resolveLocal.bind(this) : this._resolveGlobal.bind(this);\n      try {\n        var packageJsonPath = resolver(`${this.pkg.name}/package.json`);\n        var packageJson = this._require(packageJsonPath);\n        if (packageJson) {\n          if (_semver.default.satisfies(packageJson.version, this.pkg.versionRange)) {\n            var modulePath = resolver(this.pkg.name);\n            var requiredModule = this._require(modulePath);\n            if (requiredModule == null) {\n              throw new _errors.CommandError(\"EXTERNAL_MODULE_EXPORT\", `${this.pkg.name} exports a nullish value, which is not allowed.`);\n            }\n            return requiredModule;\n          }\n          throw new ExternalModuleVersionError(`Required module '${this.pkg.name}@${packageJson.version}' does not satisfy ${this.pkg.versionRange}. Installed at: ${packageJsonPath}`, !isLocal);\n        }\n      } catch (error) {\n        if (error instanceof _errors.CommandError) {\n          throw error;\n        } else if (error.code !== \"MODULE_NOT_FOUND\") {\n          debug(\"Failed to resolve module\", error.message);\n        }\n      }\n      return null;\n    }\n  }]);\n  return ExternalModule;\n}();\nexports.ExternalModule = ExternalModule;","map":{"version":3,"names":["_defineProperty","require","_objectWithoutProperties","_asyncToGenerator","_createClass","_classCallCheck","_inherits","_possibleConstructorReturn","_getPrototypeOf","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","PackageManager","_interopRequireWildcard","_requireg","_interopRequireDefault","_resolveFrom","_semver","Log","_delay","_env","_errors","_prompts","_ref","debug","ExternalModuleVersionError","_errors$CommandError","_super","message","shouldGloballyInstall","_this","CommandError","ExternalModule","projectRoot","pkg","promptMessage","instance","key","value","_resolveAsync","_ref2","undefined","prefersGlobalInstall","options","ref","getVersioned","installAsync","error","_shouldGloballyInstall","resolveAsync","_installAsync","_ref3","_ref3$shouldPrompt","shouldPrompt","autoInstall","packageName","name","versionRange","join","delayAsync","answer","confirmAsync","initial","log","packageManager","NpmPackageManager","cwd","silent","env","EXPO_DEBUG","CI","createForProject","addGlobalAsync","addDevAsync","get","_unused","_instance","_resolveModule","_require","moduleId","_resolveLocal","default","_resolveGlobal","resolve","isLocal","resolver","bind","packageJsonPath","packageJson","satisfies","version","modulePath","requiredModule","code"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\doctor\\ngrok\\ExternalModule.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\nimport requireGlobal from 'requireg';\nimport resolveFrom from 'resolve-from';\nimport semver from 'semver';\n\nimport * as Log from '../../../log';\nimport { delayAsync } from '../../../utils/delay';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { confirmAsync } from '../../../utils/prompts';\n\nconst debug = require('debug')('expo:doctor:externalModule') as typeof console.log;\n\n/** An error that is thrown when a package is installed but doesn't meet the version criteria. */\nexport class ExternalModuleVersionError extends CommandError {\n  constructor(message: string, public readonly shouldGloballyInstall: boolean) {\n    super('EXTERNAL_MODULE_VERSION', message);\n  }\n}\n\ninterface PromptOptions {\n  /** Should prompt the user to install, when false the module will just assert on missing packages, default `true`. Ignored when `autoInstall` is true. */\n  shouldPrompt?: boolean;\n  /** Should automatically install the package without prompting, default `false` */\n  autoInstall?: boolean;\n}\n\nexport interface InstallPromptOptions extends PromptOptions {\n  /** Should install the package globally, default `false` */\n  shouldGloballyInstall?: boolean;\n}\n\nexport interface ResolvePromptOptions extends PromptOptions {\n  /**\n   * Prefer to install the package globally, this can be overridden if the function\n   * detects that a locally installed package simply needs an upgrade, default `false`\n   */\n  prefersGlobalInstall?: boolean;\n}\n\n/** Resolves a local or globally installed package, prompts to install if missing. */\nexport class ExternalModule<TModule> {\n  private instance: TModule | null = null;\n\n  constructor(\n    /** Project root for checking if the package is installed locally. */\n    private projectRoot: string,\n    /** Info on the external package. */\n    private pkg: {\n      /** NPM package name. */\n      name: string;\n      /** Required semver range, ex: `^1.0.0`. */\n      versionRange: string;\n    },\n    /** A function used to create the installation prompt message. */\n    private promptMessage: (pkgName: string) => string\n  ) {}\n\n  /** Resolve the globally or locally installed instance, or prompt to install. */\n  async resolveAsync({\n    prefersGlobalInstall,\n    ...options\n  }: ResolvePromptOptions = {}): Promise<TModule> {\n    try {\n      return (\n        this.getVersioned() ??\n        this.installAsync({\n          ...options,\n          shouldGloballyInstall: prefersGlobalInstall,\n        })\n      );\n    } catch (error: any) {\n      if (error instanceof ExternalModuleVersionError) {\n        // If the module version in not compliant with the version range,\n        // we should prompt the user to install the package where it already exists.\n        return this.installAsync({\n          ...options,\n          shouldGloballyInstall: error.shouldGloballyInstall ?? prefersGlobalInstall,\n        });\n      }\n      throw error;\n    }\n  }\n\n  /** Prompt the user to install the package and try again. */\n  async installAsync({\n    shouldPrompt = true,\n    autoInstall,\n    shouldGloballyInstall,\n  }: InstallPromptOptions = {}): Promise<TModule> {\n    const packageName = [this.pkg.name, this.pkg.versionRange].join('@');\n    if (!autoInstall) {\n      // Delay the prompt so it doesn't conflict with other dev tool logs\n      await delayAsync(100);\n    }\n    const answer =\n      autoInstall ||\n      (shouldPrompt &&\n        (await confirmAsync({\n          message: this.promptMessage(packageName),\n          initial: true,\n        })));\n    if (answer) {\n      Log.log(`Installing ${packageName}...`);\n\n      // Always use npm for global installs\n      const packageManager = shouldGloballyInstall\n        ? new PackageManager.NpmPackageManager({\n            cwd: this.projectRoot,\n            log: Log.log,\n            silent: !(env.EXPO_DEBUG || env.CI),\n          })\n        : PackageManager.createForProject(this.projectRoot, {\n            silent: !(env.EXPO_DEBUG || env.CI),\n          });\n\n      try {\n        if (shouldGloballyInstall) {\n          await packageManager.addGlobalAsync([packageName]);\n        } else {\n          await packageManager.addDevAsync([packageName]);\n        }\n        Log.log(`Installed ${packageName}`);\n      } catch (error: any) {\n        error.message = `Failed to install ${packageName} ${\n          shouldGloballyInstall ? 'globally' : 'locally'\n        }: ${error.message}`;\n        throw error;\n      }\n      return await this.resolveAsync({ shouldPrompt: false });\n    }\n\n    throw new CommandError(\n      'EXTERNAL_MODULE_AVAILABILITY',\n      `Please install ${packageName} and try again`\n    );\n  }\n\n  /** Get the module. */\n  get(): TModule | null {\n    try {\n      return this.getVersioned();\n    } catch {\n      return null;\n    }\n  }\n\n  /** Get the module, throws if the module is not versioned correctly. */\n  getVersioned(): TModule | null {\n    this.instance ??= this._resolveModule(true) ?? this._resolveModule(false);\n    return this.instance;\n  }\n\n  /** Exposed for testing. */\n  _require(moduleId: string): any {\n    return require(moduleId);\n  }\n\n  /** Resolve a copy that's installed in the project. Exposed for testing. */\n  _resolveLocal(moduleId: string): string {\n    return resolveFrom(this.projectRoot, moduleId);\n  }\n\n  /** Resolve a copy that's installed globally. Exposed for testing. */\n  _resolveGlobal(moduleId: string): string {\n    return requireGlobal.resolve(moduleId);\n  }\n\n  /** Resolve the module and verify the version. Exposed for testing. */\n  _resolveModule(isLocal: boolean): TModule | null {\n    const resolver = isLocal ? this._resolveLocal.bind(this) : this._resolveGlobal.bind(this);\n    try {\n      const packageJsonPath = resolver(`${this.pkg.name}/package.json`);\n      const packageJson = this._require(packageJsonPath);\n      if (packageJson) {\n        if (semver.satisfies(packageJson.version, this.pkg.versionRange)) {\n          const modulePath = resolver(this.pkg.name);\n          const requiredModule = this._require(modulePath);\n          if (requiredModule == null) {\n            throw new CommandError(\n              'EXTERNAL_MODULE_EXPORT',\n              `${this.pkg.name} exports a nullish value, which is not allowed.`\n            );\n          }\n          return requiredModule;\n        }\n        throw new ExternalModuleVersionError(\n          `Required module '${this.pkg.name}@${packageJson.version}' does not satisfy ${this.pkg.versionRange}. Installed at: ${packageJsonPath}`,\n          !isLocal\n        );\n      }\n    } catch (error: any) {\n      if (error instanceof CommandError) {\n        throw error;\n      } else if (error.code !== 'MODULE_NOT_FOUND') {\n        debug('Failed to resolve module', error.message);\n      }\n    }\n    return null;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}