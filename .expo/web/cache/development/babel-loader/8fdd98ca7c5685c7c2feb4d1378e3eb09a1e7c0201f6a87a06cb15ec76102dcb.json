{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDevServerMiddleware = createDevServerMiddleware;\nfunction _bodyParser() {\n  var data = _interopRequireDefault(require(\"body-parser\"));\n  _bodyParser = function _bodyParser() {\n    return data;\n  };\n  return data;\n}\nfunction _importMetroFromProject() {\n  var data = require(\"../metro/importMetroFromProject\");\n  _importMetroFromProject = function _importMetroFromProject() {\n    return data;\n  };\n  return data;\n}\nfunction _middlwareMutations() {\n  var data = require(\"../middlwareMutations\");\n  _middlwareMutations = function _middlwareMutations() {\n    return data;\n  };\n  return data;\n}\nfunction _clientLogsMiddleware() {\n  var data = _interopRequireDefault(require(\"./clientLogsMiddleware\"));\n  _clientLogsMiddleware = function _clientLogsMiddleware() {\n    return data;\n  };\n  return data;\n}\nfunction _createJsInspectorMiddleware() {\n  var data = _interopRequireDefault(require(\"./createJsInspectorMiddleware\"));\n  _createJsInspectorMiddleware = function _createJsInspectorMiddleware() {\n    return data;\n  };\n  return data;\n}\nfunction _remoteDevtoolsCorsMiddleware() {\n  var data = require(\"./remoteDevtoolsCorsMiddleware\");\n  _remoteDevtoolsCorsMiddleware = function _remoteDevtoolsCorsMiddleware() {\n    return data;\n  };\n  return data;\n}\nfunction _remoteDevtoolsSecurityHeadersMiddleware() {\n  var data = require(\"./remoteDevtoolsSecurityHeadersMiddleware\");\n  _remoteDevtoolsSecurityHeadersMiddleware = function _remoteDevtoolsSecurityHeadersMiddleware() {\n    return data;\n  };\n  return data;\n}\nfunction _suppressErrorMiddleware() {\n  var data = require(\"./suppressErrorMiddleware\");\n  _suppressErrorMiddleware = function _suppressErrorMiddleware() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction createDevServerMiddleware(projectRoot, _ref) {\n  var watchFolders = _ref.watchFolders,\n    port = _ref.port,\n    logger = _ref.logger;\n  var _ref2 = (0, _importMetroFromProject().importCliServerApiFromProject)(projectRoot),\n    createDevServerMiddleware = _ref2.createDevServerMiddleware,\n    securityHeadersMiddleware = _ref2.securityHeadersMiddleware;\n  var _createDevServerMiddl = createDevServerMiddleware({\n      port: port,\n      watchFolders: watchFolders\n    }),\n    middleware = _createDevServerMiddl.middleware,\n    attachToServer = _createDevServerMiddl.attachToServer,\n    debuggerProxyEndpoint = _createDevServerMiddl.debuggerProxyEndpoint,\n    messageSocketEndpoint = _createDevServerMiddl.messageSocketEndpoint,\n    eventsSocketEndpoint = _createDevServerMiddl.eventsSocketEndpoint,\n    websocketEndpoints = _createDevServerMiddl.websocketEndpoints;\n  (0, _middlwareMutations().replaceMiddlewareWith)(middleware, securityHeadersMiddleware, _remoteDevtoolsSecurityHeadersMiddleware().remoteDevtoolsSecurityHeadersMiddleware);\n  middleware.use(_remoteDevtoolsCorsMiddleware().remoteDevtoolsCorsMiddleware);\n  (0, _middlwareMutations().prependMiddleware)(middleware, _suppressErrorMiddleware().suppressRemoteDebuggingErrorMiddleware);\n  middleware.use(_bodyParser().default.json());\n  middleware.use('/logs', (0, _clientLogsMiddleware().default)(logger));\n  middleware.use('/inspector', (0, _createJsInspectorMiddleware().default)());\n  return {\n    logger: logger,\n    middleware: middleware,\n    attachToServer: attachToServer,\n    debuggerProxyEndpoint: debuggerProxyEndpoint,\n    messageSocketEndpoint: messageSocketEndpoint,\n    eventsSocketEndpoint: eventsSocketEndpoint,\n    websocketEndpoints: websocketEndpoints\n  };\n}","map":{"version":3,"names":["_bodyParser","data","_interopRequireDefault","require","_importMetroFromProject","_middlwareMutations","_clientLogsMiddleware","_createJsInspectorMiddleware","_remoteDevtoolsCorsMiddleware","_remoteDevtoolsSecurityHeadersMiddleware","_suppressErrorMiddleware","obj","__esModule","default","createDevServerMiddleware","projectRoot","_ref","watchFolders","port","logger","_ref2","importCliServerApiFromProject","securityHeadersMiddleware","_createDevServerMiddl","middleware","attachToServer","debuggerProxyEndpoint","messageSocketEndpoint","eventsSocketEndpoint","websocketEndpoints","replaceMiddlewareWith","remoteDevtoolsSecurityHeadersMiddleware","use","remoteDevtoolsCorsMiddleware","prependMiddleware","suppressRemoteDebuggingErrorMiddleware","json"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\middleware\\devServerMiddleware.ts"],"sourcesContent":["import Log from '@expo/bunyan';\nimport bodyParser from 'body-parser';\nimport { Server as ConnectServer } from 'connect';\n\nimport { importCliServerApiFromProject } from '../metro/importMetroFromProject';\nimport { prependMiddleware, replaceMiddlewareWith } from '../middlwareMutations';\nimport clientLogsMiddleware from './clientLogsMiddleware';\nimport createJsInspectorMiddleware from './createJsInspectorMiddleware';\nimport { remoteDevtoolsCorsMiddleware } from './remoteDevtoolsCorsMiddleware';\nimport { remoteDevtoolsSecurityHeadersMiddleware } from './remoteDevtoolsSecurityHeadersMiddleware';\nimport { suppressRemoteDebuggingErrorMiddleware } from './suppressErrorMiddleware';\n\n/**\n * Extends the default `createDevServerMiddleware` and adds some Expo CLI-specific dev middleware\n * with exception for the manifest middleware which is currently in `xdl`.\n *\n * Adds:\n * - `/logs`: pipe runtime `console` logs to the `props.logger` object.\n * - `/inspector`: launch hermes inspector proxy in chrome.\n * - CORS support for remote devtools\n * - body parser middleware\n *\n * @param props.watchFolders array of directory paths to use with watchman\n * @param props.port port that the dev server will run on\n * @param props.logger bunyan instance that all runtime `console` logs will be piped through.\n *\n * @returns\n */\nexport function createDevServerMiddleware(\n  projectRoot: string,\n  {\n    watchFolders,\n    port,\n    logger,\n  }: {\n    watchFolders: readonly string[];\n    port: number;\n    logger: Log;\n  }\n) {\n  const { createDevServerMiddleware, securityHeadersMiddleware } =\n    importCliServerApiFromProject(projectRoot);\n  const {\n    middleware,\n    // @ts-expect-error: Old API\n    attachToServer,\n\n    // New\n    debuggerProxyEndpoint,\n    messageSocketEndpoint,\n    eventsSocketEndpoint,\n    websocketEndpoints,\n  } = createDevServerMiddleware({\n    port,\n    watchFolders,\n  });\n\n  // securityHeadersMiddleware does not support cross-origin requests for remote devtools to get the sourcemap.\n  // We replace with the enhanced version.\n  replaceMiddlewareWith(\n    middleware as ConnectServer,\n    securityHeadersMiddleware,\n    remoteDevtoolsSecurityHeadersMiddleware\n  );\n  middleware.use(remoteDevtoolsCorsMiddleware);\n  prependMiddleware(middleware, suppressRemoteDebuggingErrorMiddleware);\n\n  middleware.use(bodyParser.json());\n  middleware.use('/logs', clientLogsMiddleware(logger));\n  middleware.use('/inspector', createJsInspectorMiddleware());\n\n  return {\n    logger,\n    middleware,\n    // Old\n    attachToServer,\n    // New\n    debuggerProxyEndpoint,\n    messageSocketEndpoint,\n    eventsSocketEndpoint,\n    websocketEndpoints,\n  };\n}\n"],"mappings":";;;;;;AACA,SAAAA,YAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,SAAAG,wBAAA;EAAA,IAAAH,IAAA,GAAAE,OAAA;EAAAC,uBAAA,YAAAA,wBAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAI,oBAAA;EAAA,IAAAJ,IAAA,GAAAE,OAAA;EAAAE,mBAAA,YAAAA,oBAAA;IAAA,OAAAJ,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAK,sBAAA;EAAA,IAAAL,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAG,qBAAA,YAAAA,sBAAA;IAAA,OAAAL,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAM,6BAAA;EAAA,IAAAN,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAI,4BAAA,YAAAA,6BAAA;IAAA,OAAAN,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAO,8BAAA;EAAA,IAAAP,IAAA,GAAAE,OAAA;EAAAK,6BAAA,YAAAA,8BAAA;IAAA,OAAAP,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAQ,yCAAA;EAAA,IAAAR,IAAA,GAAAE,OAAA;EAAAM,wCAAA,YAAAA,yCAAA;IAAA,OAAAR,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAS,yBAAA;EAAA,IAAAT,IAAA,GAAAE,OAAA;EAAAO,wBAAA,YAAAA,yBAAA;IAAA,OAAAT,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAAmF,SAAAC,uBAAAS,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAkB5E,SAASG,yBAAyBA,CACvCC,WAAmB,EAAAC,IAAA,EAUnB;EAAA,IAREC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IACZC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACJC,MAAA,GAAAH,IAAA,CAAAG,MAAA;EAOF,IAAAC,KAAA,GACE,IAAAhB,uBAAA,GAAAiB,6BAA6B,EAACN,WAAW,CAAC;IADpCD,yBAAyB,GAAAM,KAAA,CAAzBN,yBAAyB;IAAEQ,yBAAA,GAAAF,KAAA,CAAAE,yBAAA;EAEnC,IAAAC,qBAAA,GAUIT,yBAAyB,CAAC;MAC5BI,IAAI,EAAJA,IAAI;MACJD,YAAA,EAAAA;IACF,CAAC,CAAC;IAZAO,UAAU,GAAAD,qBAAA,CAAVC,UAAU;IAEVC,cAAc,GAAAF,qBAAA,CAAdE,cAAc;IAGdC,qBAAqB,GAAAH,qBAAA,CAArBG,qBAAqB;IACrBC,qBAAqB,GAAAJ,qBAAA,CAArBI,qBAAqB;IACrBC,oBAAoB,GAAAL,qBAAA,CAApBK,oBAAoB;IACpBC,kBAAA,GAAAN,qBAAA,CAAAM,kBAAA;EAQF,IAAAxB,mBAAA,GAAAyB,qBAAqB,EACnBN,UAAU,EACVF,yBAAyB,EACzBb,wCAAA,GAAAsB,uCAAuC,CACxC;EACDP,UAAU,CAACQ,GAAG,CAACxB,6BAAA,GAAAyB,4BAA4B,CAAC;EAC5C,IAAA5B,mBAAA,GAAA6B,iBAAiB,EAACV,UAAU,EAAEd,wBAAA,GAAAyB,sCAAsC,CAAC;EAErEX,UAAU,CAACQ,GAAG,CAAChC,WAAA,GAAAa,OAAU,CAACuB,IAAI,EAAE,CAAC;EACjCZ,UAAU,CAACQ,GAAG,CAAC,OAAO,EAAE,IAAA1B,qBAAA,GAAAO,OAAoB,EAACM,MAAM,CAAC,CAAC;EACrDK,UAAU,CAACQ,GAAG,CAAC,YAAY,EAAE,IAAAzB,4BAAA,GAAAM,OAA2B,GAAE,CAAC;EAE3D,OAAO;IACLM,MAAM,EAANA,MAAM;IACNK,UAAU,EAAVA,UAAU;IAEVC,cAAc,EAAdA,cAAc;IAEdC,qBAAqB,EAArBA,qBAAqB;IACrBC,qBAAqB,EAArBA,qBAAqB;IACrBC,oBAAoB,EAApBA,oBAAoB;IACpBC,kBAAA,EAAAA;EACF,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}