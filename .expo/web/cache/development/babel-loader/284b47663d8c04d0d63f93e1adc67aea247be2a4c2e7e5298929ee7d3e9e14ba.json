{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findUpProjectRootOrAssert = findUpProjectRootOrAssert;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _resolveFrom = _interopRequireDefault(require(\"resolve-from\"));\nvar _errors = require(\"../utils/errors\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction findUpProjectRootOrAssert(cwd) {\n  var projectRoot = findUpProjectRoot(cwd);\n  if (!projectRoot) {\n    throw new _errors.CommandError(`Project root directory not found (working directory: ${cwd})`);\n  }\n  return projectRoot;\n}\nfunction findUpProjectRoot(cwd) {\n  if ([\".\", _path.default.sep].includes(cwd)) return null;\n  var found = _resolveFrom.default.silent(cwd, \"./package.json\");\n  if (found) {\n    return _path.default.dirname(found);\n  }\n  return findUpProjectRoot(_path.default.dirname(cwd));\n}","map":{"version":3,"names":["findUpProjectRootOrAssert","_path","_interopRequireDefault","require","_resolveFrom","_errors","cwd","projectRoot","findUpProjectRoot","CommandError","default","sep","includes","found","silent","dirname"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\findUp.ts"],"sourcesContent":["import path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { CommandError } from '../utils/errors';\n\n/** Look up directories until one with a `package.json` can be found, assert if none can be found. */\nexport function findUpProjectRootOrAssert(cwd: string): string {\n  const projectRoot = findUpProjectRoot(cwd);\n  if (!projectRoot) {\n    throw new CommandError(`Project root directory not found (working directory: ${cwd})`);\n  }\n  return projectRoot;\n}\n\nfunction findUpProjectRoot(cwd: string): string | null {\n  if (['.', path.sep].includes(cwd)) return null;\n\n  const found = resolveFrom.silent(cwd, './package.json');\n  if (found) {\n    return path.dirname(found);\n  }\n  return findUpProjectRoot(path.dirname(cwd));\n}\n"],"mappings":"AAAA;;;;;QAMgBA,yBAAyB,GAAzBA,yBAAyB;AANxB,IAAAC,KAAM,GAAAC,sBAAA,CAAAC,OAAA,CAAN,MAAM;AACC,IAAAC,YAAc,GAAAF,sBAAA,CAAAC,OAAA,CAAd,cAAc;AAET,IAAAE,OAAiB,GAAAF,OAAA;;;;;;AAGvC,SAASH,yBAAyBA,CAACM,GAAW,EAAU;EAC7D,IAAMC,WAAW,GAAGC,iBAAiB,CAACF,GAAG,CAAC;EAC1C,IAAI,CAACC,WAAW,EAAE;IAChB,MAAM,IAAIF,OAAY,CAAAI,YAAA,CAAE,wDAAuDH,GAAI,GAAE,CAAC;;EAExF,OAAOC,WAAW;;AAGpB,SAASC,iBAAiBA,CAACF,GAAW,EAAiB;EACrD,IAAI,CAAC,GAAG,EAAEL,KAAI,CAAAS,OAAA,CAACC,GAAG,CAAC,CAACC,QAAQ,CAACN,GAAG,CAAC,EAAE,OAAO,IAAI;EAE9C,IAAMO,KAAK,GAAGT,YAAW,CAAAM,OAAA,CAACI,MAAM,CAACR,GAAG,EAAE,gBAAgB,CAAC;EACvD,IAAIO,KAAK,EAAE;IACT,OAAOZ,KAAI,CAAAS,OAAA,CAACK,OAAO,CAACF,KAAK,CAAC;;EAE5B,OAAOL,iBAAiB,CAACP,KAAI,CAAAS,OAAA,CAACK,OAAO,CAACT,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}