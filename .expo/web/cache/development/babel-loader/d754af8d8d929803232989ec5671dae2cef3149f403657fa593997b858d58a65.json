{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TOUCHABLE_STATE = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _State = require(\"../../State\");\nvar _GestureButtons = require(\"../GestureButtons\");\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2\n};\nexports.TOUCHABLE_STATE = TOUCHABLE_STATE;\nvar GenericTouchable = function (_React$Component) {\n  _inherits(GenericTouchable, _React$Component);\n  var _super = _createSuper(GenericTouchable);\n  function GenericTouchable() {\n    var _this;\n    _classCallCheck(this, GenericTouchable);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"pressInTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"pressOutTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"longPressTimeout\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"longPressDetected\", false);\n    _defineProperty(_assertThisInitialized(_this), \"pointerInside\", true);\n    _defineProperty(_assertThisInitialized(_this), \"STATE\", TOUCHABLE_STATE.UNDETERMINED);\n    _defineProperty(_assertThisInitialized(_this), \"onGestureEvent\", function (_ref2) {\n      var pointerInside = _ref2.nativeEvent.pointerInside;\n      if (_this.pointerInside !== pointerInside) {\n        if (pointerInside) {\n          _this.onMoveIn();\n        } else {\n          _this.onMoveOut();\n        }\n      }\n      _this.pointerInside = pointerInside;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onHandlerStateChange\", function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n      var state = nativeEvent.state;\n      if (state === _State.State.CANCELLED || state === _State.State.FAILED) {\n        _this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      } else if (state === (_reactNative.Platform.OS !== 'android' ? _State.State.ACTIVE : _State.State.BEGAN) && _this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        _this.handlePressIn();\n      } else if (state === _State.State.END) {\n        var shouldCallOnPress = !_this.longPressDetected && _this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE && _this.pressOutTimeout === null;\n        _this.handleGoToUndetermined();\n        if (shouldCallOnPress) {\n          var _this$props$onPress, _this$props;\n          (_this$props$onPress = (_this$props = _this.props).onPress) === null || _this$props$onPress === void 0 ? void 0 : _this$props$onPress.call(_this$props);\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onLongPressDetected\", function () {\n      var _this$props$onLongPre, _this$props2;\n      _this.longPressDetected = true;\n      (_this$props$onLongPre = (_this$props2 = _this.props).onLongPress) === null || _this$props$onLongPre === void 0 ? void 0 : _this$props$onLongPre.call(_this$props2);\n    });\n    return _this;\n  }\n  _createClass(GenericTouchable, [{\n    key: \"handlePressIn\",\n    value: function handlePressIn() {\n      var _this2 = this;\n      if (this.props.delayPressIn) {\n        this.pressInTimeout = setTimeout(function () {\n          _this2.moveToState(TOUCHABLE_STATE.BEGAN);\n          _this2.pressInTimeout = null;\n        }, this.props.delayPressIn);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      if (this.props.onLongPress) {\n        var time = (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n        this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n      }\n    }\n  }, {\n    key: \"handleMoveOutside\",\n    value: function handleMoveOutside() {\n      var _this3 = this;\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = this.pressOutTimeout || setTimeout(function () {\n          _this3.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          _this3.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n      }\n    }\n  }, {\n    key: \"handleGoToUndetermined\",\n    value: function handleGoToUndetermined() {\n      var _this4 = this;\n      clearTimeout(this.pressOutTimeout);\n      if (this.props.delayPressOut) {\n        this.pressOutTimeout = setTimeout(function () {\n          if (_this4.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n            _this4.moveToState(TOUCHABLE_STATE.BEGAN);\n          }\n          _this4.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n          _this4.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n      } else {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.reset();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.longPressDetected = false;\n      this.pointerInside = true;\n      clearTimeout(this.pressInTimeout);\n      clearTimeout(this.pressOutTimeout);\n      clearTimeout(this.longPressTimeout);\n      this.pressOutTimeout = null;\n      this.longPressTimeout = null;\n      this.pressInTimeout = null;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState) {\n      var _this$props$onStateCh, _this$props6;\n      if (newState === this.STATE) {\n        return;\n      }\n      if (newState === TOUCHABLE_STATE.BEGAN) {\n        var _this$props$onPressIn, _this$props3;\n        (_this$props$onPressIn = (_this$props3 = this.props).onPressIn) === null || _this$props$onPressIn === void 0 ? void 0 : _this$props$onPressIn.call(_this$props3);\n      } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        var _this$props$onPressOu, _this$props4;\n        (_this$props$onPressOu = (_this$props4 = this.props).onPressOut) === null || _this$props$onPressOu === void 0 ? void 0 : _this$props$onPressOu.call(_this$props4);\n      } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n        this.reset();\n        if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n          var _this$props$onPressOu2, _this$props5;\n          (_this$props$onPressOu2 = (_this$props5 = this.props).onPressOut) === null || _this$props$onPressOu2 === void 0 ? void 0 : _this$props$onPressOu2.call(_this$props5);\n        }\n      }\n      (_this$props$onStateCh = (_this$props6 = this.props).onStateChange) === null || _this$props$onStateCh === void 0 ? void 0 : _this$props$onStateCh.call(_this$props6, this.STATE, newState);\n      this.STATE = newState;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.reset();\n    }\n  }, {\n    key: \"onMoveIn\",\n    value: function onMoveIn() {\n      if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n    }\n  }, {\n    key: \"onMoveOut\",\n    value: function onMoveOut() {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = null;\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        this.handleMoveOutside();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _ref, _this$props$touchSoun;\n      var hitSlop = (_ref = typeof this.props.hitSlop === 'number' ? {\n        top: this.props.hitSlop,\n        left: this.props.hitSlop,\n        bottom: this.props.hitSlop,\n        right: this.props.hitSlop\n      } : this.props.hitSlop) !== null && _ref !== void 0 ? _ref : undefined;\n      var coreProps = {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityRole: this.props.accessibilityRole,\n        accessibilityState: this.props.accessibilityState,\n        accessibilityActions: this.props.accessibilityActions,\n        onAccessibilityAction: this.props.onAccessibilityAction,\n        nativeID: this.props.nativeID,\n        onLayout: this.props.onLayout,\n        hitSlop: hitSlop\n      };\n      return React.createElement(_GestureButtons.BaseButton, _extends({\n        style: this.props.containerStyle,\n        onHandlerStateChange: this.props.disabled ? undefined : this.onHandlerStateChange,\n        onGestureEvent: this.onGestureEvent,\n        hitSlop: hitSlop,\n        shouldActivateOnStart: this.props.shouldActivateOnStart,\n        disallowInterruption: this.props.disallowInterruption,\n        testID: this.props.testID,\n        touchSoundDisabled: (_this$props$touchSoun = this.props.touchSoundDisabled) !== null && _this$props$touchSoun !== void 0 ? _this$props$touchSoun : false,\n        enabled: !this.props.disabled\n      }, this.props.extraButtonProps), React.createElement(_reactNative.Animated.View, _extends({}, coreProps, {\n        style: this.props.style\n      }), this.props.children));\n    }\n  }]);\n  return GenericTouchable;\n}(React.Component);\nexports.default = GenericTouchable;\n_defineProperty(GenericTouchable, \"defaultProps\", {\n  delayLongPress: 600,\n  extraButtonProps: {\n    rippleColor: 'transparent',\n    exclusive: true\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_State","_GestureButtons","TOUCHABLE_STATE","UNDETERMINED","BEGAN","MOVED_OUTSIDE","GenericTouchable","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","_ref2","pointerInside","nativeEvent","onMoveIn","onMoveOut","_ref3","state","State","CANCELLED","FAILED","moveToState","Platform","OS","ACTIVE","STATE","handlePressIn","END","shouldCallOnPress","longPressDetected","pressOutTimeout","handleGoToUndetermined","_this$props$onPress","_this$props","props","onPress","_this$props$onLongPre","_this$props2","onLongPress","_createClass","key","value","_this2","delayPressIn","pressInTimeout","setTimeout","time","delayLongPress","longPressTimeout","onLongPressDetected","handleMoveOutside","_this3","delayPressOut","_this4","clearTimeout","componentDidMount","reset","newState","_this$props$onStateCh","_this$props6","_this$props$onPressIn","_this$props3","onPressIn","_this$props$onPressOu","_this$props4","onPressOut","_this$props$onPressOu2","_this$props5","onStateChange","componentWillUnmount","render","_ref","_this$props$touchSoun","hitSlop","top","left","bottom","right","undefined","coreProps","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","accessibilityState","accessibilityActions","onAccessibilityAction","nativeID","onLayout","createElement","BaseButton","_extends","style","containerStyle","onHandlerStateChange","disabled","onGestureEvent","shouldActivateOnStart","disallowInterruption","testID","touchSoundDisabled","enabled","extraButtonProps","Animated","View","children","Component","rippleColor","exclusive"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\commonjs\\components\\touchables\\GenericTouchable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedbackProps,\n} from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { NativeViewGestureHandlerPayload } from '../../handlers/NativeViewGestureHandler';\nimport { TouchableNativeFeedbackExtraProps } from './TouchableNativeFeedback.android';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = typeof TOUCHABLE_STATE[keyof typeof TOUCHABLE_STATE];\n\nexport interface GenericTouchableProps extends TouchableWithoutFeedbackProps {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props. - TODO: this comment may be unuseful in this moment\n\n  // TODO: in RN these events get native event parameter, which prolly could be used in our implementation too\n  onPress?: () => void;\n  onPressIn?: () => void;\n  onPressOut?: () => void;\n  onLongPress?: () => void;\n\n  nativeID?: string;\n  shouldActivateOnStart?: boolean;\n  disallowInterruption?: boolean;\n\n  containerStyle?: StyleProp<ViewStyle>;\n}\n\ninterface InternalProps {\n  extraButtonProps: TouchableNativeFeedbackExtraProps;\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: hitSlop as\n        | Animated.WithAnimatedObject<typeof hitSlop>\n        | undefined,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}