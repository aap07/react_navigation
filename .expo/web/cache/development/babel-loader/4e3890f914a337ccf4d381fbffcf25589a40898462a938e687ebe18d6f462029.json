{"ast":null,"code":"// @licenselint-loose-mode\n'use strict';\n\nvar NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getString: (arg: string) => Array;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getString: (arg : Array) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getString: (arg : $ReadOnly<>) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULES_WITH_NOT_ONLY_METHODS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getBool: (arg: boolean) => boolean;\n  +getNumber: (arg: number) => number;\n  +getString: (arg: string) => string;\n  sampleBool: boolean,\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULES_WITH_UNNAMED_PARAMS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getBool: (boolean) => boolean;\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getBool: (arg: boolean) => Promise;\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nvar TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\n\nexport default TurboModuleRegistry.getEnforcing<Spec1>('SampleTurboModule1');\nexport default TurboModuleRegistry.getEnforcing<Spec2>('SampleTurboModule2');\n\n`;\nvar TWO_NATIVE_EXTENDING_TURBO_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getSth: (a : ?number) => void\n}\n\nexport interface Spec2 extends TurboModule {\n  +getSth: (a : ?number) => void\n}\n\n\n`;\nvar EMPTY_ENUM_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport enum SomeEnum {\n}\n\nexport interface Spec extends TurboModule {\n  +getEnums: (a: SomeEnum) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('EmptyEnumNativeModule');\n`;\nvar MIXED_VALUES_ENUM_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport enum SomeEnum {\n  NUM = 1,\n  STR = 'str',\n}\n\nexport interface Spec extends TurboModule {\n  +getEnums: (a: SomeEnum) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('MixedValuesEnumNativeModule');\n`;\nmodule.exports = {\n  NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT: NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT,\n  NATIVE_MODULES_WITH_UNNAMED_PARAMS: NATIVE_MODULES_WITH_UNNAMED_PARAMS,\n  NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE: NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE,\n  NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM: NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM,\n  NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT: NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT,\n  TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT: TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT,\n  NATIVE_MODULES_WITH_NOT_ONLY_METHODS: NATIVE_MODULES_WITH_NOT_ONLY_METHODS,\n  TWO_NATIVE_EXTENDING_TURBO_MODULE: TWO_NATIVE_EXTENDING_TURBO_MODULE,\n  EMPTY_ENUM_NATIVE_MODULE: EMPTY_ENUM_NATIVE_MODULE,\n  MIXED_VALUES_ENUM_NATIVE_MODULE: MIXED_VALUES_ENUM_NATIVE_MODULE\n};","map":{"version":3,"names":["NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT","NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM","NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT","NATIVE_MODULES_WITH_NOT_ONLY_METHODS","NATIVE_MODULES_WITH_UNNAMED_PARAMS","NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE","TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT","TWO_NATIVE_EXTENDING_TURBO_MODULE","EMPTY_ENUM_NATIVE_MODULE","MIXED_VALUES_ENUM_NATIVE_MODULE","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/parsers/flow/modules/__test_fixtures__/failures.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n// @licenselint-loose-mode\n\n'use strict';\n\nconst NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getString: (arg: string) => Array;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getString: (arg : Array) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  getString: (arg : $ReadOnly<>) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULES_WITH_NOT_ONLY_METHODS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getBool: (arg: boolean) => boolean;\n  +getNumber: (arg: number) => number;\n  +getString: (arg: string) => string;\n  sampleBool: boolean,\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULES_WITH_UNNAMED_PARAMS = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getBool: (boolean) => boolean;\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getBool: (arg: boolean) => Promise;\n\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('SampleTurboModule');\n\n`;\nconst TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\n\nexport default TurboModuleRegistry.getEnforcing<Spec1>('SampleTurboModule1');\nexport default TurboModuleRegistry.getEnforcing<Spec2>('SampleTurboModule2');\n\n`;\nconst TWO_NATIVE_EXTENDING_TURBO_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getSth: (a : ?number) => void\n}\n\nexport interface Spec2 extends TurboModule {\n  +getSth: (a : ?number) => void\n}\n\n\n`;\nconst EMPTY_ENUM_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport enum SomeEnum {\n}\n\nexport interface Spec extends TurboModule {\n  +getEnums: (a: SomeEnum) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('EmptyEnumNativeModule');\n`;\nconst MIXED_VALUES_ENUM_NATIVE_MODULE = `\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../RCTExport';\nimport * as TurboModuleRegistry from '../TurboModuleRegistry';\n\nexport enum SomeEnum {\n  NUM = 1,\n  STR = 'str',\n}\n\nexport interface Spec extends TurboModule {\n  +getEnums: (a: SomeEnum) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('MixedValuesEnumNativeModule');\n`;\nmodule.exports = {\n  NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT,\n  NATIVE_MODULES_WITH_UNNAMED_PARAMS,\n  NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE,\n  NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM,\n  NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT,\n  TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT,\n  NATIVE_MODULES_WITH_NOT_ONLY_METHODS,\n  TWO_NATIVE_EXTENDING_TURBO_MODULE,\n  EMPTY_ENUM_NATIVE_MODULE,\n  MIXED_VALUES_ENUM_NATIVE_MODULE,\n};\n"],"mappings":"AAUA;AAEA,YAAY;;AAEZ,IAAMA,kDAAkD,GAAI;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,2DAA2D,GAAI;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wDAAwD,GAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,oCAAoC,GAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,kCAAkC,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wCAAwC,GAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wCAAwC,GAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,iCAAiC,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,wBAAwB,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,IAAMC,+BAA+B,GAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACDC,MAAM,CAACC,OAAO,GAAG;EACfT,wDAAwD,EAAxDA,wDAAwD;EACxDE,kCAAkC,EAAlCA,kCAAkC;EAClCC,wCAAwC,EAAxCA,wCAAwC;EACxCJ,2DAA2D,EAA3DA,2DAA2D;EAC3DD,kDAAkD,EAAlDA,kDAAkD;EAClDM,wCAAwC,EAAxCA,wCAAwC;EACxCH,oCAAoC,EAApCA,oCAAoC;EACpCI,iCAAiC,EAAjCA,iCAAiC;EACjCC,wBAAwB,EAAxBA,wBAAwB;EACxBC,+BAA+B,EAA/BA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}