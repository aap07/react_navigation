{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/devcert/dist/platforms/shared.d.ts"],"sourcesContent":["/**\n *  Given a directory or glob pattern of directories, attempt to install the\n *  CA certificate to each directory containing an NSS database.\n */\nexport declare function addCertificateToNSSCertDB(nssDirGlob: string, certPath: string, certutilPath: string): void;\nexport declare function removeCertificateFromNSSCertDB(nssDirGlob: string, certPath: string, certutilPath: string): void;\n/**\n *  Check to see if Firefox is still running, and if so, ask the user to close\n *  it. Poll until it's closed, then return.\n *\n * This is needed because Firefox appears to load the NSS database in-memory on\n * startup, and overwrite on exit. So we have to ask the user to quite Firefox\n * first so our changes don't get overwritten.\n */\nexport declare function closeFirefox(): Promise<void>;\n/**\n * Firefox manages it's own trust store for SSL certificates, which can be\n * managed via the certutil command (supplied by NSS tooling packages). In the\n * event that certutil is not already installed, and either can't be installed\n * (Windows) or the user doesn't want to install it (skipCertutilInstall:\n * true), it means that we can't programmatically tell Firefox to trust our\n * root CA certificate.\n *\n * There is a recourse though. When a Firefox tab is directed to a URL that\n * responds with a certificate, it will automatically prompt the user if they\n * want to add it to their trusted certificates. So if we can't automatically\n * install the certificate via certutil, we instead start a quick web server\n * and host our certificate file. Then we open the hosted cert URL in Firefox\n * to kick off the GUI flow.\n *\n * This method does all this, along with providing user prompts in the terminal\n * to walk them through this process.\n */\nexport declare function openCertificateInFirefox(firefoxPath: string, certPath: string): Promise<void>;\nexport declare function assertNotTouchingFiles(filepath: string, operation: string): void;\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}