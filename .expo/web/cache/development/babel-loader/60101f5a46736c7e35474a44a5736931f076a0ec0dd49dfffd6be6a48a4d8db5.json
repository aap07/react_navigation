{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AFC_FILE_OPEN_FLAGS = exports.AFC_STATUS = exports.AFC_OPS = exports.AFC_HEADER_SIZE = exports.AFC_MAGIC = void 0;\nvar _debug = _interopRequireDefault(require(\"debug\"));\nvar _errors = require(\"../../../../utils/errors\");\nvar _abstractProtocol = require(\"./AbstractProtocol\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = (0, _debug).default(\"expo:apple-device:protocol:afc\");\nvar AFC_MAGIC = \"CFA6LPAA\";\nexports.AFC_MAGIC = AFC_MAGIC;\nvar AFC_HEADER_SIZE = 40;\nexports.AFC_HEADER_SIZE = AFC_HEADER_SIZE;\nvar AFC_OPS;\nexports.AFC_OPS = AFC_OPS;\n(function (AFC_OPS) {\n  AFC_OPS[AFC_OPS[\"INVALID\"] = 0] = \"INVALID\";\n  AFC_OPS[AFC_OPS[\"STATUS\"] = 1] = \"STATUS\";\n  AFC_OPS[AFC_OPS[\"DATA\"] = 2] = \"DATA\";\n  AFC_OPS[AFC_OPS[\"READ_DIR\"] = 3] = \"READ_DIR\";\n  AFC_OPS[AFC_OPS[\"READ_FILE\"] = 4] = \"READ_FILE\";\n  AFC_OPS[AFC_OPS[\"WRITE_FILE\"] = 5] = \"WRITE_FILE\";\n  AFC_OPS[AFC_OPS[\"WRITE_PART\"] = 6] = \"WRITE_PART\";\n  AFC_OPS[AFC_OPS[\"TRUNCATE\"] = 7] = \"TRUNCATE\";\n  AFC_OPS[AFC_OPS[\"REMOVE_PATH\"] = 8] = \"REMOVE_PATH\";\n  AFC_OPS[AFC_OPS[\"MAKE_DIR\"] = 9] = \"MAKE_DIR\";\n  AFC_OPS[AFC_OPS[\"GET_FILE_INFO\"] = 10] = \"GET_FILE_INFO\";\n  AFC_OPS[AFC_OPS[\"GET_DEVINFO\"] = 11] = \"GET_DEVINFO\";\n  AFC_OPS[AFC_OPS[\"WRITE_FILE_ATOM\"] = 12] = \"WRITE_FILE_ATOM\";\n  AFC_OPS[AFC_OPS[\"FILE_OPEN\"] = 13] = \"FILE_OPEN\";\n  AFC_OPS[AFC_OPS[\"FILE_OPEN_RES\"] = 14] = \"FILE_OPEN_RES\";\n  AFC_OPS[AFC_OPS[\"FILE_READ\"] = 15] = \"FILE_READ\";\n  AFC_OPS[AFC_OPS[\"FILE_WRITE\"] = 16] = \"FILE_WRITE\";\n  AFC_OPS[AFC_OPS[\"FILE_SEEK\"] = 17] = \"FILE_SEEK\";\n  AFC_OPS[AFC_OPS[\"FILE_TELL\"] = 18] = \"FILE_TELL\";\n  AFC_OPS[AFC_OPS[\"FILE_TELL_RES\"] = 19] = \"FILE_TELL_RES\";\n  AFC_OPS[AFC_OPS[\"FILE_CLOSE\"] = 20] = \"FILE_CLOSE\";\n  AFC_OPS[AFC_OPS[\"FILE_SET_SIZE\"] = 21] = \"FILE_SET_SIZE\";\n  AFC_OPS[AFC_OPS[\"GET_CON_INFO\"] = 22] = \"GET_CON_INFO\";\n  AFC_OPS[AFC_OPS[\"SET_CON_OPTIONS\"] = 23] = \"SET_CON_OPTIONS\";\n  AFC_OPS[AFC_OPS[\"RENAME_PATH\"] = 24] = \"RENAME_PATH\";\n  AFC_OPS[AFC_OPS[\"SET_FS_BS\"] = 25] = \"SET_FS_BS\";\n  AFC_OPS[AFC_OPS[\"SET_SOCKET_BS\"] = 26] = \"SET_SOCKET_BS\";\n  AFC_OPS[AFC_OPS[\"FILE_LOCK\"] = 27] = \"FILE_LOCK\";\n  AFC_OPS[AFC_OPS[\"MAKE_LINK\"] = 28] = \"MAKE_LINK\";\n  AFC_OPS[AFC_OPS[\"GET_FILE_HASH\"] = 29] = \"GET_FILE_HASH\";\n  AFC_OPS[AFC_OPS[\"SET_FILE_MOD_TIME\"] = 30] = \"SET_FILE_MOD_TIME\";\n  AFC_OPS[AFC_OPS[\"GET_FILE_HASH_RANGE\"] = 31] = \"GET_FILE_HASH_RANGE\";\n  AFC_OPS[AFC_OPS[\"FILE_SET_IMMUTABLE_HINT\"] = 32] = \"FILE_SET_IMMUTABLE_HINT\";\n  AFC_OPS[AFC_OPS[\"GET_SIZE_OF_PATH_CONTENTS\"] = 33] = \"GET_SIZE_OF_PATH_CONTENTS\";\n  AFC_OPS[AFC_OPS[\"REMOVE_PATH_AND_CONTENTS\"] = 34] = \"REMOVE_PATH_AND_CONTENTS\";\n  AFC_OPS[AFC_OPS[\"DIR_OPEN\"] = 35] = \"DIR_OPEN\";\n  AFC_OPS[AFC_OPS[\"DIR_OPEN_RESULT\"] = 36] = \"DIR_OPEN_RESULT\";\n  AFC_OPS[AFC_OPS[\"DIR_READ\"] = 37] = \"DIR_READ\";\n  AFC_OPS[AFC_OPS[\"DIR_CLOSE\"] = 38] = \"DIR_CLOSE\";\n  AFC_OPS[AFC_OPS[\"FILE_READ_OFFSET\"] = 39] = \"FILE_READ_OFFSET\";\n  AFC_OPS[AFC_OPS[\"FILE_WRITE_OFFSET\"] = 40] = \"FILE_WRITE_OFFSET\";\n})(AFC_OPS || (exports.AFC_OPS = AFC_OPS = {}));\nvar AFC_STATUS;\nexports.AFC_STATUS = AFC_STATUS;\n(function (AFC_STATUS) {\n  AFC_STATUS[AFC_STATUS[\"SUCCESS\"] = 0] = \"SUCCESS\";\n  AFC_STATUS[AFC_STATUS[\"UNKNOWN_ERROR\"] = 1] = \"UNKNOWN_ERROR\";\n  AFC_STATUS[AFC_STATUS[\"OP_HEADER_INVALID\"] = 2] = \"OP_HEADER_INVALID\";\n  AFC_STATUS[AFC_STATUS[\"NO_RESOURCES\"] = 3] = \"NO_RESOURCES\";\n  AFC_STATUS[AFC_STATUS[\"READ_ERROR\"] = 4] = \"READ_ERROR\";\n  AFC_STATUS[AFC_STATUS[\"WRITE_ERROR\"] = 5] = \"WRITE_ERROR\";\n  AFC_STATUS[AFC_STATUS[\"UNKNOWN_PACKET_TYPE\"] = 6] = \"UNKNOWN_PACKET_TYPE\";\n  AFC_STATUS[AFC_STATUS[\"INVALID_ARG\"] = 7] = \"INVALID_ARG\";\n  AFC_STATUS[AFC_STATUS[\"OBJECT_NOT_FOUND\"] = 8] = \"OBJECT_NOT_FOUND\";\n  AFC_STATUS[AFC_STATUS[\"OBJECT_IS_DIR\"] = 9] = \"OBJECT_IS_DIR\";\n  AFC_STATUS[AFC_STATUS[\"PERM_DENIED\"] = 10] = \"PERM_DENIED\";\n  AFC_STATUS[AFC_STATUS[\"SERVICE_NOT_CONNECTED\"] = 11] = \"SERVICE_NOT_CONNECTED\";\n  AFC_STATUS[AFC_STATUS[\"OP_TIMEOUT\"] = 12] = \"OP_TIMEOUT\";\n  AFC_STATUS[AFC_STATUS[\"TOO_MUCH_DATA\"] = 13] = \"TOO_MUCH_DATA\";\n  AFC_STATUS[AFC_STATUS[\"END_OF_DATA\"] = 14] = \"END_OF_DATA\";\n  AFC_STATUS[AFC_STATUS[\"OP_NOT_SUPPORTED\"] = 15] = \"OP_NOT_SUPPORTED\";\n  AFC_STATUS[AFC_STATUS[\"OBJECT_EXISTS\"] = 16] = \"OBJECT_EXISTS\";\n  AFC_STATUS[AFC_STATUS[\"OBJECT_BUSY\"] = 17] = \"OBJECT_BUSY\";\n  AFC_STATUS[AFC_STATUS[\"NO_SPACE_LEFT\"] = 18] = \"NO_SPACE_LEFT\";\n  AFC_STATUS[AFC_STATUS[\"OP_WOULD_BLOCK\"] = 19] = \"OP_WOULD_BLOCK\";\n  AFC_STATUS[AFC_STATUS[\"IO_ERROR\"] = 20] = \"IO_ERROR\";\n  AFC_STATUS[AFC_STATUS[\"OP_INTERRUPTED\"] = 21] = \"OP_INTERRUPTED\";\n  AFC_STATUS[AFC_STATUS[\"OP_IN_PROGRESS\"] = 22] = \"OP_IN_PROGRESS\";\n  AFC_STATUS[AFC_STATUS[\"INTERNAL_ERROR\"] = 23] = \"INTERNAL_ERROR\";\n  AFC_STATUS[AFC_STATUS[\"MUX_ERROR\"] = 30] = \"MUX_ERROR\";\n  AFC_STATUS[AFC_STATUS[\"NO_MEM\"] = 31] = \"NO_MEM\";\n  AFC_STATUS[AFC_STATUS[\"NOT_ENOUGH_DATA\"] = 32] = \"NOT_ENOUGH_DATA\";\n  AFC_STATUS[AFC_STATUS[\"DIR_NOT_EMPTY\"] = 33] = \"DIR_NOT_EMPTY\";\n  AFC_STATUS[AFC_STATUS[\"FORCE_SIGNED_TYPE\"] = -1] = \"FORCE_SIGNED_TYPE\";\n})(AFC_STATUS || (exports.AFC_STATUS = AFC_STATUS = {}));\nvar AFC_FILE_OPEN_FLAGS;\nexports.AFC_FILE_OPEN_FLAGS = AFC_FILE_OPEN_FLAGS;\n(function (AFC_FILE_OPEN_FLAGS) {\n  AFC_FILE_OPEN_FLAGS[AFC_FILE_OPEN_FLAGS[\"RDONLY\"] = 1] = \"RDONLY\";\n  AFC_FILE_OPEN_FLAGS[AFC_FILE_OPEN_FLAGS[\"RW\"] = 2] = \"RW\";\n  AFC_FILE_OPEN_FLAGS[AFC_FILE_OPEN_FLAGS[\"WRONLY\"] = 3] = \"WRONLY\";\n  AFC_FILE_OPEN_FLAGS[AFC_FILE_OPEN_FLAGS[\"WR\"] = 4] = \"WR\";\n  AFC_FILE_OPEN_FLAGS[AFC_FILE_OPEN_FLAGS[\"APPEND\"] = 5] = \"APPEND\";\n  AFC_FILE_OPEN_FLAGS[AFC_FILE_OPEN_FLAGS[\"RDAPPEND\"] = 6] = \"RDAPPEND\";\n})(AFC_FILE_OPEN_FLAGS || (exports.AFC_FILE_OPEN_FLAGS = AFC_FILE_OPEN_FLAGS = {}));\nfunction isAFCResponse(resp) {\n  return AFC_OPS[resp.operation] !== undefined && resp.id !== undefined && resp.data !== undefined;\n}\nfunction isStatusResponse(resp) {\n  return isAFCResponse(resp) && resp.operation === 1;\n}\nfunction isErrorStatusResponse(resp) {\n  return isStatusResponse(resp) && resp.data !== 0;\n}\nvar AFCInternalError = function (_Error) {\n  _inherits(AFCInternalError, _Error);\n  var _super = _createSuper(AFCInternalError);\n  function AFCInternalError(msg, requestId) {\n    var _this;\n    _classCallCheck(this, AFCInternalError);\n    _this = _super.call(this, msg);\n    _this.requestId = requestId;\n    return _this;\n  }\n  return _createClass(AFCInternalError);\n}(_wrapNativeSuper(Error));\nvar AFCError = function (_Error2) {\n  _inherits(AFCError, _Error2);\n  var _super2 = _createSuper(AFCError);\n  function AFCError(msg, status) {\n    var _this2;\n    _classCallCheck(this, AFCError);\n    _this2 = _super2.call(this, msg);\n    _this2.status = status;\n    return _this2;\n  }\n  return _createClass(AFCError);\n}(_wrapNativeSuper(Error));\nexports.AFCError = AFCError;\nvar AFCProtocolClient = function (_abstractProtocol$Pro) {\n  _inherits(AFCProtocolClient, _abstractProtocol$Pro);\n  var _super3 = _createSuper(AFCProtocolClient);\n  function AFCProtocolClient(socket) {\n    var _this3;\n    _classCallCheck(this, AFCProtocolClient);\n    _this3 = _super3.call(this, socket, new _abstractProtocol.ProtocolReaderFactory(AFCProtocolReader), new AFCProtocolWriter());\n    _this3.requestId = 0;\n    _this3.requestCallbacks = {};\n    var reader = _this3.readerFactory.create(function (resp, err) {\n      if (err && err instanceof AFCInternalError) {\n        _this3.requestCallbacks[err.requestId](resp, err);\n      } else if (isErrorStatusResponse(resp)) {\n        _this3.requestCallbacks[resp.id](resp, new AFCError(AFC_STATUS[resp.data], resp.data));\n      } else {\n        _this3.requestCallbacks[resp.id](resp);\n      }\n    });\n    socket.on(\"data\", reader.onData);\n    return _this3;\n  }\n  _createClass(AFCProtocolClient, [{\n    key: \"sendMessage\",\n    value: function sendMessage(msg) {\n      var _this4 = this;\n      return new Promise(function (resolve, reject) {\n        var requestId = _this4.requestId++;\n        _this4.requestCallbacks[requestId] = function () {\n          var _ref = _asyncToGenerator(function* (resp, err) {\n            if (err) {\n              reject(err);\n              return;\n            }\n            if (isAFCResponse(resp)) {\n              resolve(resp);\n            } else {\n              reject(new _errors.CommandError(\"APPLE_DEVICE_AFC\", \"Malformed AFC response\"));\n            }\n          });\n          return function (_x, _x2) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        _this4.writer.write(_this4.socket, _objectSpread(_objectSpread({}, msg), {}, {\n          requestId: requestId\n        }));\n      });\n    }\n  }]);\n  return AFCProtocolClient;\n}(_abstractProtocol.ProtocolClient);\nexports.AFCProtocolClient = AFCProtocolClient;\nvar AFCProtocolReader = function (_abstractProtocol$Pro2) {\n  _inherits(AFCProtocolReader, _abstractProtocol$Pro2);\n  var _super4 = _createSuper(AFCProtocolReader);\n  function AFCProtocolReader(callback) {\n    _classCallCheck(this, AFCProtocolReader);\n    return _super4.call(this, AFC_HEADER_SIZE, callback);\n  }\n  _createClass(AFCProtocolReader, [{\n    key: \"parseHeader\",\n    value: function parseHeader(data) {\n      var magic = data.slice(0, 8).toString(\"ascii\");\n      if (magic !== AFC_MAGIC) {\n        throw new AFCInternalError(`Invalid AFC packet received (magic != ${AFC_MAGIC})`, data.readUInt32LE(24));\n      }\n      this.header = {\n        magic: magic,\n        totalLength: data.readUInt32LE(8),\n        headerLength: data.readUInt32LE(16),\n        requestId: data.readUInt32LE(24),\n        operation: data.readUInt32LE(32)\n      };\n      debug(`parse header: ${JSON.stringify(this.header)}`);\n      if (this.header.headerLength < AFC_HEADER_SIZE) {\n        throw new AFCInternalError(\"Invalid AFC header\", this.header.requestId);\n      }\n      return this.header.totalLength - AFC_HEADER_SIZE;\n    }\n  }, {\n    key: \"parseBody\",\n    value: function parseBody(data) {\n      var body = {\n        operation: this.header.operation,\n        id: this.header.requestId,\n        data: data\n      };\n      if (isStatusResponse(body)) {\n        var status = data.readUInt32LE(0);\n        debug(`${AFC_OPS[this.header.operation]} response: ${AFC_STATUS[status]}`);\n        body.data = status;\n      } else if (data.length <= 8) {\n        debug(`${AFC_OPS[this.header.operation]} response: ${Array.prototype.toString.call(body)}`);\n      } else {\n        debug(`${AFC_OPS[this.header.operation]} response length: ${data.length} bytes`);\n      }\n      return body;\n    }\n  }]);\n  return AFCProtocolReader;\n}(_abstractProtocol.ProtocolReader);\nexports.AFCProtocolReader = AFCProtocolReader;\nvar AFCProtocolWriter = function () {\n  function AFCProtocolWriter() {\n    _classCallCheck(this, AFCProtocolWriter);\n  }\n  _createClass(AFCProtocolWriter, [{\n    key: \"write\",\n    value: function write(socket, msg) {\n      var data = msg.data,\n        payload = msg.payload,\n        operation = msg.operation,\n        requestId = msg.requestId;\n      var dataLength = data ? data.length : 0;\n      var payloadLength = payload ? payload.length : 0;\n      var header = Buffer.alloc(AFC_HEADER_SIZE);\n      var magic = Buffer.from(AFC_MAGIC);\n      magic.copy(header);\n      header.writeUInt32LE(AFC_HEADER_SIZE + dataLength + payloadLength, 8);\n      header.writeUInt32LE(AFC_HEADER_SIZE + dataLength, 16);\n      header.writeUInt32LE(requestId, 24);\n      header.writeUInt32LE(operation, 32);\n      socket.write(header);\n      socket.write(data);\n      if (data.length <= 8) {\n        debug(`socket write, header: { requestId: ${requestId}, operation: ${AFC_OPS[operation]}}, body: ${Array.prototype.toString.call(data)}`);\n      } else {\n        debug(`socket write, header: { requestId: ${requestId}, operation: ${AFC_OPS[operation]}}, body: ${data.length} bytes`);\n      }\n      debug(`socket write, bytes written ${header.length} (header), ${data.length} (body)`);\n      if (payload) {\n        socket.write(payload);\n      }\n    }\n  }]);\n  return AFCProtocolWriter;\n}();\nexports.AFCProtocolWriter = AFCProtocolWriter;","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","_createClass","_classCallCheck","_inherits","_possibleConstructorReturn","_getPrototypeOf","_wrapNativeSuper","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","_debug","_interopRequireDefault","_errors","_abstractProtocol","debug","default","AFC_MAGIC","AFC_HEADER_SIZE","AFC_OPS","exports","AFC_STATUS","AFC_FILE_OPEN_FLAGS","isAFCResponse","resp","operation","undefined","id","data","isStatusResponse","isErrorStatusResponse","AFCInternalError","_Error","_super","msg","requestId","_this","Error","AFCError","_Error2","_super2","status","_this2","AFCProtocolClient","_abstractProtocol$Pro","_super3","socket","_this3","ProtocolReaderFactory","AFCProtocolReader","AFCProtocolWriter","requestCallbacks","reader","readerFactory","create","err","on","onData","key","value","sendMessage","_this4","Promise","resolve","reject","_ref","CommandError","_x","_x2","writer","write","ProtocolClient","_abstractProtocol$Pro2","_super4","callback","parseHeader","magic","slice","toString","readUInt32LE","header","totalLength","headerLength","JSON","stringify","parseBody","body","Array","ProtocolReader","payload","dataLength","payloadLength","Buffer","alloc","from","copy","writeUInt32LE"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\ios\\appleDevice\\protocol\\AFCProtocol.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport { Socket } from 'net';\n\nimport { CommandError } from '../../../../utils/errors';\nimport type { ProtocolReaderCallback, ProtocolWriter } from './AbstractProtocol';\nimport { ProtocolClient, ProtocolReader, ProtocolReaderFactory } from './AbstractProtocol';\n\nconst debug = Debug('expo:apple-device:protocol:afc');\n\nexport const AFC_MAGIC = 'CFA6LPAA';\nexport const AFC_HEADER_SIZE = 40;\n\nexport interface AFCHeader {\n  magic: typeof AFC_MAGIC;\n  totalLength: number;\n  headerLength: number;\n  requestId: number;\n  operation: AFC_OPS;\n}\n\nexport interface AFCMessage {\n  operation: AFC_OPS;\n  data?: any;\n  payload?: any;\n}\n\nexport interface AFCResponse {\n  operation: AFC_OPS;\n  id: number;\n  data: Buffer;\n}\n\nexport interface AFCStatusResponse {\n  operation: AFC_OPS.STATUS;\n  id: number;\n  data: number;\n}\n\n/**\n * AFC Operations\n */\nexport enum AFC_OPS {\n  /**\n   * Invalid\n   */\n  INVALID = 0x00000000,\n\n  /**\n   * Status\n   */\n  STATUS = 0x00000001,\n\n  /**\n   * Data\n   */\n  DATA = 0x00000002,\n\n  /**\n   * ReadDir\n   */\n  READ_DIR = 0x00000003,\n\n  /**\n   * ReadFile\n   */\n  READ_FILE = 0x00000004,\n\n  /**\n   * WriteFile\n   */\n  WRITE_FILE = 0x00000005,\n\n  /**\n   * WritePart\n   */\n  WRITE_PART = 0x00000006,\n\n  /**\n   * TruncateFile\n   */\n  TRUNCATE = 0x00000007,\n\n  /**\n   * RemovePath\n   */\n  REMOVE_PATH = 0x00000008,\n\n  /**\n   * MakeDir\n   */\n  MAKE_DIR = 0x00000009,\n\n  /**\n   * GetFileInfo\n   */\n  GET_FILE_INFO = 0x0000000a,\n\n  /**\n   * GetDeviceInfo\n   */\n  GET_DEVINFO = 0x0000000b,\n\n  /**\n   * WriteFileAtomic (tmp file+rename)\n   */\n  WRITE_FILE_ATOM = 0x0000000c,\n\n  /**\n   * FileRefOpen\n   */\n  FILE_OPEN = 0x0000000d,\n\n  /**\n   * FileRefOpenResult\n   */\n  FILE_OPEN_RES = 0x0000000e,\n\n  /**\n   * FileRefRead\n   */\n  FILE_READ = 0x0000000f,\n\n  /**\n   * FileRefWrite\n   */\n  FILE_WRITE = 0x00000010,\n\n  /**\n   * FileRefSeek\n   */\n  FILE_SEEK = 0x00000011,\n\n  /**\n   * FileRefTell\n   */\n  FILE_TELL = 0x00000012,\n\n  /**\n   * FileRefTellResult\n   */\n  FILE_TELL_RES = 0x00000013,\n\n  /**\n   * FileRefClose\n   */\n  FILE_CLOSE = 0x00000014,\n\n  /**\n   * FileRefSetFileSize (ftruncate)\n   */\n  FILE_SET_SIZE = 0x00000015,\n\n  /**\n   * GetConnectionInfo\n   */\n  GET_CON_INFO = 0x00000016,\n\n  /**\n   * SetConnectionOptions\n   */\n  SET_CON_OPTIONS = 0x00000017,\n\n  /**\n   * RenamePath\n   */\n  RENAME_PATH = 0x00000018,\n\n  /**\n   * SetFSBlockSize (0x800000)\n   */\n  SET_FS_BS = 0x00000019,\n\n  /**\n   * SetSocketBlockSize (0x800000)\n   */\n  SET_SOCKET_BS = 0x0000001a,\n\n  /**\n   * FileRefLock\n   */\n  FILE_LOCK = 0x0000001b,\n\n  /**\n   * MakeLink\n   */\n  MAKE_LINK = 0x0000001c,\n\n  /**\n   * GetFileHash\n   */\n  GET_FILE_HASH = 0x0000001d,\n\n  /**\n   * SetModTime\n   */\n  SET_FILE_MOD_TIME = 0x0000001e,\n\n  /**\n   * GetFileHashWithRange\n   */\n  GET_FILE_HASH_RANGE = 0x0000001f,\n\n  // iOS 6+\n\n  /**\n   * FileRefSetImmutableHint\n   */\n  FILE_SET_IMMUTABLE_HINT = 0x00000020,\n\n  /**\n   * GetSizeOfPathContents\n   */\n  GET_SIZE_OF_PATH_CONTENTS = 0x00000021,\n\n  /**\n   * RemovePathAndContents\n   */\n  REMOVE_PATH_AND_CONTENTS = 0x00000022,\n\n  /**\n   * DirectoryEnumeratorRefOpen\n   */\n  DIR_OPEN = 0x00000023,\n\n  /**\n   * DirectoryEnumeratorRefOpenResult\n   */\n  DIR_OPEN_RESULT = 0x00000024,\n\n  /**\n   * DirectoryEnumeratorRefRead\n   */\n  DIR_READ = 0x00000025,\n\n  /**\n   * DirectoryEnumeratorRefClose\n   */\n  DIR_CLOSE = 0x00000026,\n\n  // iOS 7+\n\n  /**\n   * FileRefReadWithOffset\n   */\n  FILE_READ_OFFSET = 0x00000027,\n\n  /**\n   * FileRefWriteWithOffset\n   */\n  FILE_WRITE_OFFSET = 0x00000028,\n}\n\n/**\n * Error Codes\n */\nexport enum AFC_STATUS {\n  SUCCESS = 0,\n  UNKNOWN_ERROR = 1,\n  OP_HEADER_INVALID = 2,\n  NO_RESOURCES = 3,\n  READ_ERROR = 4,\n  WRITE_ERROR = 5,\n  UNKNOWN_PACKET_TYPE = 6,\n  INVALID_ARG = 7,\n  OBJECT_NOT_FOUND = 8,\n  OBJECT_IS_DIR = 9,\n  PERM_DENIED = 10,\n  SERVICE_NOT_CONNECTED = 11,\n  OP_TIMEOUT = 12,\n  TOO_MUCH_DATA = 13,\n  END_OF_DATA = 14,\n  OP_NOT_SUPPORTED = 15,\n  OBJECT_EXISTS = 16,\n  OBJECT_BUSY = 17,\n  NO_SPACE_LEFT = 18,\n  OP_WOULD_BLOCK = 19,\n  IO_ERROR = 20,\n  OP_INTERRUPTED = 21,\n  OP_IN_PROGRESS = 22,\n  INTERNAL_ERROR = 23,\n  MUX_ERROR = 30,\n  NO_MEM = 31,\n  NOT_ENOUGH_DATA = 32,\n  DIR_NOT_EMPTY = 33,\n  FORCE_SIGNED_TYPE = -1,\n}\n\nexport enum AFC_FILE_OPEN_FLAGS {\n  /**\n   * r (O_RDONLY)\n   */\n  RDONLY = 0x00000001,\n\n  /**\n   * r+ (O_RDWR | O_CREAT)\n   */\n  RW = 0x00000002,\n\n  /**\n   * w (O_WRONLY | O_CREAT | O_TRUNC)\n   */\n  WRONLY = 0x00000003,\n\n  /**\n   * w+ (O_RDWR | O_CREAT  | O_TRUNC)\n   */\n  WR = 0x00000004,\n\n  /**\n   * a (O_WRONLY | O_APPEND | O_CREAT)\n   */\n  APPEND = 0x00000005,\n\n  /**\n   * a+ (O_RDWR | O_APPEND | O_CREAT)\n   */\n  RDAPPEND = 0x00000006,\n}\n\nfunction isAFCResponse(resp: any): resp is AFCResponse {\n  return AFC_OPS[resp.operation] !== undefined && resp.id !== undefined && resp.data !== undefined;\n}\n\nfunction isStatusResponse(resp: any): resp is AFCStatusResponse {\n  return isAFCResponse(resp) && resp.operation === AFC_OPS.STATUS;\n}\n\nfunction isErrorStatusResponse(resp: AFCResponse): boolean {\n  return isStatusResponse(resp) && resp.data !== AFC_STATUS.SUCCESS;\n}\n\nclass AFCInternalError extends Error {\n  constructor(msg: string, public requestId: number) {\n    super(msg);\n  }\n}\n\nexport class AFCError extends Error {\n  constructor(msg: string, public status: AFC_STATUS) {\n    super(msg);\n  }\n}\n\nexport class AFCProtocolClient extends ProtocolClient {\n  private requestId = 0;\n  private requestCallbacks: { [key: number]: ProtocolReaderCallback } = {};\n\n  constructor(socket: Socket) {\n    super(socket, new ProtocolReaderFactory(AFCProtocolReader), new AFCProtocolWriter());\n\n    const reader = this.readerFactory.create((resp, err) => {\n      if (err && err instanceof AFCInternalError) {\n        this.requestCallbacks[err.requestId](resp, err);\n      } else if (isErrorStatusResponse(resp)) {\n        this.requestCallbacks[resp.id](resp, new AFCError(AFC_STATUS[resp.data], resp.data));\n      } else {\n        this.requestCallbacks[resp.id](resp);\n      }\n    });\n    socket.on('data', reader.onData);\n  }\n\n  sendMessage(msg: AFCMessage): Promise<AFCResponse> {\n    return new Promise<AFCResponse>((resolve, reject) => {\n      const requestId = this.requestId++;\n      this.requestCallbacks[requestId] = async (resp: any, err?: Error) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        if (isAFCResponse(resp)) {\n          resolve(resp);\n        } else {\n          reject(new CommandError('APPLE_DEVICE_AFC', 'Malformed AFC response'));\n        }\n      };\n      this.writer.write(this.socket, { ...msg, requestId });\n    });\n  }\n}\n\nexport class AFCProtocolReader extends ProtocolReader {\n  private header!: AFCHeader; // TODO: ! -> ?\n\n  constructor(callback: ProtocolReaderCallback) {\n    super(AFC_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    const magic = data.slice(0, 8).toString('ascii');\n    if (magic !== AFC_MAGIC) {\n      throw new AFCInternalError(\n        `Invalid AFC packet received (magic != ${AFC_MAGIC})`,\n        data.readUInt32LE(24)\n      );\n    }\n    // technically these are uint64\n    this.header = {\n      magic,\n      totalLength: data.readUInt32LE(8),\n      headerLength: data.readUInt32LE(16),\n      requestId: data.readUInt32LE(24),\n      operation: data.readUInt32LE(32),\n    };\n\n    debug(`parse header: ${JSON.stringify(this.header)}`);\n    if (this.header.headerLength < AFC_HEADER_SIZE) {\n      throw new AFCInternalError('Invalid AFC header', this.header.requestId);\n    }\n    return this.header.totalLength - AFC_HEADER_SIZE;\n  }\n\n  parseBody(data: Buffer): AFCResponse | AFCStatusResponse {\n    const body: any = {\n      operation: this.header.operation,\n      id: this.header.requestId,\n      data,\n    };\n    if (isStatusResponse(body)) {\n      const status = data.readUInt32LE(0);\n      debug(`${AFC_OPS[this.header.operation]} response: ${AFC_STATUS[status]}`);\n      body.data = status;\n    } else if (data.length <= 8) {\n      debug(`${AFC_OPS[this.header.operation]} response: ${Array.prototype.toString.call(body)}`);\n    } else {\n      debug(`${AFC_OPS[this.header.operation]} response length: ${data.length} bytes`);\n    }\n    return body;\n  }\n}\n\nexport class AFCProtocolWriter implements ProtocolWriter {\n  write(socket: Socket, msg: AFCMessage & { requestId: number }) {\n    const { data, payload, operation, requestId } = msg;\n\n    const dataLength = data ? data.length : 0;\n    const payloadLength = payload ? payload.length : 0;\n\n    const header = Buffer.alloc(AFC_HEADER_SIZE);\n    const magic = Buffer.from(AFC_MAGIC);\n    magic.copy(header);\n    header.writeUInt32LE(AFC_HEADER_SIZE + dataLength + payloadLength, 8);\n    header.writeUInt32LE(AFC_HEADER_SIZE + dataLength, 16);\n    header.writeUInt32LE(requestId, 24);\n    header.writeUInt32LE(operation, 32);\n    socket.write(header);\n    socket.write(data);\n    if (data.length <= 8) {\n      debug(\n        `socket write, header: { requestId: ${requestId}, operation: ${\n          AFC_OPS[operation]\n        }}, body: ${Array.prototype.toString.call(data)}`\n      );\n    } else {\n      debug(\n        `socket write, header: { requestId: ${requestId}, operation: ${AFC_OPS[operation]}}, body: ${data.length} bytes`\n      );\n    }\n\n    debug(`socket write, bytes written ${header.length} (header), ${data.length} (body)`);\n    if (payload) {\n      socket.write(payload);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}