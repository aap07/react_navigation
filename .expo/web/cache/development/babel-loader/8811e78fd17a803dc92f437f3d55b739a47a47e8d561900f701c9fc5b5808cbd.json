{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { v4 as uuidv4 } from 'uuid';\nvar INSTALLATION_ID_KEY = 'installationId';\nvar installationId = null;\nexport default function getInstallationIdAsync() {\n  return _getInstallationIdAsync.apply(this, arguments);\n}\nfunction _getInstallationIdAsync() {\n  _getInstallationIdAsync = _asyncToGenerator(function* () {\n    if (installationId) {\n      return installationId;\n    }\n    try {\n      installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n      if (installationId) {\n        return installationId;\n      }\n    } catch (_unused) {}\n    installationId = uuidv4();\n    try {\n      localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n    } catch (error) {\n      console.debug('Could not save installation ID in persisted storage, it will get reset.', error);\n    }\n    return installationId;\n  });\n  return _getInstallationIdAsync.apply(this, arguments);\n}","map":{"version":3,"names":["v4","uuidv4","INSTALLATION_ID_KEY","installationId","getInstallationIdAsync","_getInstallationIdAsync","apply","arguments","_asyncToGenerator","localStorage","getItem","_unused","setItem","error","console","debug"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\expo\\src\\environment\\getInstallationIdAsync.web.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nconst INSTALLATION_ID_KEY = 'installationId';\n\nlet installationId: string | null = null;\n\nexport default async function getInstallationIdAsync() {\n  // Already cached value\n  if (installationId) {\n    return installationId;\n  }\n\n  try {\n    // No cached value, fetch from persisted storage\n    installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n    if (installationId) {\n      return installationId;\n    }\n  } catch {\n    // If we weren't able to fetch one (for whatever reason)\n    // let's create a new one.\n  }\n\n  // No persisted value, set the cached value...\n  installationId = uuidv4();\n  // ...and try to persist it. Ignore the errors.\n  try {\n    localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n  } catch (error) {\n    console.debug('Could not save installation ID in persisted storage, it will get reset.', error);\n  }\n\n  return installationId;\n}\n"],"mappings":";AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,IAAMC,mBAAmB,GAAG,gBAAgB;AAE5C,IAAIC,cAAc,GAAkB,IAAI;AAExC,wBAA8BC,sBAAsBA,CAAA;EAAA,OAAAC,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AA2BnD,SAAAF,wBAAA;EAAAA,uBAAA,GAAAG,iBAAA,CA3Bc,aAAqC;IAElD,IAAIL,cAAc,EAAE;MAClB,OAAOA,cAAc;;IAGvB,IAAI;MAEFA,cAAc,GAAGM,YAAY,CAACC,OAAO,CAACR,mBAAmB,CAAC;MAC1D,IAAIC,cAAc,EAAE;QAClB,OAAOA,cAAc;;KAExB,CAAC,OAAAQ,OAAA,EAAM,C;IAMRR,cAAc,GAAGF,MAAM,EAAE;IAEzB,IAAI;MACFQ,YAAY,CAACG,OAAO,CAACV,mBAAmB,EAAEC,cAAc,CAAC;KAC1D,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACC,KAAK,CAAC,yEAAyE,EAAEF,KAAK,CAAC;;IAGjG,OAAOV,cAAc;EACvB,CAAC;EAAA,OAAAE,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}