{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/cli/node_modules/type-fest/source/merge.d.ts"],"sourcesContent":["import {Except} from './except';\n\n/**\nMerge two types into a new type. Keys of the second type overrides keys of the first type.\n\n@example\n```\nimport {Merge} from 'type-fest';\n\ntype Foo = {\n\ta: number;\n\tb: string;\n};\n\ntype Bar = {\n\tb: number;\n};\n\nconst ab: Merge<Foo, Bar> = {a: 1, b: 2};\n```\n*/\nexport type Merge<FirstType, SecondType> = Except<FirstType, Extract<keyof FirstType, keyof SecondType>> & SecondType;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}