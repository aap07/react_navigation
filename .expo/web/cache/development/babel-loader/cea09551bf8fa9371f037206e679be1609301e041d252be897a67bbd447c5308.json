{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dependencyConfig = dependencyConfig;\nexports.findPodfilePaths = void 0;\nexports.projectConfig = projectConfig;\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nvar _findPodfilePath = _interopRequireDefault(require(\"./findPodfilePath\"));\nvar _findXcodeProject = _interopRequireDefault(require(\"./findXcodeProject\"));\nvar _findPodspec = _interopRequireDefault(require(\"./findPodspec\"));\nvar _findAllPodfilePaths = _interopRequireDefault(require(\"./findAllPodfilePaths\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction projectConfig(folder, userConfig) {\n  var _userConfig$sourceDir;\n  if (!userConfig) {\n    return null;\n  }\n  var src = _path().default.join(folder, (_userConfig$sourceDir = userConfig.sourceDir) != null ? _userConfig$sourceDir : '');\n  var podfile = (0, _findPodfilePath.default)(src);\n  if (!podfile) {\n    return null;\n  }\n  var sourceDir = _path().default.dirname(podfile);\n  var xcodeProject = (0, _findXcodeProject.default)(_fs().default.readdirSync(sourceDir));\n  return {\n    sourceDir: sourceDir,\n    xcodeProject: xcodeProject\n  };\n}\nfunction dependencyConfig(folder) {\n  var userConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (userConfig === null) {\n    return null;\n  }\n  var podspecPath = (0, _findPodspec.default)(folder);\n  if (!podspecPath) {\n    return null;\n  }\n  return {\n    podspecPath: podspecPath,\n    configurations: userConfig.configurations || [],\n    scriptPhases: userConfig.scriptPhases || []\n  };\n}\nvar findPodfilePaths = _findAllPodfilePaths.default;\nexports.findPodfilePaths = findPodfilePaths;","map":{"version":3,"names":["Object","defineProperty","exports","value","dependencyConfig","findPodfilePaths","projectConfig","_path","data","_interopRequireDefault","require","_fs","_findPodfilePath","_findXcodeProject","_findPodspec","_findAllPodfilePaths","obj","__esModule","default","folder","userConfig","_userConfig$sourceDir","src","join","sourceDir","podfile","dirname","xcodeProject","readdirSync","arguments","length","undefined","podspecPath","configurations","scriptPhases"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-platform-ios/build/config/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dependencyConfig = dependencyConfig;\nexports.findPodfilePaths = void 0;\nexports.projectConfig = projectConfig;\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nvar _findPodfilePath = _interopRequireDefault(require(\"./findPodfilePath\"));\nvar _findXcodeProject = _interopRequireDefault(require(\"./findXcodeProject\"));\nvar _findPodspec = _interopRequireDefault(require(\"./findPodspec\"));\nvar _findAllPodfilePaths = _interopRequireDefault(require(\"./findAllPodfilePaths\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Returns project config by analyzing given folder and applying some user defaults\n * when constructing final object\n */\nfunction projectConfig(folder, userConfig) {\n  if (!userConfig) {\n    return null;\n  }\n  const src = _path().default.join(folder, userConfig.sourceDir ?? '');\n  const podfile = (0, _findPodfilePath.default)(src);\n\n  /**\n   * In certain repos, the Xcode project can be generated by a tool.\n   * The only file that we can assume to exist on disk is `Podfile`.\n   */\n  if (!podfile) {\n    return null;\n  }\n  const sourceDir = _path().default.dirname(podfile);\n  const xcodeProject = (0, _findXcodeProject.default)(_fs().default.readdirSync(sourceDir));\n  return {\n    sourceDir,\n    xcodeProject\n  };\n}\nfunction dependencyConfig(folder, userConfig = {}) {\n  if (userConfig === null) {\n    return null;\n  }\n  const podspecPath = (0, _findPodspec.default)(folder);\n  if (!podspecPath) {\n    return null;\n  }\n  return {\n    podspecPath,\n    configurations: userConfig.configurations || [],\n    scriptPhases: userConfig.scriptPhases || []\n  };\n}\nconst findPodfilePaths = _findAllPodfilePaths.default;\nexports.findPodfilePaths = findPodfilePaths;\n\n//# sourceMappingURL=index.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}