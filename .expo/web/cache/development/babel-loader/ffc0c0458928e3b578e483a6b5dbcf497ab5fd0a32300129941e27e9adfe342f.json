{"ast":null,"code":"var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function end() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\nfunction Linux(instance, end) {\n  LinuxBinary(instance, function (error, binary) {\n    if (error) return end(error);\n    var command = [];\n    command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n    if (/kdesudo/i.test(binary)) {\n      var reason = 'needs administrative privileges. Please enter your password.';\n      command.push('--comment', '\"' + instance.options.name + ' ' + reason + '\"');\n      command.push('--');\n    } else if (/pkexec/i.test(binary)) {\n      command.push('--disable-internal-agent');\n    }\n    command.push(instance.command);\n    command = command.join(' ');\n    Node.child.exec(command, {\n      maxBuffer: MAX_BUFFER\n    }, function (error, stdout, stderr) {\n      if (error) {\n        if (/No authentication agent found/.test(stderr)) {\n          error = new Error(NO_POLKIT_AGENT);\n        } else if (/Request dismissed|Command failed/i.test(error)) {\n          error = new Error(PERMISSION_DENIED);\n        }\n      }\n      end(error, stdout, stderr);\n    });\n  });\n}\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path, function (error) {\n      if (error) {\n        if (error.code === 'ENOTDIR') return test();\n        if (error.code === 'ENOENT') return test();\n        end(error);\n      } else {\n        end(undefined, path);\n      }\n    });\n  }\n  test();\n}\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER;\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance, function (error, uuid) {\n    if (error) return callback(error);\n    instance.uuid = uuid;\n    instance.path = Node.path.join(temp, instance.uuid, instance.options.name + '.app');\n    function end(error, stdout, stderr) {\n      Remove(Node.path.dirname(instance.path), function (errorRemove) {\n        if (error) return callback(error);\n        if (errorRemove) return callback(errorRemove);\n        callback(undefined, stdout, stderr);\n      });\n    }\n    MacApplet(instance, function (error) {\n      if (error) return end(error);\n      MacIcon(instance, function (error) {\n        if (error) return end(error);\n        MacPropertyList(instance, function (error) {\n          if (error) return end(error);\n          MacCommand(instance, function (error) {\n            if (error) return end(error);\n            MacOpen(instance, function (error) {\n              if (error) return end(error);\n              MacResult(instance, end);\n            });\n          });\n        });\n      });\n    });\n  });\n}\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent, function (error) {\n    if (error) return end(error);\n    var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n    Node.fs.writeFile(zip, APPLET, 'base64', function (error) {\n      if (error) return end(error);\n      var command = [];\n      command.push('/usr/bin/unzip');\n      command.push('-o');\n      command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n      command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n      command = command.join(' ');\n      Node.child.exec(command, end);\n    });\n  });\n}\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(instance.path, 'Contents', 'MacOS', 'sudo-prompt-command');\n  var script = [];\n  var cwd = Node.process.cwd();\n  script.push('cd \"' + EscapeDoubleQuotes(cwd) + '\"');\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns, function (error, buffer) {\n    if (error) return end(error);\n    var icns = Node.path.join(instance.path, 'Contents', 'Resources', 'applet.icns');\n    Node.fs.writeFile(icns, buffer, end);\n  });\n}\nfunction MacOpen(instance, end) {\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  var options = {\n    cwd: Node.path.dirname(binary)\n  };\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\nfunction MacPropertyList(instance, end) {\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\");\n  command = command.join(' ');\n  Node.child.exec(command, end);\n}\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8', function (error, code) {\n    if (error) {\n      if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n      end(error);\n    } else {\n      Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8', function (error, stdout) {\n        if (error) return end(error);\n        Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8', function (error, stderr) {\n          if (error) return end(error);\n          code = parseInt(code.trim(), 10);\n          if (code === 0) {\n            end(undefined, stdout, stderr);\n          } else {\n            error = new Error('Command failed: ' + instance.command + '\\n' + stderr);\n            error.code = code;\n            end(error, stdout, stderr);\n          }\n        });\n      });\n    }\n  });\n}\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, end);\n}\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256, function (error, random) {\n    if (error) random = Date.now() + '' + Math.random();\n    var hash = Node.crypto.createHash('SHA256');\n    hash.update('sudo-prompt-3');\n    hash.update(instance.options.name);\n    hash.update(instance.command);\n    hash.update(random);\n    var uuid = hash.digest('hex').slice(-32);\n    if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n      return end(new Error('Expected a valid UUID.'));\n    }\n    end(undefined, uuid);\n  });\n}\nfunction ValidName(string) {\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance, function (error, uuid) {\n    if (error) return callback(error);\n    instance.uuid = uuid;\n    instance.path = Node.path.join(temp, instance.uuid);\n    if (/\"/.test(instance.path)) {\n      return callback(new Error('instance.path cannot contain double-quotes.'));\n    }\n    instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n    instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n    instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n    instance.pathStdout = Node.path.join(instance.path, 'stdout');\n    instance.pathStderr = Node.path.join(instance.path, 'stderr');\n    instance.pathStatus = Node.path.join(instance.path, 'status');\n    Node.fs.mkdir(instance.path, function (error) {\n      if (error) return callback(error);\n      function end(error, stdout, stderr) {\n        Remove(instance.path, function (errorRemove) {\n          if (error) return callback(error);\n          if (errorRemove) return callback(errorRemove);\n          callback(undefined, stdout, stderr);\n        });\n      }\n      WindowsWriteElevateScript(instance, function (error) {\n        if (error) return end(error);\n        WindowsWriteExecuteScript(instance, function (error) {\n          if (error) return end(error);\n          WindowsWriteCommandScript(instance, function (error) {\n            if (error) return end(error);\n            WindowsElevate(instance, function (error) {\n              if (error) return end(error);\n              WindowsWaitForStatus(instance, function (error) {\n                if (error) return end(error);\n                WindowsResult(instance, end);\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\nfunction WindowsElevate(instance, end) {\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command, function (error, stdout, stderr) {\n    if (error) {\n      if (/canceled by the user/i.test(error)) {\n        end(PERMISSION_DENIED);\n      } else {\n        end(error);\n      }\n    } else {\n      end();\n    }\n  });\n  child.stdin.end();\n}\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8', function (error, code) {\n    if (error) return end(error);\n    Node.fs.readFile(instance.pathStdout, 'utf-8', function (error, stdout) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStderr, 'utf-8', function (error, stderr) {\n        if (error) return end(error);\n        code = parseInt(code.trim(), 10);\n        if (code === 0) {\n          end(undefined, stdout, stderr);\n        } else {\n          error = new Error('Command failed: ' + instance.command + '\\r\\n' + stderr);\n          error.code = code;\n          end(error, stdout, stderr);\n        }\n      });\n    });\n  });\n}\nfunction WindowsWaitForStatus(instance, end) {\n  Node.fs.stat(instance.pathStatus, function (error, stats) {\n    if (error && error.code === 'ENOENT' || stats.size < 2) {\n      setTimeout(function () {\n        Node.fs.stat(instance.pathStdout, function (error) {\n          if (error) return end(PERMISSION_DENIED);\n          WindowsWaitForStatus(instance, end);\n        });\n      }, 1000);\n    } else if (error) {\n      end(error);\n    } else {\n      end();\n    }\n  });\n}\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  script.push('chcp 65001>nul');\n  script.push('cd /d \"' + cwd + '\"');\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\nfunction WindowsWriteElevateScript(instance, end) {\n  end();\n}\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push('call \"' + instance.pathCommand + '\"' + ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"');\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\nmodule.exports.exec = Exec;\nvar APPLET = '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';\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\nvar MAX_BUFFER = 134217728;","map":{"version":3,"names":["Node","child","require","crypto","fs","os","path","process","util","Attempt","instance","end","platform","Mac","Linux","Windows","Error","EscapeDoubleQuotes","string","replace","Exec","arguments","length","command","options","isObject","isFunction","test","name","title","ValidName","error","icns","trim","uuid","undefined","LinuxBinary","binary","push","reason","join","exec","maxBuffer","MAX_BUFFER","stdout","stderr","NO_POLKIT_AGENT","PERMISSION_DENIED","index","paths","stat","code","callback","temp","tmpdir","user","env","USER","UUID","Remove","dirname","errorRemove","MacApplet","MacIcon","MacPropertyList","MacCommand","MacOpen","MacResult","parent","mkdir","zip","writeFile","APPLET","script","cwd","readFile","buffer","basename","plist","key","value","parseInt","normalize","randomBytes","random","Date","now","Math","hash","createHash","update","digest","slice","pathElevate","pathExecute","pathCommand","pathStdout","pathStderr","pathStatus","WindowsWriteElevateScript","WindowsWriteExecuteScript","WindowsWriteCommandScript","WindowsElevate","WindowsWaitForStatus","WindowsResult","stdin","stats","size","setTimeout","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/devcert/node_modules/sudo-prompt/index.js"],"sourcesContent":["var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\n\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\n\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\n\nfunction Linux(instance, end) {\n  LinuxBinary(instance,\n    function(error, binary) {\n      if (error) return end(error);\n      var command = [];\n      command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n      if (/kdesudo/i.test(binary)) {\n        var reason = 'needs administrative privileges. Please enter your password.';\n        command.push('--comment', '\"' + instance.options.name + ' ' + reason + '\"');\n        command.push('--');\n      } else if (/pkexec/i.test(binary)) {\n        command.push('--disable-internal-agent');\n      }\n      command.push(instance.command);\n      command = command.join(' ');\n      Node.child.exec(command, { maxBuffer: MAX_BUFFER },\n        function(error, stdout, stderr) {\n          if (error) {\n            if (/No authentication agent found/.test(stderr)) {\n              error = new Error(NO_POLKIT_AGENT);\n            } else if (/Request dismissed|Command failed/i.test(error)) {\n              error = new Error(PERMISSION_DENIED);\n            }\n          }\n          end(error, stdout, stderr);\n        }\n      );\n    }\n  );\n}\n\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  // We used to prefer gksudo over pkexec since it enabled a better prompt.\n  // However, gksudo cannot run multiple commands concurrently.\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path,\n      function(error) {\n        if (error) {\n          if (error.code === 'ENOTDIR') return test();\n          if (error.code === 'ENOENT') return test();\n          end(error);\n        } else {\n          end(undefined, path);\n        }\n      }\n    );\n  }\n  test();\n}\n\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER; // Applet shell scripts require $USER.\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(\n        temp,\n        instance.uuid,\n        instance.options.name + '.app'\n      );\n      function end(error, stdout, stderr) {\n        Remove(Node.path.dirname(instance.path),\n          function(errorRemove) {\n            if (error) return callback(error);\n            if (errorRemove) return callback(errorRemove);\n            callback(undefined, stdout, stderr);\n          }\n        );\n      }\n      MacApplet(instance,\n        function(error) {\n          if (error) return end(error);\n          MacIcon(instance,\n            function(error) {\n              if (error) return end(error);\n              MacPropertyList(instance,\n                function(error) {\n                  if (error) return end(error);\n                  MacCommand(instance,\n                    function(error) {\n                      if (error) return end(error);\n                      MacOpen(instance,\n                        function(error) {\n                          if (error) return end(error);\n                          MacResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent,\n    function(error) {\n      if (error) return end(error);\n      var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n      Node.fs.writeFile(zip, APPLET, 'base64',\n        function(error) {\n          if (error) return end(error);\n          var command = [];\n          command.push('/usr/bin/unzip');\n          command.push('-o'); // Overwrite any existing applet.\n          command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n          command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n          command = command.join(' ');\n          Node.child.exec(command, end);\n        }\n      );\n    }\n  );\n}\n\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(\n    instance.path,\n    'Contents',\n    'MacOS',\n    'sudo-prompt-command'\n  );\n  var script = [];\n  // Preserve current working directory.\n  // We do this for commands that rely on relative paths.\n  // This runs in a subshell and will not change the cwd of sudo-prompt-script.\n  var cwd = Node.process.cwd();\n  script.push('cd \"' + EscapeDoubleQuotes(cwd) + '\"');\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\n\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns,\n    function(error, buffer) {\n      if (error) return end(error);\n      var icns = Node.path.join(\n        instance.path,\n        'Contents',\n        'Resources',\n        'applet.icns'\n      );\n      Node.fs.writeFile(icns, buffer, end);\n    }\n  );\n}\n\nfunction MacOpen(instance, end) {\n  // We must run the binary directly so that the cwd will apply.\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  // We must set the cwd so that the AppleScript can find the shell scripts.\n  var options = { cwd: Node.path.dirname(binary) };\n  // We use the relative path rather than the absolute path. The instance.path\n  // may contain spaces which the cwd can handle, but which exec() cannot.\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\n\nfunction MacPropertyList(instance, end) {\n  // Value must be in single quotes (not double quotes) according to man entry.\n  // e.g. defaults write com.companyname.appname \"Default Color\" '(255, 0, 0)'\n  // The defaults command will be changed in an upcoming major release to only\n  // operate on preferences domains. General plist manipulation utilities will\n  // be folded into a different command-line program.\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\"); // We must use single quotes for value.\n  command = command.join(' ');\n  Node.child.exec(command, end);\n}\n\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8',\n    function(error, code) {\n      if (error) {\n        if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n        end(error);\n      } else {\n        Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8',\n          function(error, stdout) {\n            if (error) return end(error);\n            Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8',\n              function(error, stderr) {\n                if (error) return end(error);\n                code = parseInt(code.trim(), 10); // Includes trailing newline.\n                if (code === 0) {\n                  end(undefined, stdout, stderr);\n                } else {\n                  error = new Error(\n                    'Command failed: ' + instance.command + '\\n' + stderr\n                  );\n                  error.code = code;\n                  end(error, stdout, stderr);\n                }\n              }\n            );\n          }\n        );\n      }\n    }\n  );\n}\n\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, end);\n}\n\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256,\n    function(error, random) {\n      if (error) random = Date.now() + '' + Math.random();\n      var hash = Node.crypto.createHash('SHA256');\n      hash.update('sudo-prompt-3');\n      hash.update(instance.options.name);\n      hash.update(instance.command);\n      hash.update(random);\n      var uuid = hash.digest('hex').slice(-32);\n      if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n        // This is critical to ensure we don't remove the wrong temp directory.\n        return end(new Error('Expected a valid UUID.'));\n      }\n      end(undefined, uuid);\n    }\n  );\n}\n\nfunction ValidName(string) {\n  // We use 70 characters as a limit to side-step any issues with Unicode\n  // normalization form causing a 255 character string to exceed the fs limit.\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\n\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(temp, instance.uuid);\n      if (/\"/.test(instance.path)) {\n        // We expect double quotes to be reserved on Windows.\n        // Even so, we test for this and abort if they are present.\n        return callback(\n          new Error('instance.path cannot contain double-quotes.')\n        );\n      }\n      instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n      instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n      instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n      instance.pathStdout = Node.path.join(instance.path, 'stdout');\n      instance.pathStderr = Node.path.join(instance.path, 'stderr');\n      instance.pathStatus = Node.path.join(instance.path, 'status');\n      Node.fs.mkdir(instance.path,\n        function(error) {\n          if (error) return callback(error);\n          function end(error, stdout, stderr) {\n            Remove(instance.path,\n              function(errorRemove) {\n                if (error) return callback(error);\n                if (errorRemove) return callback(errorRemove);\n                callback(undefined, stdout, stderr);\n              }\n            );\n          }\n          WindowsWriteElevateScript(instance,\n            function(error) {\n              if (error) return end(error);\n              WindowsWriteExecuteScript(instance,\n                function(error) {\n                  if (error) return end(error);\n                  WindowsWriteCommandScript(instance,\n                    function(error) {\n                      if (error) return end(error);\n                      WindowsElevate(instance,\n                        function(error) {\n                          if (error) return end(error);\n                          WindowsWaitForStatus(instance,\n                            function(error) {\n                              if (error) return end(error);\n                              WindowsResult(instance, end);\n                            }\n                          );\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsElevate(instance, end) {\n  // We used to use this for executing elevate.vbs:\n  // var command = 'cscript.exe //NoLogo \"' + instance.pathElevate + '\"';\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  // Escape characters for cmd using double quotes:\n  // Escape characters for PowerShell using single quotes:\n  // Escape single quotes for PowerShell using backtick:\n  // See: https://ss64.com/ps/syntax-esc.html\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command,\n    function(error, stdout, stderr) {\n      if (error) {\n        if (/canceled by the user/i.test(error)) {\n          end(PERMISSION_DENIED);\n        } else {\n          end(error);\n        }\n      } else {\n        end();\n      }\n    }\n  );\n  child.stdin.end(); // Otherwise PowerShell waits indefinitely on Windows 7.\n}\n\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8',\n    function(error, code) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStdout, 'utf-8',\n        function(error, stdout) {\n          if (error) return end(error);\n          Node.fs.readFile(instance.pathStderr, 'utf-8',\n            function(error, stderr) {\n              if (error) return end(error);\n              code = parseInt(code.trim(), 10);\n              if (code === 0) {\n                end(undefined, stdout, stderr);\n              } else {\n                error = new Error(\n                  'Command failed: ' + instance.command + '\\r\\n' + stderr\n                );\n                error.code = code;\n                end(error, stdout, stderr);\n              }\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsWaitForStatus(instance, end) {\n  // VBScript cannot wait for the elevated process to finish so we have to poll.\n  // VBScript cannot return error code if user does not grant permission.\n  // PowerShell can be used to elevate and wait on Windows 10.\n  // PowerShell can be used to elevate on Windows 7 but it cannot wait.\n  // powershell.exe Start-Process cmd.exe -Verb runAs -Wait\n  Node.fs.stat(instance.pathStatus,\n    function(error, stats) {\n      if ((error && error.code === 'ENOENT') || stats.size < 2) {\n        // Retry if file does not exist or is not finished writing.\n        // We expect a file size of 2. That should cover at least \"0\\r\".\n        // We use a 1 second timeout to keep a light footprint for long-lived\n        // sudo-prompt processes.\n        setTimeout(\n          function() {\n            // If administrator has no password and user clicks Yes, then\n            // PowerShell returns no error and execute (and command) never runs.\n            // We check that command output has been redirected to stdout file:\n            Node.fs.stat(instance.pathStdout,\n              function(error) {\n                if (error) return end(PERMISSION_DENIED);\n                WindowsWaitForStatus(instance, end);\n              }\n            );\n          },\n          1000\n        );\n      } else if (error) {\n        end(error);\n      } else {\n        end();\n      }\n    }\n  );\n}\n\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    // We expect double quotes to be reserved on Windows.\n    // Even so, we test for this and abort if they are present.\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  // Set code page to UTF-8:\n  script.push('chcp 65001>nul');\n  // We pass /d as an option in case the cwd is on another drive (issue 70):\n  script.push('cd /d \"' + cwd + '\"');\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\n\nfunction WindowsWriteElevateScript(instance, end) {\n  end();\n  // We do not use VBScript to elevate since it does not return an error if\n  // the user does not grant permission. This is here for reference.\n  // var script = [];\n  // script.push('Set objShell = CreateObject(\"Shell.Application\")');\n  // script.push(\n  //   'objShell.ShellExecute \"' + instance.pathExecute + '\", \"\", \"\", \"runas\", 0'\n  // );\n  // script = script.join('\\r\\n');\n  // Node.fs.writeFile(instance.pathElevate, script, 'utf-8', end);\n}\n\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push(\n    'call \"' + instance.pathCommand + '\"' +\n    ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"'\n  );\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\n\nmodule.exports.exec = Exec;\n\n// We used to expect that applet.app would be included with this module.\n// This could not be copied when sudo-prompt was packaged within an asar file.\n// We now store applet.app as a zip file in base64 within index.js instead.\n// To recreate: \"zip -r ../applet.zip Contents\" (with applet.app as CWD).\n// The zip file must not include applet.app as the root directory so that we\n// can extract it directly to the target app directory.\nvar APPLET = '';\n\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\n\n// See issue 66:\nvar MAX_BUFFER = 134217728;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}