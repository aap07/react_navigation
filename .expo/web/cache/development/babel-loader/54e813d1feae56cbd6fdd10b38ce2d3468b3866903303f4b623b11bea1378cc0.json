{"ast":null,"code":"'use strict';\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar ParserError = function (_Error) {\n  _inherits(ParserError, _Error);\n  var _super = _createSuper(ParserError);\n  function ParserError(nativeModuleName, astNodeOrNodes, message) {\n    var _this;\n    _classCallCheck(this, ParserError);\n    _this = _super.call(this, `Module ${nativeModuleName}: ${message}`);\n    _this.nodes = Array.isArray(astNodeOrNodes) ? astNodeOrNodes : [astNodeOrNodes];\n    _this.name = _this.constructor.name;\n    Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    return _this;\n  }\n  return _createClass(ParserError);\n}(_wrapNativeSuper(Error));\nvar MisnamedModuleInterfaceParserError = function (_ParserError) {\n  _inherits(MisnamedModuleInterfaceParserError, _ParserError);\n  var _super2 = _createSuper(MisnamedModuleInterfaceParserError);\n  function MisnamedModuleInterfaceParserError(nativeModuleName, id, language) {\n    _classCallCheck(this, MisnamedModuleInterfaceParserError);\n    return _super2.call(this, nativeModuleName, id, `All ${language} interfaces extending TurboModule must be called 'Spec'. Please rename ${language} interface '${id.name}' to 'Spec'.`);\n  }\n  return _createClass(MisnamedModuleInterfaceParserError);\n}(ParserError);\nvar ModuleInterfaceNotFoundParserError = function (_ParserError2) {\n  _inherits(ModuleInterfaceNotFoundParserError, _ParserError2);\n  var _super3 = _createSuper(ModuleInterfaceNotFoundParserError);\n  function ModuleInterfaceNotFoundParserError(nativeModuleName, ast, language) {\n    _classCallCheck(this, ModuleInterfaceNotFoundParserError);\n    return _super3.call(this, nativeModuleName, ast, `No ${language} interfaces extending TurboModule were detected in this NativeModule spec.`);\n  }\n  return _createClass(ModuleInterfaceNotFoundParserError);\n}(ParserError);\nvar MoreThanOneModuleInterfaceParserError = function (_ParserError3) {\n  _inherits(MoreThanOneModuleInterfaceParserError, _ParserError3);\n  var _super4 = _createSuper(MoreThanOneModuleInterfaceParserError);\n  function MoreThanOneModuleInterfaceParserError(nativeModuleName, flowModuleInterfaces, names, language) {\n    _classCallCheck(this, MoreThanOneModuleInterfaceParserError);\n    var finalName = names[names.length - 1];\n    var allButLastName = names.slice(0, -1);\n    var quote = function quote(x) {\n      return `'${x}'`;\n    };\n    var nameStr = allButLastName.map(quote).join(', ') + ', and ' + quote(finalName);\n    return _super4.call(this, nativeModuleName, flowModuleInterfaces, `Every NativeModule spec file must declare exactly one NativeModule ${language} interface. This file declares ${names.length}: ${nameStr}. Please remove the extraneous ${language} interface declarations.`);\n  }\n  return _createClass(MoreThanOneModuleInterfaceParserError);\n}(ParserError);\nvar UnsupportedModulePropertyParserError = function (_ParserError4) {\n  _inherits(UnsupportedModulePropertyParserError, _ParserError4);\n  var _super5 = _createSuper(UnsupportedModulePropertyParserError);\n  function UnsupportedModulePropertyParserError(nativeModuleName, propertyValue, propertyName, invalidPropertyValueType, language) {\n    _classCallCheck(this, UnsupportedModulePropertyParserError);\n    return _super5.call(this, nativeModuleName, propertyValue, `${language} interfaces extending TurboModule must only contain 'FunctionTypeAnnotation's. Property '${propertyName}' refers to a '${invalidPropertyValueType}'.`);\n  }\n  return _createClass(UnsupportedModulePropertyParserError);\n}(ParserError);\nvar UnsupportedTypeAnnotationParserError = function (_ParserError5) {\n  _inherits(UnsupportedTypeAnnotationParserError, _ParserError5);\n  var _super6 = _createSuper(UnsupportedTypeAnnotationParserError);\n  function UnsupportedTypeAnnotationParserError(nativeModuleName, typeAnnotation, language) {\n    var _this2;\n    _classCallCheck(this, UnsupportedTypeAnnotationParserError);\n    _this2 = _super6.call(this, nativeModuleName, typeAnnotation, `${language} type annotation '${typeAnnotation.type}' is unsupported in NativeModule specs.`);\n    _this2.typeAnnotationType = typeAnnotation.type;\n    return _this2;\n  }\n  return _createClass(UnsupportedTypeAnnotationParserError);\n}(ParserError);\nvar UnsupportedGenericParserError = function (_ParserError6) {\n  _inherits(UnsupportedGenericParserError, _ParserError6);\n  var _super7 = _createSuper(UnsupportedGenericParserError);\n  function UnsupportedGenericParserError(nativeModuleName, genericTypeAnnotation, parser) {\n    _classCallCheck(this, UnsupportedGenericParserError);\n    var genericName = parser.nameForGenericTypeAnnotation(genericTypeAnnotation);\n    return _super7.call(this, nativeModuleName, genericTypeAnnotation, `Unrecognized generic type '${genericName}' in NativeModule spec.`);\n  }\n  return _createClass(UnsupportedGenericParserError);\n}(ParserError);\nvar MissingTypeParameterGenericParserError = function (_ParserError7) {\n  _inherits(MissingTypeParameterGenericParserError, _ParserError7);\n  var _super8 = _createSuper(MissingTypeParameterGenericParserError);\n  function MissingTypeParameterGenericParserError(nativeModuleName, genericTypeAnnotation, parser) {\n    _classCallCheck(this, MissingTypeParameterGenericParserError);\n    var genericName = parser.nameForGenericTypeAnnotation(genericTypeAnnotation);\n    return _super8.call(this, nativeModuleName, genericTypeAnnotation, `Generic '${genericName}' must have type parameters.`);\n  }\n  return _createClass(MissingTypeParameterGenericParserError);\n}(ParserError);\nvar MoreThanOneTypeParameterGenericParserError = function (_ParserError8) {\n  _inherits(MoreThanOneTypeParameterGenericParserError, _ParserError8);\n  var _super9 = _createSuper(MoreThanOneTypeParameterGenericParserError);\n  function MoreThanOneTypeParameterGenericParserError(nativeModuleName, genericTypeAnnotation, parser) {\n    _classCallCheck(this, MoreThanOneTypeParameterGenericParserError);\n    var genericName = parser.nameForGenericTypeAnnotation(genericTypeAnnotation);\n    return _super9.call(this, nativeModuleName, genericTypeAnnotation, `Generic '${genericName}' must have exactly one type parameter.`);\n  }\n  return _createClass(MoreThanOneTypeParameterGenericParserError);\n}(ParserError);\nvar UnsupportedArrayElementTypeAnnotationParserError = function (_ParserError9) {\n  _inherits(UnsupportedArrayElementTypeAnnotationParserError, _ParserError9);\n  var _super10 = _createSuper(UnsupportedArrayElementTypeAnnotationParserError);\n  function UnsupportedArrayElementTypeAnnotationParserError(nativeModuleName, arrayElementTypeAST, arrayType, invalidArrayElementType) {\n    _classCallCheck(this, UnsupportedArrayElementTypeAnnotationParserError);\n    return _super10.call(this, nativeModuleName, arrayElementTypeAST, `${arrayType} element types cannot be '${invalidArrayElementType}'.`);\n  }\n  return _createClass(UnsupportedArrayElementTypeAnnotationParserError);\n}(ParserError);\nvar UnsupportedObjectPropertyTypeAnnotationParserError = function (_ParserError10) {\n  _inherits(UnsupportedObjectPropertyTypeAnnotationParserError, _ParserError10);\n  var _super11 = _createSuper(UnsupportedObjectPropertyTypeAnnotationParserError);\n  function UnsupportedObjectPropertyTypeAnnotationParserError(nativeModuleName, propertyAST, invalidPropertyType, language) {\n    _classCallCheck(this, UnsupportedObjectPropertyTypeAnnotationParserError);\n    var message = `'ObjectTypeAnnotation' cannot contain '${invalidPropertyType}'.`;\n    if (invalidPropertyType === 'ObjectTypeSpreadProperty' && language !== 'TypeScript') {\n      message = \"Object spread isn't supported in 'ObjectTypeAnnotation's.\";\n    }\n    return _super11.call(this, nativeModuleName, propertyAST, message);\n  }\n  return _createClass(UnsupportedObjectPropertyTypeAnnotationParserError);\n}(ParserError);\nvar UnsupportedObjectPropertyValueTypeAnnotationParserError = function (_ParserError11) {\n  _inherits(UnsupportedObjectPropertyValueTypeAnnotationParserError, _ParserError11);\n  var _super12 = _createSuper(UnsupportedObjectPropertyValueTypeAnnotationParserError);\n  function UnsupportedObjectPropertyValueTypeAnnotationParserError(nativeModuleName, propertyValueAST, propertyName, invalidPropertyValueType) {\n    _classCallCheck(this, UnsupportedObjectPropertyValueTypeAnnotationParserError);\n    return _super12.call(this, nativeModuleName, propertyValueAST, `Object property '${propertyName}' cannot have type '${invalidPropertyValueType}'.`);\n  }\n  return _createClass(UnsupportedObjectPropertyValueTypeAnnotationParserError);\n}(ParserError);\nvar UnnamedFunctionParamParserError = function (_ParserError12) {\n  _inherits(UnnamedFunctionParamParserError, _ParserError12);\n  var _super13 = _createSuper(UnnamedFunctionParamParserError);\n  function UnnamedFunctionParamParserError(functionParam, nativeModuleName) {\n    _classCallCheck(this, UnnamedFunctionParamParserError);\n    return _super13.call(this, nativeModuleName, functionParam, 'All function parameters must be named.');\n  }\n  return _createClass(UnnamedFunctionParamParserError);\n}(ParserError);\nvar UnsupportedFunctionParamTypeAnnotationParserError = function (_ParserError13) {\n  _inherits(UnsupportedFunctionParamTypeAnnotationParserError, _ParserError13);\n  var _super14 = _createSuper(UnsupportedFunctionParamTypeAnnotationParserError);\n  function UnsupportedFunctionParamTypeAnnotationParserError(nativeModuleName, flowParamTypeAnnotation, paramName, invalidParamType) {\n    _classCallCheck(this, UnsupportedFunctionParamTypeAnnotationParserError);\n    return _super14.call(this, nativeModuleName, flowParamTypeAnnotation, `Function parameter '${paramName}' cannot have type '${invalidParamType}'.`);\n  }\n  return _createClass(UnsupportedFunctionParamTypeAnnotationParserError);\n}(ParserError);\nvar UnsupportedFunctionReturnTypeAnnotationParserError = function (_ParserError14) {\n  _inherits(UnsupportedFunctionReturnTypeAnnotationParserError, _ParserError14);\n  var _super15 = _createSuper(UnsupportedFunctionReturnTypeAnnotationParserError);\n  function UnsupportedFunctionReturnTypeAnnotationParserError(nativeModuleName, flowReturnTypeAnnotation, invalidReturnType) {\n    _classCallCheck(this, UnsupportedFunctionReturnTypeAnnotationParserError);\n    return _super15.call(this, nativeModuleName, flowReturnTypeAnnotation, `Function return cannot have type '${invalidReturnType}'.`);\n  }\n  return _createClass(UnsupportedFunctionReturnTypeAnnotationParserError);\n}(ParserError);\nvar UnsupportedEnumDeclarationParserError = function (_ParserError15) {\n  _inherits(UnsupportedEnumDeclarationParserError, _ParserError15);\n  var _super16 = _createSuper(UnsupportedEnumDeclarationParserError);\n  function UnsupportedEnumDeclarationParserError(nativeModuleName, arrayElementTypeAST, memberType) {\n    _classCallCheck(this, UnsupportedEnumDeclarationParserError);\n    return _super16.call(this, nativeModuleName, arrayElementTypeAST, `Unexpected enum member type ${memberType}. Only string and number enum members are supported`);\n  }\n  return _createClass(UnsupportedEnumDeclarationParserError);\n}(ParserError);\nvar UnsupportedUnionTypeAnnotationParserError = function (_ParserError16) {\n  _inherits(UnsupportedUnionTypeAnnotationParserError, _ParserError16);\n  var _super17 = _createSuper(UnsupportedUnionTypeAnnotationParserError);\n  function UnsupportedUnionTypeAnnotationParserError(nativeModuleName, arrayElementTypeAST, types) {\n    _classCallCheck(this, UnsupportedUnionTypeAnnotationParserError);\n    return _super17.call(this, nativeModuleName, arrayElementTypeAST, `Union members must be of the same type, but multiple types were found ${types.join(', ')}'.`);\n  }\n  return _createClass(UnsupportedUnionTypeAnnotationParserError);\n}(ParserError);\nvar UnusedModuleInterfaceParserError = function (_ParserError17) {\n  _inherits(UnusedModuleInterfaceParserError, _ParserError17);\n  var _super18 = _createSuper(UnusedModuleInterfaceParserError);\n  function UnusedModuleInterfaceParserError(nativeModuleName, flowInterface) {\n    _classCallCheck(this, UnusedModuleInterfaceParserError);\n    return _super18.call(this, nativeModuleName, flowInterface, \"Unused NativeModule spec. Please load the NativeModule by calling TurboModuleRegistry.get<Spec>('<moduleName>').\");\n  }\n  return _createClass(UnusedModuleInterfaceParserError);\n}(ParserError);\nvar MoreThanOneModuleRegistryCallsParserError = function (_ParserError18) {\n  _inherits(MoreThanOneModuleRegistryCallsParserError, _ParserError18);\n  var _super19 = _createSuper(MoreThanOneModuleRegistryCallsParserError);\n  function MoreThanOneModuleRegistryCallsParserError(nativeModuleName, flowCallExpressions, numCalls) {\n    _classCallCheck(this, MoreThanOneModuleRegistryCallsParserError);\n    return _super19.call(this, nativeModuleName, flowCallExpressions, `Every NativeModule spec file must contain exactly one NativeModule load. This file contains ${numCalls}. Please simplify this spec file, splitting it as necessary, to remove the extraneous loads.`);\n  }\n  return _createClass(MoreThanOneModuleRegistryCallsParserError);\n}(ParserError);\nvar UntypedModuleRegistryCallParserError = function (_ParserError19) {\n  _inherits(UntypedModuleRegistryCallParserError, _ParserError19);\n  var _super20 = _createSuper(UntypedModuleRegistryCallParserError);\n  function UntypedModuleRegistryCallParserError(nativeModuleName, flowCallExpression, methodName, moduleName) {\n    _classCallCheck(this, UntypedModuleRegistryCallParserError);\n    return _super20.call(this, nativeModuleName, flowCallExpression, `Please type this NativeModule load: TurboModuleRegistry.${methodName}<Spec>('${moduleName}').`);\n  }\n  return _createClass(UntypedModuleRegistryCallParserError);\n}(ParserError);\nvar IncorrectModuleRegistryCallTypeParameterParserError = function (_ParserError20) {\n  _inherits(IncorrectModuleRegistryCallTypeParameterParserError, _ParserError20);\n  var _super21 = _createSuper(IncorrectModuleRegistryCallTypeParameterParserError);\n  function IncorrectModuleRegistryCallTypeParameterParserError(nativeModuleName, flowTypeArguments, methodName, moduleName) {\n    _classCallCheck(this, IncorrectModuleRegistryCallTypeParameterParserError);\n    return _super21.call(this, nativeModuleName, flowTypeArguments, `Please change these type arguments to reflect TurboModuleRegistry.${methodName}<Spec>('${moduleName}').`);\n  }\n  return _createClass(IncorrectModuleRegistryCallTypeParameterParserError);\n}(ParserError);\nvar IncorrectModuleRegistryCallArityParserError = function (_ParserError21) {\n  _inherits(IncorrectModuleRegistryCallArityParserError, _ParserError21);\n  var _super22 = _createSuper(IncorrectModuleRegistryCallArityParserError);\n  function IncorrectModuleRegistryCallArityParserError(nativeModuleName, flowCallExpression, methodName, incorrectArity) {\n    _classCallCheck(this, IncorrectModuleRegistryCallArityParserError);\n    return _super22.call(this, nativeModuleName, flowCallExpression, `Please call TurboModuleRegistry.${methodName}<Spec>() with exactly one argument. Detected ${incorrectArity}.`);\n  }\n  return _createClass(IncorrectModuleRegistryCallArityParserError);\n}(ParserError);\nvar IncorrectModuleRegistryCallArgumentTypeParserError = function (_ParserError22) {\n  _inherits(IncorrectModuleRegistryCallArgumentTypeParserError, _ParserError22);\n  var _super23 = _createSuper(IncorrectModuleRegistryCallArgumentTypeParserError);\n  function IncorrectModuleRegistryCallArgumentTypeParserError(nativeModuleName, flowArgument, methodName, type) {\n    _classCallCheck(this, IncorrectModuleRegistryCallArgumentTypeParserError);\n    var a = /[aeiouy]/.test(type.toLowerCase()) ? 'an' : 'a';\n    return _super23.call(this, nativeModuleName, flowArgument, `Please call TurboModuleRegistry.${methodName}<Spec>() with a string literal. Detected ${a} '${type}'`);\n  }\n  return _createClass(IncorrectModuleRegistryCallArgumentTypeParserError);\n}(ParserError);\nmodule.exports = {\n  ParserError: ParserError,\n  MissingTypeParameterGenericParserError: MissingTypeParameterGenericParserError,\n  MoreThanOneTypeParameterGenericParserError: MoreThanOneTypeParameterGenericParserError,\n  MisnamedModuleInterfaceParserError: MisnamedModuleInterfaceParserError,\n  ModuleInterfaceNotFoundParserError: ModuleInterfaceNotFoundParserError,\n  MoreThanOneModuleInterfaceParserError: MoreThanOneModuleInterfaceParserError,\n  UnnamedFunctionParamParserError: UnnamedFunctionParamParserError,\n  UnsupportedArrayElementTypeAnnotationParserError: UnsupportedArrayElementTypeAnnotationParserError,\n  UnsupportedGenericParserError: UnsupportedGenericParserError,\n  UnsupportedTypeAnnotationParserError: UnsupportedTypeAnnotationParserError,\n  UnsupportedFunctionParamTypeAnnotationParserError: UnsupportedFunctionParamTypeAnnotationParserError,\n  UnsupportedFunctionReturnTypeAnnotationParserError: UnsupportedFunctionReturnTypeAnnotationParserError,\n  UnsupportedEnumDeclarationParserError: UnsupportedEnumDeclarationParserError,\n  UnsupportedUnionTypeAnnotationParserError: UnsupportedUnionTypeAnnotationParserError,\n  UnsupportedModulePropertyParserError: UnsupportedModulePropertyParserError,\n  UnsupportedObjectPropertyTypeAnnotationParserError: UnsupportedObjectPropertyTypeAnnotationParserError,\n  UnsupportedObjectPropertyValueTypeAnnotationParserError: UnsupportedObjectPropertyValueTypeAnnotationParserError,\n  UnusedModuleInterfaceParserError: UnusedModuleInterfaceParserError,\n  MoreThanOneModuleRegistryCallsParserError: MoreThanOneModuleRegistryCallsParserError,\n  UntypedModuleRegistryCallParserError: UntypedModuleRegistryCallParserError,\n  IncorrectModuleRegistryCallTypeParameterParserError: IncorrectModuleRegistryCallTypeParameterParserError,\n  IncorrectModuleRegistryCallArityParserError: IncorrectModuleRegistryCallArityParserError,\n  IncorrectModuleRegistryCallArgumentTypeParserError: IncorrectModuleRegistryCallArgumentTypeParserError\n};","map":{"version":3,"names":["_createClass","require","_classCallCheck","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_wrapNativeSuper","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","ParserError","_Error","_super","nativeModuleName","astNodeOrNodes","message","_this","nodes","Array","isArray","name","Error","captureStackTrace","MisnamedModuleInterfaceParserError","_ParserError","_super2","id","language","ModuleInterfaceNotFoundParserError","_ParserError2","_super3","ast","MoreThanOneModuleInterfaceParserError","_ParserError3","_super4","flowModuleInterfaces","names","finalName","length","allButLastName","slice","quote","x","nameStr","map","join","UnsupportedModulePropertyParserError","_ParserError4","_super5","propertyValue","propertyName","invalidPropertyValueType","UnsupportedTypeAnnotationParserError","_ParserError5","_super6","typeAnnotation","_this2","type","typeAnnotationType","UnsupportedGenericParserError","_ParserError6","_super7","genericTypeAnnotation","parser","genericName","nameForGenericTypeAnnotation","MissingTypeParameterGenericParserError","_ParserError7","_super8","MoreThanOneTypeParameterGenericParserError","_ParserError8","_super9","UnsupportedArrayElementTypeAnnotationParserError","_ParserError9","_super10","arrayElementTypeAST","arrayType","invalidArrayElementType","UnsupportedObjectPropertyTypeAnnotationParserError","_ParserError10","_super11","propertyAST","invalidPropertyType","UnsupportedObjectPropertyValueTypeAnnotationParserError","_ParserError11","_super12","propertyValueAST","UnnamedFunctionParamParserError","_ParserError12","_super13","functionParam","UnsupportedFunctionParamTypeAnnotationParserError","_ParserError13","_super14","flowParamTypeAnnotation","paramName","invalidParamType","UnsupportedFunctionReturnTypeAnnotationParserError","_ParserError14","_super15","flowReturnTypeAnnotation","invalidReturnType","UnsupportedEnumDeclarationParserError","_ParserError15","_super16","memberType","UnsupportedUnionTypeAnnotationParserError","_ParserError16","_super17","types","UnusedModuleInterfaceParserError","_ParserError17","_super18","flowInterface","MoreThanOneModuleRegistryCallsParserError","_ParserError18","_super19","flowCallExpressions","numCalls","UntypedModuleRegistryCallParserError","_ParserError19","_super20","flowCallExpression","methodName","moduleName","IncorrectModuleRegistryCallTypeParameterParserError","_ParserError20","_super21","flowTypeArguments","IncorrectModuleRegistryCallArityParserError","_ParserError21","_super22","incorrectArity","IncorrectModuleRegistryCallArgumentTypeParserError","_ParserError22","_super23","flowArgument","a","test","toLowerCase","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/parsers/errors.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nclass ParserError extends Error {\n  constructor(nativeModuleName, astNodeOrNodes, message) {\n    super(`Module ${nativeModuleName}: ${message}`);\n    this.nodes = Array.isArray(astNodeOrNodes)\n      ? astNodeOrNodes\n      : [astNodeOrNodes];\n\n    // assign the error class name in your custom error (as a shortcut)\n    this.name = this.constructor.name;\n\n    // capturing the stack trace keeps the reference to your error class\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\nclass MisnamedModuleInterfaceParserError extends ParserError {\n  constructor(nativeModuleName, id, language) {\n    super(\n      nativeModuleName,\n      id,\n      `All ${language} interfaces extending TurboModule must be called 'Spec'. Please rename ${language} interface '${id.name}' to 'Spec'.`,\n    );\n  }\n}\nclass ModuleInterfaceNotFoundParserError extends ParserError {\n  constructor(nativeModuleName, ast, language) {\n    super(\n      nativeModuleName,\n      ast,\n      `No ${language} interfaces extending TurboModule were detected in this NativeModule spec.`,\n    );\n  }\n}\nclass MoreThanOneModuleInterfaceParserError extends ParserError {\n  constructor(nativeModuleName, flowModuleInterfaces, names, language) {\n    const finalName = names[names.length - 1];\n    const allButLastName = names.slice(0, -1);\n    const quote = x => `'${x}'`;\n    const nameStr =\n      allButLastName.map(quote).join(', ') + ', and ' + quote(finalName);\n    super(\n      nativeModuleName,\n      flowModuleInterfaces,\n      `Every NativeModule spec file must declare exactly one NativeModule ${language} interface. This file declares ${names.length}: ${nameStr}. Please remove the extraneous ${language} interface declarations.`,\n    );\n  }\n}\nclass UnsupportedModulePropertyParserError extends ParserError {\n  constructor(\n    nativeModuleName,\n    propertyValue,\n    propertyName,\n    invalidPropertyValueType,\n    language,\n  ) {\n    super(\n      nativeModuleName,\n      propertyValue,\n      `${language} interfaces extending TurboModule must only contain 'FunctionTypeAnnotation's. Property '${propertyName}' refers to a '${invalidPropertyValueType}'.`,\n    );\n  }\n}\nclass UnsupportedTypeAnnotationParserError extends ParserError {\n  constructor(nativeModuleName, typeAnnotation, language) {\n    super(\n      nativeModuleName,\n      typeAnnotation,\n      `${language} type annotation '${typeAnnotation.type}' is unsupported in NativeModule specs.`,\n    );\n    this.typeAnnotationType = typeAnnotation.type;\n  }\n}\nclass UnsupportedGenericParserError extends ParserError {\n  // +genericName: string;\n  constructor(nativeModuleName, genericTypeAnnotation, parser) {\n    const genericName = parser.nameForGenericTypeAnnotation(\n      genericTypeAnnotation,\n    );\n    super(\n      nativeModuleName,\n      genericTypeAnnotation,\n      `Unrecognized generic type '${genericName}' in NativeModule spec.`,\n    );\n\n    // this.genericName = genericName;\n  }\n}\n\nclass MissingTypeParameterGenericParserError extends ParserError {\n  constructor(nativeModuleName, genericTypeAnnotation, parser) {\n    const genericName = parser.nameForGenericTypeAnnotation(\n      genericTypeAnnotation,\n    );\n    super(\n      nativeModuleName,\n      genericTypeAnnotation,\n      `Generic '${genericName}' must have type parameters.`,\n    );\n  }\n}\nclass MoreThanOneTypeParameterGenericParserError extends ParserError {\n  constructor(nativeModuleName, genericTypeAnnotation, parser) {\n    const genericName = parser.nameForGenericTypeAnnotation(\n      genericTypeAnnotation,\n    );\n    super(\n      nativeModuleName,\n      genericTypeAnnotation,\n      `Generic '${genericName}' must have exactly one type parameter.`,\n    );\n  }\n}\n\n/**\n * Array parsing errors\n */\n\nclass UnsupportedArrayElementTypeAnnotationParserError extends ParserError {\n  constructor(\n    nativeModuleName,\n    arrayElementTypeAST,\n    arrayType,\n    invalidArrayElementType,\n  ) {\n    super(\n      nativeModuleName,\n      arrayElementTypeAST,\n      `${arrayType} element types cannot be '${invalidArrayElementType}'.`,\n    );\n  }\n}\n\n/**\n * Object parsing errors\n */\n\nclass UnsupportedObjectPropertyTypeAnnotationParserError extends ParserError {\n  constructor(nativeModuleName, propertyAST, invalidPropertyType, language) {\n    let message = `'ObjectTypeAnnotation' cannot contain '${invalidPropertyType}'.`;\n    if (\n      invalidPropertyType === 'ObjectTypeSpreadProperty' &&\n      language !== 'TypeScript'\n    ) {\n      message = \"Object spread isn't supported in 'ObjectTypeAnnotation's.\";\n    }\n    super(nativeModuleName, propertyAST, message);\n  }\n}\nclass UnsupportedObjectPropertyValueTypeAnnotationParserError extends ParserError {\n  constructor(\n    nativeModuleName,\n    propertyValueAST,\n    propertyName,\n    invalidPropertyValueType,\n  ) {\n    super(\n      nativeModuleName,\n      propertyValueAST,\n      `Object property '${propertyName}' cannot have type '${invalidPropertyValueType}'.`,\n    );\n  }\n}\n\n/**\n * Function parsing errors\n */\n\nclass UnnamedFunctionParamParserError extends ParserError {\n  constructor(functionParam, nativeModuleName) {\n    super(\n      nativeModuleName,\n      functionParam,\n      'All function parameters must be named.',\n    );\n  }\n}\nclass UnsupportedFunctionParamTypeAnnotationParserError extends ParserError {\n  constructor(\n    nativeModuleName,\n    flowParamTypeAnnotation,\n    paramName,\n    invalidParamType,\n  ) {\n    super(\n      nativeModuleName,\n      flowParamTypeAnnotation,\n      `Function parameter '${paramName}' cannot have type '${invalidParamType}'.`,\n    );\n  }\n}\nclass UnsupportedFunctionReturnTypeAnnotationParserError extends ParserError {\n  constructor(nativeModuleName, flowReturnTypeAnnotation, invalidReturnType) {\n    super(\n      nativeModuleName,\n      flowReturnTypeAnnotation,\n      `Function return cannot have type '${invalidReturnType}'.`,\n    );\n  }\n}\n\n/**\n * Enum parsing errors\n */\n\nclass UnsupportedEnumDeclarationParserError extends ParserError {\n  constructor(nativeModuleName, arrayElementTypeAST, memberType) {\n    super(\n      nativeModuleName,\n      arrayElementTypeAST,\n      `Unexpected enum member type ${memberType}. Only string and number enum members are supported`,\n    );\n  }\n}\n\n/**\n * Union parsing errors\n */\n\nclass UnsupportedUnionTypeAnnotationParserError extends ParserError {\n  constructor(nativeModuleName, arrayElementTypeAST, types) {\n    super(\n      nativeModuleName,\n      arrayElementTypeAST,\n      `Union members must be of the same type, but multiple types were found ${types.join(\n        ', ',\n      )}'.`,\n    );\n  }\n}\n\n/**\n * Module parsing errors\n */\n\nclass UnusedModuleInterfaceParserError extends ParserError {\n  constructor(nativeModuleName, flowInterface) {\n    super(\n      nativeModuleName,\n      flowInterface,\n      \"Unused NativeModule spec. Please load the NativeModule by calling TurboModuleRegistry.get<Spec>('<moduleName>').\",\n    );\n  }\n}\nclass MoreThanOneModuleRegistryCallsParserError extends ParserError {\n  constructor(nativeModuleName, flowCallExpressions, numCalls) {\n    super(\n      nativeModuleName,\n      flowCallExpressions,\n      `Every NativeModule spec file must contain exactly one NativeModule load. This file contains ${numCalls}. Please simplify this spec file, splitting it as necessary, to remove the extraneous loads.`,\n    );\n  }\n}\nclass UntypedModuleRegistryCallParserError extends ParserError {\n  constructor(nativeModuleName, flowCallExpression, methodName, moduleName) {\n    super(\n      nativeModuleName,\n      flowCallExpression,\n      `Please type this NativeModule load: TurboModuleRegistry.${methodName}<Spec>('${moduleName}').`,\n    );\n  }\n}\nclass IncorrectModuleRegistryCallTypeParameterParserError extends ParserError {\n  constructor(nativeModuleName, flowTypeArguments, methodName, moduleName) {\n    super(\n      nativeModuleName,\n      flowTypeArguments,\n      `Please change these type arguments to reflect TurboModuleRegistry.${methodName}<Spec>('${moduleName}').`,\n    );\n  }\n}\nclass IncorrectModuleRegistryCallArityParserError extends ParserError {\n  constructor(\n    nativeModuleName,\n    flowCallExpression,\n    methodName,\n    incorrectArity,\n  ) {\n    super(\n      nativeModuleName,\n      flowCallExpression,\n      `Please call TurboModuleRegistry.${methodName}<Spec>() with exactly one argument. Detected ${incorrectArity}.`,\n    );\n  }\n}\nclass IncorrectModuleRegistryCallArgumentTypeParserError extends ParserError {\n  constructor(nativeModuleName, flowArgument, methodName, type) {\n    const a = /[aeiouy]/.test(type.toLowerCase()) ? 'an' : 'a';\n    super(\n      nativeModuleName,\n      flowArgument,\n      `Please call TurboModuleRegistry.${methodName}<Spec>() with a string literal. Detected ${a} '${type}'`,\n    );\n  }\n}\nmodule.exports = {\n  ParserError,\n  MissingTypeParameterGenericParserError,\n  MoreThanOneTypeParameterGenericParserError,\n  MisnamedModuleInterfaceParserError,\n  ModuleInterfaceNotFoundParserError,\n  MoreThanOneModuleInterfaceParserError,\n  UnnamedFunctionParamParserError,\n  UnsupportedArrayElementTypeAnnotationParserError,\n  UnsupportedGenericParserError,\n  UnsupportedTypeAnnotationParserError,\n  UnsupportedFunctionParamTypeAnnotationParserError,\n  UnsupportedFunctionReturnTypeAnnotationParserError,\n  UnsupportedEnumDeclarationParserError,\n  UnsupportedUnionTypeAnnotationParserError,\n  UnsupportedModulePropertyParserError,\n  UnsupportedObjectPropertyTypeAnnotationParserError,\n  UnsupportedObjectPropertyValueTypeAnnotationParserError,\n  UnusedModuleInterfaceParserError,\n  MoreThanOneModuleRegistryCallsParserError,\n  UntypedModuleRegistryCallParserError,\n  IncorrectModuleRegistryCallTypeParameterParserError,\n  IncorrectModuleRegistryCallArityParserError,\n  IncorrectModuleRegistryCallArgumentTypeParserError,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}