{"ast":null,"code":"import { YAMLMap } from \"../../nodes/YAMLMap.js\";","map":{"version":3,"names":["YAMLMap"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/schema/yaml-1.1/set.d.ts"],"sourcesContent":["import { Pair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { ToJSContext } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport type { Schema } from '../../schema/Schema.js';\nimport type { StringifyContext } from '../../stringify/stringify.js';\nimport { CreateNodeContext } from '../../util.js';\nimport type { CollectionTag } from '../types.js';\nexport declare class YAMLSet<T = unknown> extends YAMLMap<T, Scalar<null> | null> {\n    static tag: string;\n    constructor(schema?: Schema);\n    add(key: T | Pair<T, Scalar<null> | null> | {\n        key: T;\n        value: Scalar<null> | null;\n    }): void;\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key: unknown, keepPair?: boolean): any;\n    set(key: T, value: boolean): void;\n    /** @deprecated Will throw; `value` must be boolean */\n    set(key: T, value: null): void;\n    toJSON(_?: unknown, ctx?: ToJSContext): any;\n    toString(ctx?: StringifyContext, onComment?: () => void, onChompKeep?: () => void): string;\n    static from(schema: Schema, iterable: unknown, ctx: CreateNodeContext): YAMLSet<unknown>;\n}\nexport declare const set: CollectionTag;\n"],"mappings":"AAGA,SAASA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}