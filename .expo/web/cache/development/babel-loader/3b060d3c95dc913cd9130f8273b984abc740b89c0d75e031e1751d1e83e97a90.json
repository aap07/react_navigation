{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"reporter\"],\n  _excluded2 = [\"reporter\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EXPO_DEBUG = void 0;\nObject.defineProperty(exports, \"INTERNAL_CALLSITES_REGEX\", {\n  enumerable: true,\n  get: function get() {\n    return _customizeFrame().INTERNAL_CALLSITES_REGEX;\n  }\n});\nObject.defineProperty(exports, \"MetroConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _metroConfig().ConfigT;\n  }\n});\nexports.getDefaultConfig = getDefaultConfig;\nexports.loadAsync = loadAsync;\nfunction _config() {\n  var data = require(\"@expo/config\");\n  _config = function _config() {\n    return data;\n  };\n  return data;\n}\nfunction _paths() {\n  var data = require(\"@expo/config/paths\");\n  _paths = function _paths() {\n    return data;\n  };\n  return data;\n}\nfunction runtimeEnv() {\n  var data = _interopRequireWildcard(require(\"@expo/env\"));\n  runtimeEnv = function runtimeEnv() {\n    return data;\n  };\n  return data;\n}\nfunction _jsonFile() {\n  var data = _interopRequireDefault(require(\"@expo/json-file\"));\n  _jsonFile = function _jsonFile() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _metroCache() {\n  var data = require(\"metro-cache\");\n  _metroCache = function _metroCache() {\n    return data;\n  };\n  return data;\n}\nfunction _metroConfig() {\n  var data = require(\"metro-config\");\n  _metroConfig = function _metroConfig() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _customizeFrame() {\n  var data = require(\"./customizeFrame\");\n  _customizeFrame = function _customizeFrame() {\n    return data;\n  };\n  return data;\n}\nfunction _env2() {\n  var data = require(\"./env\");\n  _env2 = function _env2() {\n    return data;\n  };\n  return data;\n}\nfunction _getModulesPaths() {\n  var data = require(\"./getModulesPaths\");\n  _getModulesPaths = function _getModulesPaths() {\n    return data;\n  };\n  return data;\n}\nfunction _getWatchFolders() {\n  var data = require(\"./getWatchFolders\");\n  _getWatchFolders = function _getWatchFolders() {\n    return data;\n  };\n  return data;\n}\nfunction _rewriteRequestUrl() {\n  var data = require(\"./rewriteRequestUrl\");\n  _rewriteRequestUrl = function _rewriteRequestUrl() {\n    return data;\n  };\n  return data;\n}\nfunction _withExpoSerializers() {\n  var data = require(\"./serializer/withExpoSerializers\");\n  _withExpoSerializers = function _withExpoSerializers() {\n    return data;\n  };\n  return data;\n}\nfunction _postcss() {\n  var data = require(\"./transform-worker/postcss\");\n  _postcss = function _postcss() {\n    return data;\n  };\n  return data;\n}\nfunction _metroConfig2() {\n  var data = require(\"./traveling/metro-config\");\n  _metroConfig2 = function _metroConfig2() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nvar debug = require('debug')('expo:metro:config');\nfunction getProjectBabelConfigFile(projectRoot) {\n  return _resolveFrom().default.silent(projectRoot, './babel.config.js') || _resolveFrom().default.silent(projectRoot, './.babelrc') || _resolveFrom().default.silent(projectRoot, './.babelrc.js');\n}\nfunction getAssetPlugins(projectRoot) {\n  var hashAssetFilesPath = _resolveFrom().default.silent(projectRoot, 'expo-asset/tools/hashAssetFiles');\n  if (!hashAssetFilesPath) {\n    throw new Error(`The required package \\`expo-asset\\` cannot be found`);\n  }\n  return [hashAssetFilesPath];\n}\nvar hasWarnedAboutExotic = false;\nfunction getDefaultConfig(projectRoot) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _ref = (0, _metroConfig2().importMetroConfig)(projectRoot),\n    getDefaultMetroConfig = _ref.getDefaultConfig,\n    mergeConfig = _ref.mergeConfig;\n  var isExotic = options.mode === 'exotic' || _env2().env.EXPO_USE_EXOTIC;\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(_chalk().default.gray(`\\u203A Unstable feature ${_chalk().default.bold`EXPO_USE_EXOTIC`} is enabled. Bundling may not work as expected, and is subject to breaking changes.`));\n  }\n  var reactNativePath = _path().default.dirname((0, _resolveFrom().default)(projectRoot, 'react-native/package.json'));\n  try {\n    var babelPresetFbjsPath = (0, _resolveFrom().default)(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch (_unused) {}\n  var sourceExtsConfig = {\n    isTS: true,\n    isReact: true,\n    isModern: false\n  };\n  var sourceExts = (0, _paths().getBareExtensions)([], sourceExtsConfig);\n  sourceExts.push('cjs');\n  var sassVersion = null;\n  if (options.isCSSEnabled) {\n    sassVersion = getSassVersion(projectRoot);\n    sourceExts.push('scss', 'sass', 'css');\n  }\n  var envFiles = runtimeEnv().getFiles(process.env.NODE_ENV, {\n    silent: true\n  });\n  var babelConfigPath = getProjectBabelConfigFile(projectRoot);\n  var isCustomBabelConfigDefined = !!babelConfigPath;\n  var resolverMainFields = [];\n  if (!isExotic) {\n    resolverMainFields.push('react-native');\n  }\n  resolverMainFields.push('browser', 'main');\n  var pkg = (0, _config().getPackageJson)(projectRoot);\n  var watchFolders = (0, _getWatchFolders().getWatchFolders)(projectRoot);\n  var nodeModulesPaths = (0, _getModulesPaths().getModulesPaths)(projectRoot);\n  if (_env2().env.EXPO_DEBUG) {\n    console.log();\n    console.log(`Expo Metro config:`);\n    try {\n      console.log(`- Version: ${require(\"../package.json\").version}`);\n    } catch (_unused2) {}\n    console.log(`- Extensions: ${sourceExts.join(', ')}`);\n    console.log(`- React Native: ${reactNativePath}`);\n    console.log(`- Babel config: ${babelConfigPath || 'babel-preset-expo (default)'}`);\n    console.log(`- Resolver Fields: ${resolverMainFields.join(', ')}`);\n    console.log(`- Watch Folders: ${watchFolders.join(', ')}`);\n    console.log(`- Node Module Paths: ${nodeModulesPaths.join(', ')}`);\n    console.log(`- Exotic: ${isExotic}`);\n    console.log(`- Env Files: ${envFiles}`);\n    console.log(`- Sass: ${sassVersion}`);\n    console.log();\n  }\n  var _getDefaultMetroConfi = getDefaultMetroConfig.getDefaultValues(projectRoot),\n    reporter = _getDefaultMetroConfi.reporter,\n    metroDefaultValues = _objectWithoutProperties(_getDefaultMetroConfi, _excluded);\n  var metroConfig = mergeConfig(metroDefaultValues, {\n    watchFolders: watchFolders,\n    resolver: {\n      resolverMainFields: resolverMainFields,\n      platforms: ['ios', 'android'],\n      assetExts: metroDefaultValues.resolver.assetExts.concat(['heic', 'avif']).filter(function (assetExt) {\n        return !sourceExts.includes(assetExt);\n      }),\n      sourceExts: sourceExts,\n      nodeModulesPaths: nodeModulesPaths\n    },\n    watcher: {\n      additionalExts: envFiles.map(function (file) {\n        return file.replace(/^\\./, '');\n      })\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: function getModulesRunBeforeMainModule() {\n        var preModules = [require.resolve(_path().default.join(reactNativePath, 'Libraries/Core/InitializeCore'))];\n        var metroRuntime = _resolveFrom().default.silent(projectRoot, '@expo/metro-runtime');\n        if (metroRuntime) {\n          preModules.push(metroRuntime);\n        }\n        return preModules;\n      },\n      getPolyfills: function getPolyfills() {\n        return require(_path().default.join(reactNativePath, 'rn-get-polyfills'))();\n      }\n    },\n    server: {\n      rewriteRequestUrl: (0, _rewriteRequestUrl().getRewriteRequestUrl)(projectRoot),\n      port: Number(_env2().env.RCT_METRO_PORT) || 8081,\n      unstable_serverRoot: (0, _getModulesPaths().getServerRoot)(projectRoot)\n    },\n    symbolicator: {\n      customizeFrame: (0, _customizeFrame().getDefaultCustomizeFrame)()\n    },\n    transformerPath: options.isCSSEnabled ? require.resolve(\"./transform-worker/transform-worker\") : metroDefaultValues.transformerPath,\n    transformer: {\n      postcssHash: (0, _postcss().getPostcssConfigHash)(projectRoot),\n      browserslistHash: pkg.browserslist ? (0, _metroCache().stableHash)(JSON.stringify(pkg.browserslist)).toString('hex') : null,\n      sassVersion: sassVersion,\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: isExotic ? require.resolve(\"./transformer/metro-expo-exotic-babel-transformer\") : isCustomBabelConfigDefined ? _resolveFrom().default.silent(projectRoot, 'metro-react-native-babel-transformer') : require.resolve(\"./transformer/metro-expo-babel-transformer\"),\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      assetPlugins: getAssetPlugins(projectRoot)\n    }\n  });\n  return (0, _withExpoSerializers().withExpoSerializers)(metroConfig);\n}\nfunction loadAsync(_x) {\n  return _loadAsync.apply(this, arguments);\n}\nfunction _loadAsync() {\n  _loadAsync = _asyncToGenerator(function* (projectRoot) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var reporter = _ref2.reporter,\n      metroOptions = _objectWithoutProperties(_ref2, _excluded2);\n    var defaultConfig = getDefaultConfig(projectRoot);\n    if (reporter) {\n      defaultConfig = _objectSpread(_objectSpread({}, defaultConfig), {}, {\n        reporter: reporter\n      });\n    }\n    var _ref3 = (0, _metroConfig2().importMetroConfig)(projectRoot),\n      loadConfig = _ref3.loadConfig;\n    return yield loadConfig(_objectSpread({\n      cwd: projectRoot,\n      projectRoot: projectRoot\n    }, metroOptions), defaultConfig);\n  });\n  return _loadAsync.apply(this, arguments);\n}\nvar EXPO_DEBUG = _env2().env.EXPO_DEBUG;\nexports.EXPO_DEBUG = EXPO_DEBUG;\nfunction getSassVersion(projectRoot) {\n  var sassPkg = _resolveFrom().default.silent(projectRoot, 'sass');\n  if (!sassPkg) return null;\n  var sassPkgJson = findUpPackageJson(sassPkg);\n  if (!sassPkgJson) return null;\n  var pkg = _jsonFile().default.read(sassPkgJson);\n  debug('sass package.json:', sassPkgJson);\n  var sassVersion = pkg.version;\n  if (typeof sassVersion === 'string') {\n    return sassVersion;\n  }\n  return null;\n}\nfunction findUpPackageJson(cwd) {\n  if (['.', _path().default.sep].includes(cwd)) return null;\n  var found = _resolveFrom().default.silent(cwd, './package.json');\n  if (found) {\n    return found;\n  }\n  return findUpPackageJson(_path().default.dirname(cwd));\n}","map":{"version":3,"names":["_config","data","require","_paths","runtimeEnv","_interopRequireWildcard","_jsonFile","_interopRequireDefault","_chalk","_metroCache","_metroConfig","_path","_resolveFrom","_customizeFrame","_env2","_getModulesPaths","_getWatchFolders","_rewriteRequestUrl","_withExpoSerializers","_postcss","_metroConfig2","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","debug","getProjectBabelConfigFile","projectRoot","silent","getAssetPlugins","hashAssetFilesPath","Error","hasWarnedAboutExotic","getDefaultConfig","options","arguments","length","undefined","_ref","importMetroConfig","getDefaultMetroConfig","mergeConfig","isExotic","mode","env","EXPO_USE_EXOTIC","console","log","gray","bold","reactNativePath","dirname","babelPresetFbjsPath","process","EXPO_METRO_CACHE_KEY_VERSION","String","version","_unused","sourceExtsConfig","isTS","isReact","isModern","sourceExts","getBareExtensions","push","sassVersion","isCSSEnabled","getSassVersion","envFiles","getFiles","NODE_ENV","babelConfigPath","isCustomBabelConfigDefined","resolverMainFields","pkg","getPackageJson","watchFolders","getWatchFolders","nodeModulesPaths","getModulesPaths","EXPO_DEBUG","_unused2","join","_getDefaultMetroConfi","getDefaultValues","reporter","metroDefaultValues","_objectWithoutProperties","_excluded","metroConfig","resolver","platforms","assetExts","concat","filter","assetExt","includes","watcher","additionalExts","map","file","replace","serializer","getModulesRunBeforeMainModule","preModules","resolve","metroRuntime","getPolyfills","server","rewriteRequestUrl","getRewriteRequestUrl","port","Number","RCT_METRO_PORT","unstable_serverRoot","getServerRoot","symbolicator","customizeFrame","getDefaultCustomizeFrame","transformerPath","transformer","postcssHash","getPostcssConfigHash","browserslistHash","browserslist","stableHash","JSON","stringify","toString","unstable_allowRequireContext","allowOptionalDependencies","babelTransformerPath","assetRegistryPath","assetPlugins","withExpoSerializers","loadAsync","_x","_loadAsync","apply","_asyncToGenerator","_ref2","metroOptions","_excluded2","defaultConfig","_objectSpread","_ref3","loadConfig","cwd","exports","sassPkg","sassPkgJson","findUpPackageJson","read","sep","found"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\ExpoMetroConfig.ts"],"sourcesContent":["// Copyright 2023-present 650 Industries (Expo). All rights reserved.\nimport { getPackageJson } from '@expo/config';\nimport { getBareExtensions } from '@expo/config/paths';\nimport * as runtimeEnv from '@expo/env';\nimport JsonFile from '@expo/json-file';\nimport chalk from 'chalk';\nimport { Reporter } from 'metro';\nimport { stableHash } from 'metro-cache';\nimport { ConfigT as MetroConfig, InputConfigT } from 'metro-config';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { getDefaultCustomizeFrame, INTERNAL_CALLSITES_REGEX } from './customizeFrame';\nimport { env } from './env';\nimport { getModulesPaths, getServerRoot } from './getModulesPaths';\nimport { getWatchFolders } from './getWatchFolders';\nimport { getRewriteRequestUrl } from './rewriteRequestUrl';\nimport { withExpoSerializers } from './serializer/withExpoSerializers';\nimport { getPostcssConfigHash } from './transform-worker/postcss';\nimport { importMetroConfig } from './traveling/metro-config';\n\nconst debug = require('debug')('expo:metro:config') as typeof console.log;\n\nexport interface LoadOptions {\n  config?: string;\n  maxWorkers?: number;\n  port?: number;\n  reporter?: Reporter;\n  resetCache?: boolean;\n}\n\nexport interface DefaultConfigOptions {\n  mode?: 'exotic';\n  /**\n   * **Experimental:** Enable CSS support for Metro web, and shim on native.\n   *\n   * This is an experimental feature and may change in the future. The underlying implementation\n   * is subject to change, and native support for CSS Modules may be added in the future during a non-major SDK release.\n   */\n  isCSSEnabled?: boolean;\n}\n\nfunction getProjectBabelConfigFile(projectRoot: string): string | undefined {\n  return (\n    resolveFrom.silent(projectRoot, './babel.config.js') ||\n    resolveFrom.silent(projectRoot, './.babelrc') ||\n    resolveFrom.silent(projectRoot, './.babelrc.js')\n  );\n}\n\nfunction getAssetPlugins(projectRoot: string): string[] {\n  const hashAssetFilesPath = resolveFrom.silent(projectRoot, 'expo-asset/tools/hashAssetFiles');\n\n  if (!hashAssetFilesPath) {\n    throw new Error(`The required package \\`expo-asset\\` cannot be found`);\n  }\n\n  return [hashAssetFilesPath];\n}\n\nlet hasWarnedAboutExotic = false;\n\nexport function getDefaultConfig(\n  projectRoot: string,\n  options: DefaultConfigOptions = {}\n): InputConfigT {\n  const { getDefaultConfig: getDefaultMetroConfig, mergeConfig } = importMetroConfig(projectRoot);\n\n  const isExotic = options.mode === 'exotic' || env.EXPO_USE_EXOTIC;\n\n  if (isExotic && !hasWarnedAboutExotic) {\n    hasWarnedAboutExotic = true;\n    console.log(\n      chalk.gray(\n        `\\u203A Unstable feature ${chalk.bold`EXPO_USE_EXOTIC`} is enabled. Bundling may not work as expected, and is subject to breaking changes.`\n      )\n    );\n  }\n\n  const reactNativePath = path.dirname(resolveFrom(projectRoot, 'react-native/package.json'));\n\n  try {\n    // Set the `EXPO_METRO_CACHE_KEY_VERSION` variable for use in the custom babel transformer.\n    // This hack is used because there doesn't appear to be anyway to resolve\n    // `babel-preset-fbjs` relative to the project root later (in `metro-expo-babel-transformer`).\n    const babelPresetFbjsPath = resolveFrom(projectRoot, 'babel-preset-fbjs/package.json');\n    process.env.EXPO_METRO_CACHE_KEY_VERSION = String(require(babelPresetFbjsPath).version);\n  } catch {\n    // noop -- falls back to a hardcoded value.\n  }\n\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: false };\n  const sourceExts = getBareExtensions([], sourceExtsConfig);\n\n  // Add support for cjs (without platform extensions).\n  sourceExts.push('cjs');\n\n  let sassVersion: string | null = null;\n  if (options.isCSSEnabled) {\n    sassVersion = getSassVersion(projectRoot);\n    // Enable SCSS by default so we can provide a better error message\n    // when sass isn't installed.\n    sourceExts.push('scss', 'sass', 'css');\n  }\n\n  const envFiles = runtimeEnv.getFiles(process.env.NODE_ENV, { silent: true });\n\n  const babelConfigPath = getProjectBabelConfigFile(projectRoot);\n  const isCustomBabelConfigDefined = !!babelConfigPath;\n\n  const resolverMainFields: string[] = [];\n\n  // Disable `react-native` in exotic mode, since library authors\n  // use it to ship raw application code to the project.\n  if (!isExotic) {\n    resolverMainFields.push('react-native');\n  }\n  resolverMainFields.push('browser', 'main');\n\n  const pkg = getPackageJson(projectRoot);\n  const watchFolders = getWatchFolders(projectRoot);\n  // TODO: nodeModulesPaths does not work with the new Node.js package.json exports API, this causes packages like uuid to fail. Disabling for now.\n  const nodeModulesPaths = getModulesPaths(projectRoot);\n  if (env.EXPO_DEBUG) {\n    console.log();\n    console.log(`Expo Metro config:`);\n    try {\n      console.log(`- Version: ${require('../package.json').version}`);\n    } catch {}\n    console.log(`- Extensions: ${sourceExts.join(', ')}`);\n    console.log(`- React Native: ${reactNativePath}`);\n    console.log(`- Babel config: ${babelConfigPath || 'babel-preset-expo (default)'}`);\n    console.log(`- Resolver Fields: ${resolverMainFields.join(', ')}`);\n    console.log(`- Watch Folders: ${watchFolders.join(', ')}`);\n    console.log(`- Node Module Paths: ${nodeModulesPaths.join(', ')}`);\n    console.log(`- Exotic: ${isExotic}`);\n    console.log(`- Env Files: ${envFiles}`);\n    console.log(`- Sass: ${sassVersion}`);\n    console.log();\n  }\n  const {\n    // Remove the default reporter which metro always resolves to be the react-native-community/cli reporter.\n    // This prints a giant React logo which is less accessible to users on smaller terminals.\n    reporter,\n    ...metroDefaultValues\n  } = getDefaultMetroConfig.getDefaultValues(projectRoot);\n\n  // Merge in the default config from Metro here, even though loadConfig uses it as defaults.\n  // This is a convenience for getDefaultConfig use in metro.config.js, e.g. to modify assetExts.\n  const metroConfig: Partial<MetroConfig> = mergeConfig(metroDefaultValues, {\n    watchFolders,\n    resolver: {\n      resolverMainFields,\n      platforms: ['ios', 'android'],\n      assetExts: metroDefaultValues.resolver.assetExts\n        .concat(\n          // Add default support for `expo-image` file types.\n          ['heic', 'avif']\n        )\n        .filter((assetExt) => !sourceExts.includes(assetExt)),\n      sourceExts,\n      nodeModulesPaths,\n    },\n    watcher: {\n      // strip starting dot from env files\n      additionalExts: envFiles.map((file: string) => file.replace(/^\\./, '')),\n    },\n    serializer: {\n      getModulesRunBeforeMainModule: () => {\n        const preModules: string[] = [\n          // MUST be first\n          require.resolve(path.join(reactNativePath, 'Libraries/Core/InitializeCore')),\n        ];\n\n        // We need to shift this to be the first module so web Fast Refresh works as expected.\n        // This will only be applied if the module is installed and imported somewhere in the bundle already.\n        const metroRuntime = resolveFrom.silent(projectRoot, '@expo/metro-runtime');\n        if (metroRuntime) {\n          preModules.push(metroRuntime);\n        }\n\n        return preModules;\n      },\n      getPolyfills: () => require(path.join(reactNativePath, 'rn-get-polyfills'))(),\n    },\n    server: {\n      rewriteRequestUrl: getRewriteRequestUrl(projectRoot),\n      port: Number(env.RCT_METRO_PORT) || 8081,\n      // NOTE(EvanBacon): Moves the server root down to the monorepo root.\n      // This enables proper monorepo support for web.\n      unstable_serverRoot: getServerRoot(projectRoot),\n    },\n    symbolicator: {\n      customizeFrame: getDefaultCustomizeFrame(),\n    },\n    transformerPath: options.isCSSEnabled\n      ? // Custom worker that adds CSS support for Metro web.\n        require.resolve('./transform-worker/transform-worker')\n      : metroDefaultValues.transformerPath,\n\n    transformer: {\n      // Custom: These are passed to `getCacheKey` and ensure invalidation when the version changes.\n      // @ts-expect-error: not on type.\n      postcssHash: getPostcssConfigHash(projectRoot),\n      browserslistHash: pkg.browserslist\n        ? stableHash(JSON.stringify(pkg.browserslist)).toString('hex')\n        : null,\n      sassVersion,\n\n      // `require.context` support\n      unstable_allowRequireContext: true,\n      allowOptionalDependencies: true,\n      babelTransformerPath: isExotic\n        ? require.resolve('./transformer/metro-expo-exotic-babel-transformer')\n        : isCustomBabelConfigDefined\n        ? // If the user defined a babel config file in their project,\n          // then use the default transformer.\n          // Try to use the project copy before falling back on the global version\n          resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer')\n        : // Otherwise, use a custom transformer that uses `babel-preset-expo` by default for projects.\n          require.resolve('./transformer/metro-expo-babel-transformer'),\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      assetPlugins: getAssetPlugins(projectRoot),\n    },\n  });\n\n  return withExpoSerializers(metroConfig);\n}\n\nexport async function loadAsync(\n  projectRoot: string,\n  { reporter, ...metroOptions }: LoadOptions = {}\n): Promise<MetroConfig> {\n  let defaultConfig = getDefaultConfig(projectRoot);\n  if (reporter) {\n    defaultConfig = { ...defaultConfig, reporter };\n  }\n\n  const { loadConfig } = importMetroConfig(projectRoot);\n\n  return await loadConfig({ cwd: projectRoot, projectRoot, ...metroOptions }, defaultConfig);\n}\n\n// re-export for use in config files.\nexport { MetroConfig, INTERNAL_CALLSITES_REGEX };\n\n// re-export for legacy cases.\nexport const EXPO_DEBUG = env.EXPO_DEBUG;\n\nfunction getSassVersion(projectRoot: string): string | null {\n  const sassPkg = resolveFrom.silent(projectRoot, 'sass');\n  if (!sassPkg) return null;\n  const sassPkgJson = findUpPackageJson(sassPkg);\n  if (!sassPkgJson) return null;\n  const pkg = JsonFile.read(sassPkgJson);\n\n  debug('sass package.json:', sassPkgJson);\n  const sassVersion = pkg.version;\n  if (typeof sassVersion === 'string') {\n    return sassVersion;\n  }\n\n  return null;\n}\n\nfunction findUpPackageJson(cwd: string): string | null {\n  if (['.', path.sep].includes(cwd)) return null;\n\n  const found = resolveFrom.silent(cwd, './package.json');\n  if (found) {\n    return found;\n  }\n  return findUpPackageJson(path.dirname(cwd));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}