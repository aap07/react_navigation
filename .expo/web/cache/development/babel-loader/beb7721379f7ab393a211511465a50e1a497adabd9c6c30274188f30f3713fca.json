{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildContentsJsonImages = buildContentsJsonImages;\nexports.withIosSplashAssets = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _imageUtils() {\n  var data = require(\"@expo/image-utils\");\n  _imageUtils = function _imageUtils() {\n    return data;\n  };\n  return data;\n}\nfunction _debug() {\n  var data = _interopRequireDefault(require(\"debug\"));\n  _debug = function _debug() {\n    return data;\n  };\n  return data;\n}\nfunction _fsExtra() {\n  var data = _interopRequireDefault(require(\"fs-extra\"));\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n  return data;\n}\nfunction _jimpCompact() {\n  var data = _interopRequireDefault(require(\"jimp-compact\"));\n  _jimpCompact = function _jimpCompact() {\n    return data;\n  };\n  return data;\n}\nfunction path() {\n  var data = _interopRequireWildcard(require(\"path\"));\n  path = function path() {\n    return data;\n  };\n  return data;\n}\nfunction _AssetContents() {\n  var data = require(\"../../icons/AssetContents\");\n  _AssetContents = function _AssetContents() {\n    return data;\n  };\n  return data;\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = (0, _debug().default)('expo:prebuild-config:expo-splash-screen:ios:assets');\nvar IMAGE_CACHE_NAME = 'splash-ios';\nvar IMAGESET_PATH = 'Images.xcassets/SplashScreen.imageset';\nvar BACKGROUND_IMAGESET_PATH = 'Images.xcassets/SplashScreenBackground.imageset';\nvar PNG_FILENAME = 'image.png';\nvar DARK_PNG_FILENAME = 'dark_image.png';\nvar TABLET_PNG_FILENAME = 'tablet_image.png';\nvar DARK_TABLET_PNG_FILENAME = 'dark_tablet_image.png';\nvar withIosSplashAssets = function withIosSplashAssets(config, splash) {\n  if (!splash) {\n    return config;\n  }\n  return (0, _configPlugins().withDangerousMod)(config, ['ios', function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      var _splash$dark, _splash$dark2;\n      var iosNamedProjectRoot = _configPlugins().IOSConfig.Paths.getSourceRoot(config.modRequest.projectRoot);\n      yield createSplashScreenBackgroundImageAsync({\n        iosNamedProjectRoot: iosNamedProjectRoot,\n        splash: splash\n      });\n      yield configureImageAssets({\n        projectRoot: config.modRequest.projectRoot,\n        iosNamedProjectRoot: iosNamedProjectRoot,\n        image: splash.image,\n        darkImage: (_splash$dark = splash.dark) === null || _splash$dark === void 0 ? void 0 : _splash$dark.image,\n        tabletImage: splash.tabletImage,\n        darkTabletImage: (_splash$dark2 = splash.dark) === null || _splash$dark2 === void 0 ? void 0 : _splash$dark2.tabletImage\n      });\n      return config;\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()]);\n};\nexports.withIosSplashAssets = withIosSplashAssets;\nfunction configureImageAssets(_x2) {\n  return _configureImageAssets.apply(this, arguments);\n}\nfunction _configureImageAssets() {\n  _configureImageAssets = _asyncToGenerator(function* (_ref2) {\n    var projectRoot = _ref2.projectRoot,\n      iosNamedProjectRoot = _ref2.iosNamedProjectRoot,\n      image = _ref2.image,\n      darkImage = _ref2.darkImage,\n      tabletImage = _ref2.tabletImage,\n      darkTabletImage = _ref2.darkTabletImage;\n    var imageSetPath = path().resolve(iosNamedProjectRoot, IMAGESET_PATH);\n    yield _fsExtra().default.remove(imageSetPath);\n    if (!image) {\n      return;\n    }\n    yield writeContentsJsonFileAsync({\n      assetPath: imageSetPath,\n      image: PNG_FILENAME,\n      darkImage: darkImage ? DARK_PNG_FILENAME : null,\n      tabletImage: tabletImage ? TABLET_PNG_FILENAME : null,\n      darkTabletImage: darkTabletImage ? DARK_TABLET_PNG_FILENAME : null\n    });\n    yield copyImageFiles({\n      projectRoot: projectRoot,\n      iosNamedProjectRoot: iosNamedProjectRoot,\n      image: image,\n      darkImage: darkImage,\n      tabletImage: tabletImage,\n      darkTabletImage: darkTabletImage\n    });\n  });\n  return _configureImageAssets.apply(this, arguments);\n}\nfunction createPngFileAsync(_x3, _x4) {\n  return _createPngFileAsync.apply(this, arguments);\n}\nfunction _createPngFileAsync() {\n  _createPngFileAsync = _asyncToGenerator(function* (color, filePath) {\n    var png = new (_jimpCompact().default)(1, 1, color);\n    return png.writeAsync(filePath);\n  });\n  return _createPngFileAsync.apply(this, arguments);\n}\nfunction createBackgroundImagesAsync(_x5) {\n  return _createBackgroundImagesAsync.apply(this, arguments);\n}\nfunction _createBackgroundImagesAsync() {\n  _createBackgroundImagesAsync = _asyncToGenerator(function* (_ref3) {\n    var iosNamedProjectRoot = _ref3.iosNamedProjectRoot,\n      color = _ref3.color,\n      darkColor = _ref3.darkColor,\n      tabletColor = _ref3.tabletColor,\n      darkTabletColor = _ref3.darkTabletColor;\n    yield generateImagesAssetsAsync({\n      generateImageAsset: function () {\n        var _generateImageAsset = _asyncToGenerator(function* (item, fileName) {\n          yield createPngFileAsync(item, path().resolve(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH, fileName));\n        });\n        function generateImageAsset(_x10, _x11) {\n          return _generateImageAsset.apply(this, arguments);\n        }\n        return generateImageAsset;\n      }(),\n      anyItem: color,\n      darkItem: darkColor,\n      tabletItem: tabletColor,\n      darkTabletItem: darkTabletColor\n    });\n  });\n  return _createBackgroundImagesAsync.apply(this, arguments);\n}\nfunction copyImageFiles(_x6) {\n  return _copyImageFiles.apply(this, arguments);\n}\nfunction _copyImageFiles() {\n  _copyImageFiles = _asyncToGenerator(function* (_ref4) {\n    var projectRoot = _ref4.projectRoot,\n      iosNamedProjectRoot = _ref4.iosNamedProjectRoot,\n      image = _ref4.image,\n      darkImage = _ref4.darkImage,\n      tabletImage = _ref4.tabletImage,\n      darkTabletImage = _ref4.darkTabletImage;\n    yield generateImagesAssetsAsync({\n      generateImageAsset: function () {\n        var _generateImageAsset2 = _asyncToGenerator(function* (item, fileName) {\n          var _yield = yield (0, _imageUtils().generateImageAsync)({\n              projectRoot: projectRoot,\n              cacheType: IMAGE_CACHE_NAME\n            }, {\n              src: item\n            }),\n            source = _yield.source;\n          yield _fsExtra().default.writeFile(path().resolve(iosNamedProjectRoot, IMAGESET_PATH, fileName), source);\n        });\n        function generateImageAsset(_x12, _x13) {\n          return _generateImageAsset2.apply(this, arguments);\n        }\n        return generateImageAsset;\n      }(),\n      anyItem: image,\n      darkItem: darkImage,\n      tabletItem: tabletImage,\n      darkTabletItem: darkTabletImage\n    });\n  });\n  return _copyImageFiles.apply(this, arguments);\n}\nfunction generateImagesAssetsAsync(_x7) {\n  return _generateImagesAssetsAsync.apply(this, arguments);\n}\nfunction _generateImagesAssetsAsync() {\n  _generateImagesAssetsAsync = _asyncToGenerator(function* (_ref5) {\n    var generateImageAsset = _ref5.generateImageAsset,\n      anyItem = _ref5.anyItem,\n      darkItem = _ref5.darkItem,\n      tabletItem = _ref5.tabletItem,\n      darkTabletItem = _ref5.darkTabletItem;\n    var items = [[anyItem, PNG_FILENAME], [darkItem, DARK_PNG_FILENAME], [tabletItem, TABLET_PNG_FILENAME], [darkTabletItem, DARK_TABLET_PNG_FILENAME]].filter(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 1),\n        item = _ref10[0];\n      return !!item;\n    });\n    yield Promise.all(items.map(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n        item = _ref12[0],\n        fileName = _ref12[1];\n      return generateImageAsset(item, fileName);\n    }));\n  });\n  return _generateImagesAssetsAsync.apply(this, arguments);\n}\nfunction createSplashScreenBackgroundImageAsync(_x8) {\n  return _createSplashScreenBackgroundImageAsync.apply(this, arguments);\n}\nfunction _createSplashScreenBackgroundImageAsync() {\n  _createSplashScreenBackgroundImageAsync = _asyncToGenerator(function* (_ref6) {\n    var iosNamedProjectRoot = _ref6.iosNamedProjectRoot,\n      splash = _ref6.splash;\n    var _splash$dark3, _splash$dark4;\n    var color = splash.backgroundColor;\n    var darkColor = (_splash$dark3 = splash.dark) === null || _splash$dark3 === void 0 ? void 0 : _splash$dark3.backgroundColor;\n    var tabletColor = splash.tabletBackgroundColor;\n    var darkTabletColor = (_splash$dark4 = splash.dark) === null || _splash$dark4 === void 0 ? void 0 : _splash$dark4.tabletBackgroundColor;\n    var imagesetPath = path().join(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH);\n    yield _fsExtra().default.remove(imagesetPath);\n    yield _fsExtra().default.ensureDir(imagesetPath);\n    yield createBackgroundImagesAsync({\n      iosNamedProjectRoot: iosNamedProjectRoot,\n      color: color,\n      darkColor: darkColor ? darkColor : null,\n      tabletColor: tabletColor ? tabletColor : null,\n      darkTabletColor: darkTabletColor ? darkTabletColor : null\n    });\n    yield writeContentsJsonFileAsync({\n      assetPath: path().resolve(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH),\n      image: PNG_FILENAME,\n      darkImage: darkColor ? DARK_PNG_FILENAME : null,\n      tabletImage: tabletColor ? TABLET_PNG_FILENAME : null,\n      darkTabletImage: darkTabletColor ? DARK_TABLET_PNG_FILENAME : null\n    });\n  });\n  return _createSplashScreenBackgroundImageAsync.apply(this, arguments);\n}\nvar darkAppearances = [{\n  appearance: 'luminosity',\n  value: 'dark'\n}];\nfunction buildContentsJsonImages(_ref7) {\n  var image = _ref7.image,\n    darkImage = _ref7.darkImage,\n    tabletImage = _ref7.tabletImage,\n    darkTabletImage = _ref7.darkTabletImage;\n  return [(0, _AssetContents().createContentsJsonItem)({\n    idiom: 'universal',\n    filename: image,\n    scale: '1x'\n  }), (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'universal',\n    scale: '2x'\n  }), (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'universal',\n    scale: '3x'\n  }), darkImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'universal',\n    appearances: darkAppearances,\n    filename: darkImage,\n    scale: '1x'\n  }), darkImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'universal',\n    appearances: darkAppearances,\n    scale: '2x'\n  }), darkImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'universal',\n    appearances: darkAppearances,\n    scale: '3x'\n  }), tabletImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'ipad',\n    filename: tabletImage,\n    scale: '1x'\n  }), tabletImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'ipad',\n    scale: '2x'\n  }), darkTabletImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'ipad',\n    appearances: darkAppearances,\n    filename: darkTabletImage !== null && darkTabletImage !== void 0 ? darkTabletImage : undefined,\n    scale: '1x'\n  }), darkTabletImage && (0, _AssetContents().createContentsJsonItem)({\n    idiom: 'ipad',\n    appearances: darkAppearances,\n    scale: '2x'\n  })].filter(Boolean);\n}\nfunction writeContentsJsonFileAsync(_x9) {\n  return _writeContentsJsonFileAsync.apply(this, arguments);\n}\nfunction _writeContentsJsonFileAsync() {\n  _writeContentsJsonFileAsync = _asyncToGenerator(function* (_ref8) {\n    var assetPath = _ref8.assetPath,\n      image = _ref8.image,\n      darkImage = _ref8.darkImage,\n      tabletImage = _ref8.tabletImage,\n      darkTabletImage = _ref8.darkTabletImage;\n    var images = buildContentsJsonImages({\n      image: image,\n      darkImage: darkImage,\n      tabletImage: tabletImage,\n      darkTabletImage: darkTabletImage\n    });\n    debug(`create contents.json:`, assetPath);\n    debug(`use images:`, images);\n    yield (0, _AssetContents().writeContentsJsonAsync)(assetPath, {\n      images: images\n    });\n  });\n  return _writeContentsJsonFileAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_configPlugins","data","require","_imageUtils","_debug","_interopRequireDefault","_fsExtra","_jimpCompact","path","_interopRequireWildcard","_AssetContents","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","debug","IMAGE_CACHE_NAME","IMAGESET_PATH","BACKGROUND_IMAGESET_PATH","PNG_FILENAME","DARK_PNG_FILENAME","TABLET_PNG_FILENAME","DARK_TABLET_PNG_FILENAME","withIosSplashAssets","config","splash","withDangerousMod","_ref","_asyncToGenerator","_splash$dark","_splash$dark2","iosNamedProjectRoot","IOSConfig","Paths","getSourceRoot","modRequest","projectRoot","createSplashScreenBackgroundImageAsync","configureImageAssets","image","darkImage","dark","tabletImage","darkTabletImage","_x","apply","arguments","exports","_x2","_configureImageAssets","_ref2","imageSetPath","resolve","remove","writeContentsJsonFileAsync","assetPath","copyImageFiles","createPngFileAsync","_x3","_x4","_createPngFileAsync","color","filePath","png","writeAsync","createBackgroundImagesAsync","_x5","_createBackgroundImagesAsync","_ref3","darkColor","tabletColor","darkTabletColor","generateImagesAssetsAsync","generateImageAsset","_generateImageAsset","item","fileName","_x10","_x11","anyItem","darkItem","tabletItem","darkTabletItem","_x6","_copyImageFiles","_ref4","_generateImageAsset2","_yield","generateImageAsync","cacheType","src","source","writeFile","_x12","_x13","_x7","_generateImagesAssetsAsync","_ref5","items","filter","_ref9","_ref10","_slicedToArray","Promise","all","map","_ref11","_ref12","_x8","_createSplashScreenBackgroundImageAsync","_ref6","_splash$dark3","_splash$dark4","backgroundColor","tabletBackgroundColor","imagesetPath","join","ensureDir","darkAppearances","appearance","value","buildContentsJsonImages","_ref7","createContentsJsonItem","idiom","filename","scale","appearances","undefined","Boolean","_x9","_writeContentsJsonFileAsync","_ref8","images","writeContentsJsonAsync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-splash-screen\\withIosSplashAssets.ts"],"sourcesContent":["import { ConfigPlugin, IOSConfig, withDangerousMod } from '@expo/config-plugins';\nimport { generateImageAsync } from '@expo/image-utils';\nimport Debug from 'debug';\nimport fs from 'fs-extra';\n// @ts-ignore\nimport Jimp from 'jimp-compact';\nimport * as path from 'path';\n\nimport {\n  ContentsJsonImage,\n  ContentsJsonImageAppearance,\n  createContentsJsonItem,\n  writeContentsJsonAsync,\n} from '../../icons/AssetContents';\nimport { IOSSplashConfig } from './getIosSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:ios:assets');\n\nconst IMAGE_CACHE_NAME = 'splash-ios';\nconst IMAGESET_PATH = 'Images.xcassets/SplashScreen.imageset';\nconst BACKGROUND_IMAGESET_PATH = 'Images.xcassets/SplashScreenBackground.imageset';\nconst PNG_FILENAME = 'image.png';\nconst DARK_PNG_FILENAME = 'dark_image.png';\nconst TABLET_PNG_FILENAME = 'tablet_image.png';\nconst DARK_TABLET_PNG_FILENAME = 'dark_tablet_image.png';\n\nexport const withIosSplashAssets: ConfigPlugin<IOSSplashConfig> = (config, splash) => {\n  if (!splash) {\n    return config;\n  }\n  return withDangerousMod(config, [\n    'ios',\n    async (config) => {\n      const iosNamedProjectRoot = IOSConfig.Paths.getSourceRoot(config.modRequest.projectRoot);\n\n      await createSplashScreenBackgroundImageAsync({\n        iosNamedProjectRoot,\n        splash,\n      });\n\n      await configureImageAssets({\n        projectRoot: config.modRequest.projectRoot,\n        iosNamedProjectRoot,\n        image: splash.image,\n        darkImage: splash.dark?.image,\n        tabletImage: splash.tabletImage,\n        darkTabletImage: splash.dark?.tabletImage,\n      });\n\n      return config;\n    },\n  ]);\n};\n\n/**\n * Creates imageset containing image for Splash/Launch Screen.\n */\nasync function configureImageAssets({\n  projectRoot,\n  iosNamedProjectRoot,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  projectRoot: string;\n  iosNamedProjectRoot: string;\n  image?: string | null;\n  darkImage?: string | null;\n  tabletImage: string | null;\n  darkTabletImage?: string | null;\n}) {\n  const imageSetPath = path.resolve(iosNamedProjectRoot, IMAGESET_PATH);\n\n  // ensure old SplashScreen imageSet is removed\n  await fs.remove(imageSetPath);\n\n  if (!image) {\n    return;\n  }\n\n  await writeContentsJsonFileAsync({\n    assetPath: imageSetPath,\n    image: PNG_FILENAME,\n    darkImage: darkImage ? DARK_PNG_FILENAME : null,\n    tabletImage: tabletImage ? TABLET_PNG_FILENAME : null,\n    darkTabletImage: darkTabletImage ? DARK_TABLET_PNG_FILENAME : null,\n  });\n\n  await copyImageFiles({\n    projectRoot,\n    iosNamedProjectRoot,\n    image,\n    darkImage,\n    tabletImage,\n    darkTabletImage,\n  });\n}\n\nasync function createPngFileAsync(color: string, filePath: string) {\n  const png = new Jimp(1, 1, color);\n  return png.writeAsync(filePath);\n}\n\nasync function createBackgroundImagesAsync({\n  iosNamedProjectRoot,\n  color,\n  darkColor,\n  tabletColor,\n  darkTabletColor,\n}: {\n  iosNamedProjectRoot: string;\n  color: string;\n  darkColor: string | null;\n  tabletColor: string | null;\n  darkTabletColor: string | null;\n}) {\n  await generateImagesAssetsAsync({\n    async generateImageAsset(item, fileName) {\n      await createPngFileAsync(\n        item,\n        path.resolve(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH, fileName)\n      );\n    },\n    anyItem: color,\n    darkItem: darkColor,\n    tabletItem: tabletColor,\n    darkTabletItem: darkTabletColor,\n  });\n}\n\nasync function copyImageFiles({\n  projectRoot,\n  iosNamedProjectRoot,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  projectRoot: string;\n  iosNamedProjectRoot: string;\n  image: string;\n  darkImage?: string | null;\n  tabletImage?: string | null;\n  darkTabletImage?: string | null;\n}) {\n  await generateImagesAssetsAsync({\n    async generateImageAsset(item, fileName) {\n      // Using this method will cache the images in `.expo` based on the properties used to generate them.\n      // this method also supports remote URLs and using the global sharp instance.\n      const { source } = await generateImageAsync({ projectRoot, cacheType: IMAGE_CACHE_NAME }, {\n        src: item,\n      } as any);\n      // Write image buffer to the file system.\n      // const assetPath = join(iosNamedProjectRoot, IMAGESET_PATH, filename);\n      await fs.writeFile(path.resolve(iosNamedProjectRoot, IMAGESET_PATH, fileName), source);\n    },\n    anyItem: image,\n    darkItem: darkImage,\n    tabletItem: tabletImage,\n    darkTabletItem: darkTabletImage,\n  });\n}\n\nasync function generateImagesAssetsAsync({\n  generateImageAsset,\n  anyItem,\n  darkItem,\n  tabletItem,\n  darkTabletItem,\n}: {\n  generateImageAsset: (item: string, fileName: string) => Promise<void>;\n  anyItem: string;\n  darkItem?: string | null;\n  tabletItem?: string | null;\n  darkTabletItem?: string | null;\n}) {\n  const items = [\n    [anyItem, PNG_FILENAME],\n    [darkItem, DARK_PNG_FILENAME],\n    [tabletItem, TABLET_PNG_FILENAME],\n    [darkTabletItem, DARK_TABLET_PNG_FILENAME],\n  ].filter(([item]) => !!item) as unknown as [string, string];\n\n  await Promise.all(items.map(([item, fileName]) => generateImageAsset(item, fileName)));\n}\n\nasync function createSplashScreenBackgroundImageAsync({\n  iosNamedProjectRoot,\n  splash,\n}: {\n  // Something like projectRoot/ios/MyApp/\n  iosNamedProjectRoot: string;\n  splash: IOSSplashConfig;\n}) {\n  const color = splash.backgroundColor;\n  const darkColor = splash.dark?.backgroundColor;\n  const tabletColor = splash.tabletBackgroundColor;\n  const darkTabletColor = splash.dark?.tabletBackgroundColor;\n\n  const imagesetPath = path.join(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH);\n  // Ensure the Images.xcassets/... path exists\n  await fs.remove(imagesetPath);\n  await fs.ensureDir(imagesetPath);\n\n  await createBackgroundImagesAsync({\n    iosNamedProjectRoot,\n    color,\n    darkColor: darkColor ? darkColor : null,\n    tabletColor: tabletColor ? tabletColor : null,\n    darkTabletColor: darkTabletColor ? darkTabletColor : null,\n  });\n\n  await writeContentsJsonFileAsync({\n    assetPath: path.resolve(iosNamedProjectRoot, BACKGROUND_IMAGESET_PATH),\n    image: PNG_FILENAME,\n    darkImage: darkColor ? DARK_PNG_FILENAME : null,\n    tabletImage: tabletColor ? TABLET_PNG_FILENAME : null,\n    darkTabletImage: darkTabletColor ? DARK_TABLET_PNG_FILENAME : null,\n  });\n}\n\nconst darkAppearances: ContentsJsonImageAppearance[] = [\n  {\n    appearance: 'luminosity',\n    value: 'dark',\n  } as ContentsJsonImageAppearance,\n];\n\nexport function buildContentsJsonImages({\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  image: string;\n  tabletImage: string | null;\n  darkImage: string | null;\n  darkTabletImage: string | null;\n}): ContentsJsonImage[] {\n  return [\n    // Phone light\n    createContentsJsonItem({\n      idiom: 'universal',\n      filename: image,\n      scale: '1x',\n    }),\n    createContentsJsonItem({\n      idiom: 'universal',\n      scale: '2x',\n    }),\n    createContentsJsonItem({\n      idiom: 'universal',\n      scale: '3x',\n    }),\n    // Phone dark\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        filename: darkImage,\n        scale: '1x',\n      }),\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        scale: '2x',\n      }),\n    darkImage &&\n      createContentsJsonItem({\n        idiom: 'universal',\n        appearances: darkAppearances,\n        scale: '3x',\n      }),\n    // Tablet light\n    tabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        filename: tabletImage,\n        scale: '1x',\n      }),\n    tabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        scale: '2x',\n      }),\n    // Phone dark\n    darkTabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        appearances: darkAppearances,\n        filename: darkTabletImage ?? undefined,\n        scale: '1x',\n      }),\n    darkTabletImage &&\n      createContentsJsonItem({\n        idiom: 'ipad',\n        appearances: darkAppearances,\n        scale: '2x',\n      }),\n  ].filter(Boolean) as ContentsJsonImage[];\n}\n\nasync function writeContentsJsonFileAsync({\n  assetPath,\n  image,\n  darkImage,\n  tabletImage,\n  darkTabletImage,\n}: {\n  assetPath: string;\n  image: string;\n  darkImage: string | null;\n  tabletImage: string | null;\n  darkTabletImage: string | null;\n}) {\n  const images = buildContentsJsonImages({ image, darkImage, tabletImage, darkTabletImage });\n\n  debug(`create contents.json:`, assetPath);\n  debug(`use images:`, images);\n  await writeContentsJsonAsync(assetPath, { images });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}