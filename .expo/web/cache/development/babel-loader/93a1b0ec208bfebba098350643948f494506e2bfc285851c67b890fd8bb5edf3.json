{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from \"./nodes/identity.js\";\nvar BREAK = Symbol('break visit');\nvar SKIP = Symbol('skip children');\nvar REMOVE = Symbol('remove node');\nfunction visit(node, visitor) {\n  var visitor_ = initVisitor(visitor);\n  if (isDocument(node)) {\n    var cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n    if (cd === REMOVE) node.contents = null;\n  } else visit_(null, node, visitor_, Object.freeze([]));\n}\nvisit.BREAK = BREAK;\nvisit.SKIP = SKIP;\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n  var ctrl = callVisitor(key, node, visitor, path);\n  if (isNode(ctrl) || isPair(ctrl)) {\n    replaceNode(key, path, ctrl);\n    return visit_(key, ctrl, visitor, path);\n  }\n  if (typeof ctrl !== 'symbol') {\n    if (isCollection(node)) {\n      path = Object.freeze(path.concat(node));\n      for (var i = 0; i < node.items.length; ++i) {\n        var ci = visit_(i, node.items[i], visitor, path);\n        if (typeof ci === 'number') i = ci - 1;else if (ci === BREAK) return BREAK;else if (ci === REMOVE) {\n          node.items.splice(i, 1);\n          i -= 1;\n        }\n      }\n    } else if (isPair(node)) {\n      path = Object.freeze(path.concat(node));\n      var ck = visit_('key', node.key, visitor, path);\n      if (ck === BREAK) return BREAK;else if (ck === REMOVE) node.key = null;\n      var cv = visit_('value', node.value, visitor, path);\n      if (cv === BREAK) return BREAK;else if (cv === REMOVE) node.value = null;\n    }\n  }\n  return ctrl;\n}\nfunction visitAsync(_x, _x2) {\n  return _visitAsync.apply(this, arguments);\n}\nfunction _visitAsync() {\n  _visitAsync = _asyncToGenerator(function* (node, visitor) {\n    var visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n      var cd = yield visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n      if (cd === REMOVE) node.contents = null;\n    } else yield visitAsync_(null, node, visitor_, Object.freeze([]));\n  });\n  return _visitAsync.apply(this, arguments);\n}\nvisitAsync.BREAK = BREAK;\nvisitAsync.SKIP = SKIP;\nvisitAsync.REMOVE = REMOVE;\nfunction visitAsync_(_x3, _x4, _x5, _x6) {\n  return _visitAsync_.apply(this, arguments);\n}\nfunction _visitAsync_() {\n  _visitAsync_ = _asyncToGenerator(function* (key, node, visitor, path) {\n    var ctrl = yield callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n      replaceNode(key, path, ctrl);\n      return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n      if (isCollection(node)) {\n        path = Object.freeze(path.concat(node));\n        for (var i = 0; i < node.items.length; ++i) {\n          var ci = yield visitAsync_(i, node.items[i], visitor, path);\n          if (typeof ci === 'number') i = ci - 1;else if (ci === BREAK) return BREAK;else if (ci === REMOVE) {\n            node.items.splice(i, 1);\n            i -= 1;\n          }\n        }\n      } else if (isPair(node)) {\n        path = Object.freeze(path.concat(node));\n        var ck = yield visitAsync_('key', node.key, visitor, path);\n        if (ck === BREAK) return BREAK;else if (ck === REMOVE) node.key = null;\n        var cv = yield visitAsync_('value', node.value, visitor, path);\n        if (cv === BREAK) return BREAK;else if (cv === REMOVE) node.value = null;\n      }\n    }\n    return ctrl;\n  });\n  return _visitAsync_.apply(this, arguments);\n}\nfunction initVisitor(visitor) {\n  if (typeof visitor === 'object' && (visitor.Collection || visitor.Node || visitor.Value)) {\n    return Object.assign({\n      Alias: visitor.Node,\n      Map: visitor.Node,\n      Scalar: visitor.Node,\n      Seq: visitor.Node\n    }, visitor.Value && {\n      Map: visitor.Value,\n      Scalar: visitor.Value,\n      Seq: visitor.Value\n    }, visitor.Collection && {\n      Map: visitor.Collection,\n      Seq: visitor.Collection\n    }, visitor);\n  }\n  return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n  if (typeof visitor === 'function') return visitor(key, node, path);\n  if (isMap(node)) return visitor.Map == null ? void 0 : visitor.Map(key, node, path);\n  if (isSeq(node)) return visitor.Seq == null ? void 0 : visitor.Seq(key, node, path);\n  if (isPair(node)) return visitor.Pair == null ? void 0 : visitor.Pair(key, node, path);\n  if (isScalar(node)) return visitor.Scalar == null ? void 0 : visitor.Scalar(key, node, path);\n  if (isAlias(node)) return visitor.Alias == null ? void 0 : visitor.Alias(key, node, path);\n  return undefined;\n}\nfunction replaceNode(key, path, node) {\n  var parent = path[path.length - 1];\n  if (isCollection(parent)) {\n    parent.items[key] = node;\n  } else if (isPair(parent)) {\n    if (key === 'key') parent.key = node;else parent.value = node;\n  } else if (isDocument(parent)) {\n    parent.contents = node;\n  } else {\n    var pt = isAlias(parent) ? 'alias' : 'scalar';\n    throw new Error(`Cannot replace node with ${pt} parent`);\n  }\n}\nexport { visit, visitAsync };","map":{"version":3,"names":["isDocument","isNode","isPair","isCollection","isMap","isSeq","isScalar","isAlias","BREAK","Symbol","SKIP","REMOVE","visit","node","visitor","visitor_","initVisitor","cd","visit_","contents","Object","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","length","ci","splice","ck","cv","value","visitAsync","_x","_x2","_visitAsync","apply","arguments","_asyncToGenerator","visitAsync_","_x3","_x4","_x5","_x6","_visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","Pair","undefined","parent","pt","Error"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/browser/dist/visit.js"],"sourcesContent":["import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}