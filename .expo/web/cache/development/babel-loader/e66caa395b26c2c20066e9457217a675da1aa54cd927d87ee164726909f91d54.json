{"ast":null,"code":"import { SCALAR, isScalar } from \"../nodes/identity.js\";\nimport { Scalar } from \"../nodes/Scalar.js\";\nimport { resolveBlockScalar } from \"./resolve-block-scalar.js\";\nimport { resolveFlowScalar } from \"./resolve-flow-scalar.js\";\nfunction composeScalar(ctx, token, tagToken, onError) {\n  var _ref = token.type === 'block-scalar' ? resolveBlockScalar(token, ctx.options.strict, onError) : resolveFlowScalar(token, ctx.options.strict, onError),\n    value = _ref.value,\n    type = _ref.type,\n    comment = _ref.comment,\n    range = _ref.range;\n  var tagName = tagToken ? ctx.directives.tagName(tagToken.source, function (msg) {\n    return onError(tagToken, 'TAG_RESOLVE_FAILED', msg);\n  }) : null;\n  var tag = tagToken && tagName ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError) : token.type === 'scalar' ? findScalarTagByTest(ctx, value, token, onError) : ctx.schema[SCALAR];\n  var scalar;\n  try {\n    var res = tag.resolve(value, function (msg) {\n      return onError(tagToken != null ? tagToken : token, 'TAG_RESOLVE_FAILED', msg);\n    }, ctx.options);\n    scalar = isScalar(res) ? res : new Scalar(res);\n  } catch (error) {\n    var msg = error instanceof Error ? error.message : String(error);\n    onError(tagToken != null ? tagToken : token, 'TAG_RESOLVE_FAILED', msg);\n    scalar = new Scalar(value);\n  }\n  scalar.range = range;\n  scalar.source = value;\n  if (type) scalar.type = type;\n  if (tagName) scalar.tag = tagName;\n  if (tag.format) scalar.format = tag.format;\n  if (comment) scalar.comment = comment;\n  return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n  if (tagName === '!') return schema[SCALAR];\n  var matchWithTest = [];\n  for (var tag of schema.tags) {\n    if (!tag.collection && tag.tag === tagName) {\n      if (tag.default && tag.test) matchWithTest.push(tag);else return tag;\n    }\n  }\n  for (var _tag of matchWithTest) {\n    var _tag$test;\n    if ((_tag$test = _tag.test) != null && _tag$test.test(value)) return _tag;\n  }\n  var kt = schema.knownTags[tagName];\n  if (kt && !kt.collection) {\n    schema.tags.push(Object.assign({}, kt, {\n      default: false,\n      test: undefined\n    }));\n    return kt;\n  }\n  onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n  return schema[SCALAR];\n}\nfunction findScalarTagByTest(_ref2, value, token, onError) {\n  var directives = _ref2.directives,\n    schema = _ref2.schema;\n  var tag = schema.tags.find(function (tag) {\n    var _tag$test2;\n    return tag.default && ((_tag$test2 = tag.test) == null ? void 0 : _tag$test2.test(value));\n  }) || schema[SCALAR];\n  if (schema.compat) {\n    var _schema$compat$find;\n    var compat = (_schema$compat$find = schema.compat.find(function (tag) {\n      var _tag$test3;\n      return tag.default && ((_tag$test3 = tag.test) == null ? void 0 : _tag$test3.test(value));\n    })) != null ? _schema$compat$find : schema[SCALAR];\n    if (tag.tag !== compat.tag) {\n      var ts = directives.tagString(tag.tag);\n      var cs = directives.tagString(compat.tag);\n      var msg = `Value may be parsed as either ${ts} or ${cs}`;\n      onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n    }\n  }\n  return tag;\n}\nexport { composeScalar };","map":{"version":3,"names":["SCALAR","isScalar","Scalar","resolveBlockScalar","resolveFlowScalar","composeScalar","ctx","token","tagToken","onError","_ref","type","options","strict","value","comment","range","tagName","directives","source","msg","tag","findScalarTagByName","schema","findScalarTagByTest","scalar","res","resolve","error","Error","message","String","format","matchWithTest","tags","collection","default","test","push","_tag$test","kt","knownTags","Object","assign","undefined","_ref2","find","_tag$test2","compat","_schema$compat$find","_tag$test3","ts","tagString","cs"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/browser/dist/compose/compose-scalar.js"],"sourcesContent":["import { SCALAR, isScalar } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}