{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignColorValue = assignColorValue;\nexports.getColorsAsObject = getColorsAsObject;\nexports.getObjectAsColorsXml = getObjectAsColorsXml;\nexports.getProjectColorsXMLPathAsync = getProjectColorsXMLPathAsync;\nexports.removeColorItem = removeColorItem;\nexports.setColorItem = setColorItem;\nfunction _Paths() {\n  var data = require(\"./Paths\");\n  _Paths = function _Paths() {\n    return data;\n  };\n  return data;\n}\nfunction _Resources() {\n  var data = require(\"./Resources\");\n  _Resources = function _Resources() {\n    return data;\n  };\n  return data;\n}\nfunction getProjectColorsXMLPathAsync(projectRoot) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    kind = _ref.kind;\n  return (0, _Paths().getResourceXMLPathAsync)(projectRoot, {\n    kind: kind,\n    name: 'colors'\n  });\n}\nfunction setColorItem(itemToAdd, colorFileContentsJSON) {\n  var _colorFileContentsJSO;\n  if ((_colorFileContentsJSO = colorFileContentsJSON.resources) !== null && _colorFileContentsJSO !== void 0 && _colorFileContentsJSO.color) {\n    var colorNameExists = colorFileContentsJSON.resources.color.filter(function (e) {\n      return e.$.name === itemToAdd.$.name;\n    })[0];\n    if (colorNameExists) {\n      colorNameExists._ = itemToAdd._;\n    } else {\n      colorFileContentsJSON.resources.color.push(itemToAdd);\n    }\n  } else {\n    if (!colorFileContentsJSON.resources || typeof colorFileContentsJSON.resources === 'string') {\n      colorFileContentsJSON.resources = {};\n    }\n    colorFileContentsJSON.resources.color = [itemToAdd];\n  }\n  return colorFileContentsJSON;\n}\nfunction removeColorItem(named, contents) {\n  var _contents$resources;\n  if ((_contents$resources = contents.resources) !== null && _contents$resources !== void 0 && _contents$resources.color) {\n    var index = contents.resources.color.findIndex(function (e) {\n      return e.$.name === named;\n    });\n    if (index > -1) {\n      contents.resources.color.splice(index, 1);\n    }\n  }\n  return contents;\n}\nfunction assignColorValue(xml, _ref2) {\n  var value = _ref2.value,\n    name = _ref2.name;\n  if (value) {\n    return setColorItem((0, _Resources().buildResourceItem)({\n      name: name,\n      value: value\n    }), xml);\n  }\n  return removeColorItem(name, xml);\n}\nfunction getColorsAsObject(xml) {\n  var _xml$resources;\n  if (!(xml !== null && xml !== void 0 && (_xml$resources = xml.resources) !== null && _xml$resources !== void 0 && _xml$resources.color)) {\n    return null;\n  }\n  return (0, _Resources().getResourceItemsAsObject)(xml.resources.color);\n}\nfunction getObjectAsColorsXml(obj) {\n  return {\n    resources: {\n      color: (0, _Resources().getObjectAsResourceItems)(obj)\n    }\n  };\n}","map":{"version":3,"names":["_Paths","data","require","_Resources","getProjectColorsXMLPathAsync","projectRoot","_ref","arguments","length","undefined","kind","getResourceXMLPathAsync","name","setColorItem","itemToAdd","colorFileContentsJSON","_colorFileContentsJSO","resources","color","colorNameExists","filter","e","$","_","push","removeColorItem","named","contents","_contents$resources","index","findIndex","splice","assignColorValue","xml","_ref2","value","buildResourceItem","getColorsAsObject","_xml$resources","getResourceItemsAsObject","getObjectAsColorsXml","obj","getObjectAsResourceItems"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\android\\Colors.ts"],"sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport {\n  buildResourceItem,\n  getObjectAsResourceItems,\n  getResourceItemsAsObject,\n  ResourceItemXML,\n  ResourceKind,\n  ResourceXML,\n} from './Resources';\n\nexport function getProjectColorsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n) {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'colors' });\n}\n\nexport function setColorItem(itemToAdd: ResourceItemXML, colorFileContentsJSON: ResourceXML) {\n  if (colorFileContentsJSON.resources?.color) {\n    const colorNameExists = colorFileContentsJSON.resources.color.filter(\n      (e: ResourceItemXML) => e.$.name === itemToAdd.$.name\n    )[0];\n    if (colorNameExists) {\n      colorNameExists._ = itemToAdd._;\n    } else {\n      colorFileContentsJSON.resources.color.push(itemToAdd);\n    }\n  } else {\n    if (!colorFileContentsJSON.resources || typeof colorFileContentsJSON.resources === 'string') {\n      //file was empty and JSON is `{resources : ''}`\n      colorFileContentsJSON.resources = {};\n    }\n    colorFileContentsJSON.resources.color = [itemToAdd];\n  }\n  return colorFileContentsJSON;\n}\n\nexport function removeColorItem(named: string, contents: ResourceXML) {\n  if (contents.resources?.color) {\n    const index = contents.resources.color.findIndex((e: ResourceItemXML) => e.$.name === named);\n    if (index > -1) {\n      // replace the previous value\n      contents.resources.color.splice(index, 1);\n    }\n  }\n  return contents;\n}\n\n/**\n * Set or remove value in XML based on nullish factor of the `value` property.\n */\nexport function assignColorValue(\n  xml: ResourceXML,\n  {\n    value,\n    name,\n  }: {\n    value?: string | null;\n    name: string;\n  }\n) {\n  if (value) {\n    return setColorItem(\n      buildResourceItem({\n        name,\n        value,\n      }),\n      xml\n    );\n  }\n\n  return removeColorItem(name, xml);\n}\n\n/**\n * Helper to convert a basic XML object into a simple k/v pair.\n * `colors.xml` is a very basic XML file so this is pretty safe to do.\n * Added for testing purposes.\n *\n * @param xml\n * @returns\n */\nexport function getColorsAsObject(xml: ResourceXML): Record<string, string> | null {\n  if (!xml?.resources?.color) {\n    return null;\n  }\n\n  return getResourceItemsAsObject(xml.resources.color);\n}\n\n/**\n * Helper to convert a basic k/v object to a colors XML object.\n *\n * @param xml\n * @returns\n */\nexport function getObjectAsColorsXml(obj: Record<string, string>): ResourceXML {\n  return {\n    resources: {\n      color: getObjectAsResourceItems(obj),\n    },\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}