{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/xcpretty/build/Formatter.d.ts"],"sourcesContent":["import { Failure, Parser } from './Parser';\ndeclare function highlightLastPathComponent(filePath: string): string;\ndeclare function format(command: string, argumentText?: string, success?: boolean): string;\ndeclare function relativePath(projectRoot: string, filePath: string): string;\ndeclare function formatBreadCrumb(fileName: string, target?: string, project?: string): string;\ndeclare function getAppRoot(filePath: string): string;\nexport declare type FileOperation = {\n    type: 'Analyze' | 'GenerateDSYMFile' | 'Ld' | 'Libtool' | 'ProcessPCH' | 'ProcessInfoPlistFile' | 'CodeSign' | 'Touch' | 'CompileC' | 'CompileSwift' | 'CompileXIB' | 'CompileStoryboard';\n    filePath: string;\n    fileName: string;\n    arch?: string;\n    linkType?: string;\n    target?: string;\n    project?: string;\n};\nexport declare type ConfigurationOperation = {\n    type: 'Analyze' | 'Aggregate' | 'Build' | 'Clean';\n    configuration: string;\n    target?: string;\n    project?: string;\n};\nexport declare type CopyFileProps = {\n    type: 'CpResource' | 'CopyStringsFile' | 'CopyPlistFile' | 'CpHeader';\n    from: string;\n    to: string;\n    target?: string;\n    project?: string;\n};\nexport declare class Formatter {\n    props: {\n        projectRoot: string;\n        /** Sets the max character length for a warning before cropping the preview. Useful for minified files that can be upwards of a thousand characters long. */\n        maxWarningLineLength?: number;\n    };\n    static format: typeof format;\n    static formatBreadCrumb: typeof formatBreadCrumb;\n    static getAppRoot: typeof getAppRoot;\n    static highlightLastPathComponent: typeof highlightLastPathComponent;\n    static relativePath: typeof relativePath;\n    _parser: Parser | undefined;\n    get parser(): Parser;\n    errors: string[];\n    warnings: string[];\n    constructor(props: {\n        projectRoot: string;\n        /** Sets the max character length for a warning before cropping the preview. Useful for minified files that can be upwards of a thousand characters long. */\n        maxWarningLineLength?: number;\n    });\n    pipe(data: string): string[];\n    private dimConfiguration;\n    getTitleForConfigurationType(type: ConfigurationOperation['type']): string;\n    formatTarget(props: ConfigurationOperation): string;\n    formatCopy({ from, to }: CopyFileProps): string;\n    getFileOperationTitle(type: FileOperation['type']): string;\n    formatFileOperation(props: FileOperation): string;\n    formatPhaseSuccess(phaseName: string, duration?: string): string;\n    formatPhaseScriptExecution(scriptName: string, target?: string, project?: string): string;\n    formatPreprocess(file: string): string;\n    formatShellCommand(command: string, args: string): string;\n    formatCompileCommand(compilerCommand: string, filePath: string): string;\n    formatProcessPchCommand(filePath: string): string;\n    formatWriteFile(file: string): string;\n    formatOther(text: string): string;\n    formatSingleLineCompileIssue(type: 'warning' | 'error', filePathAndLocation: string, fileName: string, reason: string, target: string, project: string): string;\n    formatRemark(msg: string): string;\n    formatEmitSwiftModule(type: 'normal' | string, arch: 'x86_64' | string, target?: string, project?: string): string;\n    formatCompileSwiftSources(type: 'normal' | string, arch: 'x86_64' | string, pkg: string | 'com.apple.xcode.tools.swift.compiler', target?: string, project?: string): string;\n    formatCleanRemove(msg: string): string;\n    formatWriteAuxiliaryFiles(text: string): string;\n    formatTiffutil(file: string): string;\n    formatCheckDependencies(text: string): string;\n    formatWillNotBeCodeSigned(message: string): string;\n    /**\n     *\n     * @param fileName 'SampleTest.m',\n     * @param filePathAndLocation '/Users/foo/bar.m:12:59',\n     * @param reason 'expected identifier',\n     * @param line '                [[thread should] equal:thread.];',\n     * @param cursor '                                           ^'\n     */\n    formatCompileError(fileName: string, filePathAndLocation: string, reason: string, line: string, cursor: string): string;\n    formatError(message: string): string;\n    /**\n     * In: `error: Provisioning profile \"iOS Team Provisioning Profile: *\" doesn't support the Push Notifications capability. (in target 'yolo90' from project 'yolo90')`\n     * Out: `❌  yolo90/yolo90: Provisioning Profile \"iOS Team Provisioning Profile: *\" does not support the Push Notifications capability.`\n     *\n     * In: `error: Provisioning profile \"iOS Team Provisioning Profile: *\" doesn't include the aps-environment entitlement. (in target 'yolo90' from project 'yolo90')`\n     * Out: `❌  yolo90/yolo90: Entitlements file defines the value \"aps-environment\" which is not registered for profile \"iOS Team Provisioning Profile: *\".`\n     *\n     * @param profileName `\"iOS Team Provisioning Profile: *\"`\n     * @param entitlementName `Push Notifications` | `aps-environment`\n     * @param entitlementType `capability` | `entitlement`\n     * @param target boost-for-react-native\n     * @param project Pods\n     */\n    formatUnsupportedEntitlementError(profileName: string, entitlementName: string, entitlementType: 'capability' | 'entitlement', target?: string, project?: string): string;\n    formatFileMissingError(reason: string, filePath: string): string;\n    formatLdWarning(reason: string): string;\n    formatUndefinedSymbols(message: string, symbol: string, reference: string): string;\n    formatLdMethodOverride(methodName: string, collisions: {\n        filePath: string;\n        name: string;\n    }[]): string;\n    formatDuplicateSymbols(message: string, filePaths: string[], isWarning: boolean): string;\n    /**\n     * In: `The iOS Simulator deployment target 'IPHONEOS_DEPLOYMENT_TARGET' is set to 8.0, but the range of supported deployment target versions is 9.0 to 14.3.99. (in target 'boost-for-react-native' from project 'Pods')`\n     * Out: `⚠️ Pods/boost-for-react-native: iOS@8.0 version mismatch. Expected >= 9.0 < 14.3.99`\n     *\n     * @param os iOS\n     * @param deploymentTarget IPHONEOS_DEPLOYMENT_TARGET\n     * @param version 8.0\n     * @param minVersion 9.0\n     * @param maxVersion 14.3.99\n     * @param target boost-for-react-native\n     * @param project Pods\n     */\n    formatVersionMismatchWarning(os: string, deploymentTarget: string, version: string, minVersion: string, maxVersion: string, target: string, project: string): string;\n    /**\n     * In: `warning: [CP] Vendored binary '/Users/evanbacon/Library/Developer/Xcode/DerivedData/yolo67-hcjsxsdqyxnsgdednlbpylgeffja/Build/Intermediates.noindex/Pods.build/Debug-iphonesimulator/hermes-engine.build/DerivedSources/hermes.framework.dSYM/Contents/Resources/DWARF/hermes' contains architectures (armv7 armv7s arm64) none of which match the current build architectures (x86_64).`\n     * Out: `⚠️  Vendored binary '[app]/hermes-engine.build/DerivedSources/hermes.framework.dSYM/Contents/Resources/DWARF/hermes' does not support current build architecture (x86_64). Supported architectures: armv7, armv7s, arm64.`\n     *\n     * @param os iOS\n     * @param deploymentTarget IPHONEOS_DEPLOYMENT_TARGET\n     * @param version 8.0\n     * @param minVersion 9.0\n     * @param maxVersion 14.3.99\n     * @param target boost-for-react-native\n     * @param project Pods\n     */\n    formatMissingArchitectureWarning(binaryPath: string, architectures: string[], currentArchitectures: string[]): string;\n    /**\n     * In: `Skipping duplicate build file in Compile Sources build phase: /Users/evanbacon/Documents/GitHub/expo/ios/Exponent/Kernel/ReactAppManager/EXReactAppManager.mm (in target 'Exponent' from project 'Exponent')`\n     * Out:\n     * `⚠️ Skipping duplicate file: Exponent/Kernel/ReactAppManager/EXReactAppManager.mm:\n     *    Remove: Exponent » Exponent » Build Phases » Compile Sources » EXReactAppManager.mm`\n     *\n     * @param filePath\n     * @param buildPhase 'Compile Sources'\n     * @param target Exponent-watch-app\n     * @param project Exponent\n     */\n    formatDuplicateFileCompilerWarning(filePath: string, buildPhase: string, target: string, project: string): string;\n    /**\n     * In: `The Copy Bundle Resources build phase contains this target's Info.plist file '/Users/evanbacon/Documents/GitHub/expo/ios/Exponent/Supporting/Info.plist'. (in target 'Exponent' from project 'Exponent')`\n     * Out:\n     * `⚠️ Target's Info.plist file is incorrectly linked: Exponent/Supporting/Info.plist:\n     *    Remove: Exponent » Exponent » Build Phases » Copy Bundle Resources » Info.plist`\n     *\n     * @param filePath\n     * @param reservedFileDescription 'entitlements'\n     * @param target Exponent-watch-app\n     * @param project Exponent\n     */\n    formatReservedFileInCopyBundleResourcesCompilerWarning(filePath: string, reservedFileDescription: string, target: string, project: string): string;\n    formatMissingFileCompilerWarning(filePath: string): string;\n    formatGenericError(message: string): string;\n    formatGenericWarning(message: string): string;\n    formatWarning(message: string): string;\n    formatCompileWarning(fileName: string, filePathAndLocation: string, reason: string, line?: string, cursor?: string): string;\n    shouldShowCompileWarning(filePath: string, lineNumber?: string, columnNumber?: string): boolean;\n    formatPendingTest(suite: string, test: string): string;\n    formatPassingTest(suite: string, test: string, time: string): string;\n    formatMeasuringTest(suite: string, test: string, time: string): string;\n    formatFailingTest(suite: string, test: string, reason: string, filePath: string): string;\n    formatTestRunStarted(name: string): string;\n    formatTestSuiteStarted(name: string): string;\n    formatTestRunFinished(name: string, time: string): string;\n    formatTestSummary(executedMessage: string, failuresPerSuite: Record<string, Failure[]>): string;\n    formatFailures(failuresPerSuite: Record<string, Failure[]>): string;\n    formatFailure(f: Failure): string;\n    finish(): void;\n    prettyFormat(text: string): string | void;\n    optionalNewline(): string;\n    getBuildSummary(): string;\n}\nexport {};\n"],"mappings":"AA+KA"},"metadata":{},"sourceType":"module","externalDependencies":[]}