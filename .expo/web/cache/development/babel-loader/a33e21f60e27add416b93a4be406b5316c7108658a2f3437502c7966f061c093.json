{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dependencyConfig = dependencyConfig;\nexports.projectConfig = projectConfig;\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nvar _findAndroidDir = _interopRequireDefault(require(\"./findAndroidDir\"));\nvar _findManifest = _interopRequireDefault(require(\"./findManifest\"));\nvar _findPackageClassName = _interopRequireDefault(require(\"./findPackageClassName\"));\nvar _getAndroidProject = require(\"./getAndroidProject\");\nvar _findLibraryName = require(\"./findLibraryName\");\nvar _findComponentDescriptors = require(\"./findComponentDescriptors\");\nvar _findBuildGradle = require(\"./findBuildGradle\");\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction projectConfig(root) {\n  var userConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var src = userConfig.sourceDir || (0, _findAndroidDir.default)(root);\n  if (!src) {\n    return null;\n  }\n  var sourceDir = _path().default.join(root, src);\n  var appName = getAppName(sourceDir, userConfig.appName);\n  var manifestPath = userConfig.manifestPath ? _path().default.join(sourceDir, userConfig.manifestPath) : (0, _findManifest.default)(_path().default.join(sourceDir, appName));\n  var buildGradlePath = (0, _findBuildGradle.findBuildGradle)(sourceDir, false);\n  if (!manifestPath && !buildGradlePath) {\n    return null;\n  }\n  var packageName = userConfig.packageName || (0, _getAndroidProject.getPackageName)(manifestPath, buildGradlePath);\n  if (!packageName) {\n    throw new (_cliTools().CLIError)(`Package name not found in neither ${manifestPath} nor ${buildGradlePath}`);\n  }\n  return {\n    sourceDir: sourceDir,\n    appName: appName,\n    packageName: packageName,\n    dependencyConfiguration: userConfig.dependencyConfiguration,\n    unstable_reactLegacyComponentNames: userConfig.unstable_reactLegacyComponentNames\n  };\n}\nfunction getAppName(sourceDir, userConfigAppName) {\n  var appName = '';\n  if (typeof userConfigAppName === 'string' && _fs().default.existsSync(_path().default.join(sourceDir, userConfigAppName))) {\n    appName = userConfigAppName;\n  } else if (_fs().default.existsSync(_path().default.join(sourceDir, 'app'))) {\n    appName = 'app';\n  }\n  return appName;\n}\nfunction dependencyConfig(root) {\n  var userConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (userConfig === null) {\n    return null;\n  }\n  var src = userConfig.sourceDir || (0, _findAndroidDir.default)(root);\n  if (!src) {\n    return null;\n  }\n  var sourceDir = _path().default.join(root, src);\n  var manifestPath = userConfig.manifestPath ? _path().default.join(sourceDir, userConfig.manifestPath) : (0, _findManifest.default)(sourceDir);\n  var buildGradlePath = (0, _findBuildGradle.findBuildGradle)(sourceDir, true);\n  if (!manifestPath && !buildGradlePath) {\n    return null;\n  }\n  var packageName = userConfig.packageName || (0, _getAndroidProject.getPackageName)(manifestPath, buildGradlePath);\n  var packageClassName = (0, _findPackageClassName.default)(sourceDir);\n  if (!packageClassName) {\n    return null;\n  }\n  var packageImportPath = userConfig.packageImportPath || `import ${packageName}.${packageClassName};`;\n  var packageInstance = userConfig.packageInstance || `new ${packageClassName}()`;\n  var buildTypes = userConfig.buildTypes || [];\n  var dependencyConfiguration = userConfig.dependencyConfiguration;\n  var libraryName = userConfig.libraryName || (0, _findLibraryName.findLibraryName)(root, sourceDir);\n  var componentDescriptors = userConfig.componentDescriptors || (0, _findComponentDescriptors.findComponentDescriptors)(root);\n  var cmakeListsPath = userConfig.cmakeListsPath ? _path().default.join(sourceDir, userConfig.cmakeListsPath) : _path().default.join(sourceDir, 'build/generated/source/codegen/jni/CMakeLists.txt');\n  if (process.platform === 'win32') {\n    cmakeListsPath = cmakeListsPath.replace(/\\\\/g, '/');\n  }\n  return {\n    sourceDir: sourceDir,\n    packageImportPath: packageImportPath,\n    packageInstance: packageInstance,\n    buildTypes: buildTypes,\n    dependencyConfiguration: dependencyConfiguration,\n    libraryName: libraryName,\n    componentDescriptors: componentDescriptors,\n    cmakeListsPath: cmakeListsPath\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","dependencyConfig","projectConfig","_path","data","_interopRequireDefault","require","_fs","_findAndroidDir","_findManifest","_findPackageClassName","_getAndroidProject","_findLibraryName","_findComponentDescriptors","_findBuildGradle","_cliTools","obj","__esModule","default","root","userConfig","arguments","length","undefined","src","sourceDir","join","appName","getAppName","manifestPath","buildGradlePath","findBuildGradle","packageName","getPackageName","CLIError","dependencyConfiguration","unstable_reactLegacyComponentNames","userConfigAppName","existsSync","packageClassName","packageImportPath","packageInstance","buildTypes","libraryName","findLibraryName","componentDescriptors","findComponentDescriptors","cmakeListsPath","process","platform","replace"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-platform-android/build/config/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dependencyConfig = dependencyConfig;\nexports.projectConfig = projectConfig;\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nvar _findAndroidDir = _interopRequireDefault(require(\"./findAndroidDir\"));\nvar _findManifest = _interopRequireDefault(require(\"./findManifest\"));\nvar _findPackageClassName = _interopRequireDefault(require(\"./findPackageClassName\"));\nvar _getAndroidProject = require(\"./getAndroidProject\");\nvar _findLibraryName = require(\"./findLibraryName\");\nvar _findComponentDescriptors = require(\"./findComponentDescriptors\");\nvar _findBuildGradle = require(\"./findBuildGradle\");\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Gets android project config by analyzing given folder and taking some\n * defaults specified by user into consideration\n */\nfunction projectConfig(root, userConfig = {}) {\n  const src = userConfig.sourceDir || (0, _findAndroidDir.default)(root);\n  if (!src) {\n    return null;\n  }\n  const sourceDir = _path().default.join(root, src);\n  const appName = getAppName(sourceDir, userConfig.appName);\n  const manifestPath = userConfig.manifestPath ? _path().default.join(sourceDir, userConfig.manifestPath) : (0, _findManifest.default)(_path().default.join(sourceDir, appName));\n  const buildGradlePath = (0, _findBuildGradle.findBuildGradle)(sourceDir, false);\n  if (!manifestPath && !buildGradlePath) {\n    return null;\n  }\n  const packageName = userConfig.packageName || (0, _getAndroidProject.getPackageName)(manifestPath, buildGradlePath);\n  if (!packageName) {\n    throw new (_cliTools().CLIError)(`Package name not found in neither ${manifestPath} nor ${buildGradlePath}`);\n  }\n  return {\n    sourceDir,\n    appName,\n    packageName,\n    dependencyConfiguration: userConfig.dependencyConfiguration,\n    unstable_reactLegacyComponentNames: userConfig.unstable_reactLegacyComponentNames\n  };\n}\nfunction getAppName(sourceDir, userConfigAppName) {\n  let appName = '';\n  if (typeof userConfigAppName === 'string' && _fs().default.existsSync(_path().default.join(sourceDir, userConfigAppName))) {\n    appName = userConfigAppName;\n  } else if (_fs().default.existsSync(_path().default.join(sourceDir, 'app'))) {\n    appName = 'app';\n  }\n  return appName;\n}\n\n/**\n * Same as projectConfigAndroid except it returns\n * different config that applies to packages only\n */\nfunction dependencyConfig(root, userConfig = {}) {\n  if (userConfig === null) {\n    return null;\n  }\n  const src = userConfig.sourceDir || (0, _findAndroidDir.default)(root);\n  if (!src) {\n    return null;\n  }\n  const sourceDir = _path().default.join(root, src);\n  const manifestPath = userConfig.manifestPath ? _path().default.join(sourceDir, userConfig.manifestPath) : (0, _findManifest.default)(sourceDir);\n  const buildGradlePath = (0, _findBuildGradle.findBuildGradle)(sourceDir, true);\n  if (!manifestPath && !buildGradlePath) {\n    return null;\n  }\n  const packageName = userConfig.packageName || (0, _getAndroidProject.getPackageName)(manifestPath, buildGradlePath);\n  const packageClassName = (0, _findPackageClassName.default)(sourceDir);\n\n  /**\n   * This module has no package to export\n   */\n  if (!packageClassName) {\n    return null;\n  }\n  const packageImportPath = userConfig.packageImportPath || `import ${packageName}.${packageClassName};`;\n  const packageInstance = userConfig.packageInstance || `new ${packageClassName}()`;\n  const buildTypes = userConfig.buildTypes || [];\n  const dependencyConfiguration = userConfig.dependencyConfiguration;\n  const libraryName = userConfig.libraryName || (0, _findLibraryName.findLibraryName)(root, sourceDir);\n  const componentDescriptors = userConfig.componentDescriptors || (0, _findComponentDescriptors.findComponentDescriptors)(root);\n  let cmakeListsPath = userConfig.cmakeListsPath ? _path().default.join(sourceDir, userConfig.cmakeListsPath) : _path().default.join(sourceDir, 'build/generated/source/codegen/jni/CMakeLists.txt');\n  if (process.platform === 'win32') {\n    cmakeListsPath = cmakeListsPath.replace(/\\\\/g, '/');\n  }\n  return {\n    sourceDir,\n    packageImportPath,\n    packageInstance,\n    buildTypes,\n    dependencyConfiguration,\n    libraryName,\n    componentDescriptors,\n    cmakeListsPath\n  };\n}\n\n//# sourceMappingURL=index.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}