{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = void 0;\nvar path_1 = require(\"path\");\nvar Matchers_1 = require(\"./Matchers\");\nvar switchRegex_1 = require(\"./switchRegex\");\nfunction unescaped(args) {\n  return args.map(function (v) {\n    return v.replace(/\\\\/g, '');\n  });\n}\nvar Parser = function () {\n  function Parser(formatter) {\n    _classCallCheck(this, Parser);\n    this.formatter = formatter;\n    this.formattedSummary = false;\n    this.failures = {};\n    this.linkerFailure = {\n      files: []\n    };\n    this.currentIssue = {};\n  }\n  _createClass(Parser, [{\n    key: \"parse\",\n    value: function parse(text) {\n      var _this = this;\n      var matchedErrorResults = this.updateErrorState(text);\n      if (this.shouldFormatWarning()) {\n        return this.formatCompileWarning();\n      }\n      if (this.shouldFormatError()) {\n        return this.formatCompileError();\n      }\n      if (matchedErrorResults) {\n        return '';\n      }\n      var matchedLinkerResults = this.updateLinkerFailureState(text);\n      if (this.shouldFormatUndefinedSymbols()) {\n        return this.formatUndefinedSymbols();\n      }\n      if (this.shouldFormatDuplicateSymbols()) {\n        return this.formatDuplicateSymbols();\n      }\n      if (matchedLinkerResults) {\n        return '';\n      }\n      this.updateTestState(text);\n      var formatter = this.formatter;\n      return switchRegex_1.switchRegex(text, [[Matchers_1.Matchers.ANALYZE_MATCHER, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 5),\n          $1 = _ref2[1],\n          $2 = _ref2[2],\n          $3 = _ref2[3],\n          $4 = _ref2[4];\n        return formatter.formatFileOperation({\n          type: 'Analyze',\n          filePath: $1,\n          fileName: $2,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.BUILD_TARGET_MATCHER, function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 4),\n          $1 = _ref4[1],\n          $2 = _ref4[2],\n          $3 = _ref4[3];\n        return formatter.formatTarget({\n          type: 'Build',\n          configuration: $3,\n          target: $1,\n          project: $2\n        });\n      }], [Matchers_1.Matchers.AGGREGATE_TARGET_MATCHER, function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 4),\n          $1 = _ref6[1],\n          $2 = _ref6[2],\n          $3 = _ref6[3];\n        return formatter.formatTarget({\n          type: 'Aggregate',\n          configuration: $3,\n          target: $1,\n          project: $2\n        });\n      }], [Matchers_1.Matchers.ANALYZE_TARGET_MATCHER, function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 4),\n          $1 = _ref8[1],\n          $2 = _ref8[2],\n          $3 = _ref8[3];\n        return formatter.formatTarget({\n          type: 'Analyze',\n          configuration: $3,\n          target: $1,\n          project: $2\n        });\n      }], [Matchers_1.Matchers.CLEAN_REMOVE_MATCHER, function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 1),\n          $0 = _ref10[0];\n        return formatter.formatCleanRemove($0);\n      }], [Matchers_1.Matchers.CLEAN_TARGET_MATCHER, function (_ref11) {\n        var _ref12 = _slicedToArray(_ref11, 4),\n          $1 = _ref12[1],\n          $2 = _ref12[2],\n          $3 = _ref12[3];\n        return formatter.formatTarget({\n          type: 'Clean',\n          configuration: $3,\n          target: $1,\n          project: $2\n        });\n      }], [Matchers_1.Matchers.ANY_COPY_MATCHER, function (_ref13) {\n        var _ref14 = _slicedToArray(_ref13, 6),\n          $1 = _ref14[1],\n          $2 = _ref14[2],\n          $3 = _ref14[3],\n          $4 = _ref14[4],\n          $5 = _ref14[5];\n        var from = $3;\n        var to = $2;\n        if ($1.startsWith('Cp')) {\n          from = $2;\n          to = $3;\n        }\n        return formatter.formatCopy({\n          type: $1,\n          from: from,\n          to: to,\n          target: $4,\n          project: $5\n        });\n      }], [Matchers_1.Matchers.CHECK_DEPENDENCIES_MATCHER, function (_ref15) {\n        var _ref16 = _slicedToArray(_ref15, 1),\n          $0 = _ref16[0];\n        return formatter.formatCheckDependencies($0);\n      }], [Matchers_1.Matchers.Errors.CLANG_ERROR_MATCHER, function (_ref17) {\n        var _ref18 = _slicedToArray(_ref17, 2),\n          $1 = _ref18[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.CODESIGN_FRAMEWORK_MATCHER, function (_ref19) {\n        var _ref20 = _slicedToArray(_ref19, 5),\n          $1 = _ref20[1],\n          $2 = _ref20[2],\n          $3 = _ref20[3],\n          $4 = _ref20[4];\n        return formatter.formatFileOperation({\n          type: 'CodeSign',\n          fileName: $2,\n          filePath: $1,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.CODESIGN_MATCHER, function (_ref21) {\n        var _ref22 = _slicedToArray(_ref21, 5),\n          $1 = _ref22[1],\n          $2 = _ref22[2],\n          $3 = _ref22[3],\n          $4 = _ref22[4];\n        return formatter.formatFileOperation({\n          type: 'CodeSign',\n          fileName: $2,\n          filePath: $1,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.Errors.CHECK_DEPENDENCIES_ERRORS_MATCHER, function (_ref23) {\n        var _ref24 = _slicedToArray(_ref23, 2),\n          $1 = _ref24[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.Errors.PROVISIONING_PROFILE_REQUIRED_MATCHER, function (_ref25) {\n        var _ref26 = _slicedToArray(_ref25, 2),\n          $1 = _ref26[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.Errors.NO_CERTIFICATE_MATCHER, function (_ref27) {\n        var _ref28 = _slicedToArray(_ref27, 2),\n          $1 = _ref28[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.COMPILE_MATCHER, function (_ref29) {\n        var _ref30 = _slicedToArray(_ref29, 6),\n          $1 = _ref30[1],\n          $2 = _ref30[2],\n          $3 = _ref30[3],\n          $4 = _ref30[4],\n          $5 = _ref30[5];\n        return formatter.formatFileOperation({\n          type: $1,\n          fileName: $3,\n          filePath: $2,\n          target: $4,\n          project: $5\n        });\n      }], [Matchers_1.Matchers.COMPILE_COMMAND_MATCHER, function (_ref31) {\n        var _ref32 = _slicedToArray(_ref31, 3),\n          $1 = _ref32[1],\n          $2 = _ref32[2];\n        return formatter.formatCompileCommand($1, $2);\n      }], [Matchers_1.Matchers.COMPILE_XIB_MATCHER, function (_ref33) {\n        var _ref34 = _slicedToArray(_ref33, 5),\n          $1 = _ref34[1],\n          $2 = _ref34[2],\n          $3 = _ref34[3],\n          $4 = _ref34[4];\n        return formatter.formatFileOperation({\n          type: 'CompileXIB',\n          fileName: $2,\n          filePath: $1,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.COMPILE_STORYBOARD_MATCHER, function (_ref35) {\n        var _ref36 = _slicedToArray(_ref35, 5),\n          $1 = _ref36[1],\n          $2 = _ref36[2],\n          $3 = _ref36[3],\n          $4 = _ref36[4];\n        return formatter.formatFileOperation({\n          type: 'CompileStoryboard',\n          fileName: $2,\n          filePath: $1,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.EXECUTED_MATCHER, function () {\n        return _this.formatSummaryIfNeeded(text);\n      }], [Matchers_1.Matchers.REMARK_MATCHER, function (_ref37) {\n        var _ref38 = _slicedToArray(_ref37, 2),\n          $1 = _ref38[1];\n        return formatter.formatRemark($1);\n      }], [Matchers_1.Matchers.COMPILE_SWIFT_SOURCES_MATCHER, function (_ref39) {\n        var _ref40 = _slicedToArray(_ref39, 7),\n          $2 = _ref40[2],\n          $3 = _ref40[3],\n          $4 = _ref40[4],\n          $5 = _ref40[5],\n          $6 = _ref40[6];\n        return formatter.formatCompileSwiftSources($2, $3, $4, $5, $6);\n      }], [Matchers_1.Matchers.EMIT_SWIFT_MODULE_MATCHER, function (_ref41) {\n        var _ref42 = _slicedToArray(_ref41, 6),\n          $2 = _ref42[2],\n          $3 = _ref42[3],\n          $4 = _ref42[4],\n          $5 = _ref42[5];\n        return formatter.formatEmitSwiftModule($2, $3, $4, $5);\n      }], [Matchers_1.Matchers.RESTARTING_TESTS_MATCHER, function () {\n        return formatter.formatFailingTest(_this.testSuite, _this.testCase, 'Test crashed', 'n/a');\n      }], [Matchers_1.Matchers.UI_FAILING_TEST_MATCHER, function (_ref43) {\n        var _ref44 = _slicedToArray(_ref43, 3),\n          $1 = _ref44[1],\n          $2 = _ref44[2];\n        return formatter.formatFailingTest(_this.testSuite, _this.testCase, $2, $1);\n      }], [Matchers_1.Matchers.FAILING_TEST_MATCHER, function (_ref45) {\n        var _ref46 = _slicedToArray(_ref45, 5),\n          $1 = _ref46[1],\n          $2 = _ref46[2],\n          $3 = _ref46[3],\n          $4 = _ref46[4];\n        return formatter.formatFailingTest($2, $3, $4, $1);\n      }], [Matchers_1.Matchers.Errors.FATAL_ERROR_MATCHER, function (_ref47) {\n        var _ref48 = _slicedToArray(_ref47, 2),\n          $1 = _ref48[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.Errors.RSYNC_ERROR_MATCHER, function (_ref49) {\n        var _ref50 = _slicedToArray(_ref49, 2),\n          $1 = _ref50[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.Errors.FILE_MISSING_ERROR_MATCHER, function (_ref51) {\n        var _ref52 = _slicedToArray(_ref51, 3),\n          $1 = _ref52[1],\n          $2 = _ref52[2];\n        return formatter.formatFileMissingError($1, $2);\n      }], [Matchers_1.Matchers.GENERATE_DSYM_MATCHER, function (_ref53) {\n        var _ref54 = _slicedToArray(_ref53, 5),\n          $1 = _ref54[1],\n          $2 = _ref54[2],\n          $3 = _ref54[3],\n          $4 = _ref54[4];\n        return formatter.formatFileOperation({\n          type: 'GenerateDSYMFile',\n          filePath: $1,\n          fileName: $2,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.Warnings.LD_WARNING_MATCHER, function (_ref55) {\n        var _ref56 = _slicedToArray(_ref55, 3),\n          $1 = _ref56[1],\n          $2 = _ref56[2];\n        if (_this.linkerFailure.isWarning) {\n          return '';\n        }\n        return formatter.formatLdWarning($1 + $2);\n      }], [Matchers_1.Matchers.Errors.LD_ERROR_MATCHER, function (_ref57) {\n        var _ref58 = _slicedToArray(_ref57, 2),\n          $1 = _ref58[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.LIBTOOL_MATCHER, function (_ref59) {\n        var _ref60 = _slicedToArray(_ref59, 5),\n          $1 = _ref60[1],\n          $2 = _ref60[2],\n          $3 = _ref60[3],\n          $4 = _ref60[4];\n        return formatter.formatFileOperation({\n          type: 'Libtool',\n          filePath: $1,\n          fileName: $2,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.LINKING_MATCHER, function (_ref61) {\n        var _ref62 = _slicedToArray(_ref61, 7),\n          $1 = _ref62[1],\n          $2 = _ref62[2],\n          $3 = _ref62[3],\n          $4 = _ref62[4],\n          $5 = _ref62[5],\n          $6 = _ref62[6];\n        return formatter.formatFileOperation({\n          type: 'Ld',\n          filePath: $1,\n          fileName: $2,\n          linkType: $3,\n          arch: $4,\n          target: $5,\n          project: $6\n        });\n      }], [Matchers_1.Matchers.Errors.MODULE_INCLUDES_ERROR_MATCHER, function (_ref63) {\n        var _ref64 = _slicedToArray(_ref63, 2),\n          $1 = _ref64[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.TEST_CASE_MEASURED_MATCHER, function (_ref65) {\n        var _ref66 = _slicedToArray(_ref65, 4),\n          $1 = _ref66[1],\n          $2 = _ref66[2],\n          $3 = _ref66[3];\n        return formatter.formatMeasuringTest($1, $2, $3);\n      }], [Matchers_1.Matchers.TEST_CASE_PENDING_MATCHER, function (_ref67) {\n        var _ref68 = _slicedToArray(_ref67, 3),\n          $1 = _ref68[1],\n          $2 = _ref68[2];\n        return formatter.formatPendingTest($1, $2);\n      }], [Matchers_1.Matchers.TEST_CASE_PASSED_MATCHER, function (_ref69) {\n        var _ref70 = _slicedToArray(_ref69, 4),\n          $1 = _ref70[1],\n          $2 = _ref70[2],\n          $3 = _ref70[3];\n        return formatter.formatPassingTest($1, $2, $3);\n      }], [Matchers_1.Matchers.Errors.PODS_ERROR_MATCHER, function (_ref71) {\n        var _ref72 = _slicedToArray(_ref71, 2),\n          $1 = _ref72[1];\n        return formatter.formatError($1);\n      }], [Matchers_1.Matchers.PROCESS_INFO_PLIST_MATCHER, function (_ref73) {\n        var _ref74 = _slicedToArray(_ref73, 5),\n          $1 = _ref74[1],\n          $2 = _ref74[2],\n          $3 = _ref74[3],\n          $4 = _ref74[4];\n        var _unescaped = unescaped([$1, $2]),\n          _unescaped2 = _slicedToArray(_unescaped, 2),\n          filePath = _unescaped2[0],\n          fileName = _unescaped2[1];\n        return formatter.formatFileOperation({\n          type: 'ProcessInfoPlistFile',\n          fileName: fileName,\n          filePath: filePath,\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.PHASE_SCRIPT_EXECUTION_MATCHER, function (_ref75) {\n        var _ref76 = _slicedToArray(_ref75, 4),\n          $1 = _ref76[1],\n          $2 = _ref76[2],\n          $3 = _ref76[3];\n        return formatter.formatPhaseScriptExecution.apply(formatter, _toConsumableArray(unescaped([$1])).concat([$2, $3]));\n      }], [Matchers_1.Matchers.PHASE_SUCCESS_MATCHER, function (_ref77) {\n        var _ref78 = _slicedToArray(_ref77, 3),\n          $1 = _ref78[1],\n          $2 = _ref78[2];\n        return formatter.formatPhaseSuccess($1, $2);\n      }], [Matchers_1.Matchers.PROCESS_PCH_MATCHER, function (_ref79) {\n        var _ref80 = _slicedToArray(_ref79, 8),\n          $1 = _ref80[1],\n          $2 = _ref80[2],\n          $3 = _ref80[3],\n          $4 = _ref80[4],\n          $5 = _ref80[5],\n          $6 = _ref80[6],\n          $7 = _ref80[7];\n        return formatter.formatFileOperation({\n          type: 'ProcessPCH',\n          filePath: $1,\n          fileName: $2,\n          linkType: $4,\n          arch: $5,\n          target: $6,\n          project: $7\n        });\n      }], [Matchers_1.Matchers.PROCESS_PCH_COMMAND_MATCHER, function (_ref81) {\n        var _ref82 = _slicedToArray(_ref81, 2),\n          $1 = _ref82[1];\n        return formatter.formatProcessPchCommand($1);\n      }], [Matchers_1.Matchers.PREPROCESS_MATCHER, function (_ref83) {\n        var _ref84 = _slicedToArray(_ref83, 2),\n          $1 = _ref84[1];\n        return formatter.formatPreprocess($1);\n      }], [Matchers_1.Matchers.TESTS_RUN_COMPLETION_MATCHER, function (_ref85) {\n        var _ref86 = _slicedToArray(_ref85, 4),\n          $1 = _ref86[1],\n          $3 = _ref86[3];\n        return formatter.formatTestRunFinished($1, $3);\n      }], [Matchers_1.Matchers.TEST_SUITE_STARTED_MATCHER, function (_ref87) {\n        var _ref88 = _slicedToArray(_ref87, 2),\n          $1 = _ref88[1];\n        return formatter.formatTestRunStarted($1);\n      }], [Matchers_1.Matchers.TEST_SUITE_START_MATCHER, function (_ref89) {\n        var _ref90 = _slicedToArray(_ref89, 2),\n          $1 = _ref90[1];\n        return formatter.formatTestSuiteStarted($1);\n      }], [Matchers_1.Matchers.TIFFUTIL_MATCHER, function (_ref91) {\n        var _ref92 = _slicedToArray(_ref91, 2),\n          $1 = _ref92[1];\n        return formatter.formatTiffutil($1);\n      }], [Matchers_1.Matchers.TOUCH_MATCHER, function (_ref93) {\n        var _ref94 = _slicedToArray(_ref93, 5),\n          $1 = _ref94[1],\n          $2 = _ref94[2],\n          $3 = _ref94[3],\n          $4 = _ref94[4];\n        return formatter.formatFileOperation({\n          type: 'Touch',\n          filePath: $1,\n          fileName: $2 || path_1.basename($1 || ''),\n          target: $3,\n          project: $4\n        });\n      }], [Matchers_1.Matchers.WRITE_FILE_MATCHER, function (_ref95) {\n        var _ref96 = _slicedToArray(_ref95, 2),\n          $1 = _ref96[1];\n        return formatter.formatWriteFile($1);\n      }], [Matchers_1.Matchers.WRITE_AUXILIARY_FILES, function (_ref97) {\n        var _ref98 = _slicedToArray(_ref97, 1),\n          $0 = _ref98[0];\n        return formatter.formatWriteAuxiliaryFiles($0);\n      }], [Matchers_1.Matchers.SHELL_COMMAND_MATCHER, function (_ref99) {\n        var _ref100 = _slicedToArray(_ref99, 3),\n          $1 = _ref100[1],\n          $2 = _ref100[2];\n        return formatter.formatShellCommand($1, $2);\n      }], [Matchers_1.Matchers.Warnings.GENERIC_WARNING_MATCHER, function (_ref101) {\n        var _ref102 = _slicedToArray(_ref101, 2),\n          $1 = _ref102[1];\n        return formatter.formatWarning($1);\n      }], [Matchers_1.Matchers.Warnings.WILL_NOT_BE_CODE_SIGNED_MATCHER, function (_ref103) {\n        var _ref104 = _slicedToArray(_ref103, 2),\n          $1 = _ref104[1];\n        return formatter.formatWillNotBeCodeSigned($1);\n      }], [Matchers_1.Matchers.Errors.COMPILE_ERROR_MATCHER, function (_ref105) {\n        var _ref106 = _slicedToArray(_ref105, 6),\n          $1 = _ref106[1],\n          $2 = _ref106[2],\n          $3 = _ref106[3],\n          $4 = _ref106[4],\n          $5 = _ref106[5];\n        return formatter.formatSingleLineCompileIssue('error', $1, $2, $3, $4, $5);\n      }], [Matchers_1.Matchers.Warnings.COMPILE_WARNING_INLINE_MATCHER, function (_ref107) {\n        var _ref108 = _slicedToArray(_ref107, 6),\n          $1 = _ref108[1],\n          $2 = _ref108[2],\n          $3 = _ref108[3],\n          $4 = _ref108[4],\n          $5 = _ref108[5];\n        return formatter.formatSingleLineCompileIssue('warning', $1, $2, $3, $4, $5);\n      }], [null, function () {\n        return formatter.formatOther(text);\n      }]]);\n    }\n  }, {\n    key: \"updateTestState\",\n    value: function updateTestState(text) {\n      var _this2 = this;\n      return switchRegex_1.switchRegex(text, [[Matchers_1.Matchers.TEST_SUITE_STARTED_MATCHER, function () {\n        _this2.testsDone = false;\n        _this2.formattedSummary = false;\n        _this2.failures = {};\n      }], [Matchers_1.Matchers.TEST_CASE_STARTED_MATCHER, function (_ref109) {\n        var _ref110 = _slicedToArray(_ref109, 3),\n          $1 = _ref110[1],\n          $2 = _ref110[2];\n        _this2.testSuite = $1;\n        _this2.testCase = $2;\n      }], [Matchers_1.Matchers.TESTS_RUN_COMPLETION_MATCHER, function () {\n        _this2.testsDone = true;\n      }], [Matchers_1.Matchers.FAILING_TEST_MATCHER, function (_ref111) {\n        var _ref112 = _slicedToArray(_ref111, 5),\n          $1 = _ref112[1],\n          $2 = _ref112[2],\n          $3 = _ref112[3],\n          $4 = _ref112[4];\n        return _this2.storeFailure({\n          file: $1,\n          testSuite: $2,\n          testCase: $3,\n          reason: $4\n        });\n      }], [Matchers_1.Matchers.UI_FAILING_TEST_MATCHER, function (_ref113) {\n        var _ref114 = _slicedToArray(_ref113, 3),\n          $1 = _ref114[1],\n          $2 = _ref114[2];\n        return _this2.storeFailure({\n          file: $1,\n          testSuite: _this2.testSuite,\n          testCase: _this2.testCase,\n          reason: $2\n        });\n      }], [Matchers_1.Matchers.RESTARTING_TESTS_MATCHER, function () {\n        return _this2.storeFailure({\n          file: 'n/a',\n          testSuite: _this2.testSuite,\n          testCase: _this2.testCase,\n          reason: 'Test crashed'\n        });\n      }]], true);\n    }\n  }, {\n    key: \"updateErrorState\",\n    value: function updateErrorState(text) {\n      var _this3 = this;\n      var updateError = function updateError(_ref115) {\n        var _ref116 = _slicedToArray(_ref115, 4),\n          $1 = _ref116[1],\n          $2 = _ref116[2],\n          $3 = _ref116[3];\n        _this3.currentIssue.reason = $3;\n        _this3.currentIssue.filePath = $1;\n        _this3.currentIssue.fileName = $2;\n      };\n      var results = switchRegex_1.switchRegex(text, [[Matchers_1.Matchers.Errors.COMPILE_ERROR_MATCHER, function (matches) {\n        if (matches === null || matches === void 0 ? void 0 : matches[4]) {\n          return 'unmatched';\n        }\n        _this3.formattingError = true;\n        updateError(matches);\n        return null;\n      }], [Matchers_1.Matchers.Warnings.COMPILE_WARNING_MATCHER, function (matches) {\n        if (matches === null || matches === void 0 ? void 0 : matches[4]) {\n          return 'unmatched';\n        }\n        _this3.formattingWarning = true;\n        updateError(matches);\n        return null;\n      }], [Matchers_1.Matchers.Errors.CURSOR_MATCHER, function (_ref117) {\n        var _ref118 = _slicedToArray(_ref117, 2),\n          $1 = _ref118[1];\n        _this3.currentIssue.cursor = $1;\n      }], [null, function () {\n        if (_this3.formattingError || _this3.formattingWarning) {\n          _this3.currentIssue.line = text;\n        }\n        return 'unmatched';\n      }]]);\n      return results !== 'unmatched';\n    }\n  }, {\n    key: \"updateLinkerFailureState\",\n    value: function updateLinkerFailureState(text) {\n      var _this4 = this;\n      var handleLinkerFail = function handleLinkerFail(_ref119) {\n        var _ref120 = _slicedToArray(_ref119, 2),\n          $1 = _ref120[1];\n        _this4.linkerFailure.message = $1;\n        var messageMatch = _this4.linkerFailure.message.match(/^(ld: )warning: (.*)/m);\n        if (messageMatch && messageMatch[2]) {\n          _this4.linkerFailure.message = messageMatch[1] + messageMatch[2];\n          _this4.linkerFailure.isWarning = true;\n        }\n        _this4.formattingLinkerFailure = true;\n      };\n      switchRegex_1.switchRegex(text, [[Matchers_1.Matchers.Errors.LINKER_UNDEFINED_SYMBOLS_MATCHER, handleLinkerFail], [Matchers_1.Matchers.Errors.LINKER_DUPLICATE_SYMBOLS_MATCHER, handleLinkerFail]]);\n      if (!this.formattingLinkerFailure) {\n        return false;\n      }\n      var results = switchRegex_1.switchRegex(text, [[Matchers_1.Matchers.Errors.SYMBOL_REFERENCED_FROM_MATCHER, function (_ref121) {\n        var _ref122 = _slicedToArray(_ref121, 2),\n          $1 = _ref122[1];\n        _this4.linkerFailure.symbol = $1;\n      }], [Matchers_1.Matchers.Errors.LINKER_UNDEFINED_SYMBOL_LOCATION_MATCHER, function () {\n        _this4.linkerFailure.reference = text.trim();\n      }], [Matchers_1.Matchers.Errors.LINKER_DUPLICATE_SYMBOLS_LOCATION_MATCHER, function (_ref123) {\n        var _ref124 = _slicedToArray(_ref123, 2),\n          $1 = _ref124[1];\n        _this4.linkerFailure.files.push($1);\n      }], [null, function () {\n        return 'unmatched';\n      }]]);\n      return results !== 'unmatched';\n    }\n  }, {\n    key: \"shouldFormatError\",\n    value: function shouldFormatError() {\n      return !!this.formattingError && this.errorOrWarningIsPresent();\n    }\n  }, {\n    key: \"shouldFormatWarning\",\n    value: function shouldFormatWarning() {\n      return this.formattingWarning && this.errorOrWarningIsPresent();\n    }\n  }, {\n    key: \"errorOrWarningIsPresent\",\n    value: function errorOrWarningIsPresent() {\n      var _a, _b, _c;\n      return !!((_a = this.currentIssue) === null || _a === void 0 ? void 0 : _a.reason) && !!((_b = this.currentIssue) === null || _b === void 0 ? void 0 : _b.cursor) && !!((_c = this.currentIssue) === null || _c === void 0 ? void 0 : _c.line);\n    }\n  }, {\n    key: \"shouldFormatUndefinedSymbols\",\n    value: function shouldFormatUndefinedSymbols() {\n      var _a, _b, _c;\n      return ((_a = this.linkerFailure) === null || _a === void 0 ? void 0 : _a.message) && ((_b = this.linkerFailure) === null || _b === void 0 ? void 0 : _b.symbol) && ((_c = this.linkerFailure) === null || _c === void 0 ? void 0 : _c.reference);\n    }\n  }, {\n    key: \"shouldFormatDuplicateSymbols\",\n    value: function shouldFormatDuplicateSymbols() {\n      var _a, _b, _c;\n      return ((_a = this.linkerFailure) === null || _a === void 0 ? void 0 : _a.message) && ((_c = (_b = this.linkerFailure) === null || _b === void 0 ? void 0 : _b.files) === null || _c === void 0 ? void 0 : _c.length) > 1;\n    }\n  }, {\n    key: \"formatCompileError\",\n    value: function formatCompileError() {\n      var error = _objectSpread({}, this.currentIssue);\n      this.currentIssue = {};\n      this.formattingError = false;\n      return this.formatter.formatCompileError(error.fileName, error.filePath, error.reason, error.line, error.cursor);\n    }\n  }, {\n    key: \"formatCompileWarning\",\n    value: function formatCompileWarning() {\n      var warning = _objectSpread({}, this.currentIssue);\n      this.currentIssue = {};\n      this.formattingWarning = false;\n      return this.formatter.formatCompileWarning(warning.fileName, warning.filePath, warning.reason, warning.line, warning.cursor);\n    }\n  }, {\n    key: \"formatUndefinedSymbols\",\n    value: function formatUndefinedSymbols() {\n      var result = this.formatter.formatUndefinedSymbols(this.linkerFailure.message, this.linkerFailure.symbol, this.linkerFailure.reference);\n      this.resetLinkerFormatState();\n      return result;\n    }\n  }, {\n    key: \"formatDuplicateSymbols\",\n    value: function formatDuplicateSymbols() {\n      var result = this.formatter.formatDuplicateSymbols(this.linkerFailure.message, this.linkerFailure.files, !!this.linkerFailure.isWarning);\n      this.resetLinkerFormatState();\n      return result;\n    }\n  }, {\n    key: \"resetLinkerFormatState\",\n    value: function resetLinkerFormatState() {\n      this.linkerFailure = {\n        files: []\n      };\n      this.formattingLinkerFailure = false;\n    }\n  }, {\n    key: \"storeFailure\",\n    value: function storeFailure(_ref125) {\n      var file = _ref125.file,\n        testCase = _ref125.testCase,\n        testSuite = _ref125.testSuite,\n        reason = _ref125.reason;\n      if (!this.failures) {\n        this.failures = {};\n      }\n      if (!Array.isArray(this.failures[testSuite])) {\n        this.failures[testSuite] = [];\n      }\n      this.failures[testSuite].push({\n        filePath: file,\n        reason: reason,\n        testCase: testCase\n      });\n    }\n  }, {\n    key: \"formatSummaryIfNeeded\",\n    value: function formatSummaryIfNeeded(executedMessage) {\n      if (!this.shouldFormatSummary()) {\n        return '';\n      }\n      this.formattedSummary = true;\n      return this.formatter.formatTestSummary(executedMessage, this.failures);\n    }\n  }, {\n    key: \"shouldFormatSummary\",\n    value: function shouldFormatSummary() {\n      return !!this.testsDone && !this.formattedSummary;\n    }\n  }]);\n  return Parser;\n}();\nexports.Parser = Parser;","map":{"version":3,"names":["path_1","require","Matchers_1","switchRegex_1","unescaped","args","map","v","replace","Parser","formatter","_classCallCheck","formattedSummary","failures","linkerFailure","files","currentIssue","_createClass","key","value","parse","text","_this","matchedErrorResults","updateErrorState","shouldFormatWarning","formatCompileWarning","shouldFormatError","formatCompileError","matchedLinkerResults","updateLinkerFailureState","shouldFormatUndefinedSymbols","formatUndefinedSymbols","shouldFormatDuplicateSymbols","formatDuplicateSymbols","updateTestState","switchRegex","Matchers","ANALYZE_MATCHER","_ref","_ref2","_slicedToArray","$1","$2","$3","$4","formatFileOperation","type","filePath","fileName","target","project","BUILD_TARGET_MATCHER","_ref3","_ref4","formatTarget","configuration","AGGREGATE_TARGET_MATCHER","_ref5","_ref6","ANALYZE_TARGET_MATCHER","_ref7","_ref8","CLEAN_REMOVE_MATCHER","_ref9","_ref10","$0","formatCleanRemove","CLEAN_TARGET_MATCHER","_ref11","_ref12","ANY_COPY_MATCHER","_ref13","_ref14","$5","from","to","startsWith","formatCopy","CHECK_DEPENDENCIES_MATCHER","_ref15","_ref16","formatCheckDependencies","Errors","CLANG_ERROR_MATCHER","_ref17","_ref18","formatError","CODESIGN_FRAMEWORK_MATCHER","_ref19","_ref20","CODESIGN_MATCHER","_ref21","_ref22","CHECK_DEPENDENCIES_ERRORS_MATCHER","_ref23","_ref24","PROVISIONING_PROFILE_REQUIRED_MATCHER","_ref25","_ref26","NO_CERTIFICATE_MATCHER","_ref27","_ref28","COMPILE_MATCHER","_ref29","_ref30","COMPILE_COMMAND_MATCHER","_ref31","_ref32","formatCompileCommand","COMPILE_XIB_MATCHER","_ref33","_ref34","COMPILE_STORYBOARD_MATCHER","_ref35","_ref36","EXECUTED_MATCHER","formatSummaryIfNeeded","REMARK_MATCHER","_ref37","_ref38","formatRemark","COMPILE_SWIFT_SOURCES_MATCHER","_ref39","_ref40","$6","formatCompileSwiftSources","EMIT_SWIFT_MODULE_MATCHER","_ref41","_ref42","formatEmitSwiftModule","RESTARTING_TESTS_MATCHER","formatFailingTest","testSuite","testCase","UI_FAILING_TEST_MATCHER","_ref43","_ref44","FAILING_TEST_MATCHER","_ref45","_ref46","FATAL_ERROR_MATCHER","_ref47","_ref48","RSYNC_ERROR_MATCHER","_ref49","_ref50","FILE_MISSING_ERROR_MATCHER","_ref51","_ref52","formatFileMissingError","GENERATE_DSYM_MATCHER","_ref53","_ref54","Warnings","LD_WARNING_MATCHER","_ref55","_ref56","isWarning","formatLdWarning","LD_ERROR_MATCHER","_ref57","_ref58","LIBTOOL_MATCHER","_ref59","_ref60","LINKING_MATCHER","_ref61","_ref62","linkType","arch","MODULE_INCLUDES_ERROR_MATCHER","_ref63","_ref64","TEST_CASE_MEASURED_MATCHER","_ref65","_ref66","formatMeasuringTest","TEST_CASE_PENDING_MATCHER","_ref67","_ref68","formatPendingTest","TEST_CASE_PASSED_MATCHER","_ref69","_ref70","formatPassingTest","PODS_ERROR_MATCHER","_ref71","_ref72","PROCESS_INFO_PLIST_MATCHER","_ref73","_ref74","_unescaped","_unescaped2","PHASE_SCRIPT_EXECUTION_MATCHER","_ref75","_ref76","formatPhaseScriptExecution","apply","_toConsumableArray","concat","PHASE_SUCCESS_MATCHER","_ref77","_ref78","formatPhaseSuccess","PROCESS_PCH_MATCHER","_ref79","_ref80","$7","PROCESS_PCH_COMMAND_MATCHER","_ref81","_ref82","formatProcessPchCommand","PREPROCESS_MATCHER","_ref83","_ref84","formatPreprocess","TESTS_RUN_COMPLETION_MATCHER","_ref85","_ref86","formatTestRunFinished","TEST_SUITE_STARTED_MATCHER","_ref87","_ref88","formatTestRunStarted","TEST_SUITE_START_MATCHER","_ref89","_ref90","formatTestSuiteStarted","TIFFUTIL_MATCHER","_ref91","_ref92","formatTiffutil","TOUCH_MATCHER","_ref93","_ref94","basename","WRITE_FILE_MATCHER","_ref95","_ref96","formatWriteFile","WRITE_AUXILIARY_FILES","_ref97","_ref98","formatWriteAuxiliaryFiles","SHELL_COMMAND_MATCHER","_ref99","_ref100","formatShellCommand","GENERIC_WARNING_MATCHER","_ref101","_ref102","formatWarning","WILL_NOT_BE_CODE_SIGNED_MATCHER","_ref103","_ref104","formatWillNotBeCodeSigned","COMPILE_ERROR_MATCHER","_ref105","_ref106","formatSingleLineCompileIssue","COMPILE_WARNING_INLINE_MATCHER","_ref107","_ref108","formatOther","_this2","testsDone","TEST_CASE_STARTED_MATCHER","_ref109","_ref110","_ref111","_ref112","storeFailure","file","reason","_ref113","_ref114","_this3","updateError","_ref115","_ref116","results","matches","formattingError","COMPILE_WARNING_MATCHER","formattingWarning","CURSOR_MATCHER","_ref117","_ref118","cursor","line","_this4","handleLinkerFail","_ref119","_ref120","message","messageMatch","match","formattingLinkerFailure","LINKER_UNDEFINED_SYMBOLS_MATCHER","LINKER_DUPLICATE_SYMBOLS_MATCHER","SYMBOL_REFERENCED_FROM_MATCHER","_ref121","_ref122","symbol","LINKER_UNDEFINED_SYMBOL_LOCATION_MATCHER","reference","trim","LINKER_DUPLICATE_SYMBOLS_LOCATION_MATCHER","_ref123","_ref124","push","errorOrWarningIsPresent","_a","_b","_c","length","error","_objectSpread","warning","result","resetLinkerFormatState","_ref125","Array","isArray","executedMessage","shouldFormatSummary","formatTestSummary","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\xcpretty\\src\\Parser.ts"],"sourcesContent":["import { basename } from 'path';\n\nimport { Formatter } from './Formatter';\nimport { Matchers } from './Matchers';\nimport { switchRegex } from './switchRegex';\n\nexport type Failure = {\n  filePath: string;\n  testCase: string;\n  reason: string;\n};\nfunction unescaped(args: RegExpMatchArray): string[] {\n  return args.map(v => v.replace(/\\\\/g, ''));\n}\n\ninterface TestIssue {\n  reason?: string;\n  cursor?: string;\n  line?: string;\n  filePath?: string;\n  fileName?: string;\n}\n\ninterface LinkerFailure {\n  message?: string;\n  symbol?: string;\n  reference?: string;\n  files: string[];\n  isWarning?: boolean;\n}\n\nexport class Parser {\n  testSuite?: string;\n  testCase?: string;\n  testsDone?: boolean;\n  formattedSummary: boolean = false;\n\n  failures: Record<string, Failure[]> = {};\n\n  formattingLinkerFailure?: boolean;\n  formattingWarning?: boolean;\n  formattingError?: boolean;\n  linkerFailure: LinkerFailure = {\n    files: [],\n  };\n\n  currentIssue: TestIssue = {};\n\n  constructor(public formatter: Formatter) {}\n\n  public parse(text: string): void | string {\n    const matchedErrorResults = this.updateErrorState(text);\n\n    if (this.shouldFormatWarning()) {\n      return this.formatCompileWarning();\n    }\n    if (this.shouldFormatError()) {\n      return this.formatCompileError();\n    }\n    if (matchedErrorResults) {\n      return '';\n    }\n\n    const matchedLinkerResults = this.updateLinkerFailureState(text);\n\n    if (this.shouldFormatUndefinedSymbols()) {\n      return this.formatUndefinedSymbols();\n    }\n    if (this.shouldFormatDuplicateSymbols()) {\n      return this.formatDuplicateSymbols();\n    }\n\n    if (matchedLinkerResults) {\n      return '';\n    }\n\n    this.updateTestState(text);\n\n    const { formatter } = this;\n\n    return switchRegex(text, [\n      [\n        Matchers.ANALYZE_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'Analyze',\n            filePath: $1,\n            fileName: $2,\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [\n        Matchers.BUILD_TARGET_MATCHER,\n        ([, $1, $2, $3]) =>\n          formatter.formatTarget({\n            type: 'Build',\n            configuration: $3,\n            target: $1,\n            project: $2,\n          }),\n      ],\n      [\n        Matchers.AGGREGATE_TARGET_MATCHER,\n        ([, $1, $2, $3]) =>\n          formatter.formatTarget({\n            type: 'Aggregate',\n            configuration: $3,\n            target: $1,\n            project: $2,\n          }),\n      ],\n      [\n        Matchers.ANALYZE_TARGET_MATCHER,\n        ([, $1, $2, $3]) =>\n          formatter.formatTarget({\n            type: 'Analyze',\n            configuration: $3,\n            target: $1,\n            project: $2,\n          }),\n      ],\n      [Matchers.CLEAN_REMOVE_MATCHER, ([$0]) => formatter.formatCleanRemove($0)],\n      [\n        Matchers.CLEAN_TARGET_MATCHER,\n        ([, $1, $2, $3]) =>\n          formatter.formatTarget({\n            type: 'Clean',\n            configuration: $3,\n            target: $1,\n            project: $2,\n          }),\n      ],\n      [\n        Matchers.ANY_COPY_MATCHER,\n        ([, $1, $2, $3, $4, $5]) => {\n          let from = $3;\n          let to = $2;\n          // Flipped with CpResource and CpHeader\n          if ($1.startsWith('Cp')) {\n            from = $2;\n            to = $3;\n          }\n          return formatter.formatCopy({ type: $1 as any, from, to, target: $4, project: $5 });\n        },\n      ],\n      [Matchers.CHECK_DEPENDENCIES_MATCHER, ([$0]) => formatter.formatCheckDependencies($0)],\n      [Matchers.Errors.CLANG_ERROR_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.CODESIGN_FRAMEWORK_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'CodeSign',\n            fileName: $2,\n            filePath: $1,\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [\n        Matchers.CODESIGN_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'CodeSign',\n            fileName: $2,\n            filePath: $1,\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [Matchers.Errors.CHECK_DEPENDENCIES_ERRORS_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.Errors.PROVISIONING_PROFILE_REQUIRED_MATCHER,\n        ([, $1]) => formatter.formatError($1),\n      ],\n      [Matchers.Errors.NO_CERTIFICATE_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.COMPILE_MATCHER,\n        ([, $1, $2, $3, $4, $5]) =>\n          formatter.formatFileOperation({\n            type: $1 as any,\n            fileName: $3,\n            filePath: $2,\n            target: $4,\n            project: $5,\n          }),\n      ],\n      [Matchers.COMPILE_COMMAND_MATCHER, ([, $1, $2]) => formatter.formatCompileCommand($1, $2)],\n      [\n        Matchers.COMPILE_XIB_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'CompileXIB',\n            fileName: $2,\n            filePath: $1,\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [\n        Matchers.COMPILE_STORYBOARD_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'CompileStoryboard',\n            fileName: $2,\n            filePath: $1,\n            target: $3,\n            project: $4,\n          }),\n      ],\n\n      [Matchers.EXECUTED_MATCHER, () => this.formatSummaryIfNeeded(text)],\n\n      [Matchers.REMARK_MATCHER, ([, $1]) => formatter.formatRemark($1)],\n      [\n        Matchers.COMPILE_SWIFT_SOURCES_MATCHER,\n        ([, , $2, $3, $4, $5, $6]) => formatter.formatCompileSwiftSources($2, $3, $4, $5, $6),\n      ],\n      [\n        Matchers.EMIT_SWIFT_MODULE_MATCHER,\n        ([, , $2, $3, $4, $5]) => formatter.formatEmitSwiftModule($2, $3, $4, $5),\n      ],\n\n      [\n        Matchers.RESTARTING_TESTS_MATCHER,\n        () => formatter.formatFailingTest(this.testSuite!, this.testCase!, 'Test crashed', 'n/a'),\n      ],\n      [\n        Matchers.UI_FAILING_TEST_MATCHER,\n        ([, $1, $2]) => formatter.formatFailingTest(this.testSuite!, this.testCase!, $2, $1),\n      ],\n      [\n        Matchers.FAILING_TEST_MATCHER,\n        ([, $1, $2, $3, $4]) => formatter.formatFailingTest($2, $3, $4, $1),\n      ],\n      [Matchers.Errors.FATAL_ERROR_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [Matchers.Errors.RSYNC_ERROR_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.Errors.FILE_MISSING_ERROR_MATCHER,\n        ([, $1, $2]) => formatter.formatFileMissingError($1, $2),\n      ],\n      [\n        Matchers.GENERATE_DSYM_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'GenerateDSYMFile',\n            filePath: $1,\n            fileName: $2,\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [\n        Matchers.Warnings.LD_WARNING_MATCHER,\n        ([, $1, $2]) => {\n          // Skip printing ld warnings when we're collecting multiline ld duplicate symbol warnings.\n          if (this.linkerFailure.isWarning) {\n            return '';\n          }\n          return formatter.formatLdWarning($1 + $2);\n        },\n      ],\n      [Matchers.Errors.LD_ERROR_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.LIBTOOL_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'Libtool',\n            filePath: $1,\n            fileName: $2,\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [\n        Matchers.LINKING_MATCHER,\n        ([, $1, $2, $3, $4, $5, $6]) =>\n          formatter.formatFileOperation({\n            type: 'Ld',\n            filePath: $1,\n            fileName: $2,\n            linkType: $3,\n            arch: $4,\n            target: $5,\n            project: $6,\n          }),\n      ],\n      [Matchers.Errors.MODULE_INCLUDES_ERROR_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.TEST_CASE_MEASURED_MATCHER,\n        ([, $1, $2, $3]) => formatter.formatMeasuringTest($1, $2, $3),\n      ],\n      [Matchers.TEST_CASE_PENDING_MATCHER, ([, $1, $2]) => formatter.formatPendingTest($1, $2)],\n      [\n        Matchers.TEST_CASE_PASSED_MATCHER,\n        ([, $1, $2, $3]) => formatter.formatPassingTest($1, $2, $3),\n      ],\n      [Matchers.Errors.PODS_ERROR_MATCHER, ([, $1]) => formatter.formatError($1)],\n      [\n        Matchers.PROCESS_INFO_PLIST_MATCHER,\n        ([, $1, $2, $3, $4]) => {\n          const [filePath, fileName] = unescaped([$1, $2]);\n          return formatter.formatFileOperation({\n            type: 'ProcessInfoPlistFile',\n            fileName,\n            filePath,\n            target: $3,\n            project: $4,\n          });\n        },\n      ],\n      [\n        Matchers.PHASE_SCRIPT_EXECUTION_MATCHER,\n        // @ts-ignore: spread\n        ([, $1, $2, $3]) => formatter.formatPhaseScriptExecution(...unescaped([$1]), $2, $3),\n      ],\n      [Matchers.PHASE_SUCCESS_MATCHER, ([, $1, $2]) => formatter.formatPhaseSuccess($1, $2)],\n      [\n        Matchers.PROCESS_PCH_MATCHER,\n        ([\n          ,\n          // pch / gch\n          $1,\n          // filename\n          $2,\n          // extra pch\n          $3,\n          // type\n          $4,\n          // arch\n          $5,\n          $6,\n          $7,\n        ]) =>\n          formatter.formatFileOperation({\n            type: 'ProcessPCH',\n            filePath: $1,\n            fileName: $2,\n            linkType: $4,\n            arch: $5,\n            target: $6,\n            project: $7,\n          }),\n      ],\n\n      [Matchers.PROCESS_PCH_COMMAND_MATCHER, ([, $1]) => formatter.formatProcessPchCommand($1)],\n      [Matchers.PREPROCESS_MATCHER, ([, $1]) => formatter.formatPreprocess($1)],\n      [\n        Matchers.TESTS_RUN_COMPLETION_MATCHER,\n        ([, $1, , $3]) => formatter.formatTestRunFinished($1, $3),\n      ],\n      [Matchers.TEST_SUITE_STARTED_MATCHER, ([, $1]) => formatter.formatTestRunStarted($1)],\n      [Matchers.TEST_SUITE_START_MATCHER, ([, $1]) => formatter.formatTestSuiteStarted($1)],\n      [Matchers.TIFFUTIL_MATCHER, ([, $1]) => formatter.formatTiffutil($1)],\n      [\n        Matchers.TOUCH_MATCHER,\n        ([, $1, $2, $3, $4]) =>\n          formatter.formatFileOperation({\n            type: 'Touch',\n            filePath: $1,\n            // file name is undefined in newer projects\n            fileName: $2 || basename($1 || ''),\n            target: $3,\n            project: $4,\n          }),\n      ],\n      [Matchers.WRITE_FILE_MATCHER, ([, $1]) => formatter.formatWriteFile($1)],\n      [Matchers.WRITE_AUXILIARY_FILES, ([$0]) => formatter.formatWriteAuxiliaryFiles($0)],\n\n      [Matchers.SHELL_COMMAND_MATCHER, ([, $1, $2]) => formatter.formatShellCommand($1, $2)],\n      [Matchers.Warnings.GENERIC_WARNING_MATCHER, ([, $1]) => formatter.formatWarning($1)],\n      [\n        Matchers.Warnings.WILL_NOT_BE_CODE_SIGNED_MATCHER,\n        ([, $1]) => formatter.formatWillNotBeCodeSigned($1),\n      ],\n      [\n        Matchers.Errors.COMPILE_ERROR_MATCHER,\n        ([, $1, $2, $3, $4, $5]) => {\n          return formatter.formatSingleLineCompileIssue('error', $1, $2, $3, $4, $5);\n        },\n      ],\n      [\n        Matchers.Warnings.COMPILE_WARNING_INLINE_MATCHER,\n        ([, $1, $2, $3, $4, $5]) => {\n          return formatter.formatSingleLineCompileIssue('warning', $1, $2, $3, $4, $5);\n        },\n      ],\n      [null, () => formatter.formatOther(text)],\n    ]);\n  }\n\n  private updateTestState(text: string) {\n    return switchRegex(\n      text,\n      [\n        [\n          Matchers.TEST_SUITE_STARTED_MATCHER,\n          () => {\n            this.testsDone = false;\n            this.formattedSummary = false;\n            this.failures = {};\n          },\n        ],\n        [\n          Matchers.TEST_CASE_STARTED_MATCHER,\n          ([, $1, $2]) => {\n            this.testSuite = $1;\n            this.testCase = $2;\n          },\n        ],\n        [\n          Matchers.TESTS_RUN_COMPLETION_MATCHER,\n          () => {\n            this.testsDone = true;\n          },\n        ],\n        [\n          Matchers.FAILING_TEST_MATCHER,\n          ([, $1, $2, $3, $4]) =>\n            this.storeFailure({ file: $1, testSuite: $2, testCase: $3, reason: $4 }),\n        ],\n        [\n          Matchers.UI_FAILING_TEST_MATCHER,\n          ([, $1, $2]) =>\n            this.storeFailure({\n              file: $1,\n              testSuite: this.testSuite!,\n              testCase: this.testCase!,\n              reason: $2,\n            }),\n        ],\n        [\n          Matchers.RESTARTING_TESTS_MATCHER,\n          () =>\n            this.storeFailure({\n              file: 'n/a',\n              testSuite: this.testSuite!,\n              testCase: this.testCase!,\n              reason: 'Test crashed',\n            }),\n        ],\n      ],\n      true\n    );\n  }\n\n  private updateErrorState(text: string): boolean {\n    const updateError = ([, $1, $2, $3]: RegExpMatchArray) => {\n      this.currentIssue.reason = $3;\n      this.currentIssue.filePath = $1;\n      this.currentIssue.fileName = $2;\n    };\n\n    const results = switchRegex(text, [\n      [\n        Matchers.Errors.COMPILE_ERROR_MATCHER,\n        matches => {\n          // Prevent matching a one-liner error.\n          if (matches?.[4]) {\n            return 'unmatched';\n          }\n          this.formattingError = true;\n          updateError(matches);\n          return null;\n        },\n      ],\n      [\n        Matchers.Warnings.COMPILE_WARNING_MATCHER,\n        matches => {\n          // Prevent matching a one-liner warning.\n          if (matches?.[4]) {\n            return 'unmatched';\n          }\n          this.formattingWarning = true;\n          updateError(matches);\n          return null;\n        },\n      ],\n      [\n        Matchers.Errors.CURSOR_MATCHER,\n        ([, $1]) => {\n          // is trim === chomp ?\n          this.currentIssue.cursor = $1;\n        },\n      ],\n      [\n        null,\n        () => {\n          if (this.formattingError || this.formattingWarning) {\n            this.currentIssue.line = text;\n          }\n          return 'unmatched';\n        },\n      ],\n    ]);\n\n    return results !== 'unmatched';\n  }\n\n  private updateLinkerFailureState(text: string): boolean {\n    const handleLinkerFail = ([, $1]: RegExpMatchArray) => {\n      this.linkerFailure.message = $1;\n\n      // Some linker failures can be warnings...\n      const messageMatch = this.linkerFailure.message.match(/^(ld: )warning: (.*)/m);\n      if (messageMatch && messageMatch[2]) {\n        // Format like: `ld: duplicate symbol` to match other ld warnings.\n        this.linkerFailure.message = messageMatch[1] + messageMatch[2];\n        this.linkerFailure.isWarning = true;\n      }\n\n      this.formattingLinkerFailure = true;\n    };\n\n    switchRegex(text, [\n      [Matchers.Errors.LINKER_UNDEFINED_SYMBOLS_MATCHER, handleLinkerFail],\n      [Matchers.Errors.LINKER_DUPLICATE_SYMBOLS_MATCHER, handleLinkerFail],\n    ]);\n\n    if (!this.formattingLinkerFailure) {\n      return false;\n    }\n\n    const results = switchRegex(text, [\n      [\n        Matchers.Errors.SYMBOL_REFERENCED_FROM_MATCHER,\n        ([, $1]) => {\n          this.linkerFailure.symbol = $1;\n        },\n      ],\n      [\n        Matchers.Errors.LINKER_UNDEFINED_SYMBOL_LOCATION_MATCHER,\n        () => {\n          // TODO: trim === strip ?\n          this.linkerFailure.reference = text.trim();\n        },\n      ],\n      [\n        Matchers.Errors.LINKER_DUPLICATE_SYMBOLS_LOCATION_MATCHER,\n        ([, $1]) => {\n          // TODO: trim === strip ?\n          this.linkerFailure.files.push($1);\n        },\n      ],\n      [\n        null,\n        () => {\n          return 'unmatched';\n        },\n      ],\n    ]);\n    return results !== 'unmatched';\n  }\n\n  // TODO: clean up the mess around all this\n  private shouldFormatError(): boolean {\n    return !!this.formattingError && this.errorOrWarningIsPresent();\n  }\n\n  private shouldFormatWarning() {\n    return this.formattingWarning && this.errorOrWarningIsPresent();\n  }\n\n  private errorOrWarningIsPresent(): boolean {\n    return !!this.currentIssue?.reason && !!this.currentIssue?.cursor && !!this.currentIssue?.line;\n  }\n\n  private shouldFormatUndefinedSymbols() {\n    return (\n      this.linkerFailure?.message && this.linkerFailure?.symbol && this.linkerFailure?.reference\n    );\n  }\n\n  private shouldFormatDuplicateSymbols() {\n    return this.linkerFailure?.message && this.linkerFailure?.files?.length > 1;\n  }\n\n  private formatCompileError() {\n    const error = { ...this.currentIssue };\n    this.currentIssue = {};\n    this.formattingError = false;\n    return this.formatter.formatCompileError(\n      error.fileName!,\n      error.filePath!,\n      error.reason!,\n      error.line!,\n      error.cursor!\n    );\n  }\n\n  private formatCompileWarning() {\n    const warning = { ...this.currentIssue };\n    this.currentIssue = {};\n    this.formattingWarning = false;\n    return this.formatter.formatCompileWarning(\n      warning.fileName!,\n      warning.filePath!,\n      warning.reason!,\n      warning.line,\n      warning.cursor\n    );\n  }\n\n  private formatUndefinedSymbols() {\n    const result = this.formatter.formatUndefinedSymbols(\n      this.linkerFailure.message!,\n      this.linkerFailure.symbol!,\n      this.linkerFailure.reference!\n    );\n    this.resetLinkerFormatState();\n    return result;\n  }\n\n  private formatDuplicateSymbols() {\n    const result = this.formatter.formatDuplicateSymbols(\n      this.linkerFailure.message!,\n      this.linkerFailure.files,\n      !!this.linkerFailure.isWarning\n    );\n    this.resetLinkerFormatState();\n    return result;\n  }\n\n  private resetLinkerFormatState() {\n    this.linkerFailure = { files: [] };\n    this.formattingLinkerFailure = false;\n  }\n\n  private storeFailure({\n    file,\n    testCase,\n    testSuite,\n    reason,\n  }: {\n    file: string;\n    testSuite: string;\n    testCase: string;\n    reason: string;\n  }) {\n    if (!this.failures) {\n      this.failures = {};\n    }\n    if (!Array.isArray(this.failures[testSuite])) {\n      this.failures[testSuite] = [];\n    }\n\n    this.failures[testSuite].push({\n      filePath: file,\n      reason,\n      testCase,\n    });\n  }\n\n  private formatSummaryIfNeeded(executedMessage: string) {\n    if (!this.shouldFormatSummary()) {\n      return '';\n    }\n\n    this.formattedSummary = true;\n    return this.formatter.formatTestSummary(executedMessage, this.failures);\n  }\n\n  private shouldFormatSummary(): boolean {\n    return !!this.testsDone && !this.formattedSummary;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}