{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"enabled\"],\n  _excluded2 = [\"enabled\", \"active\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Screens;\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {}\nexport var MaybeScreenContainer = function MaybeScreenContainer(_ref) {\n  var enabled = _ref.enabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (Screens != null) {\n    return _jsx(Screens.ScreenContainer, _objectSpread({\n      enabled: enabled\n    }, rest));\n  }\n  return _jsx(View, _objectSpread({}, rest));\n};\nexport var MaybeScreen = function MaybeScreen(_ref2) {\n  var enabled = _ref2.enabled,\n    active = _ref2.active,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  if (Screens != null) {\n    return _jsx(Screens.Screen, _objectSpread({\n      enabled: enabled,\n      activityState: active\n    }, rest));\n  }\n  return _jsx(View, _objectSpread({}, rest));\n};","map":{"version":3,"names":["React","View","jsx","_jsx","Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_objectWithoutProperties","_excluded","ScreenContainer","_objectSpread","MaybeScreen","_ref2","active","_excluded2","Screen","activityState"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-navigation/stack/src/views/Screens.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, ViewProps } from 'react-native';\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens != null) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport const MaybeScreen = ({\n  enabled,\n  active,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: 0 | 1 | Animated.AnimatedInterpolation<0 | 1>;\n  children: React.ReactNode;\n  freezeOnBlur?: boolean;\n}) => {\n  if (Screens != null) {\n    return (\n      <Screens.Screen enabled={enabled} activityState={active} {...rest} />\n    );\n  }\n\n  return <View {...rest} />;\n};\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAG/B,IAAIC,OAA0D;AAE9D,IAAI;EACFA,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3C,CAAC,CAAC,OAAOC,CAAC,EAAE,CAEZ;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAM3B;EAAA,IALJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACJC,IAAI,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAKP,IAAIR,OAAO,IAAI,IAAI,EAAE;IACnB,OAAOD,IAAA,CAACC,OAAO,CAACS,eAAe,EAAAC,aAAA;MAACL,OAAO,EAAEA;IAAQ,GAAKC,IAAI,CAAG,CAAC;EAChE;EAEA,OAAOP,IAAA,CAACF,IAAI,EAAAa,aAAA,KAAKJ,IAAI,CAAG,CAAC;AAC3B,CAAC;AAED,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAAC,KAAA,EASlB;EAAA,IARJP,OAAO,GAAAO,KAAA,CAAPP,OAAO;IACPQ,MAAM,GAAAD,KAAA,CAANC,MAAM;IACHP,IAAI,GAAAC,wBAAA,CAAAK,KAAA,EAAAE,UAAA;EAOP,IAAId,OAAO,IAAI,IAAI,EAAE;IACnB,OACED,IAAA,CAACC,OAAO,CAACe,MAAM,EAAAL,aAAA;MAACL,OAAO,EAAEA,OAAQ;MAACW,aAAa,EAAEH;IAAO,GAAKP,IAAI,CAAG,CAAC;EAEzE;EAEA,OAAOP,IAAA,CAACF,IAAI,EAAAa,aAAA,KAAKJ,IAAI,CAAG,CAAC;AAC3B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}