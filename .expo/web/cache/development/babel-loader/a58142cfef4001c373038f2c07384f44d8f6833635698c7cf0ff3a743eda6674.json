{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createContentsJsonItem = createContentsJsonItem;\nexports.writeContentsJsonAsync = writeContentsJsonAsync;\nfunction _fsExtra() {\n  var data = _interopRequireDefault(require(\"fs-extra\"));\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = require(\"path\");\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction createContentsJsonItem(item) {\n  return item;\n}\nfunction writeContentsJsonAsync(_x, _x2) {\n  return _writeContentsJsonAsync.apply(this, arguments);\n}\nfunction _writeContentsJsonAsync() {\n  _writeContentsJsonAsync = _asyncToGenerator(function* (directory, _ref) {\n    var images = _ref.images;\n    yield _fsExtra().default.ensureDir(directory);\n    yield _fsExtra().default.writeFile((0, _path().join)(directory, 'Contents.json'), JSON.stringify({\n      images: images,\n      info: {\n        version: 1,\n        author: 'expo'\n      }\n    }, null, 2));\n  });\n  return _writeContentsJsonAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_fsExtra","data","_interopRequireDefault","require","_path","obj","__esModule","default","createContentsJsonItem","item","writeContentsJsonAsync","_x","_x2","_writeContentsJsonAsync","apply","arguments","_asyncToGenerator","directory","_ref","images","ensureDir","writeFile","join","JSON","stringify","info","version","author"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\icons\\AssetContents.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport { join } from 'path';\n\nexport type ContentsJsonImageIdiom =\n  | 'iphone'\n  | 'ipad'\n  | 'watchos'\n  | 'ios'\n  | 'ios-marketing'\n  | 'universal';\n\nexport type ContentsJsonImageAppearance = {\n  appearance: 'luminosity';\n  value: 'dark';\n};\n\nexport type ContentsJsonImageScale = '1x' | '2x' | '3x';\n\nexport interface ContentsJsonImage {\n  appearances?: ContentsJsonImageAppearance[];\n  idiom: ContentsJsonImageIdiom;\n  size?: string;\n  scale?: ContentsJsonImageScale;\n  filename?: string;\n  platform?: ContentsJsonImageIdiom;\n}\n\nexport interface ContentsJson {\n  images: ContentsJsonImage[];\n  info: {\n    version: number;\n    author: string;\n  };\n}\n\nexport function createContentsJsonItem(item: ContentsJsonImage): ContentsJsonImage {\n  return item;\n}\n\n/**\n * Writes the Config.json which is used to assign images to their respective platform, dpi, and idiom.\n *\n * @param directory path to add the Contents.json to.\n * @param contents image json data\n */\nexport async function writeContentsJsonAsync(\n  directory: string,\n  { images }: Pick<ContentsJson, 'images'>\n): Promise<void> {\n  await fs.ensureDir(directory);\n\n  await fs.writeFile(\n    join(directory, 'Contents.json'),\n    JSON.stringify(\n      {\n        images,\n        info: {\n          version: 1,\n          // common practice is for the tool that generated the icons to be the \"author\"\n          author: 'expo',\n        },\n      },\n      null,\n      2\n    )\n  );\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,SAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,QAAA,YAAAA,SAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,MAAA;EAAA,IAAAH,IAAA,GAAAE,OAAA;EAAAC,KAAA,YAAAA,MAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA4B,SAAAC,uBAAAG,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAkCrB,SAASG,sBAAsBA,CAACC,IAAuB,EAAqB;EACjF,OAAOA,IAAI;AACb;AAAA,SAQsBC,sBAAsBA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,wBAAA;EAAAA,uBAAA,GAAAG,iBAAA,CAArC,WACLC,SAAiB,EAAAC,IAAA,EAEF;IAAA,IADbC,MAAA,GAAAD,IAAA,CAAAC,MAAA;IAEF,MAAMnB,QAAA,GAAAO,OAAE,CAACa,SAAS,CAACH,SAAS,CAAC;IAE7B,MAAMjB,QAAA,GAAAO,OAAE,CAACc,SAAS,CAChB,IAAAjB,KAAA,GAAAkB,IAAI,EAACL,SAAS,EAAE,eAAe,CAAC,EAChCM,IAAI,CAACC,SAAS,CACZ;MACEL,MAAM,EAANA,MAAM;MACNM,IAAI,EAAE;QACJC,OAAO,EAAE,CAAC;QAEVC,MAAM,EAAE;MACV;IACF,CAAC,EACD,IAAI,EACJ,CAAC,CACF,CACF;EACH;EAAA,OAAAd,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}