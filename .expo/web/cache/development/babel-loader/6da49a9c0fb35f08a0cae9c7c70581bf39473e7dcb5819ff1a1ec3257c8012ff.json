{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatWebpackMessages = formatWebpackMessages;\nvar friendlySyntaxErrorLabel = \"Syntax error:\";\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\nfunction formatMessage(message1) {\n  var lines = [];\n  if (typeof message1 === \"string\") {\n    lines = message1.split(\"\\n\");\n  } else if (\"message\" in message1) {\n    lines = message1[\"message\"].split(\"\\n\");\n  } else if (Array.isArray(message1)) {\n    message1.forEach(function (message) {\n      if (\"message\" in message) {\n        lines = message[\"message\"].split(\"\\n\");\n      }\n    });\n  }\n  lines = lines.filter(function (line) {\n    return !/Module [A-z ]+\\(from/.test(line);\n  });\n  lines = lines.map(function (line) {\n    var parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);\n    if (!parsingError) {\n      return line;\n    }\n    var _parsingError = _slicedToArray(parsingError, 4),\n      errorLine = _parsingError[1],\n      errorColumn = _parsingError[2],\n      errorMessage = _parsingError[3];\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;\n  });\n  message1 = lines.join(\"\\n\");\n  message1 = message1.replace(/SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g, `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`);\n  message1 = message1.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm, `Attempted import error: '$1' is not exported from '$2'.`);\n  message1 = message1.replace(/^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, `Attempted import error: '$2' does not contain a default export (imported as '$1').`);\n  message1 = message1.replace(/^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm, `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`);\n  lines = message1.split(\"\\n\");\n  if (lines.length > 2 && lines[1].trim() === \"\") {\n    lines.splice(1, 1);\n  }\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, \"$1\");\n  if (lines[1] && lines[1].indexOf(\"Module not found: \") === 0) {\n    lines = [lines[0], lines[1].replace(\"Error: \", \"\").replace(\"Module not found: Cannot find file:\", \"Cannot find file:\")];\n  }\n  if (lines[1] && lines[1].match(/Cannot find module.+sass/)) {\n    lines[1] = \"To import Sass files, you first need to install sass.\\n\";\n    lines[1] += \"Run `npm install sass` or `yarn add sass` inside your workspace.\";\n  }\n  message1 = lines.join(\"\\n\");\n  message1 = message1.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, \"\");\n  message1 = message1.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, \"\");\n  lines = message1.split(\"\\n\");\n  lines = lines.filter(function (line, index, arr) {\n    return index === 0 || line.trim() !== \"\" || line.trim() !== arr[index - 1].trim();\n  });\n  message1 = lines.join(\"\\n\");\n  return message1.trim();\n}\nfunction formatWebpackMessages(json) {\n  var ref, ref1, ref2;\n  var formattedErrors = json == null ? void 0 : (ref = json.errors) == null ? void 0 : ref.map(formatMessage);\n  var formattedWarnings = json == null ? void 0 : (ref1 = json.warnings) == null ? void 0 : ref1.map(formatMessage);\n  var result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  };\n  if ((ref2 = result.errors) == null ? void 0 : ref2.some(isLikelyASyntaxError)) {\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n  return result;\n}","map":{"version":3,"names":["_slicedToArray","require","formatWebpackMessages","friendlySyntaxErrorLabel","isLikelyASyntaxError","message","indexOf","formatMessage","message1","lines","split","Array","isArray","forEach","filter","line","test","map","parsingError","exec","_parsingError","errorLine","errorColumn","errorMessage","join","replace","length","trim","splice","match","index","arr","json","ref","ref1","ref2","formattedErrors","errors","formattedWarnings","warnings","result","some"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\webpack\\formatWebpackMessages.ts"],"sourcesContent":["/**\n * Copyright (c) 2022 Expo, Inc.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Based on https://github.com/facebook/create-react-app/blob/b172b5e/packages/react-dev-utils/ModuleNotFoundPlugin.js\n * But with Node LTS support.\n */\n\nimport type { Stats } from 'webpack';\n\nconst friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message: string): boolean {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\n\n// Cleans up webpack error messages.\nfunction formatMessage(message: string | { message: string } | { message: string }[]) {\n  let lines: string[] = [];\n\n  if (typeof message === 'string') {\n    lines = message.split('\\n');\n  } else if ('message' in message) {\n    lines = message['message'].split('\\n');\n  } else if (Array.isArray(message)) {\n    message.forEach((message) => {\n      if ('message' in message) {\n        lines = message['message'].split('\\n');\n      }\n    });\n  }\n\n  // Strip webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n  lines = lines.filter((line) => !/Module [A-z ]+\\(from/.test(line));\n\n  // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n  lines = lines.map((line) => {\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(line);\n    if (!parsingError) {\n      return line;\n    }\n    const [, errorLine, errorColumn, errorMessage] = parsingError;\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;\n  });\n\n  message = lines.join('\\n');\n  // Smoosh syntax errors (commonly found in CSS)\n  message = message.replace(\n    /SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,\n    `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`\n  );\n  // Clean up export errors\n  message = message.replace(\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$2'.`\n  );\n  message = message.replace(\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\n  );\n  message = message.replace(\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\n  );\n  lines = message.split('\\n');\n\n  // Remove leading newline\n  if (lines.length > 2 && lines[1].trim() === '') {\n    lines.splice(1, 1);\n  }\n  // Clean up file name\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1');\n\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n    lines = [\n      lines[0],\n      lines[1]\n        .replace('Error: ', '')\n        .replace('Module not found: Cannot find file:', 'Cannot find file:'),\n    ];\n  }\n\n  // Add helpful message for users trying to use Sass for the first time\n  if (lines[1] && lines[1].match(/Cannot find module.+sass/)) {\n    lines[1] = 'To import Sass files, you first need to install sass.\\n';\n    lines[1] += 'Run `npm install sass` or `yarn add sass` inside your workspace.';\n  }\n\n  message = lines.join('\\n');\n  // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by webpack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, ''); // at ... ...:x:y\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\n  lines = message.split('\\n');\n\n  // Remove duplicated newlines\n  lines = lines.filter(\n    (line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()\n  );\n\n  // Reassemble the message\n  message = lines.join('\\n');\n  return message.trim();\n}\n\nexport function formatWebpackMessages(json?: Stats.ToJsonOutput) {\n  const formattedErrors = json?.errors?.map(formatMessage);\n  const formattedWarnings = json?.warnings?.map(formatMessage);\n  const result = { errors: formattedErrors, warnings: formattedWarnings };\n  if (result.errors?.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}