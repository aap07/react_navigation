{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _require = require(\"../../Utils\"),\n  capitalize = _require.capitalize;\nfunction toJavaType(typeAnnotation, addImport) {\n  var importNullable = function importNullable() {\n    return addImport('androidx.annotation.Nullable');\n  };\n  var importReadableMap = function importReadableMap() {\n    return addImport('com.facebook.react.bridge.ReadableMap');\n  };\n  var importArrayList = function importArrayList() {\n    return addImport('java.util.ArrayList');\n  };\n  var importYogaValue = function importYogaValue() {\n    return addImport('com.facebook.yoga.YogaValue');\n  };\n  var importDynamic = function importDynamic() {\n    return addImport('com.facebook.react.bridge.Dynamic');\n  };\n  switch (typeAnnotation.type) {\n    case 'BooleanTypeAnnotation':\n      {\n        if (typeAnnotation.default === null) {\n          importNullable();\n          return '@Nullable Boolean';\n        } else {\n          return 'boolean';\n        }\n      }\n    case 'StringTypeAnnotation':\n      {\n        importNullable();\n        return '@Nullable String';\n      }\n    case 'DoubleTypeAnnotation':\n      {\n        return 'double';\n      }\n    case 'FloatTypeAnnotation':\n      {\n        if (typeAnnotation.default === null) {\n          importNullable();\n          return '@Nullable Float';\n        } else {\n          return 'float';\n        }\n      }\n    case 'Int32TypeAnnotation':\n      {\n        return 'int';\n      }\n    case 'StringEnumTypeAnnotation':\n      importNullable();\n      return '@Nullable String';\n    case 'Int32EnumTypeAnnotation':\n      importNullable();\n      return '@Nullable Integer';\n    case 'ReservedPropTypeAnnotation':\n      {\n        switch (typeAnnotation.name) {\n          case 'ColorPrimitive':\n            importNullable();\n            return '@Nullable Integer';\n          case 'ImageSourcePrimitive':\n            importNullable();\n            importReadableMap();\n            return '@Nullable ReadableMap';\n          case 'ImageRequestPrimitive':\n            importNullable();\n            importReadableMap();\n            return '@Nullable ReadableMap';\n          case 'PointPrimitive':\n            importNullable();\n            importReadableMap();\n            return '@Nullable ReadableMap';\n          case 'EdgeInsetsPrimitive':\n            importNullable();\n            importReadableMap();\n            return '@Nullable ReadableMap';\n          case 'DimensionPrimitive':\n            importNullable();\n            importYogaValue();\n            return '@Nullable YogaValue';\n          default:\n            typeAnnotation.name;\n            throw new Error(`Received unknown ReservedPropTypeAnnotation ${typeAnnotation.name}`);\n        }\n      }\n    case 'PojoTypeAliasTypeAnnotation':\n      {\n        return typeAnnotation.name;\n      }\n    case 'ArrayTypeAnnotation':\n      {\n        var elementType = typeAnnotation.elementType;\n        var elementTypeString = function () {\n          switch (elementType.type) {\n            case 'BooleanTypeAnnotation':\n              {\n                return 'Boolean';\n              }\n            case 'StringTypeAnnotation':\n              {\n                return 'String';\n              }\n            case 'DoubleTypeAnnotation':\n              {\n                return 'Double';\n              }\n            case 'FloatTypeAnnotation':\n              {\n                return 'Float';\n              }\n            case 'Int32TypeAnnotation':\n              {\n                return 'Integer';\n              }\n            case 'StringEnumTypeAnnotation':\n              {\n                return 'String';\n              }\n            case 'PojoTypeAliasTypeAnnotation':\n              {\n                return elementType.name;\n              }\n            case 'ReservedPropTypeAnnotation':\n              {\n                switch (elementType.name) {\n                  case 'ColorPrimitive':\n                    return 'Integer';\n                  case 'ImageSourcePrimitive':\n                    importReadableMap();\n                    return 'ReadableMap';\n                  case 'ImageRequestPrimitive':\n                    importReadableMap();\n                    return 'ReadableMap';\n                  case 'PointPrimitive':\n                    importReadableMap();\n                    return 'ReadableMap';\n                  case 'EdgeInsetsPrimitive':\n                    importReadableMap();\n                    return 'ReadableMap';\n                  case 'DimensionPrimitive':\n                    importYogaValue();\n                    return 'YogaValue';\n                  default:\n                    elementType.name;\n                    throw new Error(`Received unknown ReservedPropTypeAnnotation ${elementType.name}`);\n                }\n              }\n            case 'ArrayTypeAnnotation':\n              {\n                var pojoTypeAliasTypeAnnotation = elementType.elementType;\n                importArrayList();\n                return `ArrayList<${pojoTypeAliasTypeAnnotation.name}>`;\n              }\n            default:\n              {\n                elementType.type;\n                throw new Error(`Unrecognized PojoTypeAnnotation Array element type annotation '${typeAnnotation.type}'`);\n              }\n          }\n        }();\n        importArrayList();\n        return `ArrayList<${elementTypeString}>`;\n      }\n    case 'MixedTypeAnnotation':\n      {\n        importDynamic();\n        return 'Dynamic';\n      }\n    default:\n      {\n        typeAnnotation.type;\n        throw new Error(`Unrecognized PojoTypeAnnotation '${typeAnnotation.type}'`);\n      }\n  }\n}\nfunction toJavaMemberName(property) {\n  return `m${capitalize(property.name)}`;\n}\nfunction toJavaMemberDeclaration(property, addImport) {\n  var type = toJavaType(property.typeAnnotation, addImport);\n  var memberName = toJavaMemberName(property);\n  return `private ${type} ${memberName};`;\n}\nfunction toJavaGetter(property, addImport) {\n  var type = toJavaType(property.typeAnnotation, addImport);\n  var getterName = `get${capitalize(property.name)}`;\n  var memberName = toJavaMemberName(property);\n  addImport('com.facebook.proguard.annotations.DoNotStrip');\n  return `@DoNotStrip\npublic ${type} ${getterName}() {\n  return ${memberName};\n}`;\n}\nfunction serializePojo(pojo, basePackageName) {\n  var importSet = new Set();\n  var addImport = function addImport($import) {\n    importSet.add($import);\n  };\n  addImport('com.facebook.proguard.annotations.DoNotStrip');\n  var indent = ' '.repeat(2);\n  var members = pojo.properties.map(function (property) {\n    return toJavaMemberDeclaration(property, addImport);\n  }).map(function (member) {\n    return `${indent}${member}`;\n  }).join('\\n');\n  var getters = pojo.properties.map(function (property) {\n    return toJavaGetter(property, addImport);\n  }).map(function (getter) {\n    return getter.split('\\n').map(function (line) {\n      return `${indent}${line}`;\n    }).join('\\n');\n  }).join('\\n');\n  var imports = _toConsumableArray(importSet).map(function ($import) {\n    return `import ${$import};`;\n  }).sort().join('\\n');\n  return `/**\n* Copyright (c) Meta Platforms, Inc. and affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*\n* ${'@'}generated by codegen project: GeneratePropsJavaPojo.js\n*/\n\npackage ${basePackageName}.${pojo.namespace};\n${imports === '' ? '' : `\\n${imports}\\n`}\n@DoNotStrip\npublic class ${pojo.name} {\n${members}\n${getters}\n}\n`;\n}\nmodule.exports = {\n  serializePojo: serializePojo\n};","map":{"version":3,"names":["_toConsumableArray","require","_require","capitalize","toJavaType","typeAnnotation","addImport","importNullable","importReadableMap","importArrayList","importYogaValue","importDynamic","type","default","name","Error","elementType","elementTypeString","pojoTypeAliasTypeAnnotation","toJavaMemberName","property","toJavaMemberDeclaration","memberName","toJavaGetter","getterName","serializePojo","pojo","basePackageName","importSet","Set","$import","add","indent","repeat","members","properties","map","member","join","getters","getter","split","line","imports","sort","namespace","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/components/GeneratePropsJavaPojo/serializePojo.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst _require = require('../../Utils'),\n  capitalize = _require.capitalize;\nfunction toJavaType(typeAnnotation, addImport) {\n  const importNullable = () => addImport('androidx.annotation.Nullable');\n  const importReadableMap = () =>\n    addImport('com.facebook.react.bridge.ReadableMap');\n  const importArrayList = () => addImport('java.util.ArrayList');\n  const importYogaValue = () => addImport('com.facebook.yoga.YogaValue');\n  const importDynamic = () => addImport('com.facebook.react.bridge.Dynamic');\n  switch (typeAnnotation.type) {\n    /**\n     * Primitives\n     */\n    case 'BooleanTypeAnnotation': {\n      if (typeAnnotation.default === null) {\n        importNullable();\n        return '@Nullable Boolean';\n      } else {\n        return 'boolean';\n      }\n    }\n    case 'StringTypeAnnotation': {\n      importNullable();\n      return '@Nullable String';\n    }\n    case 'DoubleTypeAnnotation': {\n      return 'double';\n    }\n    case 'FloatTypeAnnotation': {\n      if (typeAnnotation.default === null) {\n        importNullable();\n        return '@Nullable Float';\n      } else {\n        return 'float';\n      }\n    }\n    case 'Int32TypeAnnotation': {\n      return 'int';\n    }\n\n    /**\n     * Enums\n     */\n    // TODO: Make StringEnumTypeAnnotation type-safe?\n    case 'StringEnumTypeAnnotation':\n      importNullable();\n      return '@Nullable String';\n    // TODO: Make Int32EnumTypeAnnotation type-safe?\n    case 'Int32EnumTypeAnnotation':\n      importNullable();\n      return '@Nullable Integer';\n\n    /**\n     * Reserved types\n     */\n    case 'ReservedPropTypeAnnotation': {\n      switch (typeAnnotation.name) {\n        case 'ColorPrimitive':\n          importNullable();\n          return '@Nullable Integer';\n\n        // TODO: Make ImageSourcePrimitive type-safe\n        case 'ImageSourcePrimitive':\n          importNullable();\n          importReadableMap();\n          return '@Nullable ReadableMap';\n\n        // TODO: Make ImageRequestPrimitive type-safe\n        case 'ImageRequestPrimitive':\n          importNullable();\n          importReadableMap();\n          return '@Nullable ReadableMap';\n\n        // TODO: Make PointPrimitive type-safe\n        case 'PointPrimitive':\n          importNullable();\n          importReadableMap();\n          return '@Nullable ReadableMap';\n\n        // TODO: Make EdgeInsetsPrimitive type-safe\n        case 'EdgeInsetsPrimitive':\n          importNullable();\n          importReadableMap();\n          return '@Nullable ReadableMap';\n        case 'DimensionPrimitive':\n          importNullable();\n          importYogaValue();\n          return '@Nullable YogaValue';\n        default:\n          typeAnnotation.name;\n          throw new Error(\n            `Received unknown ReservedPropTypeAnnotation ${typeAnnotation.name}`,\n          );\n      }\n    }\n\n    /**\n     * Other Pojo objects\n     */\n    case 'PojoTypeAliasTypeAnnotation': {\n      return typeAnnotation.name;\n    }\n\n    /**\n     * Arrays\n     */\n    case 'ArrayTypeAnnotation': {\n      const elementType = typeAnnotation.elementType;\n      const elementTypeString = (() => {\n        switch (elementType.type) {\n          /**\n           * Primitives\n           */\n          case 'BooleanTypeAnnotation': {\n            return 'Boolean';\n          }\n          case 'StringTypeAnnotation': {\n            return 'String';\n          }\n          case 'DoubleTypeAnnotation': {\n            return 'Double';\n          }\n          case 'FloatTypeAnnotation': {\n            return 'Float';\n          }\n          case 'Int32TypeAnnotation': {\n            return 'Integer';\n          }\n\n          /**\n           * Enums\n           */\n          // TODO: Make StringEnums type-safe in Pojos\n          case 'StringEnumTypeAnnotation': {\n            return 'String';\n          }\n\n          /**\n           * Other Pojo objects\n           */\n          case 'PojoTypeAliasTypeAnnotation': {\n            return elementType.name;\n          }\n\n          /**\n           * Reserved types\n           */\n          case 'ReservedPropTypeAnnotation': {\n            switch (elementType.name) {\n              case 'ColorPrimitive':\n                return 'Integer';\n\n              // TODO: Make ImageSourcePrimitive type-safe\n              case 'ImageSourcePrimitive':\n                importReadableMap();\n                return 'ReadableMap';\n\n              // TODO: Make ImageRequestPrimitive type-safe\n              case 'ImageRequestPrimitive':\n                importReadableMap();\n                return 'ReadableMap';\n\n              // TODO: Make PointPrimitive type-safe\n              case 'PointPrimitive':\n                importReadableMap();\n                return 'ReadableMap';\n\n              // TODO: Make EdgeInsetsPrimitive type-safe\n              case 'EdgeInsetsPrimitive':\n                importReadableMap();\n                return 'ReadableMap';\n              case 'DimensionPrimitive':\n                importYogaValue();\n                return 'YogaValue';\n              default:\n                elementType.name;\n                throw new Error(\n                  `Received unknown ReservedPropTypeAnnotation ${elementType.name}`,\n                );\n            }\n          }\n\n          // Arrays\n          case 'ArrayTypeAnnotation': {\n            const pojoTypeAliasTypeAnnotation = elementType.elementType;\n            importArrayList();\n            return `ArrayList<${pojoTypeAliasTypeAnnotation.name}>`;\n          }\n          default: {\n            elementType.type;\n            throw new Error(\n              `Unrecognized PojoTypeAnnotation Array element type annotation '${typeAnnotation.type}'`,\n            );\n          }\n        }\n      })();\n      importArrayList();\n      return `ArrayList<${elementTypeString}>`;\n    }\n    case 'MixedTypeAnnotation': {\n      importDynamic();\n      return 'Dynamic';\n    }\n    default: {\n      typeAnnotation.type;\n      throw new Error(\n        `Unrecognized PojoTypeAnnotation '${typeAnnotation.type}'`,\n      );\n    }\n  }\n}\nfunction toJavaMemberName(property) {\n  return `m${capitalize(property.name)}`;\n}\nfunction toJavaMemberDeclaration(property, addImport) {\n  const type = toJavaType(property.typeAnnotation, addImport);\n  const memberName = toJavaMemberName(property);\n  return `private ${type} ${memberName};`;\n}\nfunction toJavaGetter(property, addImport) {\n  const type = toJavaType(property.typeAnnotation, addImport);\n  const getterName = `get${capitalize(property.name)}`;\n  const memberName = toJavaMemberName(property);\n  addImport('com.facebook.proguard.annotations.DoNotStrip');\n  return `@DoNotStrip\npublic ${type} ${getterName}() {\n  return ${memberName};\n}`;\n}\nfunction serializePojo(pojo, basePackageName) {\n  const importSet = new Set();\n  const addImport = $import => {\n    importSet.add($import);\n  };\n  addImport('com.facebook.proguard.annotations.DoNotStrip');\n  const indent = ' '.repeat(2);\n  const members = pojo.properties\n    .map(property => toJavaMemberDeclaration(property, addImport))\n    .map(member => `${indent}${member}`)\n    .join('\\n');\n  const getters = pojo.properties\n    .map(property => toJavaGetter(property, addImport))\n    .map(getter =>\n      getter\n        .split('\\n')\n        .map(line => `${indent}${line}`)\n        .join('\\n'),\n    )\n    .join('\\n');\n  const imports = [...importSet]\n    .map($import => `import ${$import};`)\n    .sort()\n    .join('\\n');\n  return `/**\n* Copyright (c) Meta Platforms, Inc. and affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*\n* ${'@'}generated by codegen project: GeneratePropsJavaPojo.js\n*/\n\npackage ${basePackageName}.${pojo.namespace};\n${imports === '' ? '' : `\\n${imports}\\n`}\n@DoNotStrip\npublic class ${pojo.name} {\n${members}\n${getters}\n}\n`;\n}\nmodule.exports = {\n  serializePojo,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}