{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsePlistAsync = parsePlistAsync;\nexports.parsePlistBuffer = parsePlistBuffer;\nvar _plist = _interopRequireDefault(require(\"@expo/plist\"));\nvar _bplistParser = _interopRequireDefault(require(\"bplist-parser\"));\nvar _promises = _interopRequireDefault(require(\"fs/promises\"));\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar CHAR_CHEVRON_OPEN = 60;\nvar CHAR_B_LOWER = 98;\nfunction parsePlistAsync(_x) {\n  return _parsePlistAsync.apply(this, arguments);\n}\nfunction _parsePlistAsync() {\n  _parsePlistAsync = _asyncToGenerator(function* (plistPath) {\n    Log.debug(`Parse plist: ${plistPath}`);\n    return parsePlistBuffer(yield _promises.default.readFile(plistPath));\n  });\n  return _parsePlistAsync.apply(this, arguments);\n}\nfunction parsePlistBuffer(contents) {\n  if (contents[0] === CHAR_CHEVRON_OPEN) {\n    var info = _plist.default.parse(contents.toString());\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else if (contents[0] === CHAR_B_LOWER) {\n    var _info = _bplistParser.default.parseBuffer(contents);\n    if (Array.isArray(_info)) return _info[0];\n    return _info;\n  } else {\n    throw new _errors.CommandError(\"PLIST\", `Cannot parse plist of type byte (0x${contents[0].toString(16)})`);\n  }\n}","map":{"version":3,"names":["_asyncToGenerator","require","parsePlistAsync","parsePlistBuffer","_plist","_interopRequireDefault","_bplistParser","_promises","Log","_interopRequireWildcard","_errors","CHAR_CHEVRON_OPEN","CHAR_B_LOWER","_x","_parsePlistAsync","apply","arguments","plistPath","debug","default","readFile","contents","info","parse","toString","Array","isArray","parseBuffer","CommandError"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\plist.ts"],"sourcesContent":["import plist from '@expo/plist';\nimport binaryPlist from 'bplist-parser';\nimport fs from 'fs/promises';\n\nimport * as Log from '../log';\nimport { CommandError } from './errors';\n\nconst CHAR_CHEVRON_OPEN = 60;\nconst CHAR_B_LOWER = 98;\n// .mobileprovision\n// const CHAR_ZERO = 30;\n\nexport async function parsePlistAsync(plistPath: string) {\n  Log.debug(`Parse plist: ${plistPath}`);\n\n  return parsePlistBuffer(await fs.readFile(plistPath));\n}\n\nexport function parsePlistBuffer(contents: Buffer) {\n  if (contents[0] === CHAR_CHEVRON_OPEN) {\n    const info = plist.parse(contents.toString());\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else if (contents[0] === CHAR_B_LOWER) {\n    // @ts-expect-error\n    const info = binaryPlist.parseBuffer(contents);\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else {\n    throw new CommandError(\n      'PLIST',\n      `Cannot parse plist of type byte (0x${contents[0].toString(16)})`\n    );\n  }\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAYsBC,eAAe,GAAfA,eAAe;QAMrBC,gBAAgB,GAAhBA,gBAAgB;AAlBd,IAAAC,MAAa,GAAAC,sBAAA,CAAAJ,OAAA,CAAb,aAAa;AACP,IAAAK,aAAe,GAAAD,sBAAA,CAAAJ,OAAA,CAAf,eAAe;AACxB,IAAAM,SAAa,GAAAF,sBAAA,CAAAJ,OAAA,CAAb,aAAa;AAEhB,IAAAO,GAAG,GAAAC,uBAAA,CAAAR,OAAA,SAAc,EAAd;AACc,IAAAS,OAAU,GAAAT,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvC,IAAMU,iBAAiB,GAAG,EAAE;AAC5B,IAAMC,YAAY,GAAG,EAAE;AAAC,SAIFV,eAAeA,CAAAW,EAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAd,iBAAA,CAA9B,WAA+BiB,SAAiB,EAAE;IACvDT,GAAG,CAACU,KAAK,CAAE,gBAAeD,SAAU,EAAC,CAAC;IAEtC,OAAOd,gBAAgB,OAAOI,SAAE,CAAAY,OAAA,CAACC,QAAQ,CAACH,SAAS,CAAC,CAAC;GACtD;EAAA,OAAAH,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAEM,SAASb,gBAAgBA,CAACkB,QAAgB,EAAE;EACjD,IAAIA,QAAQ,CAAC,CAAC,CAAC,KAAKV,iBAAiB,EAAE;IACrC,IAAMW,IAAI,GAAGlB,MAAK,CAAAe,OAAA,CAACI,KAAK,CAACF,QAAQ,CAACG,QAAQ,EAAE,CAAC;IAC7C,IAAIC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,EAAE,OAAOA,IAAI,CAAC,CAAC,CAAC;IACvC,OAAOA,IAAI;GACZ,MAAM,IAAID,QAAQ,CAAC,CAAC,CAAC,KAAKT,YAAY,EAAE;IAEvC,IAAMU,KAAI,GAAGhB,aAAW,CAAAa,OAAA,CAACQ,WAAW,CAACN,QAAQ,CAAC;IAC9C,IAAII,KAAK,CAACC,OAAO,CAACJ,KAAI,CAAC,EAAE,OAAOA,KAAI,CAAC,CAAC,CAAC;IACvC,OAAOA,KAAI;GACZ,MAAM;IACL,MAAM,IAAIZ,OAAY,CAAAkB,YAAA,CACpB,OAAO,EACN,sCAAqCP,QAAQ,CAAC,CAAC,CAAC,CAACG,QAAQ,CAAC,EAAE,CAAE,GAAE,CAClE"},"metadata":{},"sourceType":"script","externalDependencies":[]}