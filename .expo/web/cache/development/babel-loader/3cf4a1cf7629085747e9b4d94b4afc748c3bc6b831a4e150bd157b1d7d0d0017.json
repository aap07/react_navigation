{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findProjectRoot;\nfunction _findUp() {\n  var data = _interopRequireDefault(require(\"find-up\"));\n  _findUp = function _findUp() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction findProjectRoot() {\n  var cwd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : process.cwd();\n  var packageLocation = _findUp().default.sync('package.json', {\n    cwd: cwd\n  });\n  if (!packageLocation) {\n    throw new _errors.CLIError(`\n      We couldn't find a package.json in your project.\n      Are you sure you are running it inside a React Native project?\n    `);\n  }\n  return _path().default.dirname(packageLocation);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","findProjectRoot","_findUp","data","_interopRequireDefault","require","_path","_errors","obj","__esModule","cwd","arguments","length","undefined","process","packageLocation","sync","CLIError","dirname"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-tools/build/findProjectRoot.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = findProjectRoot;\nfunction _findUp() {\n  const data = _interopRequireDefault(require(\"find-up\"));\n  _findUp = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Finds project root by looking for a closest `package.json`.\n */\nfunction findProjectRoot(cwd = process.cwd()) {\n  const packageLocation = _findUp().default.sync('package.json', {\n    cwd\n  });\n  /**\n   * It is possible that `package.json` doesn't exist\n   * in the tree. In that case, we want to throw an error.\n   *\n   * When executing via `npx`, this will never happen as `npm`\n   * requires that file to be present in order to run.\n   */\n  if (!packageLocation) {\n    throw new _errors.CLIError(`\n      We couldn't find a package.json in your project.\n      Are you sure you are running it inside a React Native project?\n    `);\n  }\n  return _path().default.dirname(packageLocation);\n}\n\n//# sourceMappingURL=findProjectRoot.ts.map"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,eAAe;AACjC,SAASC,OAAOA,CAAA,EAAG;EACjB,IAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC;EACvDH,OAAO,GAAG,SAAAA,QAAA,EAAY;IACpB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASG,KAAKA,CAAA,EAAG;EACf,IAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACpDC,KAAK,GAAG,SAAAA,MAAA,EAAY;IAClB,OAAOH,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,IAAII,OAAO,GAAGF,OAAO,WAAW,CAAC;AACjC,SAASD,sBAAsBA,CAACI,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAER,OAAO,EAAEQ;EAAI,CAAC;AAAE;AAI9F,SAASP,eAAeA,CAAA,EAAsB;EAAA,IAArBS,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,OAAO,CAACJ,GAAG,CAAC,CAAC;EAC1C,IAAMK,eAAe,GAAGb,OAAO,CAAC,CAAC,CAACF,OAAO,CAACgB,IAAI,CAAC,cAAc,EAAE;IAC7DN,GAAG,EAAHA;EACF,CAAC,CAAC;EAQF,IAAI,CAACK,eAAe,EAAE;IACpB,MAAM,IAAIR,OAAO,CAACU,QAAQ,CAAE;AAChC;AACA;AACA,KAAK,CAAC;EACJ;EACA,OAAOX,KAAK,CAAC,CAAC,CAACN,OAAO,CAACkB,OAAO,CAACH,eAAe,CAAC;AACjD"},"metadata":{},"sourceType":"script","externalDependencies":[]}