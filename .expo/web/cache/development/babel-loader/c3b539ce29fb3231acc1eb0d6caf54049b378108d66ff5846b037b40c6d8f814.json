{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBranchApiKey = getBranchApiKey;\nexports.setBranchApiKey = setBranchApiKey;\nexports.withAndroidBranch = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nvar _configPlugins$Androi = _configPlugins().AndroidConfig.Manifest,\n  addMetaDataItemToMainApplication = _configPlugins$Androi.addMetaDataItemToMainApplication,\n  getMainApplicationOrThrow = _configPlugins$Androi.getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication = _configPlugins$Androi.removeMetaDataItemFromMainApplication;\nvar META_BRANCH_KEY = 'io.branch.sdk.BranchKey';\nvar withAndroidBranch = function withAndroidBranch(config) {\n  return (0, _configPlugins().withAndroidManifest)(config, function (config) {\n    config.modResults = setBranchApiKey(config, config.modResults);\n    return config;\n  });\n};\nexports.withAndroidBranch = withAndroidBranch;\nfunction getBranchApiKey(config) {\n  var _config$android$confi, _config$android, _config$android$confi2, _config$android$confi3;\n  return (_config$android$confi = (_config$android = config.android) === null || _config$android === void 0 ? void 0 : (_config$android$confi2 = _config$android.config) === null || _config$android$confi2 === void 0 ? void 0 : (_config$android$confi3 = _config$android$confi2.branch) === null || _config$android$confi3 === void 0 ? void 0 : _config$android$confi3.apiKey) !== null && _config$android$confi !== void 0 ? _config$android$confi : null;\n}\nfunction setBranchApiKey(config, androidManifest) {\n  var apiKey = getBranchApiKey(config);\n  var mainApplication = getMainApplicationOrThrow(androidManifest);\n  if (apiKey) {\n    addMetaDataItemToMainApplication(mainApplication, META_BRANCH_KEY, apiKey);\n  } else {\n    removeMetaDataItemFromMainApplication(mainApplication, META_BRANCH_KEY);\n  }\n  return androidManifest;\n}","map":{"version":3,"names":["_configPlugins","data","require","_configPlugins$Androi","AndroidConfig","Manifest","addMetaDataItemToMainApplication","getMainApplicationOrThrow","removeMetaDataItemFromMainApplication","META_BRANCH_KEY","withAndroidBranch","config","withAndroidManifest","modResults","setBranchApiKey","exports","getBranchApiKey","_config$android$confi","_config$android","_config$android$confi2","_config$android$confi3","android","branch","apiKey","androidManifest","mainApplication"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-branch\\withAndroidBranch.ts"],"sourcesContent":["import { AndroidConfig, ConfigPlugin, withAndroidManifest } from '@expo/config-plugins';\nimport { ExpoConfig } from '@expo/config-types';\n\nconst {\n  addMetaDataItemToMainApplication,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n} = AndroidConfig.Manifest;\n\nconst META_BRANCH_KEY = 'io.branch.sdk.BranchKey';\n\nexport const withAndroidBranch: ConfigPlugin = (config) => {\n  return withAndroidManifest(config, (config) => {\n    config.modResults = setBranchApiKey(config, config.modResults);\n    return config;\n  });\n};\n\nexport function getBranchApiKey(config: ExpoConfig) {\n  return config.android?.config?.branch?.apiKey ?? null;\n}\n\nexport function setBranchApiKey(\n  config: ExpoConfig,\n  androidManifest: AndroidConfig.Manifest.AndroidManifest\n) {\n  const apiKey = getBranchApiKey(config);\n\n  const mainApplication = getMainApplicationOrThrow(androidManifest);\n\n  if (apiKey) {\n    // If the item exists, add it back\n    addMetaDataItemToMainApplication(mainApplication, META_BRANCH_KEY, apiKey);\n  } else {\n    // Remove any existing item\n    removeMetaDataItemFromMainApplication(mainApplication, META_BRANCH_KEY);\n  }\n  return androidManifest;\n}\n"],"mappings":";;;;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAGA,IAAAE,qBAAA,GAIIH,cAAA,GAAAI,aAAa,CAACC,QAAQ;EAHxBC,gCAAgC,GAAAH,qBAAA,CAAhCG,gCAAgC;EAChCC,yBAAyB,GAAAJ,qBAAA,CAAzBI,yBAAyB;EACzBC,qCAAA,GAAAL,qBAAA,CAAAK,qCAAA;AAGF,IAAMC,eAAe,GAAG,yBAAyB;AAE1C,IAAMC,iBAA+B,GAAI,SAAnCA,iBAA+BA,CAAIC,MAAM,EAAK;EACzD,OAAO,IAAAX,cAAA,GAAAY,mBAAmB,EAACD,MAAM,EAAG,UAAAA,MAAM,EAAK;IAC7CA,MAAM,CAACE,UAAU,GAAGC,eAAe,CAACH,MAAM,EAAEA,MAAM,CAACE,UAAU,CAAC;IAC9D,OAAOF,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACI,OAAA,CAAAL,iBAAA,GAAAA,iBAAA;AAEK,SAASM,eAAeA,CAACL,MAAkB,EAAE;EAAA,IAAAM,qBAAA,EAAAC,eAAA,EAAAC,sBAAA,EAAAC,sBAAA;EAClD,QAAAH,qBAAA,IAAAC,eAAA,GAAOP,MAAM,CAACU,OAAO,cAAAH,eAAA,wBAAAC,sBAAA,GAAdD,eAAA,CAAgBP,MAAM,cAAAQ,sBAAA,wBAAAC,sBAAA,GAAtBD,sBAAA,CAAwBG,MAAM,cAAAF,sBAAA,uBAA9BA,sBAAA,CAAgCG,MAAM,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,IAAI;AACvD;AAEO,SAASH,eAAeA,CAC7BH,MAAkB,EAClBa,eAAuD,EACvD;EACA,IAAMD,MAAM,GAAGP,eAAe,CAACL,MAAM,CAAC;EAEtC,IAAMc,eAAe,GAAGlB,yBAAyB,CAACiB,eAAe,CAAC;EAElE,IAAID,MAAM,EAAE;IAEVjB,gCAAgC,CAACmB,eAAe,EAAEhB,eAAe,EAAEc,MAAM,CAAC;EAC5E,CAAC,MAAM;IAELf,qCAAqC,CAACiB,eAAe,EAAEhB,eAAe,CAAC;EACzE;EACA,OAAOe,eAAe;AACxB"},"metadata":{},"sourceType":"script","externalDependencies":[]}