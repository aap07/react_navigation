{"ast":null,"code":"'use strict';\n\nvar ModuleTemplate = function ModuleTemplate(_ref) {\n  var hasteModuleName = _ref.hasteModuleName,\n    structs = _ref.structs,\n    methodSerializationOutputs = _ref.methodSerializationOutputs;\n  return `${structs.map(function (struct) {\n    return RCTCxxConvertCategoryTemplate({\n      hasteModuleName: hasteModuleName,\n      structName: struct.name\n    });\n  }).join('\\n')}\nnamespace facebook {\n  namespace react {\n    ${methodSerializationOutputs.map(function (serializedMethodParts) {\n    return InlineHostFunctionTemplate({\n      hasteModuleName: hasteModuleName,\n      methodName: serializedMethodParts.methodName,\n      returnJSType: serializedMethodParts.returnJSType,\n      selector: serializedMethodParts.selector\n    });\n  }).join('\\n')}\n\n    ${hasteModuleName}SpecJSI::${hasteModuleName}SpecJSI(const ObjCTurboModule::InitParams &params)\n      : ObjCTurboModule(params) {\n        ${methodSerializationOutputs.map(function (_ref2) {\n    var methodName = _ref2.methodName,\n      structParamRecords = _ref2.structParamRecords,\n      argCount = _ref2.argCount;\n    return MethodMapEntryTemplate({\n      hasteModuleName: hasteModuleName,\n      methodName: methodName,\n      structParamRecords: structParamRecords,\n      argCount: argCount\n    });\n  }).join('\\n' + ' '.repeat(8))}\n    }\n  } // namespace react\n} // namespace facebook`;\n};\nvar RCTCxxConvertCategoryTemplate = function RCTCxxConvertCategoryTemplate(_ref3) {\n  var hasteModuleName = _ref3.hasteModuleName,\n    structName = _ref3.structName;\n  return `@implementation RCTCxxConvert (${hasteModuleName}_${structName})\n+ (RCTManagedPointer *)JS_${hasteModuleName}_${structName}:(id)json\n{\n  return facebook::react::managedPointer<JS::${hasteModuleName}::${structName}>(json);\n}\n@end`;\n};\nvar InlineHostFunctionTemplate = function InlineHostFunctionTemplate(_ref4) {\n  var hasteModuleName = _ref4.hasteModuleName,\n    methodName = _ref4.methodName,\n    returnJSType = _ref4.returnJSType,\n    selector = _ref4.selector;\n  return `\n    static facebook::jsi::Value __hostFunction_${hasteModuleName}SpecJSI_${methodName}(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {\n      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ${returnJSType}, \"${methodName}\", ${selector}, args, count);\n    }`;\n};\nvar MethodMapEntryTemplate = function MethodMapEntryTemplate(_ref5) {\n  var hasteModuleName = _ref5.hasteModuleName,\n    methodName = _ref5.methodName,\n    structParamRecords = _ref5.structParamRecords,\n    argCount = _ref5.argCount;\n  return `\n        methodMap_[\"${methodName}\"] = MethodMetadata {${argCount}, __hostFunction_${hasteModuleName}SpecJSI_${methodName}};\n        ${structParamRecords.map(function (_ref6) {\n    var paramIndex = _ref6.paramIndex,\n      structName = _ref6.structName;\n    return `setMethodArgConversionSelector(@\"${methodName}\", ${paramIndex}, @\"JS_${hasteModuleName}_${structName}:\");`;\n  }).join('\\n' + ' '.repeat(8))}`;\n};\nfunction serializeModuleSource(hasteModuleName, structs, methodSerializationOutputs) {\n  return ModuleTemplate({\n    hasteModuleName: hasteModuleName,\n    structs: structs.filter(function (_ref7) {\n      var context = _ref7.context;\n      return context !== 'CONSTANTS';\n    }),\n    methodSerializationOutputs: methodSerializationOutputs\n  });\n}\nmodule.exports = {\n  serializeModuleSource: serializeModuleSource\n};","map":{"version":3,"names":["ModuleTemplate","_ref","hasteModuleName","structs","methodSerializationOutputs","map","struct","RCTCxxConvertCategoryTemplate","structName","name","join","serializedMethodParts","InlineHostFunctionTemplate","methodName","returnJSType","selector","_ref2","structParamRecords","argCount","MethodMapEntryTemplate","repeat","_ref3","_ref4","_ref5","_ref6","paramIndex","serializeModuleSource","filter","_ref7","context","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/generators/modules/GenerateModuleObjCpp/source/serializeModule.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n */\n\n'use strict';\n\nconst ModuleTemplate = ({\n  hasteModuleName,\n  structs,\n  methodSerializationOutputs,\n}) => `${structs\n  .map(struct =>\n    RCTCxxConvertCategoryTemplate({\n      hasteModuleName,\n      structName: struct.name,\n    }),\n  )\n  .join('\\n')}\nnamespace facebook {\n  namespace react {\n    ${methodSerializationOutputs\n      .map(serializedMethodParts =>\n        InlineHostFunctionTemplate({\n          hasteModuleName,\n          methodName: serializedMethodParts.methodName,\n          returnJSType: serializedMethodParts.returnJSType,\n          selector: serializedMethodParts.selector,\n        }),\n      )\n      .join('\\n')}\n\n    ${hasteModuleName}SpecJSI::${hasteModuleName}SpecJSI(const ObjCTurboModule::InitParams &params)\n      : ObjCTurboModule(params) {\n        ${methodSerializationOutputs\n          .map(({methodName, structParamRecords, argCount}) =>\n            MethodMapEntryTemplate({\n              hasteModuleName,\n              methodName,\n              structParamRecords,\n              argCount,\n            }),\n          )\n          .join('\\n' + ' '.repeat(8))}\n    }\n  } // namespace react\n} // namespace facebook`;\nconst RCTCxxConvertCategoryTemplate = ({\n  hasteModuleName,\n  structName,\n}) => `@implementation RCTCxxConvert (${hasteModuleName}_${structName})\n+ (RCTManagedPointer *)JS_${hasteModuleName}_${structName}:(id)json\n{\n  return facebook::react::managedPointer<JS::${hasteModuleName}::${structName}>(json);\n}\n@end`;\nconst InlineHostFunctionTemplate = ({\n  hasteModuleName,\n  methodName,\n  returnJSType,\n  selector,\n}) => `\n    static facebook::jsi::Value __hostFunction_${hasteModuleName}SpecJSI_${methodName}(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {\n      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ${returnJSType}, \"${methodName}\", ${selector}, args, count);\n    }`;\nconst MethodMapEntryTemplate = ({\n  hasteModuleName,\n  methodName,\n  structParamRecords,\n  argCount,\n}) => `\n        methodMap_[\"${methodName}\"] = MethodMetadata {${argCount}, __hostFunction_${hasteModuleName}SpecJSI_${methodName}};\n        ${structParamRecords\n          .map(({paramIndex, structName}) => {\n            return `setMethodArgConversionSelector(@\"${methodName}\", ${paramIndex}, @\"JS_${hasteModuleName}_${structName}:\");`;\n          })\n          .join('\\n' + ' '.repeat(8))}`;\nfunction serializeModuleSource(\n  hasteModuleName,\n  structs,\n  methodSerializationOutputs,\n) {\n  return ModuleTemplate({\n    hasteModuleName,\n    structs: structs.filter(({context}) => context !== 'CONSTANTS'),\n    methodSerializationOutputs,\n  });\n}\nmodule.exports = {\n  serializeModuleSource,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}