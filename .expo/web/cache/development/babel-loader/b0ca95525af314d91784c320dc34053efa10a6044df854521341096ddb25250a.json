{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { ContinousBaseGesture } from \"./gesture\";\nfunction changeEventCalculator(current, previous) {\n  'worklet';\n\n  var changePayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY\n    };\n  }\n  return _objectSpread(_objectSpread({}, current), changePayload);\n}\nexport var PanGesture = function (_ContinousBaseGesture) {\n  _inherits(PanGesture, _ContinousBaseGesture);\n  var _super = _createSuper(PanGesture);\n  function PanGesture() {\n    var _this;\n    _classCallCheck(this, PanGesture);\n    _this = _super.call(this);\n    _this.config = {};\n    _this.handlerName = 'PanGestureHandler';\n    return _this;\n  }\n  _createClass(PanGesture, [{\n    key: \"activeOffsetY\",\n    value: function activeOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetYStart = offset[0];\n        this.config.activeOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetYStart = offset;\n      } else {\n        this.config.activeOffsetYEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"activeOffsetX\",\n    value: function activeOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.activeOffsetXStart = offset[0];\n        this.config.activeOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.activeOffsetXStart = offset;\n      } else {\n        this.config.activeOffsetXEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"failOffsetY\",\n    value: function failOffsetY(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetYStart = offset[0];\n        this.config.failOffsetYEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetYStart = offset;\n      } else {\n        this.config.failOffsetYEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"failOffsetX\",\n    value: function failOffsetX(offset) {\n      if (Array.isArray(offset)) {\n        this.config.failOffsetXStart = offset[0];\n        this.config.failOffsetXEnd = offset[1];\n      } else if (offset < 0) {\n        this.config.failOffsetXStart = offset;\n      } else {\n        this.config.failOffsetXEnd = offset;\n      }\n      return this;\n    }\n  }, {\n    key: \"minPointers\",\n    value: function minPointers(_minPointers) {\n      this.config.minPointers = _minPointers;\n      return this;\n    }\n  }, {\n    key: \"maxPointers\",\n    value: function maxPointers(_maxPointers) {\n      this.config.maxPointers = _maxPointers;\n      return this;\n    }\n  }, {\n    key: \"minDistance\",\n    value: function minDistance(distance) {\n      this.config.minDist = distance;\n      return this;\n    }\n  }, {\n    key: \"minVelocity\",\n    value: function minVelocity(velocity) {\n      this.config.minVelocity = velocity;\n      return this;\n    }\n  }, {\n    key: \"minVelocityX\",\n    value: function minVelocityX(velocity) {\n      this.config.minVelocityX = velocity;\n      return this;\n    }\n  }, {\n    key: \"minVelocityY\",\n    value: function minVelocityY(velocity) {\n      this.config.minVelocityY = velocity;\n      return this;\n    }\n  }, {\n    key: \"averageTouches\",\n    value: function averageTouches(value) {\n      this.config.avgTouches = value;\n      return this;\n    }\n  }, {\n    key: \"enableTrackpadTwoFingerGesture\",\n    value: function enableTrackpadTwoFingerGesture(value) {\n      this.config.enableTrackpadTwoFingerGesture = value;\n      return this;\n    }\n  }, {\n    key: \"activateAfterLongPress\",\n    value: function activateAfterLongPress(duration) {\n      this.config.activateAfterLongPress = duration;\n      return this;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(PanGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return PanGesture;\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","previous","changePayload","undefined","changeX","translationX","changeY","translationY","_objectSpread","PanGesture","_ContinousBaseGesture","_inherits","_super","_createSuper","_this","_classCallCheck","call","config","handlerName","_createClass","key","value","activeOffsetY","offset","Array","isArray","activeOffsetYStart","activeOffsetYEnd","activeOffsetX","activeOffsetXStart","activeOffsetXEnd","failOffsetY","failOffsetYStart","failOffsetYEnd","failOffsetX","failOffsetXStart","failOffsetXEnd","minPointers","maxPointers","minDistance","distance","minDist","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","avgTouches","enableTrackpadTwoFingerGesture","activateAfterLongPress","duration","onChange","callback","handlers","_get","_getPrototypeOf","prototype"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/handlers/gestures/panGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport {\n  PanGestureConfig,\n  PanGestureHandlerEventPayload,\n} from '../PanGestureHandler';\n\nexport type PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<PanGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: PanGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      changeX: current.translationX,\n      changeY: current.translationY,\n    };\n  } else {\n    changePayload = {\n      changeX: current.translationX - previous.translationX,\n      changeY: current.translationY - previous.translationY,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class PanGesture extends ContinousBaseGesture<\n  PanGestureHandlerEventPayload,\n  PanGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  activeOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  activeOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetY(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  failOffsetX(offset: number | number[]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  activateAfterLongPress(duration: number) {\n    this.config.activateAfterLongPress = duration;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        PanGestureHandlerEventPayload & PanGestureChangeEventPayload\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type PanGestureType = InstanceType<typeof PanGesture>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}