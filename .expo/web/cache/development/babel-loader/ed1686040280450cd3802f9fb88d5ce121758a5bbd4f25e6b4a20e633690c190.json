{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findLibraryName = findLibraryName;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction findLibraryName(root, sourceDir) {\n  var packageJsonPath = _path().default.join(root, 'package.json');\n  var buildGradlePath = _path().default.join(sourceDir, 'build.gradle');\n  var buildGradleKtsPath = _path().default.join(sourceDir, 'build.gradle.kts');\n  if (_fs().default.existsSync(packageJsonPath)) {\n    var _packageJson$codegenC;\n    var packageJson = JSON.parse(_fs().default.readFileSync(packageJsonPath, 'utf8'));\n    if ((_packageJson$codegenC = packageJson.codegenConfig) === null || _packageJson$codegenC === void 0 ? void 0 : _packageJson$codegenC.name) {\n      return packageJson.codegenConfig.name;\n    }\n  }\n  var buildGradleContents = '';\n  if (_fs().default.existsSync(buildGradlePath)) {\n    buildGradleContents = _fs().default.readFileSync(buildGradlePath, 'utf-8');\n  } else if (_fs().default.existsSync(buildGradleKtsPath)) {\n    buildGradleContents = _fs().default.readFileSync(buildGradleKtsPath, 'utf-8');\n  } else {\n    return undefined;\n  }\n  var match = buildGradleContents.match(/libraryName = [\"'](.+)[\"']/);\n  if (match) {\n    return match[1];\n  } else {\n    return undefined;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","findLibraryName","_fs","data","_interopRequireDefault","require","_path","obj","__esModule","default","root","sourceDir","packageJsonPath","join","buildGradlePath","buildGradleKtsPath","existsSync","_packageJson$codegenC","packageJson","JSON","parse","readFileSync","codegenConfig","name","buildGradleContents","undefined","match"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-platform-android/build/config/findLibraryName.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findLibraryName = findLibraryName;\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction findLibraryName(root, sourceDir) {\n  const packageJsonPath = _path().default.join(root, 'package.json');\n  const buildGradlePath = _path().default.join(sourceDir, 'build.gradle');\n  const buildGradleKtsPath = _path().default.join(sourceDir, 'build.gradle.kts');\n\n  // We first check if there is a codegenConfig.name inside the package.json file.\n  if (_fs().default.existsSync(packageJsonPath)) {\n    var _packageJson$codegenC;\n    const packageJson = JSON.parse(_fs().default.readFileSync(packageJsonPath, 'utf8'));\n    if ((_packageJson$codegenC = packageJson.codegenConfig) === null || _packageJson$codegenC === void 0 ? void 0 : _packageJson$codegenC.name) {\n      return packageJson.codegenConfig.name;\n    }\n  }\n\n  // If not, we check if the library specified it in the build.gradle file.\n  let buildGradleContents = '';\n  if (_fs().default.existsSync(buildGradlePath)) {\n    buildGradleContents = _fs().default.readFileSync(buildGradlePath, 'utf-8');\n  } else if (_fs().default.existsSync(buildGradleKtsPath)) {\n    buildGradleContents = _fs().default.readFileSync(buildGradleKtsPath, 'utf-8');\n  } else {\n    return undefined;\n  }\n  const match = buildGradleContents.match(/libraryName = [\"'](.+)[\"']/);\n  if (match) {\n    return match[1];\n  } else {\n    return undefined;\n  }\n}\n\n//# sourceMappingURL=findLibraryName.ts.map"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzC,SAASC,GAAGA,CAAA,EAAG;EACb,IAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC;EAClDH,GAAG,GAAG,SAAAA,IAAA,EAAY;IAChB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASG,KAAKA,CAAA,EAAG;EACf,IAAMH,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACpDC,KAAK,GAAG,SAAAA,MAAA,EAAY;IAClB,OAAOH,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASC,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAC9F,SAASN,eAAeA,CAACS,IAAI,EAAEC,SAAS,EAAE;EACxC,IAAMC,eAAe,GAAGN,KAAK,CAAC,CAAC,CAACG,OAAO,CAACI,IAAI,CAACH,IAAI,EAAE,cAAc,CAAC;EAClE,IAAMI,eAAe,GAAGR,KAAK,CAAC,CAAC,CAACG,OAAO,CAACI,IAAI,CAACF,SAAS,EAAE,cAAc,CAAC;EACvE,IAAMI,kBAAkB,GAAGT,KAAK,CAAC,CAAC,CAACG,OAAO,CAACI,IAAI,CAACF,SAAS,EAAE,kBAAkB,CAAC;EAG9E,IAAIT,GAAG,CAAC,CAAC,CAACO,OAAO,CAACO,UAAU,CAACJ,eAAe,CAAC,EAAE;IAC7C,IAAIK,qBAAqB;IACzB,IAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAAClB,GAAG,CAAC,CAAC,CAACO,OAAO,CAACY,YAAY,CAACT,eAAe,EAAE,MAAM,CAAC,CAAC;IACnF,IAAI,CAACK,qBAAqB,GAAGC,WAAW,CAACI,aAAa,MAAM,IAAI,IAAIL,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACM,IAAI,EAAE;MAC1I,OAAOL,WAAW,CAACI,aAAa,CAACC,IAAI;IACvC;EACF;EAGA,IAAIC,mBAAmB,GAAG,EAAE;EAC5B,IAAItB,GAAG,CAAC,CAAC,CAACO,OAAO,CAACO,UAAU,CAACF,eAAe,CAAC,EAAE;IAC7CU,mBAAmB,GAAGtB,GAAG,CAAC,CAAC,CAACO,OAAO,CAACY,YAAY,CAACP,eAAe,EAAE,OAAO,CAAC;EAC5E,CAAC,MAAM,IAAIZ,GAAG,CAAC,CAAC,CAACO,OAAO,CAACO,UAAU,CAACD,kBAAkB,CAAC,EAAE;IACvDS,mBAAmB,GAAGtB,GAAG,CAAC,CAAC,CAACO,OAAO,CAACY,YAAY,CAACN,kBAAkB,EAAE,OAAO,CAAC;EAC/E,CAAC,MAAM;IACL,OAAOU,SAAS;EAClB;EACA,IAAMC,KAAK,GAAGF,mBAAmB,CAACE,KAAK,CAAC,4BAA4B,CAAC;EACrE,IAAIA,KAAK,EAAE;IACT,OAAOA,KAAK,CAAC,CAAC,CAAC;EACjB,CAAC,MAAM;IACL,OAAOD,SAAS;EAClB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}