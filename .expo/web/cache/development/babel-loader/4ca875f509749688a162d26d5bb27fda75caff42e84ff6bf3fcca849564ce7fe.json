{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.selectTemplatesAsync = selectTemplatesAsync;\nexports.TEMPLATES = void 0;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _resolveFrom = _interopRequireDefault(require(\"resolve-from\"));\nvar _prompts = _interopRequireDefault(require(\"../utils/prompts\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:customize:templates\");\nfunction importFromExpoWebpackConfig(projectRoot, folder, moduleId) {\n  try {\n    var filePath = (0, _resolveFrom).default(projectRoot, `@expo/webpack-config/${folder}/${moduleId}`);\n    debug(`Using @expo/webpack-config template for \"${moduleId}\": ${filePath}`);\n    return filePath;\n  } catch (_unused) {\n    debug(`@expo/webpack-config template for \"${moduleId}\" not found, falling back on @expo/cli`);\n  }\n  return importFromVendor(projectRoot, moduleId);\n}\nfunction importFromVendor(projectRoot, moduleId) {\n  try {\n    var filePath = (0, _resolveFrom).default(projectRoot, \"@expo/cli/static/template/\" + moduleId);\n    debug(`Using @expo/cli template for \"${moduleId}\": ${filePath}`);\n    return filePath;\n  } catch (_unused2) {\n    var _filePath = require.resolve(`@expo/cli/static/template/${moduleId}`);\n    debug(`Local @expo/cli template for \"${moduleId}\" not found, falling back on template relative to @expo/cli: ${_filePath}`);\n    return _filePath;\n  }\n}\nvar TEMPLATES = [{\n  id: \"babel.config.js\",\n  file: function file(projectRoot) {\n    return importFromVendor(projectRoot, \"babel.config.js\");\n  },\n  destination: function destination() {\n    return \"babel.config.js\";\n  },\n  dependencies: [\"babel-preset-expo\"]\n}, {\n  id: \"webpack.config.js\",\n  file: function file(projectRoot) {\n    return importFromExpoWebpackConfig(projectRoot, \"template\", \"webpack.config.js\");\n  },\n  destination: function destination() {\n    return \"webpack.config.js\";\n  },\n  dependencies: [\"@expo/webpack-config\"]\n}, {\n  id: \"metro.config.js\",\n  dependencies: [\"@expo/metro-config\"],\n  destination: function destination() {\n    return \"metro.config.js\";\n  },\n  file: function file(projectRoot) {\n    return importFromVendor(projectRoot, \"metro.config.js\");\n  }\n}, {\n  id: \"serve.json\",\n  file: function file(projectRoot) {\n    return importFromExpoWebpackConfig(projectRoot, \"web-default\", \"serve.json\");\n  },\n  destination: function destination(_ref) {\n    var webStaticPath = _ref.webStaticPath;\n    return webStaticPath + \"/serve.json\";\n  },\n  dependencies: []\n}, {\n  id: \"index.html\",\n  file: function file(projectRoot) {\n    return importFromExpoWebpackConfig(projectRoot, \"web-default\", \"index.html\");\n  },\n  destination: function destination(_ref2) {\n    var webStaticPath = _ref2.webStaticPath;\n    return webStaticPath + \"/index.html\";\n  },\n  dependencies: []\n}];\nexports.TEMPLATES = TEMPLATES;\nfunction createChoices(projectRoot, props) {\n  return TEMPLATES.map(function (template, index) {\n    var destination = template.destination(props);\n    var localProjectFile = _path.default.resolve(projectRoot, destination);\n    var exists = _fs.default.existsSync(localProjectFile);\n    return {\n      title: destination,\n      value: index,\n      description: exists ? _chalk.default.red(\"This will overwrite the existing file\") : undefined\n    };\n  });\n}\nfunction selectTemplatesAsync(_x, _x2) {\n  return _selectTemplatesAsync.apply(this, arguments);\n}\nfunction _selectTemplatesAsync() {\n  _selectTemplatesAsync = _asyncToGenerator(function* (projectRoot, props) {\n    var options = createChoices(projectRoot, props);\n    var _yield$default = yield (0, _prompts).default({\n        type: \"multiselect\",\n        name: \"answer\",\n        message: \"Which files would you like to generate?\",\n        hint: \"- Space to select. Return to submit\",\n        warn: \"File already exists.\",\n        limit: options.length,\n        instructions: \"\",\n        choices: options\n      }),\n      answer = _yield$default.answer;\n    return answer;\n  });\n  return _selectTemplatesAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","selectTemplatesAsync","_chalk","_interopRequireDefault","_fs","_path","_resolveFrom","_prompts","debug","importFromExpoWebpackConfig","projectRoot","folder","moduleId","filePath","default","_unused","importFromVendor","_unused2","resolve","TEMPLATES","id","file","destination","dependencies","_ref","webStaticPath","_ref2","createChoices","props","map","template","index","localProjectFile","exists","existsSync","title","value","description","red","undefined","_x","_x2","_selectTemplatesAsync","apply","arguments","options","_yield$default","type","name","message","hint","warn","limit","length","instructions","choices","answer"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\customize\\templates.ts"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport prompt, { ExpoChoice } from '../utils/prompts';\n\nconst debug = require('debug')('expo:customize:templates');\n\nexport type DestinationResolutionProps = {\n  /** Web 'public' folder path (defaults to `/web`). This technically can be changed but shouldn't be. */\n  webStaticPath: string;\n};\n\nfunction importFromExpoWebpackConfig(projectRoot: string, folder: string, moduleId: string) {\n  try {\n    const filePath = resolveFrom(projectRoot, `@expo/webpack-config/${folder}/${moduleId}`);\n    debug(`Using @expo/webpack-config template for \"${moduleId}\": ${filePath}`);\n    return filePath;\n  } catch {\n    debug(`@expo/webpack-config template for \"${moduleId}\" not found, falling back on @expo/cli`);\n  }\n  return importFromVendor(projectRoot, moduleId);\n}\n\nfunction importFromVendor(projectRoot: string, moduleId: string) {\n  try {\n    const filePath = resolveFrom(projectRoot, '@expo/cli/static/template/' + moduleId);\n    debug(`Using @expo/cli template for \"${moduleId}\": ${filePath}`);\n    return filePath;\n  } catch {\n    // For dev mode, testing and other cases where @expo/cli is not installed\n    const filePath = require.resolve(`@expo/cli/static/template/${moduleId}`);\n    debug(\n      `Local @expo/cli template for \"${moduleId}\" not found, falling back on template relative to @expo/cli: ${filePath}`\n    );\n\n    return filePath;\n  }\n}\n\nexport const TEMPLATES: {\n  /** Unique ID for easily indexing. */\n  id: string;\n  /** Template file path to copy into the project. */\n  file: (projectRoot: string) => string;\n  /** Output location for the file in the user project. */\n  destination: (props: DestinationResolutionProps) => string;\n  /** List of dependencies to install in the project. These are used inside of the template file. */\n  dependencies: string[];\n}[] = [\n  {\n    id: 'babel.config.js',\n    file: (projectRoot) => importFromVendor(projectRoot, 'babel.config.js'),\n    destination: () => 'babel.config.js',\n    dependencies: [\n      // Even though this is installed in `expo`, we should add it for now.\n      'babel-preset-expo',\n    ],\n  },\n  {\n    id: 'webpack.config.js',\n    file: (projectRoot) =>\n      importFromExpoWebpackConfig(projectRoot, 'template', 'webpack.config.js'),\n    destination: () => 'webpack.config.js',\n    dependencies: ['@expo/webpack-config'],\n  },\n  {\n    id: 'metro.config.js',\n    dependencies: ['@expo/metro-config'],\n    destination: () => 'metro.config.js',\n    file: (projectRoot) => importFromVendor(projectRoot, 'metro.config.js'),\n  },\n  {\n    id: 'serve.json',\n    file: (projectRoot) => importFromExpoWebpackConfig(projectRoot, 'web-default', 'serve.json'),\n    // web/serve.json\n    destination: ({ webStaticPath }) => webStaticPath + '/serve.json',\n    dependencies: [],\n  },\n  {\n    id: 'index.html',\n    file: (projectRoot) => importFromExpoWebpackConfig(projectRoot, 'web-default', 'index.html'),\n    // web/index.html\n    destination: ({ webStaticPath }) => webStaticPath + '/index.html',\n    dependencies: [],\n  },\n];\n\n/** Generate the prompt choices. */\nfunction createChoices(\n  projectRoot: string,\n  props: DestinationResolutionProps\n): ExpoChoice<number>[] {\n  return TEMPLATES.map((template, index) => {\n    const destination = template.destination(props);\n    const localProjectFile = path.resolve(projectRoot, destination);\n    const exists = fs.existsSync(localProjectFile);\n\n    return {\n      title: destination,\n      value: index,\n      description: exists ? chalk.red('This will overwrite the existing file') : undefined,\n    };\n  });\n}\n\n/** Prompt to select templates to add. */\nexport async function selectTemplatesAsync(projectRoot: string, props: DestinationResolutionProps) {\n  const options = createChoices(projectRoot, props);\n\n  const { answer } = await prompt({\n    type: 'multiselect',\n    name: 'answer',\n    message: 'Which files would you like to generate?',\n    hint: '- Space to select. Return to submit',\n    warn: 'File already exists.',\n    limit: options.length,\n    instructions: '',\n    choices: options,\n  });\n  return answer;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}