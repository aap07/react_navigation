{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  runMetroDevServerAsync: true,\n  bundleAsync: true,\n  attachInspectorProxy: true,\n  LogReporter: true,\n  createDevServerMiddleware: true\n};\nObject.defineProperty(exports, \"LogReporter\", {\n  enumerable: true,\n  get: function get() {\n    return _LogReporter().default;\n  }\n});\nexports.attachInspectorProxy = attachInspectorProxy;\nexports.bundleAsync = bundleAsync;\nObject.defineProperty(exports, \"createDevServerMiddleware\", {\n  enumerable: true,\n  get: function get() {\n    return _devServerMiddleware().createDevServerMiddleware;\n  }\n});\nexports.runMetroDevServerAsync = runMetroDevServerAsync;\nfunction _config() {\n  var data = require(\"@expo/config\");\n  _config = function _config() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _HermesBundler() {\n  var data = require(\"./HermesBundler\");\n  _HermesBundler = function _HermesBundler() {\n    return data;\n  };\n  return data;\n}\nfunction _LogReporter() {\n  var data = _interopRequireDefault(require(\"./LogReporter\"));\n  _LogReporter = function _LogReporter() {\n    return data;\n  };\n  return data;\n}\nfunction _importMetroFromProject() {\n  var data = require(\"./metro/importMetroFromProject\");\n  _importMetroFromProject = function _importMetroFromProject() {\n    return data;\n  };\n  return data;\n}\nfunction _devServerMiddleware() {\n  var data = require(\"./middleware/devServerMiddleware\");\n  _devServerMiddleware = function _devServerMiddleware() {\n    return data;\n  };\n  return data;\n}\nvar _middlwareMutations = require(\"./middlwareMutations\");\nObject.keys(_middlwareMutations).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _middlwareMutations[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _middlwareMutations[key];\n    }\n  });\n});\nvar _JsInspector = require(\"./JsInspector\");\nObject.keys(_JsInspector).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _JsInspector[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _JsInspector[key];\n    }\n  });\n});\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getExpoMetroConfig(projectRoot, _ref2) {\n  var logger = _ref2.logger,\n    unversioned = _ref2.unversioned;\n  if (!unversioned) {\n    try {\n      return (0, _importMetroFromProject().importExpoMetroConfigFromProject)(projectRoot);\n    } catch (_unused) {}\n  }\n  var unversionedVersion = require('@expo/metro-config/package.json').version;\n  logger.info({\n    tag: 'expo'\n  }, _chalk().default.gray(`\\u203A Unversioned ${_chalk().default.bold`@expo/metro-config@${unversionedVersion}`} is being used. Bundling apps may not work as expected, and is subject to breaking changes. Install ${_chalk().default.bold`expo`} or set the app.json sdkVersion to use a stable version of @expo/metro-config.`));\n  return require('@expo/metro-config');\n}\nfunction runMetroDevServerAsync(_x, _x2) {\n  return _runMetroDevServerAsync.apply(this, arguments);\n}\nfunction _runMetroDevServerAsync() {\n  _runMetroDevServerAsync = _asyncToGenerator(function* (projectRoot, options) {\n    var Metro = (0, _importMetroFromProject().importMetroFromProject)(projectRoot);\n    var reporter = new (_LogReporter().default)(options.logger);\n    var ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n    var metroConfig = yield ExpoMetroConfig.loadAsync(projectRoot, _objectSpread({\n      reporter: reporter\n    }, options));\n    var _ref5 = (0, _devServerMiddleware().createDevServerMiddleware)(projectRoot, {\n        port: metroConfig.server.port,\n        watchFolders: metroConfig.watchFolders,\n        logger: options.logger\n      }),\n      middleware = _ref5.middleware,\n      attachToServer = _ref5.attachToServer,\n      messageSocketEndpoint = _ref5.messageSocketEndpoint,\n      eventsSocketEndpoint = _ref5.eventsSocketEndpoint,\n      websocketEndpoints = _ref5.websocketEndpoints;\n    var customEnhanceMiddleware = metroConfig.server.enhanceMiddleware;\n    metroConfig.server.enhanceMiddleware = function (metroMiddleware, server) {\n      if (customEnhanceMiddleware) {\n        metroMiddleware = customEnhanceMiddleware(metroMiddleware, server);\n      }\n      return middleware.use(metroMiddleware);\n    };\n    var server = yield Metro.runServer(metroConfig, {\n      hmrEnabled: true,\n      websocketEndpoints: websocketEndpoints\n    });\n    if (attachToServer) {\n      var _attachToServer = attachToServer(server),\n        messageSocket = _attachToServer.messageSocket,\n        eventsSocket = _attachToServer.eventsSocket;\n      reporter.reportEvent = eventsSocket.reportEvent;\n      return {\n        server: server,\n        middleware: middleware,\n        messageSocket: messageSocket\n      };\n    } else {\n      reporter.reportEvent = eventsSocketEndpoint.reportEvent;\n      return {\n        server: server,\n        middleware: middleware,\n        messageSocket: messageSocketEndpoint\n      };\n    }\n  });\n  return _runMetroDevServerAsync.apply(this, arguments);\n}\nvar nextBuildID = 0;\nfunction bundleAsync(_x3, _x4, _x5, _x6) {\n  return _bundleAsync.apply(this, arguments);\n}\nfunction _bundleAsync() {\n  _bundleAsync = _asyncToGenerator(function* (projectRoot, expoConfig, options, bundles) {\n    var metro = (0, _importMetroFromProject().importMetroFromProject)(projectRoot);\n    var Server = (0, _importMetroFromProject().importMetroServerFromProject)(projectRoot);\n    var reporter = new (_LogReporter().default)(options.logger);\n    var ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n    var config = yield ExpoMetroConfig.loadAsync(projectRoot, _objectSpread({\n      reporter: reporter\n    }, options));\n    var buildID = `bundle_${nextBuildID++}`;\n    var metroServer = yield metro.runMetro(config, {\n      watch: false\n    });\n    var buildAsync = function () {\n      var _ref6 = _asyncToGenerator(function* (bundle) {\n        var _bundle$dev, _bundle$minify, _bundle$dev2, _bundle$minify2;\n        var isHermes = (0, _HermesBundler().isEnableHermesManaged)(expoConfig, bundle.platform);\n        var bundleOptions = _objectSpread(_objectSpread({}, Server.DEFAULT_BUNDLE_OPTIONS), {}, {\n          bundleType: 'bundle',\n          platform: bundle.platform,\n          entryFile: bundle.entryPoint,\n          dev: (_bundle$dev = bundle.dev) !== null && _bundle$dev !== void 0 ? _bundle$dev : false,\n          minify: !isHermes && ((_bundle$minify = bundle.minify) !== null && _bundle$minify !== void 0 ? _bundle$minify : !bundle.dev),\n          inlineSourceMap: false,\n          sourceMapUrl: bundle.sourceMapUrl,\n          createModuleIdFactory: config.serializer.createModuleIdFactory,\n          onProgress: function onProgress(transformedFileCount, totalFileCount) {\n            if (!options.quiet) {\n              reporter.update({\n                buildID: buildID,\n                type: 'bundle_transform_progressed',\n                transformedFileCount: transformedFileCount,\n                totalFileCount: totalFileCount\n              });\n            }\n          }\n        });\n        reporter.update({\n          buildID: buildID,\n          type: 'bundle_build_started',\n          bundleDetails: {\n            bundleType: bundleOptions.bundleType,\n            platform: bundle.platform,\n            entryFile: bundle.entryPoint,\n            dev: (_bundle$dev2 = bundle.dev) !== null && _bundle$dev2 !== void 0 ? _bundle$dev2 : false,\n            minify: !isHermes && ((_bundle$minify2 = bundle.minify) !== null && _bundle$minify2 !== void 0 ? _bundle$minify2 : !bundle.dev)\n          }\n        });\n        var _yield$metroServer$bu = yield metroServer.build(bundleOptions),\n          code = _yield$metroServer$bu.code,\n          map = _yield$metroServer$bu.map;\n        var assets = yield metroServer.getAssets(bundleOptions);\n        reporter.update({\n          buildID: buildID,\n          type: 'bundle_build_done'\n        });\n        return {\n          code: code,\n          map: map,\n          assets: assets\n        };\n      });\n      return function buildAsync(_x7) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    var maybeAddHermesBundleAsync = function () {\n      var _ref7 = _asyncToGenerator(function* (bundle, bundleOutput) {\n        var _ref, _paths$dynamicConfigP;\n        var platform = bundle.platform;\n        var isHermesManaged = (0, _HermesBundler().isEnableHermesManaged)(expoConfig, platform);\n        var paths = (0, _config().getConfigFilePaths)(projectRoot);\n        var configFilePath = (_ref = (_paths$dynamicConfigP = paths.dynamicConfigPath) !== null && _paths$dynamicConfigP !== void 0 ? _paths$dynamicConfigP : paths.staticConfigPath) !== null && _ref !== void 0 ? _ref : 'app.json';\n        yield (0, _HermesBundler().maybeThrowFromInconsistentEngineAsync)(projectRoot, configFilePath, platform, isHermesManaged);\n        if (isHermesManaged) {\n          var _bundle$minify3;\n          var platformTag = _chalk().default.bold({\n            ios: 'iOS',\n            android: 'Android',\n            web: 'Web'\n          }[platform] || platform);\n          options.logger.info({\n            tag: 'expo'\n          }, `💿 ${platformTag} Building Hermes bytecode for the bundle`);\n          var hermesBundleOutput = yield (0, _HermesBundler().buildHermesBundleAsync)(projectRoot, bundleOutput.code, bundleOutput.map, (_bundle$minify3 = bundle.minify) !== null && _bundle$minify3 !== void 0 ? _bundle$minify3 : !bundle.dev);\n          bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n          bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap;\n        }\n        return bundleOutput;\n      });\n      return function maybeAddHermesBundleAsync(_x8, _x9) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    try {\n      var intermediateOutputs = yield Promise.all(bundles.map(function (bundle) {\n        return buildAsync(bundle);\n      }));\n      var bundleOutputs = [];\n      for (var i = 0; i < bundles.length; ++i) {\n        bundleOutputs.push(yield maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n      }\n      return bundleOutputs;\n    } finally {\n      metroServer.end();\n    }\n  });\n  return _bundleAsync.apply(this, arguments);\n}\nfunction attachInspectorProxy(projectRoot, _ref3) {\n  var server = _ref3.server,\n    middleware = _ref3.middleware;\n  var _ref4 = (0, _importMetroFromProject().importInspectorProxyServerFromProject)(projectRoot),\n    InspectorProxy = _ref4.InspectorProxy;\n  var inspectorProxy = new InspectorProxy(projectRoot);\n  if ('addWebSocketListener' in inspectorProxy) {\n    inspectorProxy.addWebSocketListener(server);\n  } else if ('createWebSocketListeners' in inspectorProxy) {\n    inspectorProxy.createWebSocketListeners(server);\n  }\n  middleware.use(inspectorProxy.processRequest.bind(inspectorProxy));\n  return {\n    inspectorProxy: inspectorProxy\n  };\n}","map":{"version":3,"names":["_config","data","require","_chalk","_interopRequireDefault","_HermesBundler","_LogReporter","_importMetroFromProject","_devServerMiddleware","_middlwareMutations","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_JsInspector","obj","__esModule","default","getExpoMetroConfig","projectRoot","_ref2","logger","unversioned","importExpoMetroConfigFromProject","_unused","unversionedVersion","version","info","tag","gray","bold","runMetroDevServerAsync","_x","_x2","_runMetroDevServerAsync","apply","arguments","_asyncToGenerator","options","Metro","importMetroFromProject","reporter","ExpoMetroConfig","metroConfig","loadAsync","_objectSpread","_ref5","createDevServerMiddleware","port","server","watchFolders","middleware","attachToServer","messageSocketEndpoint","eventsSocketEndpoint","websocketEndpoints","customEnhanceMiddleware","enhanceMiddleware","metroMiddleware","use","runServer","hmrEnabled","_attachToServer","messageSocket","eventsSocket","reportEvent","nextBuildID","bundleAsync","_x3","_x4","_x5","_x6","_bundleAsync","expoConfig","bundles","metro","Server","importMetroServerFromProject","config","buildID","metroServer","runMetro","watch","buildAsync","_ref6","bundle","_bundle$dev","_bundle$minify","_bundle$dev2","_bundle$minify2","isHermes","isEnableHermesManaged","platform","bundleOptions","DEFAULT_BUNDLE_OPTIONS","bundleType","entryFile","entryPoint","dev","minify","inlineSourceMap","sourceMapUrl","createModuleIdFactory","serializer","onProgress","transformedFileCount","totalFileCount","quiet","update","type","bundleDetails","_yield$metroServer$bu","build","code","map","assets","getAssets","_x7","maybeAddHermesBundleAsync","_ref7","bundleOutput","_ref","_paths$dynamicConfigP","isHermesManaged","paths","getConfigFilePaths","configFilePath","dynamicConfigPath","staticConfigPath","maybeThrowFromInconsistentEngineAsync","_bundle$minify3","platformTag","ios","android","web","hermesBundleOutput","buildHermesBundleAsync","hermesBytecodeBundle","hbc","hermesSourcemap","sourcemap","_x8","_x9","intermediateOutputs","Promise","all","bundleOutputs","i","length","push","end","attachInspectorProxy","_ref3","_ref4","importInspectorProxyServerFromProject","InspectorProxy","inspectorProxy","addWebSocketListener","createWebSocketListeners","processRequest","bind"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\MetroDevServer.ts"],"sourcesContent":["import type Log from '@expo/bunyan';\nimport { ExpoConfig, getConfigFilePaths } from '@expo/config';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport type { Server as ConnectServer } from 'connect';\nimport http from 'http';\nimport type Metro from 'metro';\nimport type { BundleOptions as MetroBundleOptions } from 'metro/src/shared/types';\n\nimport {\n  buildHermesBundleAsync,\n  isEnableHermesManaged,\n  maybeThrowFromInconsistentEngineAsync,\n} from './HermesBundler';\nimport LogReporter from './LogReporter';\nimport {\n  importExpoMetroConfigFromProject,\n  importInspectorProxyServerFromProject,\n  importMetroFromProject,\n  importMetroServerFromProject,\n} from './metro/importMetroFromProject';\nimport { createDevServerMiddleware } from './middleware/devServerMiddleware';\n\nexport type MetroDevServerOptions = LoadOptions & {\n  logger: Log;\n  quiet?: boolean;\n  unversioned?: boolean;\n};\nexport type BundleOptions = {\n  entryPoint: string;\n  platform: 'android' | 'ios' | 'web';\n  dev?: boolean;\n  minify?: boolean;\n  sourceMapUrl?: string;\n};\nexport type BundleAssetWithFileHashes = Metro.AssetData & {\n  fileHashes: string[]; // added by the hashAssets asset plugin\n};\nexport type BundleOutput = {\n  code: string;\n  map: string;\n  hermesBytecodeBundle?: Uint8Array;\n  hermesSourcemap?: string;\n  assets: readonly BundleAssetWithFileHashes[];\n};\nexport type MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nfunction getExpoMetroConfig(\n  projectRoot: string,\n  { logger, unversioned }: Pick<MetroDevServerOptions, 'logger' | 'unversioned'>\n): typeof import('@expo/metro-config') {\n  if (!unversioned) {\n    try {\n      return importExpoMetroConfigFromProject(projectRoot);\n    } catch {\n      // If expo isn't installed, use the unversioned config and warn about installing expo.\n    }\n  }\n\n  const unversionedVersion = require('@expo/metro-config/package.json').version;\n  logger.info(\n    { tag: 'expo' },\n    chalk.gray(\n      `\\u203A Unversioned ${chalk.bold`@expo/metro-config@${unversionedVersion}`} is being used. Bundling apps may not work as expected, and is subject to breaking changes. Install ${chalk.bold`expo`} or set the app.json sdkVersion to use a stable version of @expo/metro-config.`\n    )\n  );\n\n  return require('@expo/metro-config');\n}\n\n/** @deprecated */\nexport async function runMetroDevServerAsync(\n  projectRoot: string,\n  options: MetroDevServerOptions\n): Promise<{\n  server: http.Server;\n  middleware: any;\n  messageSocket: MessageSocket;\n}> {\n  const Metro = importMetroFromProject(projectRoot);\n\n  const reporter = new LogReporter(options.logger);\n\n  const ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n\n  const metroConfig = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n\n  const {\n    middleware,\n    attachToServer,\n\n    // RN +68 -- Expo SDK +45\n    messageSocketEndpoint,\n    eventsSocketEndpoint,\n    websocketEndpoints,\n  } = createDevServerMiddleware(projectRoot, {\n    port: metroConfig.server.port,\n    watchFolders: metroConfig.watchFolders,\n    logger: options.logger,\n  });\n\n  const customEnhanceMiddleware = metroConfig.server.enhanceMiddleware;\n  // @ts-ignore can't mutate readonly config\n  metroConfig.server.enhanceMiddleware = (metroMiddleware: any, server: Metro.Server) => {\n    if (customEnhanceMiddleware) {\n      metroMiddleware = customEnhanceMiddleware(metroMiddleware, server);\n    }\n    return middleware.use(metroMiddleware);\n  };\n\n  const server = await Metro.runServer(metroConfig, {\n    hmrEnabled: true,\n    // @ts-expect-error: Inconsistent `websocketEndpoints` type between metro and @react-native-community/cli-server-api\n    websocketEndpoints,\n  });\n\n  if (attachToServer) {\n    // Expo SDK 44 and lower\n    const { messageSocket, eventsSocket } = attachToServer(server);\n    reporter.reportEvent = eventsSocket.reportEvent;\n\n    return {\n      server,\n      middleware,\n      messageSocket,\n    };\n  } else {\n    // RN +68 -- Expo SDK +45\n    reporter.reportEvent = eventsSocketEndpoint.reportEvent;\n\n    return {\n      server,\n      middleware,\n      messageSocket: messageSocketEndpoint,\n      // debuggerProxyEndpoint,\n    };\n  }\n}\n\nlet nextBuildID = 0;\n\n/** @deprecated */\nexport async function bundleAsync(\n  projectRoot: string,\n  expoConfig: ExpoConfig,\n  options: MetroDevServerOptions,\n  bundles: BundleOptions[]\n): Promise<BundleOutput[]> {\n  const metro = importMetroFromProject(projectRoot);\n  const Server = importMetroServerFromProject(projectRoot);\n\n  const reporter = new LogReporter(options.logger);\n  const ExpoMetroConfig = getExpoMetroConfig(projectRoot, options);\n\n  const config = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n  const buildID = `bundle_${nextBuildID++}`;\n\n  const metroServer = await metro.runMetro(config, {\n    watch: false,\n  });\n\n  const buildAsync = async (bundle: BundleOptions): Promise<BundleOutput> => {\n    const isHermes = isEnableHermesManaged(expoConfig, bundle.platform);\n    const bundleOptions: MetroBundleOptions = {\n      ...Server.DEFAULT_BUNDLE_OPTIONS,\n      bundleType: 'bundle',\n      platform: bundle.platform,\n      entryFile: bundle.entryPoint,\n      dev: bundle.dev ?? false,\n      minify: !isHermes && (bundle.minify ?? !bundle.dev),\n      inlineSourceMap: false,\n      sourceMapUrl: bundle.sourceMapUrl,\n      createModuleIdFactory: config.serializer.createModuleIdFactory,\n      onProgress: (transformedFileCount: number, totalFileCount: number) => {\n        if (!options.quiet) {\n          reporter.update({\n            buildID,\n            type: 'bundle_transform_progressed',\n            transformedFileCount,\n            totalFileCount,\n          });\n        }\n      },\n    };\n    reporter.update({\n      buildID,\n      type: 'bundle_build_started',\n      bundleDetails: {\n        bundleType: bundleOptions.bundleType,\n        platform: bundle.platform,\n        entryFile: bundle.entryPoint,\n        dev: bundle.dev ?? false,\n        minify: !isHermes && (bundle.minify ?? !bundle.dev),\n      },\n    });\n    const { code, map } = await metroServer.build(bundleOptions);\n    const assets = (await metroServer.getAssets(\n      bundleOptions\n    )) as readonly BundleAssetWithFileHashes[];\n    reporter.update({\n      buildID,\n      type: 'bundle_build_done',\n    });\n    return { code, map, assets };\n  };\n\n  const maybeAddHermesBundleAsync = async (\n    bundle: BundleOptions,\n    bundleOutput: BundleOutput\n  ): Promise<BundleOutput> => {\n    const { platform } = bundle;\n    const isHermesManaged = isEnableHermesManaged(expoConfig, platform);\n\n    const paths = getConfigFilePaths(projectRoot);\n    const configFilePath = paths.dynamicConfigPath ?? paths.staticConfigPath ?? 'app.json';\n    await maybeThrowFromInconsistentEngineAsync(\n      projectRoot,\n      configFilePath,\n      platform,\n      isHermesManaged\n    );\n\n    if (isHermesManaged) {\n      const platformTag = chalk.bold(\n        { ios: 'iOS', android: 'Android', web: 'Web' }[platform] || platform\n      );\n      options.logger.info(\n        { tag: 'expo' },\n        `💿 ${platformTag} Building Hermes bytecode for the bundle`\n      );\n      const hermesBundleOutput = await buildHermesBundleAsync(\n        projectRoot,\n        bundleOutput.code,\n        bundleOutput.map,\n        bundle.minify ?? !bundle.dev\n      );\n      bundleOutput.hermesBytecodeBundle = hermesBundleOutput.hbc;\n      bundleOutput.hermesSourcemap = hermesBundleOutput.sourcemap;\n    }\n    return bundleOutput;\n  };\n\n  try {\n    const intermediateOutputs = await Promise.all(bundles.map((bundle) => buildAsync(bundle)));\n    const bundleOutputs: BundleOutput[] = [];\n    for (let i = 0; i < bundles.length; ++i) {\n      // hermesc does not support parallel building even we spawn processes.\n      // we should build them sequentially.\n      bundleOutputs.push(await maybeAddHermesBundleAsync(bundles[i], intermediateOutputs[i]));\n    }\n    return bundleOutputs;\n  } finally {\n    metroServer.end();\n  }\n}\n\n/**\n * Attach the inspector proxy to a development server.\n * Inspector proxy is used for viewing the JS context in a browser.\n * This must be attached after the server is listening.\n * Attaching consists of pushing custom middleware and appending WebSockets to the server.\n *\n *\n * @param projectRoot\n * @param props.server dev server to add WebSockets to\n * @param props.middleware dev server middleware to add extra middleware to\n */\nexport function attachInspectorProxy(\n  projectRoot: string,\n  { server, middleware }: { server: http.Server; middleware: ConnectServer }\n) {\n  const { InspectorProxy } = importInspectorProxyServerFromProject(projectRoot);\n  const inspectorProxy = new InspectorProxy(projectRoot);\n  if ('addWebSocketListener' in inspectorProxy) {\n    // metro@0.59.0\n    inspectorProxy.addWebSocketListener(server);\n  } else if ('createWebSocketListeners' in inspectorProxy) {\n    // metro@0.66.0\n    // TODO: This isn't properly support without a ws router.\n    inspectorProxy.createWebSocketListeners(server);\n  }\n  // TODO(hypuk): Refactor inspectorProxy.processRequest into separate request handlers\n  // so that we could provide routes (/json/list and /json/version) here.\n  // Currently this causes Metro to give warning about T31407894.\n  // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n  middleware.use(inspectorProxy.processRequest.bind(inspectorProxy));\n\n  return { inspectorProxy };\n}\n\nexport { LogReporter, createDevServerMiddleware };\nexport * from './middlwareMutations';\nexport * from './JsInspector';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}