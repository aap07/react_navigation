{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.current = current;\nexports.latest = latest;\nexports.logIfUpdateAvailable = logIfUpdateAvailable;\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _semver() {\n  var data = _interopRequireDefault(require(\"semver\"));\n  _semver = function _semver() {\n    return data;\n  };\n  return data;\n}\nvar _errors = require(\"../errors\");\nvar _logger = _interopRequireDefault(require(\"../logger\"));\nvar _resolveNodeModuleDir = _interopRequireDefault(require(\"../resolveNodeModuleDir\"));\nvar _getLatestRelease = _interopRequireDefault(require(\"./getLatestRelease\"));\nvar _printNewRelease = _interopRequireDefault(require(\"./printNewRelease\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar getReactNativeVersion = function getReactNativeVersion(projectRoot) {\n  var _require;\n  return (_require = require(_path().default.join((0, _resolveNodeModuleDir.default)(projectRoot, 'react-native'), 'package.json'))) === null || _require === void 0 ? void 0 : _require.version;\n};\nfunction logIfUpdateAvailable(_x) {\n  return _logIfUpdateAvailable.apply(this, arguments);\n}\nfunction _logIfUpdateAvailable() {\n  _logIfUpdateAvailable = _asyncToGenerator(function* (projectRoot) {\n    var hasUpdate = yield latest(projectRoot);\n    if (hasUpdate) {\n      (0, _printNewRelease.default)(hasUpdate.name, hasUpdate.upgrade, hasUpdate.current);\n    }\n  });\n  return _logIfUpdateAvailable.apply(this, arguments);\n}\nfunction latest(_x2) {\n  return _latest.apply(this, arguments);\n}\nfunction _latest() {\n  _latest = _asyncToGenerator(function* (projectRoot) {\n    try {\n      var currentVersion = getReactNativeVersion(projectRoot);\n      if (!currentVersion) {\n        return;\n      }\n      var _require2 = require(_path().default.join(projectRoot, 'package.json')),\n        name = _require2.name;\n      var latestRelease = yield (0, _getLatestRelease.default)(name, currentVersion);\n      if (latestRelease) {\n        return {\n          name: name,\n          current: currentVersion,\n          upgrade: latestRelease\n        };\n      }\n    } catch (e) {\n      _logger.default.debug('Cannot detect current version of React Native, ' + 'skipping check for a newer release');\n      _logger.default.debug(e);\n    }\n    return undefined;\n  });\n  return _latest.apply(this, arguments);\n}\nfunction current(projectRoot) {\n  try {\n    var found = _semver().default.parse(getReactNativeVersion(projectRoot));\n    if (found) {\n      return found;\n    }\n  } catch (_unused) {\n    throw new _errors.UnknownProjectError(projectRoot);\n  }\n  return undefined;\n}","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","current","latest","logIfUpdateAvailable","_path","data","_interopRequireDefault","_semver","_errors","_logger","_resolveNodeModuleDir","_getLatestRelease","_printNewRelease","obj","__esModule","default","getReactNativeVersion","projectRoot","_require","join","version","_x","_logIfUpdateAvailable","apply","arguments","hasUpdate","name","upgrade","_x2","_latest","currentVersion","_require2","latestRelease","e","debug","undefined","found","parse","_unused","UnknownProjectError"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-tools/build/releaseChecker/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.current = current;\nexports.latest = latest;\nexports.logIfUpdateAvailable = logIfUpdateAvailable;\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _semver() {\n  const data = _interopRequireDefault(require(\"semver\"));\n  _semver = function () {\n    return data;\n  };\n  return data;\n}\nvar _errors = require(\"../errors\");\nvar _logger = _interopRequireDefault(require(\"../logger\"));\nvar _resolveNodeModuleDir = _interopRequireDefault(require(\"../resolveNodeModuleDir\"));\nvar _getLatestRelease = _interopRequireDefault(require(\"./getLatestRelease\"));\nvar _printNewRelease = _interopRequireDefault(require(\"./printNewRelease\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst getReactNativeVersion = projectRoot => {\n  var _require;\n  return (_require = require(_path().default.join((0, _resolveNodeModuleDir.default)(projectRoot, 'react-native'), 'package.json'))) === null || _require === void 0 ? void 0 : _require.version;\n};\n\n/**\n * Logs out a message if the user's version is behind a stable version of React Native\n */\nasync function logIfUpdateAvailable(projectRoot) {\n  const hasUpdate = await latest(projectRoot);\n  if (hasUpdate) {\n    (0, _printNewRelease.default)(hasUpdate.name, hasUpdate.upgrade, hasUpdate.current);\n  }\n}\n/**\n * Finds the latest stables version of React Native > current version\n */\nasync function latest(projectRoot) {\n  try {\n    const currentVersion = getReactNativeVersion(projectRoot);\n    if (!currentVersion) {\n      return;\n    }\n    const {\n      name\n    } = require(_path().default.join(projectRoot, 'package.json'));\n    const latestRelease = await (0, _getLatestRelease.default)(name, currentVersion);\n    if (latestRelease) {\n      return {\n        name,\n        current: currentVersion,\n        upgrade: latestRelease\n      };\n    }\n  } catch (e) {\n    // We let the flow continue as this component is not vital for the rest of\n    // the CLI.\n    _logger.default.debug('Cannot detect current version of React Native, ' + 'skipping check for a newer release');\n    _logger.default.debug(e);\n  }\n  return undefined;\n}\n\n/**\n * Gets the current project's version parsed as Semver\n */\nfunction current(projectRoot) {\n  try {\n    const found = _semver().default.parse(getReactNativeVersion(projectRoot));\n    if (found) {\n      return found;\n    }\n  } catch {\n    throw new _errors.UnknownProjectError(projectRoot);\n  }\n  return undefined;\n}\n\n//# sourceMappingURL=index.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}