{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/cli/node_modules/type-fest/source/async-return-type.d.ts"],"sourcesContent":["import {PromiseValue} from './promise-value';\n\ntype AsyncFunction = (...args: any[]) => Promise<unknown>;\n\n/**\nUnwrap the return type of a function that returns a `Promise`.\n\nThere has been [discussion](https://github.com/microsoft/TypeScript/pull/35998) about implementing this type in TypeScript.\n\n@example\n```ts\nimport {AsyncReturnType} from 'type-fest';\nimport {asyncFunction} from 'api';\n\n// This type resolves to the unwrapped return type of `asyncFunction`.\ntype Value = AsyncReturnType<typeof asyncFunction>;\n\nasync function doSomething(value: Value) {}\n\nasyncFunction().then(value => doSomething(value));\n```\n*/\nexport type AsyncReturnType<Target extends AsyncFunction> = PromiseValue<ReturnType<Target>>;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}