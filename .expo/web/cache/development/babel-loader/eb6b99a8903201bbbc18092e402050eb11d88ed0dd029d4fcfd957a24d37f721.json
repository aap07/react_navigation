{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.installCocoaPods = installCocoaPods;\nexports.runSudo = runSudo;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _execa() {\n  var data = _interopRequireDefault(require(\"execa\"));\n  _execa = function _execa() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _sudoPrompt() {\n  var data = _interopRequireDefault(require(\"sudo-prompt\"));\n  _sudoPrompt = function _sudoPrompt() {\n    return data;\n  };\n  return data;\n}\nvar _runBundleInstall = _interopRequireDefault(require(\"./runBundleInstall\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction runPodInstall(_x, _x2) {\n  return _runPodInstall.apply(this, arguments);\n}\nfunction _runPodInstall() {\n  _runPodInstall = _asyncToGenerator(function* (loader, directory) {\n    var shouldHandleRepoUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    try {\n      loader.start(`Installing CocoaPods dependencies ${_chalk().default.dim('(this may take a few minutes)')}`);\n      yield (0, _execa().default)('bundle', ['exec', 'pod', 'install']);\n    } catch (error) {\n      var stderr = error.stderr || error.stdout;\n      if (stderr.includes('pod repo update') && shouldHandleRepoUpdate) {\n        yield runPodUpdate(loader);\n        yield runPodInstall(loader, directory, false);\n      } else {\n        loader.fail();\n        _cliTools().logger.error(stderr);\n        throw new (_cliTools().CLIError)(`Looks like your iOS environment is not properly set. Please go to ${_cliTools().link.docs('environment-setup')} and follow the React Native CLI QuickStart guide for macOS and iOS.`);\n      }\n    }\n  });\n  return _runPodInstall.apply(this, arguments);\n}\nfunction runPodUpdate(_x3) {\n  return _runPodUpdate.apply(this, arguments);\n}\nfunction _runPodUpdate() {\n  _runPodUpdate = _asyncToGenerator(function* (loader) {\n    try {\n      loader.start(`Updating CocoaPods repositories ${_chalk().default.dim('(this may take a few minutes)')}`);\n      yield (0, _execa().default)('pod', ['repo', 'update']);\n    } catch (error) {\n      _cliTools().logger.log(error.stderr || error.stdout);\n      loader.fail();\n      throw new (_cliTools().CLIError)(`Failed to update CocoaPods repositories for iOS project.\\nPlease try again manually: \"pod repo update\".\\nCocoaPods documentation: ${_chalk().default.dim.underline('https://cocoapods.org/')}`);\n    }\n  });\n  return _runPodUpdate.apply(this, arguments);\n}\nfunction runSudo(command) {\n  return new Promise(function (resolve, reject) {\n    _sudoPrompt().default.exec(command, {\n      name: 'React Native CLI'\n    }, function (error) {\n      if (error) {\n        reject(error);\n      }\n      resolve();\n    });\n  });\n}\nfunction installCocoaPodsWithGem() {\n  return _installCocoaPodsWithGem.apply(this, arguments);\n}\nfunction _installCocoaPodsWithGem() {\n  _installCocoaPodsWithGem = _asyncToGenerator(function* () {\n    var options = ['install', 'cocoapods', '--no-document'];\n    try {\n      yield (0, _execa().default)('gem', options);\n    } catch (_error) {\n      yield runSudo(`gem ${options.join(' ')}`);\n    }\n  });\n  return _installCocoaPodsWithGem.apply(this, arguments);\n}\nfunction installCocoaPods(_x4) {\n  return _installCocoaPods.apply(this, arguments);\n}\nfunction _installCocoaPods() {\n  _installCocoaPods = _asyncToGenerator(function* (loader) {\n    loader.stop();\n    loader.start('Installing CocoaPods');\n    try {\n      yield installCocoaPodsWithGem();\n      return loader.succeed();\n    } catch (error) {\n      loader.fail();\n      _cliTools().logger.error(error.stderr);\n      throw new (_cliTools().CLIError)(`An error occured while trying to install CocoaPods, which is required by this template.\\nPlease try again manually: sudo gem install cocoapods.\\nCocoaPods documentation: ${_chalk().default.dim.underline('https://cocoapods.org/')}`);\n    }\n  });\n  return _installCocoaPods.apply(this, arguments);\n}\nfunction installPods(_x5) {\n  return _installPods.apply(this, arguments);\n}\nfunction _installPods() {\n  _installPods = _asyncToGenerator(function* (_ref) {\n    var directory = _ref.directory,\n      loader = _ref.loader;\n    loader = loader || new (_cliTools().NoopLoader)();\n    try {\n      if (!_fs().default.existsSync('ios')) {\n        return;\n      }\n      process.chdir('ios');\n      var hasPods = _fs().default.existsSync('Podfile');\n      if (!hasPods) {\n        return;\n      }\n      if (_fs().default.existsSync('../Gemfile')) {\n        yield (0, _runBundleInstall.default)(loader);\n      }\n      try {\n        yield (0, _execa().default)('pod', ['--version']);\n      } catch (e) {\n        loader.info();\n        yield installCocoaPods(loader);\n      }\n      yield runPodInstall(loader, directory);\n    } finally {\n      process.chdir('..');\n    }\n  });\n  return _installPods.apply(this, arguments);\n}\nvar _default = installPods;\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","installCocoaPods","runSudo","_fs","data","_interopRequireDefault","_execa","_chalk","_cliTools","_sudoPrompt","_runBundleInstall","obj","__esModule","runPodInstall","_x","_x2","_runPodInstall","apply","arguments","loader","directory","shouldHandleRepoUpdate","length","undefined","start","dim","error","stderr","stdout","includes","runPodUpdate","fail","logger","CLIError","link","docs","_x3","_runPodUpdate","log","underline","command","Promise","resolve","reject","exec","name","installCocoaPodsWithGem","_installCocoaPodsWithGem","options","_error","join","_x4","_installCocoaPods","stop","succeed","installPods","_x5","_installPods","_ref","NoopLoader","existsSync","process","chdir","hasPods","e","info","_default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/installPods.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.installCocoaPods = installCocoaPods;\nexports.runSudo = runSudo;\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _execa() {\n  const data = _interopRequireDefault(require(\"execa\"));\n  _execa = function () {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _sudoPrompt() {\n  const data = _interopRequireDefault(require(\"sudo-prompt\"));\n  _sudoPrompt = function () {\n    return data;\n  };\n  return data;\n}\nvar _runBundleInstall = _interopRequireDefault(require(\"./runBundleInstall\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nasync function runPodInstall(loader, directory, shouldHandleRepoUpdate = true) {\n  try {\n    loader.start(`Installing CocoaPods dependencies ${_chalk().default.dim('(this may take a few minutes)')}`);\n    await (0, _execa().default)('bundle', ['exec', 'pod', 'install']);\n  } catch (error) {\n    // \"pod\" command outputs errors to stdout (at least some of them)\n    const stderr = error.stderr || error.stdout;\n\n    /**\n     * If CocoaPods failed due to repo being out of date, it will\n     * include the update command in the error message.\n     *\n     * `shouldHandleRepoUpdate` will be set to `false` to\n     * prevent infinite loop (unlikely scenario)\n     */\n    if (stderr.includes('pod repo update') && shouldHandleRepoUpdate) {\n      await runPodUpdate(loader);\n      await runPodInstall(loader, directory, false);\n    } else {\n      loader.fail();\n      _cliTools().logger.error(stderr);\n      throw new (_cliTools().CLIError)(`Looks like your iOS environment is not properly set. Please go to ${_cliTools().link.docs('environment-setup')} and follow the React Native CLI QuickStart guide for macOS and iOS.`);\n    }\n  }\n}\nasync function runPodUpdate(loader) {\n  try {\n    loader.start(`Updating CocoaPods repositories ${_chalk().default.dim('(this may take a few minutes)')}`);\n    await (0, _execa().default)('pod', ['repo', 'update']);\n  } catch (error) {\n    // \"pod\" command outputs errors to stdout (at least some of them)\n    _cliTools().logger.log(error.stderr || error.stdout);\n    loader.fail();\n    throw new (_cliTools().CLIError)(`Failed to update CocoaPods repositories for iOS project.\\nPlease try again manually: \"pod repo update\".\\nCocoaPods documentation: ${_chalk().default.dim.underline('https://cocoapods.org/')}`);\n  }\n}\nfunction runSudo(command) {\n  return new Promise((resolve, reject) => {\n    _sudoPrompt().default.exec(command, {\n      name: 'React Native CLI'\n    }, error => {\n      if (error) {\n        reject(error);\n      }\n      resolve();\n    });\n  });\n}\nasync function installCocoaPodsWithGem() {\n  const options = ['install', 'cocoapods', '--no-document'];\n  try {\n    // First attempt to install `cocoapods`\n    await (0, _execa().default)('gem', options);\n  } catch (_error) {\n    // If that doesn't work then try with sudo\n    await runSudo(`gem ${options.join(' ')}`);\n  }\n}\nasync function installCocoaPods(loader) {\n  loader.stop();\n  loader.start('Installing CocoaPods');\n  try {\n    await installCocoaPodsWithGem();\n    return loader.succeed();\n  } catch (error) {\n    loader.fail();\n    _cliTools().logger.error(error.stderr);\n    throw new (_cliTools().CLIError)(`An error occured while trying to install CocoaPods, which is required by this template.\\nPlease try again manually: sudo gem install cocoapods.\\nCocoaPods documentation: ${_chalk().default.dim.underline('https://cocoapods.org/')}`);\n  }\n}\nasync function installPods({\n  directory,\n  loader\n}) {\n  loader = loader || new (_cliTools().NoopLoader)();\n  try {\n    if (!_fs().default.existsSync('ios')) {\n      return;\n    }\n    process.chdir('ios');\n    const hasPods = _fs().default.existsSync('Podfile');\n    if (!hasPods) {\n      return;\n    }\n    if (_fs().default.existsSync('../Gemfile')) {\n      await (0, _runBundleInstall.default)(loader);\n    }\n    try {\n      // Check if \"pod\" is available and usable. It happens that there are\n      // multiple versions of \"pod\" command and even though it's there, it exits\n      // with a failure\n      await (0, _execa().default)('pod', ['--version']);\n    } catch (e) {\n      loader.info();\n      await installCocoaPods(loader);\n    }\n    await runPodInstall(loader, directory);\n  } finally {\n    process.chdir('..');\n  }\n}\nvar _default = installPods;\nexports.default = _default;\n\n//# sourceMappingURL=installPods.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}