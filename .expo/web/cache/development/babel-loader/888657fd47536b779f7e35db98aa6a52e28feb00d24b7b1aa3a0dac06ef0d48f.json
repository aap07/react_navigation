{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport { EventTypes, MouseButtons, PointerType, TouchEventType } from \"../interfaces\";\nimport EventManager from \"./EventManager\";\nimport { isPointerInBounds } from \"../utils\";\nvar TouchEventManager = function (_EventManager) {\n  _inherits(TouchEventManager, _EventManager);\n  var _super = _createSuper(TouchEventManager);\n  function TouchEventManager() {\n    _classCallCheck(this, TouchEventManager);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TouchEventManager, [{\n    key: \"setListeners\",\n    value: function setListeners() {\n      var _this = this;\n      this.view.addEventListener('touchstart', function (event) {\n        for (var i = 0; i < event.changedTouches.length; ++i) {\n          var adaptedEvent = _this.mapEvent(event, EventTypes.DOWN, i, TouchEventType.DOWN);\n          if (!isPointerInBounds(_this.view, {\n            x: adaptedEvent.x,\n            y: adaptedEvent.y\n          }) || event.changedTouches[i].touchType === 'stylus') {\n            continue;\n          }\n          _this.markAsInBounds(adaptedEvent.pointerId);\n          if (++_this.activePointersCounter > 1) {\n            adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n            _this.onPointerAdd(adaptedEvent);\n          } else {\n            _this.onPointerDown(adaptedEvent);\n          }\n        }\n      });\n      this.view.addEventListener('touchmove', function (event) {\n        for (var i = 0; i < event.changedTouches.length; ++i) {\n          var adaptedEvent = _this.mapEvent(event, EventTypes.MOVE, i, TouchEventType.MOVE);\n          if (event.changedTouches[i].touchType === 'stylus') {\n            continue;\n          }\n          var inBounds = isPointerInBounds(_this.view, {\n            x: adaptedEvent.x,\n            y: adaptedEvent.y\n          });\n          var pointerIndex = _this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n          if (inBounds) {\n            if (pointerIndex < 0) {\n              adaptedEvent.eventType = EventTypes.ENTER;\n              _this.onPointerEnter(adaptedEvent);\n              _this.markAsInBounds(adaptedEvent.pointerId);\n            } else {\n              _this.onPointerMove(adaptedEvent);\n            }\n          } else {\n            if (pointerIndex >= 0) {\n              adaptedEvent.eventType = EventTypes.OUT;\n              _this.onPointerOut(adaptedEvent);\n              _this.markAsOutOfBounds(adaptedEvent.pointerId);\n            } else {\n              _this.onPointerOutOfBounds(adaptedEvent);\n            }\n          }\n        }\n      });\n      this.view.addEventListener('touchend', function (event) {\n        for (var i = 0; i < event.changedTouches.length; ++i) {\n          if (_this.activePointersCounter === 0) {\n            break;\n          }\n          if (event.changedTouches[i].touchType === 'stylus') {\n            continue;\n          }\n          var adaptedEvent = _this.mapEvent(event, EventTypes.UP, i, TouchEventType.UP);\n          _this.markAsOutOfBounds(adaptedEvent.pointerId);\n          if (--_this.activePointersCounter > 0) {\n            adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n            _this.onPointerRemove(adaptedEvent);\n          } else {\n            _this.onPointerUp(adaptedEvent);\n          }\n        }\n      });\n      this.view.addEventListener('touchcancel', function (event) {\n        for (var i = 0; i < event.changedTouches.length; ++i) {\n          var adaptedEvent = _this.mapEvent(event, EventTypes.CANCEL, i, TouchEventType.CANCELLED);\n          if (event.changedTouches[i].touchType === 'stylus') {\n            continue;\n          }\n          _this.onPointerCancel(adaptedEvent);\n          _this.markAsOutOfBounds(adaptedEvent.pointerId);\n          _this.activePointersCounter = 0;\n        }\n      });\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType, index, touchEventType) {\n      var rect = this.view.getBoundingClientRect();\n      var clientX = event.changedTouches[index].clientX;\n      var clientY = event.changedTouches[index].clientY;\n      return {\n        x: clientX,\n        y: clientY,\n        offsetX: clientX - rect.left,\n        offsetY: clientY - rect.top,\n        pointerId: event.changedTouches[index].identifier,\n        eventType: eventType,\n        pointerType: PointerType.TOUCH,\n        buttons: MouseButtons.NONE,\n        time: event.timeStamp,\n        allTouches: event.touches,\n        changedTouches: event.changedTouches,\n        touchEventType: touchEventType\n      };\n    }\n  }]);\n  return TouchEventManager;\n}(EventManager);\nexport { TouchEventManager as default };","map":{"version":3,"names":["EventTypes","MouseButtons","PointerType","TouchEventType","EventManager","isPointerInBounds","TouchEventManager","_EventManager","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","setListeners","_this","view","addEventListener","event","i","changedTouches","length","adaptedEvent","mapEvent","DOWN","x","y","touchType","markAsInBounds","pointerId","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","MOVE","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","OUT","onPointerOut","markAsOutOfBounds","onPointerOutOfBounds","UP","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","CANCEL","CANCELLED","onPointerCancel","index","touchEventType","rect","getBoundingClientRect","clientX","clientY","offsetX","left","offsetY","top","identifier","pointerType","TOUCH","buttons","NONE","time","timeStamp","allTouches","touches","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/web/tools/TouchEventManager.ts"],"sourcesContent":["import {\n  AdaptedEvent,\n  EventTypes,\n  MouseButtons,\n  PointerType,\n  TouchEventType,\n} from '../interfaces';\nimport EventManager from './EventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default class TouchEventManager extends EventManager {\n  public setListeners(): void {\n    this.view.addEventListener('touchstart', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.DOWN,\n          i,\n          TouchEventType.DOWN\n        );\n\n        // Here we skip stylus, because in case of anything different than touch we want to handle it by using PointerEvents\n        // If we leave stylus to send touch events, handlers will receive every action twice\n        if (\n          !isPointerInBounds(this.view, {\n            x: adaptedEvent.x,\n            y: adaptedEvent.y,\n          }) ||\n          //@ts-ignore touchType field does exist\n          event.changedTouches[i].touchType === 'stylus'\n        ) {\n          continue;\n        }\n\n        this.markAsInBounds(adaptedEvent.pointerId);\n\n        if (++this.activePointersCounter > 1) {\n          adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n          this.onPointerAdd(adaptedEvent);\n        } else {\n          this.onPointerDown(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('touchmove', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.MOVE,\n          i,\n          TouchEventType.MOVE\n        );\n        //@ts-ignore touchType field does exist\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n\n        const inBounds: boolean = isPointerInBounds(this.view, {\n          x: adaptedEvent.x,\n          y: adaptedEvent.y,\n        });\n\n        const pointerIndex: number = this.pointersInBounds.indexOf(\n          adaptedEvent.pointerId\n        );\n\n        if (inBounds) {\n          if (pointerIndex < 0) {\n            adaptedEvent.eventType = EventTypes.ENTER;\n            this.onPointerEnter(adaptedEvent);\n            this.markAsInBounds(adaptedEvent.pointerId);\n          } else {\n            this.onPointerMove(adaptedEvent);\n          }\n        } else {\n          if (pointerIndex >= 0) {\n            adaptedEvent.eventType = EventTypes.OUT;\n            this.onPointerOut(adaptedEvent);\n            this.markAsOutOfBounds(adaptedEvent.pointerId);\n          } else {\n            this.onPointerOutOfBounds(adaptedEvent);\n          }\n        }\n      }\n    });\n\n    this.view.addEventListener('touchend', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        // When we call reset on gesture handlers, it also resets their event managers\n        // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n        // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n        // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n        if (this.activePointersCounter === 0) {\n          break;\n        }\n\n        //@ts-ignore touchType field does exist\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.UP,\n          i,\n          TouchEventType.UP\n        );\n\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n\n        if (--this.activePointersCounter > 0) {\n          adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n          this.onPointerRemove(adaptedEvent);\n        } else {\n          this.onPointerUp(adaptedEvent);\n        }\n      }\n    });\n\n    this.view.addEventListener('touchcancel', (event: TouchEvent) => {\n      for (let i = 0; i < event.changedTouches.length; ++i) {\n        const adaptedEvent: AdaptedEvent = this.mapEvent(\n          event,\n          EventTypes.CANCEL,\n          i,\n          TouchEventType.CANCELLED\n        );\n\n        //@ts-ignore touchType field does exist\n        if (event.changedTouches[i].touchType === 'stylus') {\n          continue;\n        }\n\n        this.onPointerCancel(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n        this.activePointersCounter = 0;\n      }\n    });\n  }\n\n  protected mapEvent(\n    event: TouchEvent,\n    eventType: EventTypes,\n    index: number,\n    touchEventType: TouchEventType\n  ): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const clientX = event.changedTouches[index].clientX;\n    const clientY = event.changedTouches[index].clientY;\n\n    return {\n      x: clientX,\n      y: clientY,\n      offsetX: clientX - rect.left,\n      offsetY: clientY - rect.top,\n      pointerId: event.changedTouches[index].identifier,\n      eventType: eventType,\n      pointerType: PointerType.TOUCH,\n      buttons: MouseButtons.NONE,\n      time: event.timeStamp,\n      allTouches: event.touches,\n      changedTouches: event.changedTouches,\n      touchEventType: touchEventType,\n    };\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}