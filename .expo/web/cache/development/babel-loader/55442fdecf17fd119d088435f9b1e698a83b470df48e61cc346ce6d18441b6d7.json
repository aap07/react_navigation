{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.selectFromInteractiveMode = selectFromInteractiveMode;\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nvar _getProjectInfo = require(\"./getProjectInfo\");\nvar _prompts = require(\"./prompts\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction selectFromInteractiveMode(_x) {\n  return _selectFromInteractiveMode.apply(this, arguments);\n}\nfunction _selectFromInteractiveMode() {\n  _selectFromInteractiveMode = _asyncToGenerator(function* (_ref) {\n    var scheme = _ref.scheme,\n      mode = _ref.mode;\n    var newScheme = scheme;\n    var newMode = mode;\n    var project = (0, _getProjectInfo.getProjectInfo)();\n    if (project.schemes.length > 1) {\n      newScheme = yield (0, _prompts.promptForSchemeSelection)(project);\n    } else {\n      _cliTools().logger.info(`Automatically selected ${_chalk().default.bold(scheme)} scheme.`);\n    }\n    if (project.configurations.length > 1) {\n      newMode = yield (0, _prompts.promptForConfigurationSelection)(project);\n    } else {\n      _cliTools().logger.info(`Automatically selected ${_chalk().default.bold(mode)} configuration.`);\n    }\n    return {\n      scheme: newScheme,\n      mode: newMode\n    };\n  });\n  return _selectFromInteractiveMode.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","selectFromInteractiveMode","_cliTools","data","_chalk","_interopRequireDefault","_getProjectInfo","_prompts","obj","__esModule","default","_x","_selectFromInteractiveMode","apply","arguments","_ref","scheme","mode","newScheme","newMode","project","getProjectInfo","schemes","length","promptForSchemeSelection","logger","info","bold","configurations","promptForConfigurationSelection"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-platform-ios/build/tools/selectFromInteractiveMode.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.selectFromInteractiveMode = selectFromInteractiveMode;\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nvar _getProjectInfo = require(\"./getProjectInfo\");\nvar _prompts = require(\"./prompts\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nasync function selectFromInteractiveMode({\n  scheme,\n  mode\n}) {\n  let newScheme = scheme;\n  let newMode = mode;\n  const project = (0, _getProjectInfo.getProjectInfo)();\n  if (project.schemes.length > 1) {\n    newScheme = await (0, _prompts.promptForSchemeSelection)(project);\n  } else {\n    _cliTools().logger.info(`Automatically selected ${_chalk().default.bold(scheme)} scheme.`);\n  }\n  if (project.configurations.length > 1) {\n    newMode = await (0, _prompts.promptForConfigurationSelection)(project);\n  } else {\n    _cliTools().logger.info(`Automatically selected ${_chalk().default.bold(mode)} configuration.`);\n  }\n  return {\n    scheme: newScheme,\n    mode: newMode\n  };\n}\n\n//# sourceMappingURL=selectFromInteractiveMode.ts.map"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA;AAEbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,yBAAyB,GAAGA,yBAAyB;AAC7D,SAASC,SAASA,CAAA,EAAG;EACnB,IAAMC,IAAI,GAAGP,OAAO,CAAC,mCAAmC,CAAC;EACzDM,SAAS,GAAG,SAAAA,UAAA,EAAY;IACtB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASC,MAAMA,CAAA,EAAG;EAChB,IAAMD,IAAI,GAAGE,sBAAsB,CAACT,OAAO,CAAC,OAAO,CAAC,CAAC;EACrDQ,MAAM,GAAG,SAAAA,OAAA,EAAY;IACnB,OAAOD,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,IAAIG,eAAe,GAAGV,OAAO,mBAAmB,CAAC;AACjD,IAAIW,QAAQ,GAAGX,OAAO,YAAY,CAAC;AACnC,SAASS,sBAAsBA,CAACG,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAAC,SAChFP,yBAAyBA,CAAAU,EAAA;EAAA,OAAAC,0BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,2BAAA;EAAAA,0BAAA,GAAAjB,iBAAA,CAAxC,WAAAoB,IAAA,EAGG;IAAA,IAFDC,MAAM,GAAAD,IAAA,CAANC,MAAM;MACNC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAEJ,IAAIC,SAAS,GAAGF,MAAM;IACtB,IAAIG,OAAO,GAAGF,IAAI;IAClB,IAAMG,OAAO,GAAG,CAAC,CAAC,EAAEd,eAAe,CAACe,cAAc,EAAE,CAAC;IACrD,IAAID,OAAO,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC9BL,SAAS,SAAS,CAAC,CAAC,EAAEX,QAAQ,CAACiB,wBAAwB,EAAEJ,OAAO,CAAC;IACnE,CAAC,MAAM;MACLlB,SAAS,CAAC,CAAC,CAACuB,MAAM,CAACC,IAAI,CAAE,0BAAyBtB,MAAM,CAAC,CAAC,CAACM,OAAO,CAACiB,IAAI,CAACX,MAAM,CAAE,UAAS,CAAC;IAC5F;IACA,IAAII,OAAO,CAACQ,cAAc,CAACL,MAAM,GAAG,CAAC,EAAE;MACrCJ,OAAO,SAAS,CAAC,CAAC,EAAEZ,QAAQ,CAACsB,+BAA+B,EAAET,OAAO,CAAC;IACxE,CAAC,MAAM;MACLlB,SAAS,CAAC,CAAC,CAACuB,MAAM,CAACC,IAAI,CAAE,0BAAyBtB,MAAM,CAAC,CAAC,CAACM,OAAO,CAACiB,IAAI,CAACV,IAAI,CAAE,iBAAgB,CAAC;IACjG;IACA,OAAO;MACLD,MAAM,EAAEE,SAAS;MACjBD,IAAI,EAAEE;IACR,CAAC;EACH,CAAC;EAAA,OAAAP,0BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}