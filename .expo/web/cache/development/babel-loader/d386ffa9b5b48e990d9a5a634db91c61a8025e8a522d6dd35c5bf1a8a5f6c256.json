{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/plugins/withIosBaseMods.d.ts"],"sourcesContent":["import { JSONObject, JSONValue } from '@expo/json-file';\nimport xcode from 'xcode';\nimport { ExportedConfig } from '../Plugin.types';\nimport { Paths } from '../ios';\nimport { InfoPlist } from '../ios/IosConfig.types';\nimport { ForwardedBaseModOptions } from './createBaseMod';\ndeclare const defaultProviders: {\n    dangerous: import(\"./createBaseMod\").BaseModProviderMethods<unknown, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    appDelegate: import(\"./createBaseMod\").BaseModProviderMethods<Paths.AppDelegateProjectFile, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    expoPlist: import(\"./createBaseMod\").BaseModProviderMethods<JSONObject, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    xcodeproj: import(\"./createBaseMod\").BaseModProviderMethods<xcode.XcodeProject, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    infoPlist: import(\"./createBaseMod\").BaseModProviderMethods<InfoPlist, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    entitlements: import(\"./createBaseMod\").BaseModProviderMethods<JSONObject, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    podfileProperties: import(\"./createBaseMod\").BaseModProviderMethods<Record<string, JSONValue>, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n};\ntype IosDefaultProviders = typeof defaultProviders;\nexport declare function withIosBaseMods(config: ExportedConfig, { providers, ...props }?: ForwardedBaseModOptions & {\n    providers?: Partial<IosDefaultProviders>;\n}): ExportedConfig;\nexport declare function getIosModFileProviders(): {\n    dangerous: import(\"./createBaseMod\").BaseModProviderMethods<unknown, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    appDelegate: import(\"./createBaseMod\").BaseModProviderMethods<Paths.AppDelegateProjectFile, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    expoPlist: import(\"./createBaseMod\").BaseModProviderMethods<JSONObject, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    xcodeproj: import(\"./createBaseMod\").BaseModProviderMethods<xcode.XcodeProject, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    infoPlist: import(\"./createBaseMod\").BaseModProviderMethods<InfoPlist, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    entitlements: import(\"./createBaseMod\").BaseModProviderMethods<JSONObject, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n    podfileProperties: import(\"./createBaseMod\").BaseModProviderMethods<Record<string, JSONValue>, Partial<Pick<import(\"./withMod\").BaseModOptions, \"skipEmptyMod\" | \"saveToInternal\">>>;\n};\nexport {};\n"],"mappings":"AA4BA"},"metadata":{},"sourceType":"module","externalDependencies":[]}