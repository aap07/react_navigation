{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TargetType = void 0;\nexports.findApplicationTargetWithDependenciesAsync = findApplicationTargetWithDependenciesAsync;\nexports.findFirstNativeTarget = findFirstNativeTarget;\nexports.findNativeTargetByName = findNativeTargetByName;\nexports.findSignableTargets = findSignableTargets;\nexports.getNativeTargets = getNativeTargets;\nexports.getXCBuildConfigurationFromPbxproj = getXCBuildConfigurationFromPbxproj;\nexports.isTargetOfType = isTargetOfType;\nfunction _BuildScheme() {\n  var data = require(\"./BuildScheme\");\n  _BuildScheme = function _BuildScheme() {\n    return data;\n  };\n  return data;\n}\nfunction _Xcodeproj() {\n  var data = require(\"./utils/Xcodeproj\");\n  _Xcodeproj = function _Xcodeproj() {\n    return data;\n  };\n  return data;\n}\nfunction _string() {\n  var data = require(\"./utils/string\");\n  _string = function _string() {\n    return data;\n  };\n  return data;\n}\nvar TargetType;\nexports.TargetType = TargetType;\n(function (TargetType) {\n  TargetType[\"APPLICATION\"] = \"com.apple.product-type.application\";\n  TargetType[\"EXTENSION\"] = \"com.apple.product-type.app-extension\";\n  TargetType[\"WATCH\"] = \"com.apple.product-type.application.watchapp\";\n  TargetType[\"APP_CLIP\"] = \"com.apple.product-type.application.on-demand-install-capable\";\n  TargetType[\"STICKER_PACK_EXTENSION\"] = \"com.apple.product-type.app-extension.messages-sticker-pack\";\n  TargetType[\"FRAMEWORK\"] = \"com.apple.product-type.framework\";\n  TargetType[\"OTHER\"] = \"other\";\n})(TargetType || (exports.TargetType = TargetType = {}));\nfunction getXCBuildConfigurationFromPbxproj(project) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    targetName = _ref.targetName,\n    _ref$buildConfigurati = _ref.buildConfiguration,\n    buildConfiguration = _ref$buildConfigurati === void 0 ? 'Release' : _ref$buildConfigurati;\n  var _ref2 = targetName ? findNativeTargetByName(project, targetName) : findFirstNativeTarget(project),\n    _ref3 = _slicedToArray(_ref2, 2),\n    nativeTarget = _ref3[1];\n  var _ref4 = (0, _Xcodeproj().getBuildConfigurationForListIdAndName)(project, {\n      configurationListId: nativeTarget.buildConfigurationList,\n      buildConfiguration: buildConfiguration\n    }),\n    _ref5 = _slicedToArray(_ref4, 2),\n    xcBuildConfiguration = _ref5[1];\n  return xcBuildConfiguration !== null && xcBuildConfiguration !== void 0 ? xcBuildConfiguration : null;\n}\nfunction findApplicationTargetWithDependenciesAsync(_x, _x2) {\n  return _findApplicationTargetWithDependenciesAsync.apply(this, arguments);\n}\nfunction _findApplicationTargetWithDependenciesAsync() {\n  _findApplicationTargetWithDependenciesAsync = _asyncToGenerator(function* (projectRoot, scheme) {\n    var applicationTargetName = yield (0, _BuildScheme().getApplicationTargetNameForSchemeAsync)(projectRoot, scheme);\n    var project = (0, _Xcodeproj().getPbxproj)(projectRoot);\n    var _findNativeTargetByNa = findNativeTargetByName(project, applicationTargetName),\n      _findNativeTargetByNa2 = _slicedToArray(_findNativeTargetByNa, 2),\n      applicationTarget = _findNativeTargetByNa2[1];\n    var dependencies = getTargetDependencies(project, applicationTarget);\n    return {\n      name: (0, _string().trimQuotes)(applicationTarget.name),\n      type: TargetType.APPLICATION,\n      signable: true,\n      dependencies: dependencies\n    };\n  });\n  return _findApplicationTargetWithDependenciesAsync.apply(this, arguments);\n}\nfunction getTargetDependencies(project, parentTarget) {\n  if (!parentTarget.dependencies || parentTarget.dependencies.length === 0) {\n    return undefined;\n  }\n  var nonSignableTargetTypes = [TargetType.FRAMEWORK];\n  return parentTarget.dependencies.map(function (_ref6) {\n    var value = _ref6.value;\n    var _project$getPBXGroupB = project.getPBXGroupByKeyAndType(value, 'PBXTargetDependency'),\n      targetId = _project$getPBXGroupB.target;\n    var _findNativeTargetById = findNativeTargetById(project, targetId),\n      _findNativeTargetById2 = _slicedToArray(_findNativeTargetById, 2),\n      target = _findNativeTargetById2[1];\n    var type = isTargetOfType(target, TargetType.EXTENSION) ? TargetType.EXTENSION : TargetType.OTHER;\n    return {\n      name: (0, _string().trimQuotes)(target.name),\n      type: type,\n      signable: !nonSignableTargetTypes.some(function (signableTargetType) {\n        return isTargetOfType(target, signableTargetType);\n      }),\n      dependencies: getTargetDependencies(project, target)\n    };\n  });\n}\nfunction isTargetOfType(target, targetType) {\n  return (0, _string().trimQuotes)(target.productType) === targetType;\n}\nfunction getNativeTargets(project) {\n  var section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(_Xcodeproj().isNotComment);\n}\nfunction findSignableTargets(project) {\n  var targets = getNativeTargets(project);\n  var signableTargetTypes = [TargetType.APPLICATION, TargetType.APP_CLIP, TargetType.EXTENSION, TargetType.WATCH, TargetType.STICKER_PACK_EXTENSION];\n  var applicationTargets = targets.filter(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n      target = _ref8[1];\n    for (var targetType of signableTargetTypes) {\n      if (isTargetOfType(target, targetType)) {\n        return true;\n      }\n    }\n    return false;\n  });\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any signable targets in project.pbxproj`);\n  }\n  return applicationTargets;\n}\nfunction findFirstNativeTarget(project) {\n  var targets = getNativeTargets(project);\n  var applicationTargets = targets.filter(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 2),\n      target = _ref10[1];\n    return isTargetOfType(target, TargetType.APPLICATION);\n  });\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any application target in project.pbxproj`);\n  }\n  return applicationTargets[0];\n}\nfunction findNativeTargetByName(project, targetName) {\n  var nativeTargets = getNativeTargets(project);\n  var nativeTargetEntry = nativeTargets.find(function (_ref11) {\n    var _ref12 = _slicedToArray(_ref11, 2),\n      i = _ref12[1];\n    return (0, _string().trimQuotes)(i.name) === targetName;\n  });\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target '${targetName}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\nfunction findNativeTargetById(project, targetId) {\n  var nativeTargets = getNativeTargets(project);\n  var nativeTargetEntry = nativeTargets.find(function (_ref13) {\n    var _ref14 = _slicedToArray(_ref13, 1),\n      key = _ref14[0];\n    return key === targetId;\n  });\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target with id '${targetId}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}","map":{"version":3,"names":["_BuildScheme","data","require","_Xcodeproj","_string","TargetType","exports","getXCBuildConfigurationFromPbxproj","project","_ref","arguments","length","undefined","targetName","_ref$buildConfigurati","buildConfiguration","_ref2","findNativeTargetByName","findFirstNativeTarget","_ref3","_slicedToArray","nativeTarget","_ref4","getBuildConfigurationForListIdAndName","configurationListId","buildConfigurationList","_ref5","xcBuildConfiguration","findApplicationTargetWithDependenciesAsync","_x","_x2","_findApplicationTargetWithDependenciesAsync","apply","_asyncToGenerator","projectRoot","scheme","applicationTargetName","getApplicationTargetNameForSchemeAsync","getPbxproj","_findNativeTargetByNa","_findNativeTargetByNa2","applicationTarget","dependencies","getTargetDependencies","name","trimQuotes","type","APPLICATION","signable","parentTarget","nonSignableTargetTypes","FRAMEWORK","map","_ref6","value","_project$getPBXGroupB","getPBXGroupByKeyAndType","targetId","target","_findNativeTargetById","findNativeTargetById","_findNativeTargetById2","isTargetOfType","EXTENSION","OTHER","some","signableTargetType","targetType","productType","getNativeTargets","section","pbxNativeTargetSection","Object","entries","filter","isNotComment","findSignableTargets","targets","signableTargetTypes","APP_CLIP","WATCH","STICKER_PACK_EXTENSION","applicationTargets","_ref7","_ref8","Error","_ref9","_ref10","nativeTargets","nativeTargetEntry","find","_ref11","_ref12","i","_ref13","_ref14","key"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config-plugins\\src\\ios\\Target.ts"],"sourcesContent":["import { PBXNativeTarget, PBXTargetDependency, XCBuildConfiguration, XcodeProject } from 'xcode';\n\nimport { getApplicationTargetNameForSchemeAsync } from './BuildScheme';\nimport {\n  getBuildConfigurationForListIdAndName,\n  getPbxproj,\n  isNotComment,\n  NativeTargetSectionEntry,\n} from './utils/Xcodeproj';\nimport { trimQuotes } from './utils/string';\n\nexport enum TargetType {\n  APPLICATION = 'com.apple.product-type.application',\n  EXTENSION = 'com.apple.product-type.app-extension',\n  WATCH = 'com.apple.product-type.application.watchapp',\n  APP_CLIP = 'com.apple.product-type.application.on-demand-install-capable',\n  STICKER_PACK_EXTENSION = 'com.apple.product-type.app-extension.messages-sticker-pack',\n  FRAMEWORK = 'com.apple.product-type.framework',\n  OTHER = 'other',\n}\n\nexport interface Target {\n  name: string;\n  type: TargetType;\n  signable: boolean;\n  dependencies?: Target[];\n}\n\nexport function getXCBuildConfigurationFromPbxproj(\n  project: XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string } = {}\n): XCBuildConfiguration | null {\n  const [, nativeTarget] = targetName\n    ? findNativeTargetByName(project, targetName)\n    : findFirstNativeTarget(project);\n  const [, xcBuildConfiguration] = getBuildConfigurationForListIdAndName(project, {\n    configurationListId: nativeTarget.buildConfigurationList,\n    buildConfiguration,\n  });\n  return xcBuildConfiguration ?? null;\n}\n\nexport async function findApplicationTargetWithDependenciesAsync(\n  projectRoot: string,\n  scheme: string\n): Promise<Target> {\n  const applicationTargetName = await getApplicationTargetNameForSchemeAsync(projectRoot, scheme);\n  const project = getPbxproj(projectRoot);\n  const [, applicationTarget] = findNativeTargetByName(project, applicationTargetName);\n  const dependencies = getTargetDependencies(project, applicationTarget);\n  return {\n    name: trimQuotes(applicationTarget.name),\n    type: TargetType.APPLICATION,\n    signable: true,\n    dependencies,\n  };\n}\n\nfunction getTargetDependencies(\n  project: XcodeProject,\n  parentTarget: PBXNativeTarget\n): Target[] | undefined {\n  if (!parentTarget.dependencies || parentTarget.dependencies.length === 0) {\n    return undefined;\n  }\n\n  const nonSignableTargetTypes: TargetType[] = [TargetType.FRAMEWORK];\n\n  return parentTarget.dependencies.map(({ value }) => {\n    const { target: targetId } = project.getPBXGroupByKeyAndType(\n      value,\n      'PBXTargetDependency'\n    ) as PBXTargetDependency;\n\n    const [, target] = findNativeTargetById(project, targetId);\n\n    const type = isTargetOfType(target, TargetType.EXTENSION)\n      ? TargetType.EXTENSION\n      : TargetType.OTHER;\n    return {\n      name: trimQuotes(target.name),\n      type,\n      signable: !nonSignableTargetTypes.some((signableTargetType) =>\n        isTargetOfType(target, signableTargetType)\n      ),\n      dependencies: getTargetDependencies(project, target),\n    };\n  });\n}\n\nexport function isTargetOfType(target: PBXNativeTarget, targetType: TargetType): boolean {\n  return trimQuotes(target.productType) === targetType;\n}\n\nexport function getNativeTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(isNotComment);\n}\n\nexport function findSignableTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const targets = getNativeTargets(project);\n\n  const signableTargetTypes: TargetType[] = [\n    TargetType.APPLICATION,\n    TargetType.APP_CLIP,\n    TargetType.EXTENSION,\n    TargetType.WATCH,\n    TargetType.STICKER_PACK_EXTENSION,\n  ];\n\n  const applicationTargets = targets.filter(([, target]) => {\n    for (const targetType of signableTargetTypes) {\n      if (isTargetOfType(target, targetType)) {\n        return true;\n      }\n    }\n    return false;\n  });\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any signable targets in project.pbxproj`);\n  }\n  return applicationTargets;\n}\n\nexport function findFirstNativeTarget(project: XcodeProject): NativeTargetSectionEntry {\n  const targets = getNativeTargets(project);\n  const applicationTargets = targets.filter(([, target]) =>\n    isTargetOfType(target, TargetType.APPLICATION)\n  );\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any application target in project.pbxproj`);\n  }\n  return applicationTargets[0];\n}\n\nexport function findNativeTargetByName(\n  project: XcodeProject,\n  targetName: string\n): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([, i]) => trimQuotes(i.name) === targetName);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target '${targetName}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n\nfunction findNativeTargetById(project: XcodeProject, targetId: string): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([key]) => key === targetId);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target with id '${targetId}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}