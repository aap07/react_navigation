{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _constants = require(\"./constants\");\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\nvar _utils = require(\"./utils\");\nvar _State = require(\"../State\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar PanGestureHandler = function (_DraggingGestureHandl) {\n  _inherits(PanGestureHandler, _DraggingGestureHandl);\n  var _super = _createSuper(PanGestureHandler);\n  function PanGestureHandler() {\n    _classCallCheck(this, PanGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PanGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'pan';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Pan;\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(PanGestureHandler.prototype), \"getHammerConfig\", this).call(this)), {}, {\n        direction: this.getDirection()\n      });\n    }\n  }, {\n    key: \"getState\",\n    value: function getState(type) {\n      var nextState = _get(_getPrototypeOf(PanGestureHandler.prototype), \"getState\", this).call(this, type);\n      if (this.previousState === _State.State.UNDETERMINED && nextState === _State.State.ACTIVE) {\n        return _State.State.BEGAN;\n      }\n      return nextState;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var config = this.getConfig();\n      var activeOffsetXStart = config.activeOffsetXStart,\n        activeOffsetXEnd = config.activeOffsetXEnd,\n        activeOffsetYStart = config.activeOffsetYStart,\n        activeOffsetYEnd = config.activeOffsetYEnd,\n        minDist = config.minDist;\n      var directions = [];\n      var horizontalDirections = [];\n      if (!(0, _utils.isnan)(minDist)) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (!(0, _utils.isnan)(activeOffsetXStart)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (!(0, _utils.isnan)(activeOffsetXEnd)) {\n        horizontalDirections.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (horizontalDirections.length === 2) {\n        horizontalDirections = [_hammerjs.default.DIRECTION_HORIZONTAL];\n      }\n      directions = directions.concat(horizontalDirections);\n      var verticalDirections = [];\n      if (!(0, _utils.isnan)(activeOffsetYStart)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (!(0, _utils.isnan)(activeOffsetYEnd)) {\n        verticalDirections.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      if (verticalDirections.length === 2) {\n        verticalDirections = [_hammerjs.default.DIRECTION_VERTICAL];\n      }\n      directions = directions.concat(verticalDirections);\n      if (!directions.length) {\n        return _hammerjs.default.DIRECTION_NONE;\n      }\n      if (directions[0] === _hammerjs.default.DIRECTION_HORIZONTAL && directions[1] === _hammerjs.default.DIRECTION_VERTICAL) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      if (horizontalDirections.length && verticalDirections.length) {\n        return _hammerjs.default.DIRECTION_ALL;\n      }\n      return directions[0];\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      if (!this.hasCustomActivationCriteria) {\n        return {\n          minDistSq: 10\n        };\n      }\n      return this.config;\n    }\n  }, {\n    key: \"shouldFailUnderCustomCriteria\",\n    value: function shouldFailUnderCustomCriteria(_ref, criteria) {\n      var deltaX = _ref.deltaX,\n        deltaY = _ref.deltaY;\n      return !(0, _utils.isnan)(criteria.failOffsetXStart) && deltaX < criteria.failOffsetXStart || !(0, _utils.isnan)(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd || !(0, _utils.isnan)(criteria.failOffsetYStart) && deltaY < criteria.failOffsetYStart || !(0, _utils.isnan)(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd;\n    }\n  }, {\n    key: \"shouldActivateUnderCustomCriteria\",\n    value: function shouldActivateUnderCustomCriteria(_ref2, criteria) {\n      var deltaX = _ref2.deltaX,\n        deltaY = _ref2.deltaY,\n        velocity = _ref2.velocity;\n      return !(0, _utils.isnan)(criteria.activeOffsetXStart) && deltaX < criteria.activeOffsetXStart || !(0, _utils.isnan)(criteria.activeOffsetXEnd) && deltaX > criteria.activeOffsetXEnd || !(0, _utils.isnan)(criteria.activeOffsetYStart) && deltaY < criteria.activeOffsetYStart || !(0, _utils.isnan)(criteria.activeOffsetYEnd) && deltaY > criteria.activeOffsetYEnd || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)({\n        x: deltaX,\n        y: deltaY\n      }), criteria.minDistSq) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.x, criteria.minVelocityX) || (0, _utils.TEST_MIN_IF_NOT_NAN)(velocity.y, criteria.minVelocityY) || (0, _utils.TEST_MIN_IF_NOT_NAN)((0, _utils.VEC_LEN_SQ)(velocity), criteria.minVelocitySq);\n    }\n  }, {\n    key: \"shouldMultiFingerPanFail\",\n    value: function shouldMultiFingerPanFail(_ref3) {\n      var pointerLength = _ref3.pointerLength,\n        scale = _ref3.scale,\n        deltaRotation = _ref3.deltaRotation;\n      if (pointerLength <= 1) {\n        return false;\n      }\n      var deltaScale = Math.abs(scale - 1);\n      var absDeltaRotation = Math.abs(deltaRotation);\n      if (deltaScale > _constants.MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n        return true;\n      }\n      if (absDeltaRotation > _constants.MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"updateHasCustomActivationCriteria\",\n    value: function updateHasCustomActivationCriteria(criteria) {\n      return (0, _utils.isValidNumber)(criteria.minDistSq) || (0, _utils.isValidNumber)(criteria.minVelocityX) || (0, _utils.isValidNumber)(criteria.minVelocityY) || (0, _utils.isValidNumber)(criteria.minVelocitySq) || (0, _utils.isValidNumber)(criteria.activeOffsetXStart) || (0, _utils.isValidNumber)(criteria.activeOffsetXEnd) || (0, _utils.isValidNumber)(criteria.activeOffsetYStart) || (0, _utils.isValidNumber)(criteria.activeOffsetYEnd);\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(props, _recognizer, inputData) {\n      if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n        return {\n          failed: true\n        };\n      }\n      var velocity = {\n        x: inputData.velocityX,\n        y: inputData.velocityY\n      };\n      if (this.hasCustomActivationCriteria && this.shouldActivateUnderCustomCriteria({\n        deltaX: inputData.deltaX,\n        deltaY: inputData.deltaY,\n        velocity: velocity\n      }, props)) {\n        if (this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation\n        })) {\n          return {\n            failed: true\n          };\n        }\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false\n      };\n    }\n  }]);\n  return PanGestureHandler;\n}(_DraggingGestureHandler.default);\nvar _default = PanGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_constants","_DraggingGestureHandler","_utils","_State","PanGestureHandler","_DraggingGestureHandl","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","default","Pan","value","getHammerConfig","_objectSpread","_get","_getPrototypeOf","prototype","call","direction","getDirection","getState","type","nextState","previousState","State","UNDETERMINED","ACTIVE","BEGAN","config","getConfig","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","minDist","directions","horizontalDirections","isnan","DIRECTION_ALL","push","DIRECTION_LEFT","DIRECTION_RIGHT","length","DIRECTION_HORIZONTAL","concat","verticalDirections","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_NONE","hasCustomActivationCriteria","minDistSq","shouldFailUnderCustomCriteria","_ref","criteria","deltaX","deltaY","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","shouldActivateUnderCustomCriteria","_ref2","velocity","TEST_MIN_IF_NOT_NAN","VEC_LEN_SQ","x","y","minVelocityX","minVelocityY","minVelocitySq","shouldMultiFingerPanFail","_ref3","pointerLength","scale","deltaRotation","deltaScale","Math","abs","absDeltaRotation","MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD","MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD","updateHasCustomActivationCriteria","isValidNumber","isGestureEnabledForEvent","props","_recognizer","inputData","failed","velocityX","velocityY","maxPointers","success"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\commonjs\\web_hammer\\PanGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport {\n  EventMap,\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport { State } from '../State';\n\nimport { Config, HammerInputExt } from './GestureHandler';\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type: keyof typeof EventMap) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions: number[] = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart)) {\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    }\n    if (!isnan(activeOffsetXEnd)) {\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (horizontalDirections.length === 2) {\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n    }\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart)) {\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    }\n    if (!isnan(activeOffsetYEnd)) {\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n    }\n\n    if (verticalDirections.length === 2) {\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n    }\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this.hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { deltaX, deltaY }: HammerInputExt,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria(\n    { deltaX, deltaY, velocity }: any,\n    criteria: any\n  ) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({\n    pointerLength,\n    scale,\n    deltaRotation,\n  }: {\n    deltaRotation: number;\n    pointerLength: number;\n    scale: number;\n  }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(\n    criteria: Config & { minVelocityX?: number; minVelocityY?: number }\n  ) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(\n    props: any,\n    _recognizer: any,\n    inputData: HammerInputExt & { deltaRotation: number }\n  ) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this.hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nexport default PanGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}