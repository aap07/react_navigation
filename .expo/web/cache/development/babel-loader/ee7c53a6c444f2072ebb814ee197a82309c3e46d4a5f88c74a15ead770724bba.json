{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadMetroConfig;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _metroConfig() {\n  var data = require(\"metro-config\");\n  _metroConfig = function _metroConfig() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nvar _getDefaultMetroConfig = _interopRequireDefault(require(\"./getDefaultMetroConfig\"));\nvar _metroPlatformResolver = require(\"./metroPlatformResolver\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getOverrideConfig(ctx) {\n  var outOfTreePlatforms = Object.keys(ctx.platforms).filter(function (platform) {\n    return ctx.platforms[platform].npmPackageName;\n  });\n  var resolver = {\n    platforms: [].concat(_toConsumableArray(Object.keys(ctx.platforms)), ['native'])\n  };\n  if (outOfTreePlatforms.length) {\n    resolver.resolveRequest = (0, _metroPlatformResolver.reactNativePlatformResolver)(outOfTreePlatforms.reduce(function (result, platform) {\n      result[platform] = ctx.platforms[platform].npmPackageName;\n      return result;\n    }, {}));\n  }\n  return {\n    resolver: resolver,\n    serializer: {\n      getModulesRunBeforeMainModule: function getModulesRunBeforeMainModule() {\n        return [require.resolve(_path().default.join(ctx.reactNativePath, 'Libraries/Core/InitializeCore'))].concat(_toConsumableArray(outOfTreePlatforms.map(function (platform) {\n          return require.resolve(`${ctx.platforms[platform].npmPackageName}/Libraries/Core/InitializeCore`, {\n            paths: [ctx.root]\n          });\n        })));\n      }\n    }\n  };\n}\nfunction loadMetroConfig(_x) {\n  return _loadMetroConfig.apply(this, arguments);\n}\nfunction _loadMetroConfig() {\n  _loadMetroConfig = _asyncToGenerator(function* (ctx) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var overrideConfig = getOverrideConfig(ctx);\n    if (options.reporter) {\n      overrideConfig.reporter = options.reporter;\n    }\n    var cwd = ctx.root;\n    var projectConfig = yield (0, _metroConfig().resolveConfig)(options.config, cwd);\n    if (projectConfig.isEmpty) {\n      throw new (_cliTools().CLIError)(`No Metro config found in ${cwd}`);\n    }\n    _cliTools().logger.debug(`Reading Metro config from ${projectConfig.filepath}`);\n    if (!global.__REACT_NATIVE_METRO_CONFIG_LOADED && !/['\"']@react-native\\/metro-config['\"']/.test(_fs().default.readFileSync(projectConfig.filepath, 'utf8'))) {\n      _cliTools().logger.warn('From React Native 0.72, your metro.config.js file should extend' + \"'@react-native/metro-config'. Please see the React Native 0.72 \" + 'changelog, or copy the template at:\\n' + 'https://github.com/facebook/react-native/blob/main/packages/react-native/template/metro.config.js');\n      _cliTools().logger.warn('Falling back to internal defaults.');\n      var loadedConfig = yield (0, _metroConfig().loadConfig)(_objectSpread({\n        cwd: ctx.root\n      }, options), (0, _getDefaultMetroConfig.default)(ctx));\n      return (0, _metroConfig().mergeConfig)(loadedConfig, overrideConfig);\n    }\n    return (0, _metroConfig().mergeConfig)(yield (0, _metroConfig().loadConfig)(_objectSpread({\n      cwd: cwd\n    }, options)), overrideConfig);\n  });\n  return _loadMetroConfig.apply(this, arguments);\n}","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","_toConsumableArray","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","exports","value","default","loadMetroConfig","_fs","data","_interopRequireDefault","_path","_metroConfig","_cliTools","_getDefaultMetroConfig","_metroPlatformResolver","obj","__esModule","getOverrideConfig","ctx","outOfTreePlatforms","platforms","platform","npmPackageName","resolver","concat","resolveRequest","reactNativePlatformResolver","reduce","result","serializer","getModulesRunBeforeMainModule","resolve","join","reactNativePath","map","paths","root","_x","_loadMetroConfig","options","undefined","overrideConfig","reporter","cwd","projectConfig","resolveConfig","config","isEmpty","CLIError","logger","debug","filepath","global","__REACT_NATIVE_METRO_CONFIG_LOADED","test","readFileSync","warn","loadedConfig","loadConfig","mergeConfig"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-plugin-metro/build/tools/loadMetroConfig.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadMetroConfig;\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _metroConfig() {\n  const data = require(\"metro-config\");\n  _metroConfig = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nvar _getDefaultMetroConfig = _interopRequireDefault(require(\"./getDefaultMetroConfig\"));\nvar _metroPlatformResolver = require(\"./metroPlatformResolver\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Get the config options to override based on RN CLI inputs.\n */\nfunction getOverrideConfig(ctx) {\n  const outOfTreePlatforms = Object.keys(ctx.platforms).filter(platform => ctx.platforms[platform].npmPackageName);\n  const resolver = {\n    platforms: [...Object.keys(ctx.platforms), 'native']\n  };\n  if (outOfTreePlatforms.length) {\n    resolver.resolveRequest = (0, _metroPlatformResolver.reactNativePlatformResolver)(outOfTreePlatforms.reduce((result, platform) => {\n      result[platform] = ctx.platforms[platform].npmPackageName;\n      return result;\n    }, {}));\n  }\n  return {\n    resolver,\n    serializer: {\n      // We can include multiple copies of InitializeCore here because metro will\n      // only add ones that are already part of the bundle\n      getModulesRunBeforeMainModule: () => [require.resolve(_path().default.join(ctx.reactNativePath, 'Libraries/Core/InitializeCore')), ...outOfTreePlatforms.map(platform => require.resolve(`${ctx.platforms[platform].npmPackageName}/Libraries/Core/InitializeCore`, {\n        paths: [ctx.root]\n      }))]\n    }\n  };\n}\n/**\n * Load Metro config.\n *\n * Allows the CLI to override select values in `metro.config.js` based on\n * dynamic user options in `ctx`.\n */\nasync function loadMetroConfig(ctx, options = {}) {\n  const overrideConfig = getOverrideConfig(ctx);\n  if (options.reporter) {\n    overrideConfig.reporter = options.reporter;\n  }\n  const cwd = ctx.root;\n  const projectConfig = await (0, _metroConfig().resolveConfig)(options.config, cwd);\n  if (projectConfig.isEmpty) {\n    throw new (_cliTools().CLIError)(`No Metro config found in ${cwd}`);\n  }\n  _cliTools().logger.debug(`Reading Metro config from ${projectConfig.filepath}`);\n  if (!global.__REACT_NATIVE_METRO_CONFIG_LOADED &&\n  // TODO(huntie): Remove this check from 0.73 onwards (all users will be on\n  // the next major @react-native/metro-config version)\n  !/['\"']@react-native\\/metro-config['\"']/.test(_fs().default.readFileSync(projectConfig.filepath, 'utf8'))) {\n    _cliTools().logger.warn('From React Native 0.72, your metro.config.js file should extend' + \"'@react-native/metro-config'. Please see the React Native 0.72 \" + 'changelog, or copy the template at:\\n' + 'https://github.com/facebook/react-native/blob/main/packages/react-native/template/metro.config.js');\n    _cliTools().logger.warn('Falling back to internal defaults.');\n    const loadedConfig = await (0, _metroConfig().loadConfig)({\n      cwd: ctx.root,\n      ...options\n    },\n    // Provide React Native defaults on top of Metro defaults\n    (0, _getDefaultMetroConfig.default)(ctx));\n    return (0, _metroConfig().mergeConfig)(loadedConfig, overrideConfig);\n  }\n  return (0, _metroConfig().mergeConfig)(await (0, _metroConfig().loadConfig)({\n    cwd,\n    ...options\n  }), overrideConfig);\n}\n\n//# sourceMappingURL=loadMetroConfig.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}