{"ast":null,"code":"import { YAMLSeq } from \"../../nodes/YAMLSeq.js\";","map":{"version":3,"names":["YAMLSeq"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/dist/schema/yaml-1.1/omap.d.ts"],"sourcesContent":["import { ToJSContext } from '../../nodes/toJS.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { CreateNodeContext } from '../../util.js';\nimport type { Schema } from '../Schema.js';\nimport { CollectionTag } from '../types.js';\nexport declare class YAMLOMap extends YAMLSeq {\n    static tag: string;\n    constructor();\n    add: (pair: import(\"../../index.js\").Pair<any, any> | {\n        key: any;\n        value: any;\n    }, overwrite?: boolean | undefined) => void;\n    delete: (key: unknown) => boolean;\n    get: {\n        (key: unknown, keepScalar: true): import(\"../../index.js\").Scalar<any> | undefined;\n        (key: unknown, keepScalar?: false | undefined): any;\n        (key: unknown, keepScalar?: boolean | undefined): any;\n    };\n    has: (key: unknown) => boolean;\n    set: (key: any, value: any) => void;\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_?: unknown, ctx?: ToJSContext): unknown[];\n    static from(schema: Schema, iterable: unknown, ctx: CreateNodeContext): YAMLOMap;\n}\nexport declare const omap: CollectionTag;\n"],"mappings":"AACA,SAASA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}