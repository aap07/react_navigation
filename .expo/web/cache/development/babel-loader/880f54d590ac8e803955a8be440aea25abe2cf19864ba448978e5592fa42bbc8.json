{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/cli/node_modules/type-fest/source/fixed-length-array.d.ts"],"sourcesContent":["/**\nMethods to exclude.\n*/\ntype ArrayLengthMutationKeys = 'splice' | 'push' | 'pop' | 'shift' | 'unshift';\n\n/**\nCreate a type that represents an array of the given type and length. The array's length and the `Array` prototype methods that manipulate its length are excluded in the resulting type.\n\nPlease participate in [this issue](https://github.com/microsoft/TypeScript/issues/26223) if you want to have a similiar type built into TypeScript.\n\nUse-cases:\n- Declaring fixed-length tuples or arrays with a large number of items.\n- Creating a range union (for example, `0 | 1 | 2 | 3 | 4` from the keys of such a type) without having to resort to recursive types.\n- Creating an array of coordinates with a static length, for example, length of 3 for a 3D vector.\n\n@example\n```\nimport {FixedLengthArray} from 'type-fest';\n\ntype FencingTeam = FixedLengthArray<string, 3>;\n\nconst guestFencingTeam: FencingTeam = ['Josh', 'Michael', 'Robert'];\n\nconst homeFencingTeam: FencingTeam = ['George', 'John'];\n//=> error TS2322: Type string[] is not assignable to type 'FencingTeam'\n\nguestFencingTeam.push('Sam');\n//=> error TS2339: Property 'push' does not exist on type 'FencingTeam'\n```\n*/\nexport type FixedLengthArray<Element, Length extends number, ArrayPrototype = [Element, ...Element[]]> = Pick<\n\tArrayPrototype,\n\tExclude<keyof ArrayPrototype, ArrayLengthMutationKeys>\n> & {\n\t[index: number]: Element;\n\t[Symbol.iterator]: () => IterableIterator<Element>;\n\treadonly length: Length;\n};\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}