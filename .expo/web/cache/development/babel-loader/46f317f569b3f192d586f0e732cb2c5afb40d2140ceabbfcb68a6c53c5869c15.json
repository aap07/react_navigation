{"ast":null,"code":"import React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Home Screen\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Details\");\n      },\n      style: {\n        backgroundColor: \"blue\",\n        padding: 10,\n        marginTop: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Details\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Profiles\");\n      },\n      style: {\n        backgroundColor: \"red\",\n        padding: 10,\n        marginTop: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\"\n        },\n        children: \"Profile\"\n      })\n    })]\n  });\n};\nvar DetailsScreen = function DetailsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      },\n      style: {\n        backgroundColor: 'green',\n        padding: 10,\n        marginTop: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Go to Home\"\n      })\n    })]\n  });\n};\nvar ProfilesScreen = function ProfilesScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Profile Screen\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      },\n      style: {\n        backgroundColor: 'black',\n        padding: 10,\n        marginTop: 10\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Go to Home\"\n      })\n    })]\n  });\n};\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Profiles\",\n        component: ProfilesScreen\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","TouchableOpacity","View","Text","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","navigation","style","flex","alignItems","justifyContent","children","onPress","navigate","backgroundColor","padding","marginTop","color","DetailsScreen","_ref2","ProfilesScreen","_ref3","Stack","App","Navigator","initialRouteName","Screen","name","component"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/App.js"],"sourcesContent":["import React from \"react\";\nimport { TouchableOpacity, View, Text } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\n// Layar Home\nconst HomeScreen = ({ navigation }) => (\n  <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n    <Text>Home Screen</Text>\n    <TouchableOpacity\n      // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n      // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n      // Details adalah nama route yang akan dikunjungi\n      onPress={() => navigation.navigate(\"Details\")}\n      style={{ backgroundColor: \"blue\", padding: 10, marginTop: 10 }}\n    >\n      <Text style={{ color: \"white\" }}>Details</Text>\n    </TouchableOpacity>\n    <TouchableOpacity\n      // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n      // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n      // Profiles adalah nama route yang akan dikunjungi\n      onPress={() => navigation.navigate(\"Profiles\")}\n      style={{ backgroundColor: \"red\", padding: 10, marginTop: 10 }}\n    >\n      <Text style={{ color: \"white\" }}>Profile</Text>\n    </TouchableOpacity>\n  </View>\n);\n\n\n// Layar Detail\nconst DetailsScreen = ({ navigation }) => (\n  <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Text>Details Screen</Text>\n    <TouchableOpacity\n      // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n      // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n      // Home adalah nama route yang akan dikunjungi\n      onPress={() => navigation.navigate('Home')}\n      style={{ backgroundColor: 'green', padding: 10, marginTop: 10 }}\n    >\n      <Text style={{ color: 'white' }}>Go to Home</Text>\n    </TouchableOpacity>\n  </View>\n);\n\n// Layar Profile\nconst ProfilesScreen = ({ navigation }) => (\n  <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n    <Text>Profile Screen</Text>\n    <TouchableOpacity\n      // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n      // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n      // Home adalah nama route yang akan dikunjungi\n      onPress={() => navigation.navigate('Home')}\n      style={{ backgroundColor: 'black', padding: 10, marginTop: 10 }}\n    >\n      <Text style={{ color: 'white' }}>Go to Home</Text>\n    </TouchableOpacity>\n  </View>\n);\n\n// Membuat tumpukan navigasi (stack navigator) dengan menggunakan library React Navigation.\nconst Stack = createStackNavigator();\n\nconst App = () => (\n// Mengelola navigasi dalam aplikasi menggunakan React Navigation.\n<NavigationContainer>\n  {/* Inisialisasi tumpukan navigator dengan rute awal yang ditentukan sebagai \"Home\". */}\n  <Stack.Navigator initialRouteName=\"Home\">\n    {/* \n    Setiap \"Stack.Screen\" merepresentasikan satu rute (layar) dalam tumpukan navigator.\n    Anda dapat menambahkan lebih banyak Stack.Screen sesuai dengan kebutuhan aplikasi.\n    */}\n    {/* Contoh: */}\n    {/* <Stack.Screen name=\"NamaRute\" component={NamaRuteComponent} /> */}\n    {/* Layar \"Home\" akan menggunakan komponen HomeScreen untuk tampilannya. */}\n    <Stack.Screen name=\"Home\" component={HomeScreen} />    \n    {/* Layar \"Details\" akan menggunakan komponen DetailsScreen untuk tampilannya. */}\n    <Stack.Screen name=\"Details\" component={DetailsScreen} />\n    {/* Layar \"Profiles\" akan menggunakan komponen ProfilesScreen untuk tampilannya. */}\n    <Stack.Screen name=\"Profiles\" component={ProfilesScreen} />\n  </Stack.Navigator>\n</NavigationContainer>\n\n);\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG/D,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA;EAAA,IAAMC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAAA,OAC9BH,KAAA,CAACP,IAAI;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvEV,IAAA,CAACJ,IAAI;MAAAc,QAAA,EAAC;IAAW,CAAM,CAAC,EACxBV,IAAA,CAACN,gBAAgB;MAIfiB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,SAAS,CAAC;MAAA,CAAC;MAC9CN,KAAK,EAAE;QAAEO,eAAe,EAAE,MAAM;QAAEC,OAAO,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAL,QAAA,EAE/DV,IAAA,CAACJ,IAAI;QAACU,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAAO,CAAM;IAAC,CAC/B,CAAC,EACnBV,IAAA,CAACN,gBAAgB;MAIfiB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,UAAU,CAAC;MAAA,CAAC;MAC/CN,KAAK,EAAE;QAAEO,eAAe,EAAE,KAAK;QAAEC,OAAO,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAL,QAAA,EAE9DV,IAAA,CAACJ,IAAI;QAACU,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAAO,CAAM;IAAC,CAC/B,CAAC;EAAA,CACf,CAAC;AAAA,CACR;AAID,IAAMO,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA;EAAA,IAAMb,UAAU,GAAAa,KAAA,CAAVb,UAAU;EAAA,OACjCH,KAAA,CAACP,IAAI;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvEV,IAAA,CAACJ,IAAI;MAAAc,QAAA,EAAC;IAAc,CAAM,CAAC,EAC3BV,IAAA,CAACN,gBAAgB;MAIfiB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,MAAM,CAAC;MAAA,CAAC;MAC3CN,KAAK,EAAE;QAAEO,eAAe,EAAE,OAAO;QAAEC,OAAO,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAL,QAAA,EAEhEV,IAAA,CAACJ,IAAI;QAACU,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAAU,CAAM;IAAC,CAClC,CAAC;EAAA,CACf,CAAC;AAAA,CACR;AAGD,IAAMS,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA;EAAA,IAAMf,UAAU,GAAAe,KAAA,CAAVf,UAAU;EAAA,OAClCH,KAAA,CAACP,IAAI;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvEV,IAAA,CAACJ,IAAI;MAAAc,QAAA,EAAC;IAAc,CAAM,CAAC,EAC3BV,IAAA,CAACN,gBAAgB;MAIfiB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,MAAM,CAAC;MAAA,CAAC;MAC3CN,KAAK,EAAE;QAAEO,eAAe,EAAE,OAAO;QAAEC,OAAO,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAL,QAAA,EAEhEV,IAAA,CAACJ,IAAI;QAACU,KAAK,EAAE;UAAEU,KAAK,EAAE;QAAQ,CAAE;QAAAN,QAAA,EAAC;MAAU,CAAM;IAAC,CAClC,CAAC;EAAA,CACf,CAAC;AAAA,CACR;AAGD,IAAMW,KAAK,GAAGvB,oBAAoB,CAAC,CAAC;AAEpC,IAAMwB,GAAG,GAAG,SAANA,GAAGA,CAAA;EAAA,OAETtB,IAAA,CAACH,mBAAmB;IAAAa,QAAA,EAElBR,KAAA,CAACmB,KAAK,CAACE,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAd,QAAA,GAQtCV,IAAA,CAACqB,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAExB;MAAW,CAAE,CAAC,EAEnDH,IAAA,CAACqB,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEV;MAAc,CAAE,CAAC,EAEzDjB,IAAA,CAACqB,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAER;MAAe,CAAE,CAAC;IAAA,CAC5C;EAAC,CACC,CAAC;AAAA,CAErB;AAED,eAAeG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}