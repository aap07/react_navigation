{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getLatestRelease;\nfunction _semver() {\n  var data = _interopRequireDefault(require(\"semver\"));\n  _semver = function _semver() {\n    return data;\n  };\n  return data;\n}\nvar _releaseCacheManager = _interopRequireDefault(require(\"./releaseCacheManager\"));\nvar _fetch = require(\"../fetch\");\nvar _logger = _interopRequireDefault(require(\"../logger\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getLatestRelease(_x, _x2) {\n  return _getLatestRelease.apply(this, arguments);\n}\nfunction _getLatestRelease() {\n  _getLatestRelease = _asyncToGenerator(function* (name, currentVersion) {\n    _logger.default.debug('Checking for a newer version of React Native');\n    try {\n      _logger.default.debug(`Current version: ${currentVersion}`);\n      if (currentVersion.includes('1000.0.0') || currentVersion.includes('0.0.0')) {\n        return;\n      }\n      var cachedLatest = _releaseCacheManager.default.get(name, 'latestVersion');\n      if (cachedLatest) {\n        _logger.default.debug(`Cached release version: ${cachedLatest}`);\n      }\n      var aWeek = 7 * 24 * 60 * 60 * 1000;\n      var lastChecked = _releaseCacheManager.default.get(name, 'lastChecked');\n      var now = new Date();\n      if (lastChecked && Number(now) - Number(new Date(lastChecked)) < aWeek) {\n        _logger.default.debug('Cached release is still recent, skipping remote check');\n        return;\n      }\n      _logger.default.debug('Checking for newer releases on GitHub');\n      var eTag = _releaseCacheManager.default.get(name, 'eTag');\n      var latestVersion = yield getLatestRnDiffPurgeVersion(name, eTag);\n      _logger.default.debug(`Latest release: ${latestVersion}`);\n      if (_semver().default.compare(latestVersion, currentVersion) === 1 && !_semver().default.prerelease(latestVersion)) {\n        return {\n          version: latestVersion,\n          changelogUrl: buildChangelogUrl(latestVersion),\n          diffUrl: buildDiffUrl(currentVersion)\n        };\n      }\n    } catch (e) {\n      _logger.default.debug('Something went wrong with remote version checking, moving on');\n      _logger.default.debug(e);\n    }\n    return undefined;\n  });\n  return _getLatestRelease.apply(this, arguments);\n}\nfunction buildChangelogUrl(version) {\n  return `https://github.com/facebook/react-native/releases/tag/v${version}`;\n}\nfunction buildDiffUrl(version) {\n  return `https://react-native-community.github.io/upgrade-helper/?from=${version}`;\n}\nfunction getLatestRnDiffPurgeVersion(_x3, _x4) {\n  return _getLatestRnDiffPurgeVersion.apply(this, arguments);\n}\nfunction _getLatestRnDiffPurgeVersion() {\n  _getLatestRnDiffPurgeVersion = _asyncToGenerator(function* (name, eTag) {\n    var options = {\n      headers: {\n        'User-Agent': 'React-Native-CLI'\n      }\n    };\n    if (eTag) {\n      options.headers['If-None-Match'] = eTag;\n    }\n    var _yield = yield (0, _fetch.fetch)('https://api.github.com/repos/react-native-community/rn-diff-purge/tags', options),\n      data = _yield.data,\n      status = _yield.status,\n      headers = _yield.headers;\n    if (status === 200) {\n      var body = data;\n      var latestVersion = body[0].name.substring(8);\n      var eTagHeader = headers.get('eTag');\n      if (!_semver().default.prerelease(latestVersion) && eTagHeader) {\n        _logger.default.debug(`Saving ${eTagHeader} to cache`);\n        _releaseCacheManager.default.set(name, 'eTag', eTagHeader);\n        _releaseCacheManager.default.set(name, 'latestVersion', latestVersion);\n      }\n      return latestVersion;\n    }\n    if (status === 304) {\n      var _latestVersion = _releaseCacheManager.default.get(name, 'latestVersion');\n      if (_latestVersion) {\n        return _latestVersion;\n      }\n    }\n    return '0.0.0';\n  });\n  return _getLatestRnDiffPurgeVersion.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","getLatestRelease","_semver","data","_interopRequireDefault","_releaseCacheManager","_fetch","_logger","obj","__esModule","_x","_x2","_getLatestRelease","apply","arguments","name","currentVersion","debug","includes","cachedLatest","get","aWeek","lastChecked","now","Date","Number","eTag","latestVersion","getLatestRnDiffPurgeVersion","compare","prerelease","version","changelogUrl","buildChangelogUrl","diffUrl","buildDiffUrl","e","undefined","_x3","_x4","_getLatestRnDiffPurgeVersion","options","headers","_yield","fetch","status","body","substring","eTagHeader","set"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-tools/build/releaseChecker/getLatestRelease.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getLatestRelease;\nfunction _semver() {\n  const data = _interopRequireDefault(require(\"semver\"));\n  _semver = function () {\n    return data;\n  };\n  return data;\n}\nvar _releaseCacheManager = _interopRequireDefault(require(\"./releaseCacheManager\"));\nvar _fetch = require(\"../fetch\");\nvar _logger = _interopRequireDefault(require(\"../logger\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Checks via GitHub API if there is a newer stable React Native release and,\n * if it exists, returns the release data.\n *\n * If the latest release is not newer or if it's a prerelease, the function\n * will return undefined.\n */\nasync function getLatestRelease(name, currentVersion) {\n  _logger.default.debug('Checking for a newer version of React Native');\n  try {\n    _logger.default.debug(`Current version: ${currentVersion}`);\n\n    // if the version is a 1000.0.0 version or 0.0.0, we want to bail\n    // since they are nightlies or unreleased versions\n    if (currentVersion.includes('1000.0.0') || currentVersion.includes('0.0.0')) {\n      return;\n    }\n    const cachedLatest = _releaseCacheManager.default.get(name, 'latestVersion');\n    if (cachedLatest) {\n      _logger.default.debug(`Cached release version: ${cachedLatest}`);\n    }\n    const aWeek = 7 * 24 * 60 * 60 * 1000;\n    const lastChecked = _releaseCacheManager.default.get(name, 'lastChecked');\n    const now = new Date();\n    if (lastChecked && Number(now) - Number(new Date(lastChecked)) < aWeek) {\n      _logger.default.debug('Cached release is still recent, skipping remote check');\n      return;\n    }\n    _logger.default.debug('Checking for newer releases on GitHub');\n    const eTag = _releaseCacheManager.default.get(name, 'eTag');\n    const latestVersion = await getLatestRnDiffPurgeVersion(name, eTag);\n    _logger.default.debug(`Latest release: ${latestVersion}`);\n    if (_semver().default.compare(latestVersion, currentVersion) === 1 && !_semver().default.prerelease(latestVersion)) {\n      return {\n        version: latestVersion,\n        changelogUrl: buildChangelogUrl(latestVersion),\n        diffUrl: buildDiffUrl(currentVersion)\n      };\n    }\n  } catch (e) {\n    _logger.default.debug('Something went wrong with remote version checking, moving on');\n    _logger.default.debug(e);\n  }\n  return undefined;\n}\nfunction buildChangelogUrl(version) {\n  return `https://github.com/facebook/react-native/releases/tag/v${version}`;\n}\nfunction buildDiffUrl(version) {\n  return `https://react-native-community.github.io/upgrade-helper/?from=${version}`;\n}\n\n/**\n * Returns the most recent React Native version available to upgrade to.\n */\nasync function getLatestRnDiffPurgeVersion(name, eTag) {\n  const options = {\n    // https://developer.github.com/v3/#user-agent-required\n    headers: {\n      'User-Agent': 'React-Native-CLI'\n    }\n  };\n  if (eTag) {\n    options.headers['If-None-Match'] = eTag;\n  }\n  const {\n    data,\n    status,\n    headers\n  } = await (0, _fetch.fetch)('https://api.github.com/repos/react-native-community/rn-diff-purge/tags', options);\n\n  // Remote is newer.\n  if (status === 200) {\n    const body = data;\n    const latestVersion = body[0].name.substring(8);\n    const eTagHeader = headers.get('eTag');\n\n    // Update cache only if newer release is stable.\n    if (!_semver().default.prerelease(latestVersion) && eTagHeader) {\n      _logger.default.debug(`Saving ${eTagHeader} to cache`);\n      _releaseCacheManager.default.set(name, 'eTag', eTagHeader);\n      _releaseCacheManager.default.set(name, 'latestVersion', latestVersion);\n    }\n    return latestVersion;\n  }\n\n  // Cache is still valid.\n  if (status === 304) {\n    const latestVersion = _releaseCacheManager.default.get(name, 'latestVersion');\n    if (latestVersion) {\n      return latestVersion;\n    }\n  }\n\n  // Should be returned only if something went wrong.\n  return '0.0.0';\n}\n\n//# sourceMappingURL=getLatestRelease.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}