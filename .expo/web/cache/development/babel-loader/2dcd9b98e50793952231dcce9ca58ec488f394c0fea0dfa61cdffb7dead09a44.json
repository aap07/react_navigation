{"ast":null,"code":"import { Reanimated } from \"./reanimatedWrapper\";\nimport { State } from \"../../State\";\nimport { tagMessage } from \"../../utils\";\nvar warningMessage = tagMessage('react-native-reanimated is required in order to use synchronous state management');\nvar REANIMATED_AVAILABLE = (Reanimated == null ? void 0 : Reanimated.useSharedValue) !== undefined;\nvar setGestureState = Reanimated == null ? void 0 : Reanimated.setGestureState;\nexport var GestureStateManager = {\n  create: function create(handlerTag) {\n    'worklet';\n\n    return {\n      begin: function begin() {\n        'worklet';\n\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.BEGAN);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n      activate: function activate() {\n        'worklet';\n\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.ACTIVE);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n      fail: function fail() {\n        'worklet';\n\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.FAILED);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n      end: function end() {\n        'worklet';\n\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.END);\n        } else {\n          console.warn(warningMessage);\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["Reanimated","State","tagMessage","warningMessage","REANIMATED_AVAILABLE","useSharedValue","undefined","setGestureState","GestureStateManager","create","handlerTag","begin","BEGAN","console","warn","activate","ACTIVE","fail","FAILED","end","END"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts"],"sourcesContent":["import { Reanimated } from './reanimatedWrapper';\nimport { State } from '../../State';\nimport { tagMessage } from '../../utils';\n\nexport interface GestureStateManagerType {\n  begin: () => void;\n  activate: () => void;\n  fail: () => void;\n  end: () => void;\n}\n\nconst warningMessage = tagMessage(\n  'react-native-reanimated is required in order to use synchronous state management'\n);\n\n// check if reanimated module is available, but look for useSharedValue as conditional\n// require of reanimated can sometimes return content of `utils.ts` file (?)\nconst REANIMATED_AVAILABLE = Reanimated?.useSharedValue !== undefined;\nconst setGestureState = Reanimated?.setGestureState;\n\nexport const GestureStateManager = {\n  create(handlerTag: number): GestureStateManagerType {\n    'worklet';\n    return {\n      begin: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.BEGAN);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n\n      activate: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.ACTIVE);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n\n      fail: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.FAILED);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n\n      end: () => {\n        'worklet';\n        if (REANIMATED_AVAILABLE) {\n          setGestureState(handlerTag, State.END);\n        } else {\n          console.warn(warningMessage);\n        }\n      },\n    };\n  },\n};\n"],"mappings":"AAAA,SAASA,UAAU;AACnB,SAASC,KAAK;AACd,SAASC,UAAU;AASnB,IAAMC,cAAc,GAAGD,UAAU,CAC/B,kFACF,CAAC;AAID,IAAME,oBAAoB,GAAG,CAAAJ,UAAU,oBAAVA,UAAU,CAAEK,cAAc,MAAKC,SAAS;AACrE,IAAMC,eAAe,GAAGP,UAAU,oBAAVA,UAAU,CAAEO,eAAe;AAEnD,OAAO,IAAMC,mBAAmB,GAAG;EACjCC,MAAM,WAAAA,OAACC,UAAkB,EAA2B;IAClD,SAAS;;IACT,OAAO;MACLC,KAAK,EAAE,SAAAA,MAAA,EAAM;QACX,SAAS;;QACT,IAAIP,oBAAoB,EAAE;UACxBG,eAAe,CAACG,UAAU,EAAET,KAAK,CAACW,KAAK,CAAC;QAC1C,CAAC,MAAM;UACLC,OAAO,CAACC,IAAI,CAACX,cAAc,CAAC;QAC9B;MACF,CAAC;MAEDY,QAAQ,EAAE,SAAAA,SAAA,EAAM;QACd,SAAS;;QACT,IAAIX,oBAAoB,EAAE;UACxBG,eAAe,CAACG,UAAU,EAAET,KAAK,CAACe,MAAM,CAAC;QAC3C,CAAC,MAAM;UACLH,OAAO,CAACC,IAAI,CAACX,cAAc,CAAC;QAC9B;MACF,CAAC;MAEDc,IAAI,EAAE,SAAAA,KAAA,EAAM;QACV,SAAS;;QACT,IAAIb,oBAAoB,EAAE;UACxBG,eAAe,CAACG,UAAU,EAAET,KAAK,CAACiB,MAAM,CAAC;QAC3C,CAAC,MAAM;UACLL,OAAO,CAACC,IAAI,CAACX,cAAc,CAAC;QAC9B;MACF,CAAC;MAEDgB,GAAG,EAAE,SAAAA,IAAA,EAAM;QACT,SAAS;;QACT,IAAIf,oBAAoB,EAAE;UACxBG,eAAe,CAACG,UAAU,EAAET,KAAK,CAACmB,GAAG,CAAC;QACxC,CAAC,MAAM;UACLP,OAAO,CAACC,IAAI,CAACX,cAAc,CAAC;QAC9B;MACF;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}