{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { maybeInitializeFabric } from \"../init\";\nimport GestureHandlerRootViewContext from \"../GestureHandlerRootViewContext\";\nexport default function GestureHandlerRootView(props) {\n  maybeInitializeFabric();\n  return React.createElement(GestureHandlerRootViewContext.Provider, {\n    value: true\n  }, React.createElement(View, props));\n}","map":{"version":3,"names":["React","View","maybeInitializeFabric","GestureHandlerRootViewContext","GestureHandlerRootView","props","createElement","Provider","value"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\GestureHandlerRootView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { View, ViewProps } from 'react-native';\nimport { maybeInitializeFabric } from '../init';\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\n\nexport interface GestureHandlerRootViewProps\n  extends PropsWithChildren<ViewProps> {}\n\nexport default function GestureHandlerRootView(\n  props: GestureHandlerRootViewProps\n) {\n  // try initialize fabric on the first render, at this point we can\n  // reliably check if fabric is enabled (the function contains a flag\n  // to make sure it's called only once)\n  maybeInitializeFabric();\n\n  return (\n    <GestureHandlerRootViewContext.Provider value>\n      <View {...props} />\n    </GestureHandlerRootViewContext.Provider>\n  );\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA,OAAAC,IAAA;AAGA,SAASC,qBAAT;AACA,OAAOC,6BAAP;AAKA,eAAe,SAASC,sBAATA,CACbC,KADa,EAEb;EAIAH,qBAAqB;EAErB,OACEF,KAAA,CAAAM,aAAA,CAACH,6BAAD,CAA+BI,QAA/B;IAAwCC,KAAK;EAA7C,GACER,KAAA,CAAAM,aAAA,CAACL,IAAD,EAAUI,KAAV,CADF,CADF;AAKD"},"metadata":{},"sourceType":"module","externalDependencies":[]}