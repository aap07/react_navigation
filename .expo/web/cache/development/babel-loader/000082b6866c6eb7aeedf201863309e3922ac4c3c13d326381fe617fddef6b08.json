{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findSourcemap = findSourcemap;\nexports.generateSourcemap = generateSourcemap;\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  var data = _interopRequireDefault(require(\"os\"));\n  _os = function _os() {\n    return data;\n  };\n  return data;\n}\nfunction _ip() {\n  var data = _interopRequireDefault(require(\"ip\"));\n  _ip = function _ip() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getTempFilePath(filename) {\n  return _path().default.join(_os().default.tmpdir(), filename);\n}\nfunction writeJsonSync(targetPath, data) {\n  var json;\n  try {\n    json = JSON.stringify(data);\n  } catch (e) {\n    throw new (_cliTools().CLIError)(`Failed to serialize data to json before writing to ${targetPath}`, e);\n  }\n  try {\n    _fs().default.writeFileSync(targetPath, json, 'utf-8');\n  } catch (e) {\n    throw new (_cliTools().CLIError)(`Failed to write json to ${targetPath}`, e);\n  }\n}\nfunction getSourcemapFromServer(_x) {\n  return _getSourcemapFromServer.apply(this, arguments);\n}\nfunction _getSourcemapFromServer() {\n  _getSourcemapFromServer = _asyncToGenerator(function* (port) {\n    _cliTools().logger.debug('Getting source maps from Metro packager server');\n    var DEBUG_SERVER_PORT = port || '8081';\n    var IP_ADDRESS = _ip().default.address();\n    var PLATFORM = 'android';\n    var requestURL = `http://${IP_ADDRESS}:${DEBUG_SERVER_PORT}/index.map?platform=${PLATFORM}&dev=true`;\n    try {\n      var _yield = yield (0, _cliTools().fetch)(requestURL),\n        data = _yield.data;\n      return data;\n    } catch (e) {\n      _cliTools().logger.debug(`Failed to fetch source map from \"${requestURL}\"`);\n      return undefined;\n    }\n  });\n  return _getSourcemapFromServer.apply(this, arguments);\n}\nfunction generateSourcemap(_x2) {\n  return _generateSourcemap.apply(this, arguments);\n}\nfunction _generateSourcemap() {\n  _generateSourcemap = _asyncToGenerator(function* (port) {\n    var sourceMapPath = getTempFilePath('index.map');\n    var sourceMapResult = yield getSourcemapFromServer(port);\n    if (sourceMapResult) {\n      _cliTools().logger.debug('Using source maps from Metro packager server');\n      writeJsonSync(sourceMapPath, sourceMapResult);\n      _cliTools().logger.debug(`Successfully obtained the source map and stored it in ${sourceMapPath}`);\n      return sourceMapPath;\n    } else {\n      _cliTools().logger.error('Cannot obtain source maps from Metro packager server');\n      return undefined;\n    }\n  });\n  return _generateSourcemap.apply(this, arguments);\n}\nfunction findSourcemap(_x3, _x4) {\n  return _findSourcemap.apply(this, arguments);\n}\nfunction _findSourcemap() {\n  _findSourcemap = _asyncToGenerator(function* (ctx, port) {\n    var intermediateBuildPath = _path().default.join(ctx.root, 'android', 'app', 'build', 'intermediates', 'sourcemaps', 'react', 'debug', 'index.android.bundle.packager.map');\n    var generatedBuildPath = _path().default.join(ctx.root, 'android', 'app', 'build', 'generated', 'sourcemaps', 'react', 'debug', 'index.android.bundle.map');\n    if (_fs().default.existsSync(generatedBuildPath)) {\n      _cliTools().logger.debug(`Getting the source map from ${generateSourcemap}`);\n      return generatedBuildPath;\n    } else if (_fs().default.existsSync(intermediateBuildPath)) {\n      _cliTools().logger.debug(`Getting the source map from ${intermediateBuildPath}`);\n      return intermediateBuildPath;\n    } else {\n      return generateSourcemap(port);\n    }\n  });\n  return _findSourcemap.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","findSourcemap","generateSourcemap","_cliTools","data","_fs","_interopRequireDefault","_path","_os","_ip","obj","__esModule","default","getTempFilePath","filename","join","tmpdir","writeJsonSync","targetPath","json","JSON","stringify","e","CLIError","writeFileSync","getSourcemapFromServer","_x","_getSourcemapFromServer","apply","arguments","port","logger","debug","DEBUG_SERVER_PORT","IP_ADDRESS","address","PLATFORM","requestURL","_yield","fetch","undefined","_x2","_generateSourcemap","sourceMapPath","sourceMapResult","error","_x3","_x4","_findSourcemap","ctx","intermediateBuildPath","root","generatedBuildPath","existsSync"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-hermes/build/profileHermes/sourcemapUtils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findSourcemap = findSourcemap;\nexports.generateSourcemap = generateSourcemap;\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _os() {\n  const data = _interopRequireDefault(require(\"os\"));\n  _os = function () {\n    return data;\n  };\n  return data;\n}\nfunction _ip() {\n  const data = _interopRequireDefault(require(\"ip\"));\n  _ip = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction getTempFilePath(filename) {\n  return _path().default.join(_os().default.tmpdir(), filename);\n}\nfunction writeJsonSync(targetPath, data) {\n  let json;\n  try {\n    json = JSON.stringify(data);\n  } catch (e) {\n    throw new (_cliTools().CLIError)(`Failed to serialize data to json before writing to ${targetPath}`, e);\n  }\n  try {\n    _fs().default.writeFileSync(targetPath, json, 'utf-8');\n  } catch (e) {\n    throw new (_cliTools().CLIError)(`Failed to write json to ${targetPath}`, e);\n  }\n}\nasync function getSourcemapFromServer(port) {\n  _cliTools().logger.debug('Getting source maps from Metro packager server');\n  const DEBUG_SERVER_PORT = port || '8081';\n  const IP_ADDRESS = _ip().default.address();\n  const PLATFORM = 'android';\n  const requestURL = `http://${IP_ADDRESS}:${DEBUG_SERVER_PORT}/index.map?platform=${PLATFORM}&dev=true`;\n  try {\n    const {\n      data\n    } = await (0, _cliTools().fetch)(requestURL);\n    return data;\n  } catch (e) {\n    _cliTools().logger.debug(`Failed to fetch source map from \"${requestURL}\"`);\n    return undefined;\n  }\n}\n\n/**\n * Generate a sourcemap by fetching it from a running metro server\n */\nasync function generateSourcemap(port) {\n  // Fetch the source map to a temp directory\n  const sourceMapPath = getTempFilePath('index.map');\n  const sourceMapResult = await getSourcemapFromServer(port);\n  if (sourceMapResult) {\n    _cliTools().logger.debug('Using source maps from Metro packager server');\n    writeJsonSync(sourceMapPath, sourceMapResult);\n    _cliTools().logger.debug(`Successfully obtained the source map and stored it in ${sourceMapPath}`);\n    return sourceMapPath;\n  } else {\n    _cliTools().logger.error('Cannot obtain source maps from Metro packager server');\n    return undefined;\n  }\n}\n\n/**\n *\n * @param ctx\n */\nasync function findSourcemap(ctx, port) {\n  const intermediateBuildPath = _path().default.join(ctx.root, 'android', 'app', 'build', 'intermediates', 'sourcemaps', 'react', 'debug', 'index.android.bundle.packager.map');\n  const generatedBuildPath = _path().default.join(ctx.root, 'android', 'app', 'build', 'generated', 'sourcemaps', 'react', 'debug', 'index.android.bundle.map');\n  if (_fs().default.existsSync(generatedBuildPath)) {\n    _cliTools().logger.debug(`Getting the source map from ${generateSourcemap}`);\n    return generatedBuildPath;\n  } else if (_fs().default.existsSync(intermediateBuildPath)) {\n    _cliTools().logger.debug(`Getting the source map from ${intermediateBuildPath}`);\n    return intermediateBuildPath;\n  } else {\n    return generateSourcemap(port);\n  }\n}\n\n//# sourceMappingURL=sourcemapUtils.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}