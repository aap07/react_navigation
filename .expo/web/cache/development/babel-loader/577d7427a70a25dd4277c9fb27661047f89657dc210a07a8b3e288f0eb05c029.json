{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _excluded = [\"printNewLine\", \"otp\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.showLoginPromptAsync = showLoginPromptAsync;\nexports.ensureLoggedInAsync = ensureLoggedInAsync;\nvar _assert = _interopRequireDefault(require(\"assert\"));\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar Log = _interopRequireWildcard(require(\"../../log\"));\nvar _env = require(\"../../utils/env\");\nvar _errors = require(\"../../utils/errors\");\nvar _link = require(\"../../utils/link\");\nvar _prompts = _interopRequireDefault(require(\"../../utils/prompts\"));\nvar _client = require(\"../rest/client\");\nvar _otp = require(\"./otp\");\nvar _user = require(\"./user\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction showLoginPromptAsync() {\n  return _showLoginPromptAsync.apply(this, arguments);\n}\nfunction _showLoginPromptAsync() {\n  _showLoginPromptAsync = _asyncToGenerator(function* () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _ref$printNewLine = _ref.printNewLine,\n      printNewLine = _ref$printNewLine === void 0 ? false : _ref$printNewLine,\n      otp = _ref.otp,\n      options = _objectWithoutProperties(_ref, _excluded);\n    if (_env.env.EXPO_OFFLINE) {\n      throw new _errors.CommandError(\"OFFLINE\", \"Cannot authenticate in offline-mode\");\n    }\n    var hasCredentials = options.username && options.password;\n    if (printNewLine) {\n      Log.log();\n    }\n    Log.log(hasCredentials ? \"Logging in to EAS\" : \"Log in to EAS\");\n    var username = options.username;\n    var password = options.password;\n    if (!hasCredentials) {\n      var resolved = yield (0, _prompts).default([!options.username && {\n        type: \"text\",\n        name: \"username\",\n        message: \"Email or username\"\n      }, !options.password && {\n        type: \"password\",\n        name: \"password\",\n        message: \"Password\"\n      }].filter(Boolean), {\n        nonInteractiveHelp: `Use the EXPO_TOKEN environment variable to authenticate in CI (${(0, _link).learnMore(\"https://docs.expo.dev/accounts/programmatic-access/\")})`\n      });\n      username != null ? username : username = resolved.username;\n      password != null ? password : password = resolved.password;\n    }\n    (0, _assert).default(username && password);\n    try {\n      yield (0, _user).loginAsync({\n        username: username,\n        password: password,\n        otp: otp\n      });\n    } catch (e) {\n      if (e instanceof _client.ApiV2Error && e.expoApiV2ErrorCode === \"ONE_TIME_PASSWORD_REQUIRED\") {\n        yield (0, _otp).retryUsernamePasswordAuthWithOTPAsync(username, password, e.expoApiV2ErrorMetadata);\n      } else {\n        throw e;\n      }\n    }\n  });\n  return _showLoginPromptAsync.apply(this, arguments);\n}\nfunction ensureLoggedInAsync() {\n  return _ensureLoggedInAsync.apply(this, arguments);\n}\nfunction _ensureLoggedInAsync() {\n  _ensureLoggedInAsync = _asyncToGenerator(function* () {\n    var user = yield (0, _user).getUserAsync().catch(function () {\n      return null;\n    });\n    if (!user) {\n      Log.warn(_chalk.default.yellow`An Expo user account is required to proceed.`);\n      yield showLoginPromptAsync({\n        printNewLine: true\n      });\n      user = yield (0, _user).getUserAsync();\n    }\n    (0, _assert).default(user, \"User should be logged in\");\n    return user;\n  });\n  return _ensureLoggedInAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_objectWithoutProperties","require","_asyncToGenerator","_excluded","showLoginPromptAsync","ensureLoggedInAsync","_assert","_interopRequireDefault","_chalk","Log","_interopRequireWildcard","_env","_errors","_link","_prompts","_client","_otp","_user","_showLoginPromptAsync","apply","arguments","_ref","length","undefined","_ref$printNewLine","printNewLine","otp","options","env","EXPO_OFFLINE","CommandError","hasCredentials","username","password","log","resolved","default","type","name","message","filter","Boolean","nonInteractiveHelp","learnMore","loginAsync","e","ApiV2Error","expoApiV2ErrorCode","retryUsernamePasswordAuthWithOTPAsync","expoApiV2ErrorMetadata","_ensureLoggedInAsync","user","getUserAsync","catch","warn","yellow"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\user\\actions.ts"],"sourcesContent":["import assert from 'assert';\nimport chalk from 'chalk';\n\nimport * as Log from '../../log';\nimport { env } from '../../utils/env';\nimport { CommandError } from '../../utils/errors';\nimport { learnMore } from '../../utils/link';\nimport promptAsync, { Question } from '../../utils/prompts';\nimport { ApiV2Error } from '../rest/client';\nimport { retryUsernamePasswordAuthWithOTPAsync } from './otp';\nimport { Actor, getUserAsync, loginAsync } from './user';\n\n/** Show login prompt while prompting for missing credentials. */\nexport async function showLoginPromptAsync({\n  printNewLine = false,\n  otp,\n  ...options\n}: {\n  printNewLine?: boolean;\n  username?: string;\n  password?: string;\n  otp?: string;\n} = {}): Promise<void> {\n  if (env.EXPO_OFFLINE) {\n    throw new CommandError('OFFLINE', 'Cannot authenticate in offline-mode');\n  }\n  const hasCredentials = options.username && options.password;\n\n  if (printNewLine) {\n    Log.log();\n  }\n\n  Log.log(hasCredentials ? 'Logging in to EAS' : 'Log in to EAS');\n\n  let username = options.username;\n  let password = options.password;\n\n  if (!hasCredentials) {\n    const resolved = await promptAsync(\n      [\n        !options.username && {\n          type: 'text',\n          name: 'username',\n          message: 'Email or username',\n        },\n        !options.password && {\n          type: 'password',\n          name: 'password',\n          message: 'Password',\n        },\n      ].filter(Boolean) as Question<string>[],\n      {\n        nonInteractiveHelp: `Use the EXPO_TOKEN environment variable to authenticate in CI (${learnMore(\n          'https://docs.expo.dev/accounts/programmatic-access/'\n        )})`,\n      }\n    );\n    username ??= resolved.username;\n    password ??= resolved.password;\n  }\n  // This is just for the types.\n  assert(username && password);\n\n  try {\n    await loginAsync({\n      username,\n      password,\n      otp,\n    });\n  } catch (e) {\n    if (e instanceof ApiV2Error && e.expoApiV2ErrorCode === 'ONE_TIME_PASSWORD_REQUIRED') {\n      await retryUsernamePasswordAuthWithOTPAsync(\n        username,\n        password,\n        e.expoApiV2ErrorMetadata as any\n      );\n    } else {\n      throw e;\n    }\n  }\n}\n\n/** Ensure the user is logged in, if not, prompt to login. */\nexport async function ensureLoggedInAsync(): Promise<Actor> {\n  let user = await getUserAsync().catch(() => null);\n\n  if (!user) {\n    Log.warn(chalk.yellow`An Expo user account is required to proceed.`);\n    await showLoginPromptAsync({ printNewLine: true });\n    user = await getUserAsync();\n  }\n\n  assert(user, 'User should be logged in');\n  return user;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}