{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar child_process_1 = require(\"child_process\");\nvar tmp_1 = tslib_1.__importDefault(require(\"tmp\"));\nvar debug_1 = tslib_1.__importDefault(require(\"debug\"));\nvar path_1 = tslib_1.__importDefault(require(\"path\"));\nvar sudo_prompt_1 = tslib_1.__importDefault(require(\"sudo-prompt\"));\nvar constants_1 = require(\"./constants\");\nvar debug = debug_1.default('devcert:util');\nfunction openssl(args) {\n  return run('openssl', args, {\n    stdio: 'pipe',\n    env: Object.assign({\n      RANDFILE: path_1.default.join(constants_1.configPath('.rnd'))\n    }, process.env)\n  });\n}\nexports.openssl = openssl;\nfunction run(cmd, args) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  debug(`execFileSync: \\`${cmd} ${args.join(' ')}\\``);\n  return child_process_1.execFileSync(cmd, args, options);\n}\nexports.run = run;\nfunction sudoAppend(file, input) {\n  run('sudo', ['tee', '-a', file], {\n    input: input\n  });\n}\nexports.sudoAppend = sudoAppend;\nfunction waitForUser() {\n  return new Promise(function (resolve) {\n    process.stdin.resume();\n    process.stdin.on('data', resolve);\n  });\n}\nexports.waitForUser = waitForUser;\nfunction reportableError(message) {\n  return new Error(`${message} | This is a bug in devcert, please report the issue at https://github.com/davewasmer/devcert/issues`);\n}\nexports.reportableError = reportableError;\nfunction mktmp() {\n  return tmp_1.default.fileSync({\n    discardDescriptor: true\n  }).name;\n}\nexports.mktmp = mktmp;\nfunction sudo(cmd) {\n  return new Promise(function (resolve, reject) {\n    sudo_prompt_1.default.exec(cmd, {\n      name: 'devcert'\n    }, function (err, stdout, stderr) {\n      var error = err || typeof stderr === 'string' && stderr.trim().length > 0 && new Error(stderr);\n      error ? reject(error) : resolve(stdout);\n    });\n  });\n}\nexports.sudo = sudo;","map":{"version":3,"names":["child_process_1","require","tmp_1","tslib_1","__importDefault","debug_1","path_1","sudo_prompt_1","constants_1","debug","default","openssl","args","run","stdio","env","Object","assign","RANDFILE","join","configPath","process","exports","cmd","options","arguments","length","undefined","execFileSync","sudoAppend","file","input","waitForUser","Promise","resolve","stdin","resume","on","reportableError","message","Error","mktmp","fileSync","discardDescriptor","name","sudo","reject","exec","err","stdout","stderr","error","trim"],"sources":["\\Users\\evanbacon\\Documents\\GitHub\\devcert\\utils.ts"],"sourcesContent":["import { execFileSync, ExecFileSyncOptions } from 'child_process';\nimport tmp from 'tmp';\nimport createDebug from 'debug';\nimport path from 'path';\nimport sudoPrompt from 'sudo-prompt';\n\nimport { configPath } from './constants';\n\nconst debug = createDebug('devcert:util');\n\nexport function openssl(args: string[]) {\n  return run('openssl', args, {\n    stdio: 'pipe',\n    env: Object.assign({\n      RANDFILE: path.join(configPath('.rnd'))\n    }, process.env)\n  });\n}\n\nexport function run(cmd: string, args: string[], options: ExecFileSyncOptions = {}) {\n  debug(`execFileSync: \\`${ cmd } ${args.join(' ')}\\``);\n  return execFileSync(cmd, args, options);\n}\n\nexport function sudoAppend(file: string, input: ExecFileSyncOptions[\"input\"]) {\n  run('sudo', ['tee', '-a', file], {\n    input\n  });\n}\n\nexport function waitForUser() {\n  return new Promise((resolve) => {\n    process.stdin.resume();\n    process.stdin.on('data', resolve);\n  });\n}\n\nexport function reportableError(message: string) {\n  return new Error(`${message} | This is a bug in devcert, please report the issue at https://github.com/davewasmer/devcert/issues`);\n}\n\nexport function mktmp() {\n  // discardDescriptor because windows complains the file is in use if we create a tmp file\n  // and then shell out to a process that tries to use it\n  return tmp.fileSync({ discardDescriptor: true }).name;\n}\n\nexport function sudo(cmd: string): Promise<string | null> {\n  return new Promise((resolve, reject) => {\n    sudoPrompt.exec(cmd, { name: 'devcert' }, (err: Error | null, stdout: string | null, stderr: string | null) => {\n      let error = err || (typeof stderr === 'string' && stderr.trim().length > 0 && new Error(stderr)) ;\n      error ? reject(error) : resolve(stdout);\n    });\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}