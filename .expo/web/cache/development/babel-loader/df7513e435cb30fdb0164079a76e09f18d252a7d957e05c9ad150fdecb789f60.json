{"ast":null,"code":"\"use strict\";\n\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _getCacheKey() {\n  var data = require(\"./getCacheKey\");\n  _getCacheKey = function _getCacheKey() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar transformer = null;\nfunction resolveTransformer(projectRoot) {\n  if (transformer) {\n    return transformer;\n  }\n  var resolvedPath = _resolveFrom().default.silent(projectRoot, 'metro-react-native-babel-transformer');\n  if (!resolvedPath) {\n    throw new Error('Missing package \"metro-react-native-babel-transformer\" in the project. ' + 'This usually means `react-native` is not installed. ' + 'Please verify that dependencies in package.json include \"react-native\" ' + 'and run `yarn` or `npm install`.');\n  }\n  transformer = require(resolvedPath);\n  return transformer;\n}\nfunction transform(props) {\n  props.options.extendsBabelConfigPath = _resolveFrom().default.silent(props.options.projectRoot, 'babel-preset-expo');\n  return resolveTransformer(props.options.projectRoot).transform(props);\n}\nmodule.exports = {\n  getCacheKey: _getCacheKey().getCacheKey,\n  transform: transform\n};","map":{"version":3,"names":["_resolveFrom","data","_interopRequireDefault","require","_getCacheKey","obj","__esModule","default","transformer","resolveTransformer","projectRoot","resolvedPath","silent","Error","transform","props","options","extendsBabelConfigPath","module","exports","getCacheKey"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\transformer\\metro-expo-babel-transformer.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nimport resolveFrom from 'resolve-from';\n\nimport { getCacheKey } from './getCacheKey';\n\nlet transformer: any = null;\n\nfunction resolveTransformer(projectRoot: string) {\n  if (transformer) {\n    return transformer;\n  }\n  const resolvedPath = resolveFrom.silent(projectRoot, 'metro-react-native-babel-transformer');\n  if (!resolvedPath) {\n    throw new Error(\n      'Missing package \"metro-react-native-babel-transformer\" in the project. ' +\n        'This usually means `react-native` is not installed. ' +\n        'Please verify that dependencies in package.json include \"react-native\" ' +\n        'and run `yarn` or `npm install`.'\n    );\n  }\n  transformer = require(resolvedPath);\n  return transformer;\n}\n\n/**\n * Extends the default `metro-react-native-babel-transformer`\n * and uses babel-preset-expo as the default instead of metro-react-native-babel-preset.\n * This enables users to safely transpile an Expo project without\n * needing to explicitly define a `babel.config.js`\n *\n * @param filename string\n * @param options BabelTransformerOptions\n * @param plugins $PropertyType<BabelCoreOptions, 'plugins'>\n * @param src string\n *\n * @returns\n */\nfunction transform(props: {\n  filename: string;\n  options: Record<string, any> & { projectRoot: string };\n  plugins?: unknown;\n  src: string;\n}) {\n  // Use babel-preset-expo by default if available...\n  props.options.extendsBabelConfigPath = resolveFrom.silent(\n    props.options.projectRoot,\n    'babel-preset-expo'\n  );\n  return resolveTransformer(props.options.projectRoot).transform(props);\n}\n\nmodule.exports = {\n  getCacheKey,\n  transform,\n};\n"],"mappings":";;AAEA,SAAAA,aAAA;EAAA,IAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,YAAA,YAAAA,aAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAG,aAAA;EAAA,IAAAH,IAAA,GAAAE,OAAA;EAAAC,YAAA,YAAAA,aAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA4C,SAAAC,uBAAAG,GAAA;EAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA;IAAAE,OAAA,EAAAF;EAAA;AAAA;AAE5C,IAAIG,WAAgB,GAAG,IAAI;AAE3B,SAASC,kBAAkBA,CAACC,WAAmB,EAAE;EAC/C,IAAIF,WAAW,EAAE;IACf,OAAOA,WAAW;EACpB;EACA,IAAMG,YAAY,GAAGX,YAAA,GAAAO,OAAW,CAACK,MAAM,CAACF,WAAW,EAAE,sCAAsC,CAAC;EAC5F,IAAI,CAACC,YAAY,EAAE;IACjB,MAAM,IAAIE,KAAK,CACb,yEAAyE,GACvE,sDAAsD,GACtD,yEAAyE,GACzE,kCAAkC,CACrC;EACH;EACAL,WAAW,GAAGL,OAAO,CAACQ,YAAY,CAAC;EACnC,OAAOH,WAAW;AACpB;AAeA,SAASM,SAASA,CAACC,KAKlB,EAAE;EAEDA,KAAK,CAACC,OAAO,CAACC,sBAAsB,GAAGjB,YAAA,GAAAO,OAAW,CAACK,MAAM,CACvDG,KAAK,CAACC,OAAO,CAACN,WAAW,EACzB,mBAAmB,CACpB;EACD,OAAOD,kBAAkB,CAACM,KAAK,CAACC,OAAO,CAACN,WAAW,CAAC,CAACI,SAAS,CAACC,KAAK,CAAC;AACvE;AAEAG,MAAM,CAACC,OAAO,GAAG;EACfC,WAAW,EAAXhB,YAAA,GAAAgB,WAAW;EACXN,SAAA,EAAAA;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}