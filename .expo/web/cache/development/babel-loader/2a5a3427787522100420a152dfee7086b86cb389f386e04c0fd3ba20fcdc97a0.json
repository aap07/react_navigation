{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateFromTemplateAsync = updateFromTemplateAsync;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _errors = require(\"../utils/errors\");\nvar _ora = require(\"../utils/ora\");\nvar _profile = require(\"../utils/profile\");\nvar _copyTemplateFiles = require(\"./copyTemplateFiles\");\nvar _resolveTemplate = require(\"./resolveTemplate\");\nvar _updatePackageJson = require(\"./updatePackageJson\");\nvar _validateTemplatePlatforms = require(\"./validateTemplatePlatforms\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction updateFromTemplateAsync(_x, _x2) {\n  return _updateFromTemplateAsync.apply(this, arguments);\n}\nfunction _updateFromTemplateAsync() {\n  _updateFromTemplateAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var exp = _ref.exp,\n      pkg = _ref.pkg,\n      template = _ref.template,\n      templateDirectory = _ref.templateDirectory,\n      platforms = _ref.platforms,\n      skipDependencyUpdate = _ref.skipDependencyUpdate;\n    if (!templateDirectory) {\n      var temporary = yield Promise.resolve().then(function () {\n        return _interopRequireWildcard(require(\"tempy\"));\n      });\n      templateDirectory = temporary.directory();\n    }\n    var copiedPaths = yield (0, _profile).profile(cloneTemplateAndCopyToProjectAsync)({\n      projectRoot: projectRoot,\n      template: template,\n      templateDirectory: templateDirectory,\n      exp: exp,\n      platforms: platforms\n    });\n    var depsResults = yield (0, _profile).profile(_updatePackageJson.updatePackageJSONAsync)(projectRoot, {\n      templateDirectory: templateDirectory,\n      pkg: pkg,\n      skipDependencyUpdate: skipDependencyUpdate\n    });\n    return _objectSpread({\n      hasNewProjectFiles: !!copiedPaths.length,\n      needsPodInstall: copiedPaths.includes(\"ios\") || depsResults.hasNewDependencies || depsResults.hasNewDevDependencies\n    }, depsResults);\n  });\n  return _updateFromTemplateAsync.apply(this, arguments);\n}\nfunction cloneTemplateAndCopyToProjectAsync(_x3) {\n  return _cloneTemplateAndCopyToProjectAsync.apply(this, arguments);\n}\nfunction _cloneTemplateAndCopyToProjectAsync() {\n  _cloneTemplateAndCopyToProjectAsync = _asyncToGenerator(function* (_ref2) {\n    var projectRoot = _ref2.projectRoot,\n      templateDirectory = _ref2.templateDirectory,\n      template = _ref2.template,\n      exp = _ref2.exp,\n      unknownPlatforms = _ref2.platforms;\n    var ora = (0, _ora).logNewSection(\"Creating native project directories (./ios and ./android) and updating .gitignore\");\n    try {\n      yield (0, _resolveTemplate).cloneTemplateAsync({\n        templateDirectory: templateDirectory,\n        template: template,\n        exp: exp,\n        ora: ora\n      });\n      var platforms = yield (0, _validateTemplatePlatforms).validateTemplatePlatforms({\n        templateDirectory: templateDirectory,\n        platforms: unknownPlatforms\n      });\n      var results = yield (0, _copyTemplateFiles).copyTemplateFilesAsync(projectRoot, {\n        templateDirectory: templateDirectory,\n        platforms: platforms\n      });\n      ora.succeed((0, _copyTemplateFiles).createCopyFilesSuccessMessage(platforms, results));\n      return results.copiedPaths;\n    } catch (e) {\n      if (!(e instanceof _errors.AbortCommandError)) {\n        Log.error(e.message);\n      }\n      ora.fail(\"Failed to create the native project.\");\n      Log.log(_chalk.default.yellow(\"You may want to delete the `./ios` and/or `./android` directories before trying again.\"));\n      throw new _errors.SilentError(e);\n    }\n  });\n  return _cloneTemplateAndCopyToProjectAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","updateFromTemplateAsync","_chalk","_interopRequireDefault","Log","_interopRequireWildcard","_errors","_ora","_profile","_copyTemplateFiles","_resolveTemplate","_updatePackageJson","_validateTemplatePlatforms","_x","_x2","_updateFromTemplateAsync","projectRoot","_ref","exp","pkg","template","templateDirectory","platforms","skipDependencyUpdate","temporary","Promise","resolve","then","directory","copiedPaths","profile","cloneTemplateAndCopyToProjectAsync","depsResults","updatePackageJSONAsync","hasNewProjectFiles","needsPodInstall","includes","hasNewDependencies","hasNewDevDependencies","_x3","_cloneTemplateAndCopyToProjectAsync","_ref2","unknownPlatforms","ora","logNewSection","cloneTemplateAsync","validateTemplatePlatforms","results","copyTemplateFilesAsync","succeed","createCopyFilesSuccessMessage","AbortCommandError","error","message","fail","log","default","yellow","SilentError"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\prebuild\\updateFromTemplate.ts"],"sourcesContent":["import { ExpoConfig, PackageJSONConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport chalk from 'chalk';\n\nimport * as Log from '../log';\nimport { AbortCommandError, SilentError } from '../utils/errors';\nimport { logNewSection } from '../utils/ora';\nimport { profile } from '../utils/profile';\nimport { copyTemplateFilesAsync, createCopyFilesSuccessMessage } from './copyTemplateFiles';\nimport { cloneTemplateAsync } from './resolveTemplate';\nimport { DependenciesModificationResults, updatePackageJSONAsync } from './updatePackageJson';\nimport { validateTemplatePlatforms } from './validateTemplatePlatforms';\n\n/**\n * Creates local native files from an input template file path.\n *\n * @return `true` if the project is ejecting, and `false` if it's syncing.\n */\nexport async function updateFromTemplateAsync(\n  projectRoot: string,\n  {\n    exp,\n    pkg,\n    template,\n    templateDirectory,\n    platforms,\n    skipDependencyUpdate,\n  }: {\n    /** Expo Config */\n    exp: ExpoConfig;\n    /** package.json as JSON */\n    pkg: PackageJSONConfig;\n    /** Template reference ID. */\n    template?: string;\n    /** Directory to write the template to before copying into the project. */\n    templateDirectory?: string;\n    /** List of platforms to clone. */\n    platforms: ModPlatform[];\n    /** List of dependencies to skip updating. */\n    skipDependencyUpdate?: string[];\n  }\n): Promise<\n  {\n    /** Indicates if new files were created in the project. */\n    hasNewProjectFiles: boolean;\n    /** Indicates that the project needs to run `pod install` */\n    needsPodInstall: boolean;\n  } & DependenciesModificationResults\n> {\n  if (!templateDirectory) {\n    const temporary = await import('tempy');\n    templateDirectory = temporary.directory();\n  }\n\n  const copiedPaths = await profile(cloneTemplateAndCopyToProjectAsync)({\n    projectRoot,\n    template,\n    templateDirectory,\n    exp,\n    platforms,\n  });\n\n  const depsResults = await profile(updatePackageJSONAsync)(projectRoot, {\n    templateDirectory,\n    pkg,\n    skipDependencyUpdate,\n  });\n\n  return {\n    hasNewProjectFiles: !!copiedPaths.length,\n    // If the iOS folder changes or new packages are added, we should rerun pod install.\n    needsPodInstall:\n      copiedPaths.includes('ios') ||\n      depsResults.hasNewDependencies ||\n      depsResults.hasNewDevDependencies,\n    ...depsResults,\n  };\n}\n\n/**\n * Extract the template and copy the ios and android directories over to the project directory.\n *\n * @return `true` if any project files were created.\n */\nasync function cloneTemplateAndCopyToProjectAsync({\n  projectRoot,\n  templateDirectory,\n  template,\n  exp,\n  platforms: unknownPlatforms,\n}: {\n  projectRoot: string;\n  templateDirectory: string;\n  template?: string;\n  exp: Pick<ExpoConfig, 'name' | 'sdkVersion'>;\n  platforms: ModPlatform[];\n}): Promise<string[]> {\n  const ora = logNewSection(\n    'Creating native project directories (./ios and ./android) and updating .gitignore'\n  );\n\n  try {\n    await cloneTemplateAsync({ templateDirectory, template, exp, ora });\n\n    const platforms = await validateTemplatePlatforms({\n      templateDirectory,\n      platforms: unknownPlatforms,\n    });\n\n    const results = await copyTemplateFilesAsync(projectRoot, {\n      templateDirectory,\n      platforms,\n    });\n\n    ora.succeed(createCopyFilesSuccessMessage(platforms, results));\n\n    return results.copiedPaths;\n  } catch (e: any) {\n    if (!(e instanceof AbortCommandError)) {\n      Log.error(e.message);\n    }\n    ora.fail('Failed to create the native project.');\n    Log.log(\n      chalk.yellow(\n        'You may want to delete the `./ios` and/or `./android` directories before trying again.'\n      )\n    );\n    throw new SilentError(e);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}