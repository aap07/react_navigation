{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _defineProperty3 = require(\"@babel/runtime/helpers/defineProperty\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _spawnAsync() {\n  var data = _interopRequireDefault(require(\"@expo/spawn-async\"));\n  _spawnAsync = function _spawnAsync() {\n    return data;\n  };\n  return data;\n}\nfunction _open() {\n  var data = _interopRequireDefault(require(\"open\"));\n  _open = function _open() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _LaunchBrowser() {\n  var data = require(\"./LaunchBrowser.types\");\n  _LaunchBrowser = function _LaunchBrowser() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar LaunchBrowserImplLinux = function () {\n  function LaunchBrowserImplLinux() {\n    var _defineProperty2;\n    _classCallCheck(this, LaunchBrowserImplLinux);\n    _defineProperty(this, \"_appId\", void 0);\n    _defineProperty(this, \"_process\", void 0);\n    _defineProperty(this, \"MAP\", (_defineProperty2 = {}, _defineProperty3(_defineProperty2, _LaunchBrowser().LaunchBrowserTypes.CHROME, ['google-chrome', 'google-chrome-stable', 'chromium']), _defineProperty3(_defineProperty2, _LaunchBrowser().LaunchBrowserTypes.EDGE, ['microsoft-edge', 'microsoft-edge-dev']), _defineProperty2));\n  }\n  _createClass(LaunchBrowserImplLinux, [{\n    key: \"getAppId\",\n    value: function () {\n      var _getAppId = _asyncToGenerator(function* (browserType) {\n        if (this._appId == null || !this.MAP[browserType].includes(this._appId)) {\n          for (var appId of this.MAP[browserType]) {\n            try {\n              var _yield = yield (0, _spawnAsync().default)('which', [appId], {\n                  stdio: 'ignore'\n                }),\n                status = _yield.status;\n              if (status === 0) {\n                this._appId = appId;\n                break;\n              }\n            } catch (_unused) {}\n          }\n        }\n        if (this._appId == null) {\n          throw new Error(`Unable to find supported browser - tried[${this.MAP[browserType].join(', ')}]`);\n        }\n        return this._appId;\n      });\n      function getAppId(_x) {\n        return _getAppId.apply(this, arguments);\n      }\n      return getAppId;\n    }()\n  }, {\n    key: \"isSupportedBrowser\",\n    value: function () {\n      var _isSupportedBrowser = _asyncToGenerator(function* (browserType) {\n        var result = false;\n        try {\n          yield this.getAppId(browserType);\n          result = true;\n        } catch (_unused2) {\n          result = false;\n        }\n        return result;\n      });\n      function isSupportedBrowser(_x2) {\n        return _isSupportedBrowser.apply(this, arguments);\n      }\n      return isSupportedBrowser;\n    }()\n  }, {\n    key: \"createTempBrowserDir\",\n    value: function () {\n      var _createTempBrowserDir = _asyncToGenerator(function* (baseDirName) {\n        return _path().default.join(require('temp-dir'), baseDirName);\n      });\n      function createTempBrowserDir(_x3) {\n        return _createTempBrowserDir.apply(this, arguments);\n      }\n      return createTempBrowserDir;\n    }()\n  }, {\n    key: \"launchAsync\",\n    value: function () {\n      var _launchAsync = _asyncToGenerator(function* (browserType, args) {\n        var appId = yield this.getAppId(browserType);\n        this._process = yield _open().default.openApp(appId, {\n          arguments: args\n        });\n        return this;\n      });\n      function launchAsync(_x4, _x5) {\n        return _launchAsync.apply(this, arguments);\n      }\n      return launchAsync;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator(function* () {\n        var _this$_process;\n        (_this$_process = this._process) === null || _this$_process === void 0 ? void 0 : _this$_process.kill();\n        this._process = undefined;\n        this._appId = undefined;\n      });\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }]);\n  return LaunchBrowserImplLinux;\n}();\nexports.default = LaunchBrowserImplLinux;","map":{"version":3,"names":["_spawnAsync","data","_interopRequireDefault","require","_open","_path","_LaunchBrowser","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","LaunchBrowserImplLinux","_defineProperty2","_classCallCheck","_defineProperty3","LaunchBrowserTypes","CHROME","EDGE","_createClass","_getAppId","_asyncToGenerator","browserType","_appId","MAP","includes","appId","_yield","stdio","status","_unused","Error","join","getAppId","_x","apply","arguments","_isSupportedBrowser","result","_unused2","isSupportedBrowser","_x2","_createTempBrowserDir","baseDirName","createTempBrowserDir","_x3","_launchAsync","args","_process","openApp","launchAsync","_x4","_x5","_close","_this$_process","kill","close","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\LaunchBrowserImplLinux.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { type ChildProcess } from 'child_process';\nimport open from 'open';\nimport path from 'path';\n\nimport {\n  LaunchBrowserTypes,\n  type LaunchBrowserImpl,\n  type LaunchBrowserInstance,\n} from './LaunchBrowser.types';\n\n/**\n * Browser implementation for Linux\n */\nexport default class LaunchBrowserImplLinux implements LaunchBrowserImpl, LaunchBrowserInstance {\n  private _appId: string | undefined;\n  private _process: ChildProcess | undefined;\n\n  MAP = {\n    [LaunchBrowserTypes.CHROME]: ['google-chrome', 'google-chrome-stable', 'chromium'],\n    [LaunchBrowserTypes.EDGE]: ['microsoft-edge', 'microsoft-edge-dev'],\n  };\n\n  /**\n   * On Linux, the supported appId is an array, this function finds the available appId and caches it\n   */\n  private async getAppId(browserType: LaunchBrowserTypes): Promise<string> {\n    if (this._appId == null || !this.MAP[browserType].includes(this._appId)) {\n      for (const appId of this.MAP[browserType]) {\n        try {\n          const { status } = await spawnAsync('which', [appId], { stdio: 'ignore' });\n          if (status === 0) {\n            this._appId = appId;\n            break;\n          }\n        } catch {}\n      }\n    }\n\n    if (this._appId == null) {\n      throw new Error(\n        `Unable to find supported browser - tried[${this.MAP[browserType].join(', ')}]`\n      );\n    }\n\n    return this._appId;\n  }\n\n  async isSupportedBrowser(browserType: LaunchBrowserTypes): Promise<boolean> {\n    let result = false;\n    try {\n      await this.getAppId(browserType);\n      result = true;\n    } catch {\n      result = false;\n    }\n    return result;\n  }\n\n  async createTempBrowserDir(baseDirName: string) {\n    return path.join(require('temp-dir'), baseDirName);\n  }\n\n  async launchAsync(\n    browserType: LaunchBrowserTypes,\n    args: string[]\n  ): Promise<LaunchBrowserInstance> {\n    const appId = await this.getAppId(browserType);\n    this._process = await open.openApp(appId, { arguments: args });\n    return this;\n  }\n\n  async close(): Promise<void> {\n    this._process?.kill();\n    this._process = undefined;\n    this._appId = undefined;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}