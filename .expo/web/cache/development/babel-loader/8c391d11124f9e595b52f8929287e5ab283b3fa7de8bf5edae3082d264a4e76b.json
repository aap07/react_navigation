{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveLaunchPropsAsync = resolveLaunchPropsAsync;\nvar _configPlugins = require(\"@expo/config-plugins\");\nvar _androidAppIdResolver = require(\"../../start/platforms/android/AndroidAppIdResolver\");\nvar _errors = require(\"../../utils/errors\");\nfunction getMainActivityAsync(_x) {\n  return _getMainActivityAsync.apply(this, arguments);\n}\nfunction _getMainActivityAsync() {\n  _getMainActivityAsync = _asyncToGenerator(function* (projectRoot) {\n    var filePath = yield _configPlugins.AndroidConfig.Paths.getAndroidManifestAsync(projectRoot);\n    var androidManifest = yield _configPlugins.AndroidConfig.Manifest.readAndroidManifestAsync(filePath);\n    var activity = yield _configPlugins.AndroidConfig.Manifest.getRunnableActivity(androidManifest);\n    if (!activity) {\n      throw new _errors.CommandError(\"ANDROID_MALFORMED\", `${filePath} is missing a runnable activity element.`);\n    }\n    return activity.$[\"android:name\"];\n  });\n  return _getMainActivityAsync.apply(this, arguments);\n}\nfunction resolveLaunchPropsAsync(_x2) {\n  return _resolveLaunchPropsAsync.apply(this, arguments);\n}\nfunction _resolveLaunchPropsAsync() {\n  _resolveLaunchPropsAsync = _asyncToGenerator(function* (projectRoot) {\n    var mainActivity = yield getMainActivityAsync(projectRoot);\n    var packageName = yield new _androidAppIdResolver.AndroidAppIdResolver(projectRoot).getAppIdFromNativeAsync();\n    var launchActivity = `${packageName}/${mainActivity}`;\n    return {\n      mainActivity: mainActivity,\n      launchActivity: launchActivity,\n      packageName: packageName\n    };\n  });\n  return _resolveLaunchPropsAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","resolveLaunchPropsAsync","_configPlugins","_androidAppIdResolver","_errors","getMainActivityAsync","_x","_getMainActivityAsync","apply","arguments","projectRoot","filePath","AndroidConfig","Paths","getAndroidManifestAsync","androidManifest","Manifest","readAndroidManifestAsync","activity","getRunnableActivity","CommandError","$","_x2","_resolveLaunchPropsAsync","mainActivity","packageName","AndroidAppIdResolver","getAppIdFromNativeAsync","launchActivity"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\android\\resolveLaunchProps.ts"],"sourcesContent":["import { AndroidConfig } from '@expo/config-plugins';\n\nimport { AndroidAppIdResolver } from '../../start/platforms/android/AndroidAppIdResolver';\nimport { CommandError } from '../../utils/errors';\n\nexport interface LaunchProps {\n  packageName: string;\n  mainActivity: string;\n  launchActivity: string;\n}\n\nasync function getMainActivityAsync(projectRoot: string): Promise<string> {\n  const filePath = await AndroidConfig.Paths.getAndroidManifestAsync(projectRoot);\n  const androidManifest = await AndroidConfig.Manifest.readAndroidManifestAsync(filePath);\n\n  // Assert MainActivity defined.\n  const activity = await AndroidConfig.Manifest.getRunnableActivity(androidManifest);\n  if (!activity) {\n    throw new CommandError(\n      'ANDROID_MALFORMED',\n      `${filePath} is missing a runnable activity element.`\n    );\n  }\n  // Often this is \".MainActivity\"\n  return activity.$['android:name'];\n}\n\nexport async function resolveLaunchPropsAsync(projectRoot: string): Promise<LaunchProps> {\n  // Often this is \".MainActivity\"\n  const mainActivity = await getMainActivityAsync(projectRoot);\n\n  const packageName = await new AndroidAppIdResolver(projectRoot).getAppIdFromNativeAsync();\n  const launchActivity = `${packageName}/${mainActivity}`;\n\n  return {\n    mainActivity,\n    launchActivity,\n    packageName,\n  };\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QA2BsBC,uBAAuB,GAAvBA,uBAAuB;AA3Bf,IAAAC,cAAsB,GAAAF,OAAA,CAAtB,sBAAsB;AAEf,IAAAG,qBAAoD,GAAAH,OAAA;AAC5D,IAAAI,OAAoB,GAAAJ,OAAA;AAAA,SAQlCK,oBAAoBA,CAAAC,EAAA;EAAA,OAAAC,qBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,sBAAA;EAAAA,qBAAA,GAAAR,iBAAA,CAAnC,WAAoCW,WAAmB,EAAmB;IACxE,IAAMC,QAAQ,SAAST,cAAa,CAAAU,aAAA,CAACC,KAAK,CAACC,uBAAuB,CAACJ,WAAW,CAAC;IAC/E,IAAMK,eAAe,SAASb,cAAa,CAAAU,aAAA,CAACI,QAAQ,CAACC,wBAAwB,CAACN,QAAQ,CAAC;IAGvF,IAAMO,QAAQ,SAAShB,cAAa,CAAAU,aAAA,CAACI,QAAQ,CAACG,mBAAmB,CAACJ,eAAe,CAAC;IAClF,IAAI,CAACG,QAAQ,EAAE;MACb,MAAM,IAAId,OAAY,CAAAgB,YAAA,CACpB,mBAAmB,EAClB,GAAET,QAAS,0CAAyC,CACtD;;IAGH,OAAOO,QAAQ,CAACG,CAAC,CAAC,cAAc,CAAC;GAClC;EAAA,OAAAd,qBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqBR,uBAAuBA,CAAAqB,GAAA;EAAA,OAAAC,wBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAc,yBAAA;EAAAA,wBAAA,GAAAxB,iBAAA,CAAtC,WAAuCW,WAAmB,EAAwB;IAEvF,IAAMc,YAAY,SAASnB,oBAAoB,CAACK,WAAW,CAAC;IAE5D,IAAMe,WAAW,SAAS,IAAItB,qBAAoB,CAAAuB,oBAAA,CAAChB,WAAW,CAAC,CAACiB,uBAAuB,EAAE;IACzF,IAAMC,cAAc,GAAI,GAAEH,WAAY,IAAGD,YAAa,EAAC;IAEvD,OAAO;MACLA,YAAY,EAAZA,YAAY;MACZI,cAAc,EAAdA,cAAc;MACdH,WAAW,EAAXA;KACD;GACF;EAAA,OAAAF,wBAAA,CAAAf,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}