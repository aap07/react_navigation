{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expoLogin = void 0;\nvar _args = require(\"../utils/args\");\nvar _errors = require(\"../utils/errors\");\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar expoLogin = function () {\n  var _ref = _asyncToGenerator(function* (argv) {\n    var args = (0, _args).assertArgs({\n      \"--help\": Boolean,\n      \"--username\": String,\n      \"--password\": String,\n      \"--otp\": String,\n      \"-h\": \"--help\",\n      \"-u\": \"--username\",\n      \"-p\": \"--password\"\n    }, argv);\n    if (args[\"--help\"]) {\n      (0, _args).printHelp(`Log in to an Expo account`, `npx expo login`, [`-u, --username <string>  Username`, `-p, --password <string>  Password`, `--otp <string>           One-time password from your 2FA device`, `-h, --help               Usage info`].join(\"\\n\"));\n    }\n    var _yield$Promise$resolv = yield Promise.resolve().then(function () {\n        return _interopRequireWildcard(require(\"../api/user/actions\"));\n      }),\n      showLoginPromptAsync = _yield$Promise$resolv.showLoginPromptAsync;\n    return showLoginPromptAsync({\n      username: args[\"--username\"],\n      password: args[\"--password\"],\n      otp: args[\"--otp\"]\n    }).catch(_errors.logCmdError);\n  });\n  return function expoLogin(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.expoLogin = expoLogin;","map":{"version":3,"names":["_args","require","_errors","expoLogin","_ref","_asyncToGenerator","argv","args","assertArgs","Boolean","String","printHelp","join","_yield$Promise$resolv","Promise","resolve","then","showLoginPromptAsync","username","password","otp","catch","logCmdError","_x","apply","arguments"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\login\\index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { Command } from '../../bin/cli';\nimport { assertArgs, printHelp } from '../utils/args';\nimport { logCmdError } from '../utils/errors';\n\nexport const expoLogin: Command = async (argv) => {\n  const args = assertArgs(\n    {\n      // Types\n      '--help': Boolean,\n      '--username': String,\n      '--password': String,\n      '--otp': String,\n      // Aliases\n      '-h': '--help',\n      '-u': '--username',\n      '-p': '--password',\n    },\n    argv\n  );\n\n  if (args['--help']) {\n    printHelp(\n      `Log in to an Expo account`,\n      `npx expo login`,\n      [\n        `-u, --username <string>  Username`,\n        `-p, --password <string>  Password`,\n        `--otp <string>           One-time password from your 2FA device`,\n        `-h, --help               Usage info`,\n      ].join('\\n')\n    );\n  }\n\n  const { showLoginPromptAsync } = await import('../api/user/actions');\n  return showLoginPromptAsync({\n    // Parsed options\n    username: args['--username'],\n    password: args['--password'],\n    otp: args['--otp'],\n  }).catch(logCmdError);\n};\n"],"mappings":"AAAA;;;;;;;;AAEsC,IAAAA,KAAe,GAAAC,OAAA;AACzB,IAAAC,OAAiB,GAAAD,OAAA;;;;;;;;;;;;;;;;;;;;;;AAEtC,IAAME,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAY,WAAOC,IAAI,EAAK;IAChD,IAAMC,IAAI,GAAG,IAAAP,KAAU,EAatBQ,UAbsB,CACrB;MAEE,QAAQ,EAAEC,OAAO;MACjB,YAAY,EAAEC,MAAM;MACpB,YAAY,EAAEA,MAAM;MACpB,OAAO,EAAEA,MAAM;MAEf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE;KACP,EACDJ,IAAI,CACL;IAED,IAAIC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAClB,IAAAP,KAAS,EASRW,SATQ,CACN,2BAA0B,EAC1B,gBAAe,EAChB,CACG,mCAAkC,EAClC,mCAAkC,EAClC,iEAAgE,EAChE,qCAAoC,CACtC,CAACC,IAAI,CAAC,IAAI,CAAC,CACb;;IAGH,IAAAC,qBAAA,SAAuCC,OAAA,CAAAC,OAAA,GAAAC,IAAA;oEAA4B;QAAC;MAA5DC,oBAAoB,GAAAJ,qBAAA,CAApBI,oBAAoB;IAC5B,OAAOA,oBAAoB,CAAC;MAE1BC,QAAQ,EAAEX,IAAI,CAAC,YAAY,CAAC;MAC5BY,QAAQ,EAAEZ,IAAI,CAAC,YAAY,CAAC;MAC5Ba,GAAG,EAAEb,IAAI,CAAC,OAAO;KAClB,CAAC,CAACc,KAAK,CAACnB,OAAW,CAAAoB,WAAA,CAAC;GACtB;EAAA,gBApCYnB,SAASA,CAAAoB,EAAA;IAAA,OAAAnB,IAAA,CAAAoB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAoCrB;QApCYtB,SAAS,GAATA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}