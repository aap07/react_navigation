{"ast":null,"code":"import { hasAnchor } from \"./identity.js\";\nfunction toJS(value, arg, ctx) {\n  if (Array.isArray(value)) return value.map(function (v, i) {\n    return toJS(v, String(i), ctx);\n  });\n  if (value && typeof value.toJSON === 'function') {\n    if (!ctx || !hasAnchor(value)) return value.toJSON(arg, ctx);\n    var data = {\n      aliasCount: 0,\n      count: 1,\n      res: undefined\n    };\n    ctx.anchors.set(value, data);\n    ctx.onCreate = function (res) {\n      data.res = res;\n      delete ctx.onCreate;\n    };\n    var res = value.toJSON(arg, ctx);\n    if (ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n  if (typeof value === 'bigint' && !(ctx != null && ctx.keep)) return Number(value);\n  return value;\n}\nexport { toJS };","map":{"version":3,"names":["hasAnchor","toJS","value","arg","ctx","Array","isArray","map","v","i","String","toJSON","data","aliasCount","count","res","undefined","anchors","set","onCreate","keep","Number"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/node_modules/yaml/browser/dist/nodes/toJS.js"],"sourcesContent":["import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n"],"mappings":"AAAA,SAASA,SAAS;AAYlB,SAASC,IAAIA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EAE3B,IAAIC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EACpB,OAAOA,KAAK,CAACK,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKR,IAAI,CAACO,CAAC,EAAEE,MAAM,CAACD,CAAC,CAAC,EAAEL,GAAG,CAAC;EAAA,EAAC;EACvD,IAAIF,KAAK,IAAI,OAAOA,KAAK,CAACS,MAAM,KAAK,UAAU,EAAE;IAE7C,IAAI,CAACP,GAAG,IAAI,CAACJ,SAAS,CAACE,KAAK,CAAC,EACzB,OAAOA,KAAK,CAACS,MAAM,CAACR,GAAG,EAAEC,GAAG,CAAC;IACjC,IAAMQ,IAAI,GAAG;MAAEC,UAAU,EAAE,CAAC;MAAEC,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAEC;IAAU,CAAC;IACxDZ,GAAG,CAACa,OAAO,CAACC,GAAG,CAAChB,KAAK,EAAEU,IAAI,CAAC;IAC5BR,GAAG,CAACe,QAAQ,GAAG,UAAAJ,GAAG,EAAI;MAClBH,IAAI,CAACG,GAAG,GAAGA,GAAG;MACd,OAAOX,GAAG,CAACe,QAAQ;IACvB,CAAC;IACD,IAAMJ,GAAG,GAAGb,KAAK,CAACS,MAAM,CAACR,GAAG,EAAEC,GAAG,CAAC;IAClC,IAAIA,GAAG,CAACe,QAAQ,EACZf,GAAG,CAACe,QAAQ,CAACJ,GAAG,CAAC;IACrB,OAAOA,GAAG;EACd;EACA,IAAI,OAAOb,KAAK,KAAK,QAAQ,IAAI,EAACE,GAAG,YAAHA,GAAG,CAAEgB,IAAI,GACvC,OAAOC,MAAM,CAACnB,KAAK,CAAC;EACxB,OAAOA,KAAK;AAChB;AAEA,SAASD,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}