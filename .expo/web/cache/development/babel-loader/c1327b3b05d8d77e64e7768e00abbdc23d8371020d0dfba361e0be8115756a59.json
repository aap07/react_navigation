{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bin = void 0;\nObject.defineProperty(exports, \"loadConfig\", {\n  enumerable: true,\n  get: function get() {\n    return _cliConfig().default;\n  }\n});\nexports.run = run;\nfunction _cliConfig() {\n  var data = _interopRequireDefault(require(\"@react-native-community/cli-config\"));\n  _cliConfig = function _cliConfig() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  var data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function _chalk() {\n    return data;\n  };\n  return data;\n}\nfunction _child_process() {\n  var data = _interopRequireDefault(require(\"child_process\"));\n  _child_process = function _child_process() {\n    return data;\n  };\n  return data;\n}\nfunction _commander() {\n  var data = require(\"commander\");\n  _commander = function _commander() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nvar _commands = require(\"./commands\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar pkgJson = require(\"../package.json\");\nvar program = new (_commander().Command)().usage('[command] [options]').version(pkgJson.version, '-v', 'Output the current version').option('--verbose', 'Increase logging verbosity');\nvar handleError = function handleError(err) {\n  _cliTools().logger.enable();\n  if (program.opts().verbose) {\n    _cliTools().logger.error(err.message);\n  } else {\n    var message = err.message.replace(/\\.$/, '');\n    _cliTools().logger.error(`${message}.`);\n  }\n  if (err.stack) {\n    _cliTools().logger.log(err.stack);\n  }\n  if (!program.opts().verbose && _cliTools().logger.hasDebugMessages()) {\n    _cliTools().logger.info(_chalk().default.dim(`Run CLI with ${_chalk().default.reset('--verbose')} ${_chalk().default.dim('flag for more details.')}`));\n  }\n  process.exit(1);\n};\nfunction printExamples(examples) {\n  var output = [];\n  if (examples && examples.length > 0) {\n    var formattedUsage = examples.map(function (example) {\n      return `  ${example.desc}: \\n  ${_chalk().default.cyan(example.cmd)}`;\n    }).join('\\n\\n');\n    output = output.concat([_chalk().default.bold('\\nExample usage:'), formattedUsage]);\n  }\n  return output.join('\\n').concat('\\n');\n}\nfunction isDetachedCommand(command) {\n  return command.detached === true;\n}\nfunction isAttachedCommand(command) {\n  return !isDetachedCommand(command);\n}\nfunction attachCommand(command, config) {\n  var cmd = program.command(command.name).action(function () {\n    var _handleAction = _asyncToGenerator(function* () {\n      var passedOptions = this.opts();\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var argv = Array.from(args).slice(0, -1);\n      try {\n        if (isDetachedCommand(command)) {\n          yield command.func(argv, passedOptions, config);\n        } else if (isAttachedCommand(command)) {\n          yield command.func(argv, config, passedOptions);\n        } else {\n          throw new Error('A command must be either attached or detached');\n        }\n      } catch (error) {\n        handleError(error);\n      }\n    });\n    function handleAction() {\n      return _handleAction.apply(this, arguments);\n    }\n    return handleAction;\n  }());\n  if (command.description) {\n    cmd.description(command.description);\n  }\n  cmd.addHelpText('after', printExamples(command.examples));\n  for (var opt of command.options || []) {\n    var _opt$description;\n    cmd.option(opt.name, (_opt$description = opt.description) != null ? _opt$description : '', opt.parse || function (val) {\n      return val;\n    }, typeof opt.default === 'function' ? opt.default(config) : opt.default);\n  }\n}\nfunction run() {\n  return _run.apply(this, arguments);\n}\nfunction _run() {\n  _run = _asyncToGenerator(function* () {\n    try {\n      yield setupAndRun();\n    } catch (e) {\n      handleError(e);\n    }\n  });\n  return _run.apply(this, arguments);\n}\nfunction setupAndRun() {\n  return _setupAndRun.apply(this, arguments);\n}\nfunction _setupAndRun() {\n  _setupAndRun = _asyncToGenerator(function* () {\n    if (process.argv.includes('config')) {\n      _cliTools().logger.disable();\n    }\n    _cliTools().logger.setVerbose(process.argv.includes('--verbose'));\n    if (process.platform !== 'win32') {\n      var scriptName = 'setup_env.sh';\n      var absolutePath = _path().default.join(__dirname, '..', scriptName);\n      try {\n        _child_process().default.execFileSync(absolutePath, {\n          stdio: 'pipe'\n        });\n      } catch (error) {\n        _cliTools().logger.warn(`Failed to run environment setup script \"${scriptName}\"\\n\\n${_chalk().default.red(error)}`);\n        _cliTools().logger.info(`React Native CLI will continue to run if your local environment matches what React Native expects. If it does fail, check out \"${absolutePath}\" and adjust your environment to match it.`);\n      }\n    }\n    var config;\n    try {\n      config = (0, _cliConfig().default)();\n      _cliTools().logger.enable();\n      for (var command of [].concat(_toConsumableArray(_commands.projectCommands), _toConsumableArray(config.commands))) {\n        attachCommand(command, config);\n      }\n    } catch (error) {\n      if (error.message.includes(\"We couldn't find a package.json\")) {\n        _cliTools().logger.debug(error.message);\n        _cliTools().logger.debug('Failed to load configuration of your project. Only a subset of commands will be available.');\n      } else {\n        throw new (_cliTools().CLIError)('Failed to load configuration of your project.', error);\n      }\n    } finally {\n      for (var _command of _commands.detachedCommands) {\n        attachCommand(_command, config);\n      }\n    }\n    program.parse(process.argv);\n  });\n  return _setupAndRun.apply(this, arguments);\n}\nvar bin = require.resolve(\"./bin\");\nexports.bin = bin;","map":{"version":3,"names":["_toConsumableArray","require","_asyncToGenerator","Object","defineProperty","exports","value","bin","enumerable","get","_cliConfig","default","run","data","_interopRequireDefault","_cliTools","_chalk","_child_process","_commander","_path","_commands","obj","__esModule","pkgJson","program","Command","usage","version","option","handleError","err","logger","enable","opts","verbose","error","message","replace","stack","log","hasDebugMessages","info","dim","reset","process","exit","printExamples","examples","output","length","formattedUsage","map","example","desc","cyan","cmd","join","concat","bold","isDetachedCommand","command","detached","isAttachedCommand","attachCommand","config","name","action","_handleAction","passedOptions","_len","arguments","args","Array","_key","argv","from","slice","func","Error","handleAction","apply","description","addHelpText","opt","options","_opt$description","parse","val","_run","setupAndRun","e","_setupAndRun","includes","disable","setVerbose","platform","scriptName","absolutePath","__dirname","execFileSync","stdio","warn","red","projectCommands","commands","debug","CLIError","detachedCommands","resolve"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli/build/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bin = void 0;\nObject.defineProperty(exports, \"loadConfig\", {\n  enumerable: true,\n  get: function () {\n    return _cliConfig().default;\n  }\n});\nexports.run = run;\nfunction _cliConfig() {\n  const data = _interopRequireDefault(require(\"@react-native-community/cli-config\"));\n  _cliConfig = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _chalk() {\n  const data = _interopRequireDefault(require(\"chalk\"));\n  _chalk = function () {\n    return data;\n  };\n  return data;\n}\nfunction _child_process() {\n  const data = _interopRequireDefault(require(\"child_process\"));\n  _child_process = function () {\n    return data;\n  };\n  return data;\n}\nfunction _commander() {\n  const data = require(\"commander\");\n  _commander = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nvar _commands = require(\"./commands\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst pkgJson = require('../package.json');\nconst program = new (_commander().Command)().usage('[command] [options]').version(pkgJson.version, '-v', 'Output the current version').option('--verbose', 'Increase logging verbosity');\nconst handleError = err => {\n  _cliTools().logger.enable();\n  if (program.opts().verbose) {\n    _cliTools().logger.error(err.message);\n  } else {\n    // Some error messages (esp. custom ones) might have `.` at the end already.\n    const message = err.message.replace(/\\.$/, '');\n    _cliTools().logger.error(`${message}.`);\n  }\n  if (err.stack) {\n    _cliTools().logger.log(err.stack);\n  }\n  if (!program.opts().verbose && _cliTools().logger.hasDebugMessages()) {\n    _cliTools().logger.info(_chalk().default.dim(`Run CLI with ${_chalk().default.reset('--verbose')} ${_chalk().default.dim('flag for more details.')}`));\n  }\n  process.exit(1);\n};\nfunction printExamples(examples) {\n  let output = [];\n  if (examples && examples.length > 0) {\n    const formattedUsage = examples.map(example => `  ${example.desc}: \\n  ${_chalk().default.cyan(example.cmd)}`).join('\\n\\n');\n    output = output.concat([_chalk().default.bold('\\nExample usage:'), formattedUsage]);\n  }\n  return output.join('\\n').concat('\\n');\n}\n\n/**\n * Custom type assertion needed for the `makeCommand` conditional\n * types to be properly resolved.\n */\nfunction isDetachedCommand(command) {\n  return command.detached === true;\n}\nfunction isAttachedCommand(command) {\n  return !isDetachedCommand(command);\n}\n\n/**\n * Attaches a new command onto global `commander` instance.\n *\n * Note that this function takes additional argument of `Config` type in case\n * passed `command` needs it for its execution.\n */\nfunction attachCommand(command, config) {\n  const cmd = program.command(command.name).action(async function handleAction(...args) {\n    const passedOptions = this.opts();\n    const argv = Array.from(args).slice(0, -1);\n    try {\n      if (isDetachedCommand(command)) {\n        await command.func(argv, passedOptions, config);\n      } else if (isAttachedCommand(command)) {\n        await command.func(argv, config, passedOptions);\n      } else {\n        throw new Error('A command must be either attached or detached');\n      }\n    } catch (error) {\n      handleError(error);\n    }\n  });\n  if (command.description) {\n    cmd.description(command.description);\n  }\n  cmd.addHelpText('after', printExamples(command.examples));\n  for (const opt of command.options || []) {\n    cmd.option(opt.name, opt.description ?? '', opt.parse || (val => val), typeof opt.default === 'function' ? opt.default(config) : opt.default);\n  }\n}\nasync function run() {\n  try {\n    await setupAndRun();\n  } catch (e) {\n    handleError(e);\n  }\n}\nasync function setupAndRun() {\n  // Commander is not available yet\n\n  // when we run `config`, we don't want to output anything to the console. We\n  // expect it to return valid JSON\n  if (process.argv.includes('config')) {\n    _cliTools().logger.disable();\n  }\n  _cliTools().logger.setVerbose(process.argv.includes('--verbose'));\n\n  // We only have a setup script for UNIX envs currently\n  if (process.platform !== 'win32') {\n    const scriptName = 'setup_env.sh';\n    const absolutePath = _path().default.join(__dirname, '..', scriptName);\n    try {\n      _child_process().default.execFileSync(absolutePath, {\n        stdio: 'pipe'\n      });\n    } catch (error) {\n      _cliTools().logger.warn(`Failed to run environment setup script \"${scriptName}\"\\n\\n${_chalk().default.red(error)}`);\n      _cliTools().logger.info(`React Native CLI will continue to run if your local environment matches what React Native expects. If it does fail, check out \"${absolutePath}\" and adjust your environment to match it.`);\n    }\n  }\n  let config;\n  try {\n    config = (0, _cliConfig().default)();\n    _cliTools().logger.enable();\n    for (const command of [..._commands.projectCommands, ...config.commands]) {\n      attachCommand(command, config);\n    }\n  } catch (error) {\n    /**\n     * When there is no `package.json` found, the CLI will enter `detached` mode and a subset\n     * of commands will be available. That's why we don't throw on such kind of error.\n     */\n    if (error.message.includes(\"We couldn't find a package.json\")) {\n      _cliTools().logger.debug(error.message);\n      _cliTools().logger.debug('Failed to load configuration of your project. Only a subset of commands will be available.');\n    } else {\n      throw new (_cliTools().CLIError)('Failed to load configuration of your project.', error);\n    }\n  } finally {\n    for (const command of _commands.detachedCommands) {\n      attachCommand(command, config);\n    }\n  }\n  program.parse(process.argv);\n}\nconst bin = require.resolve('./bin');\nexports.bin = bin;\n\n//# sourceMappingURL=index.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}