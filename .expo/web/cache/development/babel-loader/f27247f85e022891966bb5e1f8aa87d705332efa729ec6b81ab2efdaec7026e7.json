{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitizeNpmPackageName = sanitizeNpmPackageName;\nexports.npmViewAsync = npmViewAsync;\nexports.getNpmUrlAsync = getNpmUrlAsync;\nexports.downloadAndExtractNpmModuleAsync = downloadAndExtractNpmModuleAsync;\nexports.extractLocalNpmTarballAsync = extractLocalNpmTarballAsync;\nexports.extractNpmTarballFromUrlAsync = extractNpmTarballFromUrlAsync;\nexports.extractNpmTarballAsync = extractNpmTarballAsync;\nvar _spawnAsync = _interopRequireDefault(require(\"@expo/spawn-async\"));\nvar _assert = _interopRequireDefault(require(\"assert\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _slugify = _interopRequireDefault(require(\"slugify\"));\nvar _stream = require(\"stream\");\nvar _tar = _interopRequireDefault(require(\"tar\"));\nvar _util = require(\"util\");\nvar _client = require(\"../api/rest/client\");\nvar _createFileTransform = require(\"./createFileTransform\");\nvar _dir = require(\"./dir\");\nvar _errors = require(\"./errors\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:utils:npm\");\nvar cachedFetch = (0, _client).createCachedFetch({\n  cacheDirectory: \"template-cache\"\n});\nfunction sanitizeNpmPackageName(name) {\n  return applyKnownNpmPackageNameRules(name) || applyKnownNpmPackageNameRules((0, _slugify).default(name)) || \"app\";\n}\nfunction applyKnownNpmPackageNameRules(name) {\n  while (/^(\\.|_)/.test(name)) {\n    name = name.substring(1);\n  }\n  name = name.toLowerCase().replace(/[^a-zA-Z._\\-/@]/g, \"\");\n  return name.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") || null;\n}\nfunction npmViewAsync() {\n  return _npmViewAsync.apply(this, arguments);\n}\nfunction _npmViewAsync() {\n  _npmViewAsync = _asyncToGenerator(function* () {\n    var ref;\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n    var cmd = [\"view\"].concat(props, [\"--json\"]);\n    var results = (ref = (yield (0, _spawnAsync).default(\"npm\", cmd)).stdout) == null ? void 0 : ref.trim();\n    var cmdString = `npm ${cmd.join(\" \")}`;\n    debug(\"Run:\", cmdString);\n    if (!results) {\n      return null;\n    }\n    try {\n      return JSON.parse(results);\n    } catch (error) {\n      throw new Error(`Could not parse JSON returned from \"${cmdString}\".\\n\\n${results}\\n\\nError: ${error.message}`);\n    }\n  });\n  return _npmViewAsync.apply(this, arguments);\n}\nfunction getNpmUrlAsync(_x) {\n  return _getNpmUrlAsync.apply(this, arguments);\n}\nfunction _getNpmUrlAsync() {\n  _getNpmUrlAsync = _asyncToGenerator(function* (packageName) {\n    var results = yield npmViewAsync(packageName, \"dist.tarball\");\n    (0, _assert).default(results, `Could not get npm url for package \"${packageName}\"`);\n    if (typeof results === \"string\") {\n      return results;\n    }\n    if (Array.isArray(results)) {\n      return results[results.length - 1];\n    }\n    throw new _errors.CommandError(\"Expected results of `npm view ...` to be an array or string. Instead found: \" + results);\n  });\n  return _getNpmUrlAsync.apply(this, arguments);\n}\nvar pipeline = (0, _util).promisify(_stream.Stream.pipeline);\nfunction downloadAndExtractNpmModuleAsync(_x2, _x3) {\n  return _downloadAndExtractNpmModuleAsync.apply(this, arguments);\n}\nfunction _downloadAndExtractNpmModuleAsync() {\n  _downloadAndExtractNpmModuleAsync = _asyncToGenerator(function* (npmName, props) {\n    var url = yield getNpmUrlAsync(npmName);\n    debug(\"Fetch from URL:\", url);\n    yield extractNpmTarballFromUrlAsync(url, props);\n  });\n  return _downloadAndExtractNpmModuleAsync.apply(this, arguments);\n}\nfunction extractLocalNpmTarballAsync(_x4, _x5) {\n  return _extractLocalNpmTarballAsync.apply(this, arguments);\n}\nfunction _extractLocalNpmTarballAsync() {\n  _extractLocalNpmTarballAsync = _asyncToGenerator(function* (tarFilePath, props) {\n    var readStream = _fs.default.createReadStream(tarFilePath);\n    yield extractNpmTarballAsync(readStream, props);\n  });\n  return _extractLocalNpmTarballAsync.apply(this, arguments);\n}\nfunction createUrlStreamAsync(_x6) {\n  return _createUrlStreamAsync.apply(this, arguments);\n}\nfunction _createUrlStreamAsync() {\n  _createUrlStreamAsync = _asyncToGenerator(function* (url) {\n    var response = yield cachedFetch(url);\n    if (!response.ok) {\n      throw new Error(`Unexpected response: ${response.statusText}. From url: ${url}`);\n    }\n    return response.body;\n  });\n  return _createUrlStreamAsync.apply(this, arguments);\n}\nfunction extractNpmTarballFromUrlAsync(_x7, _x8) {\n  return _extractNpmTarballFromUrlAsync.apply(this, arguments);\n}\nfunction _extractNpmTarballFromUrlAsync() {\n  _extractNpmTarballFromUrlAsync = _asyncToGenerator(function* (url, props) {\n    yield extractNpmTarballAsync(yield createUrlStreamAsync(url), props);\n  });\n  return _extractNpmTarballFromUrlAsync.apply(this, arguments);\n}\nfunction extractNpmTarballAsync(_x9, _x10) {\n  return _extractNpmTarballAsync.apply(this, arguments);\n}\nfunction _extractNpmTarballAsync() {\n  _extractNpmTarballAsync = _asyncToGenerator(function* (stream, props) {\n    var cwd = props.cwd,\n      strip = props.strip,\n      name = props.name,\n      _props$fileList = props.fileList,\n      fileList = _props$fileList === void 0 ? [] : _props$fileList;\n    yield (0, _dir).ensureDirectoryAsync(cwd);\n    yield pipeline(stream, _tar.default.extract({\n      cwd: cwd,\n      transform: (0, _createFileTransform).createFileTransform(name),\n      onentry: (0, _createFileTransform).createEntryResolver(name),\n      strip: strip != null ? strip : 1\n    }, fileList));\n  });\n  return _extractNpmTarballAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","sanitizeNpmPackageName","npmViewAsync","getNpmUrlAsync","downloadAndExtractNpmModuleAsync","extractLocalNpmTarballAsync","extractNpmTarballFromUrlAsync","extractNpmTarballAsync","_spawnAsync","_interopRequireDefault","_assert","_fs","_slugify","_stream","_tar","_util","_client","_createFileTransform","_dir","_errors","debug","cachedFetch","createCachedFetch","cacheDirectory","name","applyKnownNpmPackageNameRules","default","test","substring","toLowerCase","replace","normalize","_npmViewAsync","apply","arguments","ref","_len","length","props","Array","_key","cmd","concat","results","stdout","trim","cmdString","join","JSON","parse","error","Error","message","_x","_getNpmUrlAsync","packageName","isArray","CommandError","pipeline","promisify","Stream","_x2","_x3","_downloadAndExtractNpmModuleAsync","npmName","url","_x4","_x5","_extractLocalNpmTarballAsync","tarFilePath","readStream","createReadStream","createUrlStreamAsync","_x6","_createUrlStreamAsync","response","ok","statusText","body","_x7","_x8","_extractNpmTarballFromUrlAsync","_x9","_x10","_extractNpmTarballAsync","stream","cwd","strip","_props$fileList","fileList","ensureDirectoryAsync","extract","transform","createFileTransform","onentry","createEntryResolver"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\npm.ts"],"sourcesContent":["import { JSONValue } from '@expo/json-file';\nimport spawnAsync from '@expo/spawn-async';\nimport assert from 'assert';\nimport fs from 'fs';\nimport slugify from 'slugify';\nimport { Stream } from 'stream';\nimport tar from 'tar';\nimport { promisify } from 'util';\n\nimport { createCachedFetch } from '../api/rest/client';\nimport { createEntryResolver, createFileTransform } from './createFileTransform';\nimport { ensureDirectoryAsync } from './dir';\nimport { CommandError } from './errors';\n\nconst debug = require('debug')('expo:utils:npm') as typeof console.log;\n\nconst cachedFetch = createCachedFetch({\n  cacheDirectory: 'template-cache',\n  // Time to live. How long (in ms) responses remain cached before being automatically ejected. If undefined, responses are never automatically ejected from the cache.\n  // ttl: 1000,\n});\n\nexport function sanitizeNpmPackageName(name: string): string {\n  // https://github.com/npm/validate-npm-package-name/#naming-rules\n  return (\n    applyKnownNpmPackageNameRules(name) ||\n    applyKnownNpmPackageNameRules(slugify(name)) ||\n    // If nothing is left use 'app' like we do in Xcode projects.\n    'app'\n  );\n}\n\nfunction applyKnownNpmPackageNameRules(name: string): string | null {\n  // https://github.com/npm/validate-npm-package-name/#naming-rules\n\n  // package name cannot start with '.' or '_'.\n  while (/^(\\.|_)/.test(name)) {\n    name = name.substring(1);\n  }\n\n  name = name.toLowerCase().replace(/[^a-zA-Z._\\-/@]/g, '');\n\n  return (\n    name\n      // .replace(/![a-z0-9-._~]+/g, '')\n      // Remove special characters\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '') || null\n  );\n}\n\nexport async function npmViewAsync(...props: string[]): Promise<JSONValue> {\n  const cmd = ['view', ...props, '--json'];\n  const results = (await spawnAsync('npm', cmd)).stdout?.trim();\n  const cmdString = `npm ${cmd.join(' ')}`;\n  debug('Run:', cmdString);\n  if (!results) {\n    return null;\n  }\n  try {\n    return JSON.parse(results);\n  } catch (error: any) {\n    throw new Error(\n      `Could not parse JSON returned from \"${cmdString}\".\\n\\n${results}\\n\\nError: ${error.message}`\n    );\n  }\n}\n\n/** Given a package name like `expo` or `expo@beta`, return the registry URL if it exists. */\nexport async function getNpmUrlAsync(packageName: string): Promise<string> {\n  const results = await npmViewAsync(packageName, 'dist.tarball');\n\n  assert(results, `Could not get npm url for package \"${packageName}\"`);\n\n  // Fully qualified url returns a string.\n  // Example:\n  // 𝝠 npm view expo-template-bare-minimum@sdk-33 dist.tarball --json\n  if (typeof results === 'string') {\n    return results;\n  }\n\n  // When the tag is arbitrary, the tarball url is an array, return the last value as it's the most recent.\n  // Example:\n  // 𝝠 npm view expo-template-bare-minimum@33 dist.tarball --json\n  if (Array.isArray(results)) {\n    return results[results.length - 1] as string;\n  }\n\n  throw new CommandError(\n    'Expected results of `npm view ...` to be an array or string. Instead found: ' + results\n  );\n}\n\n// @ts-ignore\nconst pipeline = promisify(Stream.pipeline);\n\nexport async function downloadAndExtractNpmModuleAsync(\n  npmName: string,\n  props: ExtractProps\n): Promise<void> {\n  const url = await getNpmUrlAsync(npmName);\n\n  debug('Fetch from URL:', url);\n  await extractNpmTarballFromUrlAsync(url, props);\n}\n\nexport async function extractLocalNpmTarballAsync(\n  tarFilePath: string,\n  props: ExtractProps\n): Promise<void> {\n  const readStream = fs.createReadStream(tarFilePath);\n  await extractNpmTarballAsync(readStream, props);\n}\n\ntype ExtractProps = {\n  name: string;\n  cwd: string;\n  strip?: number;\n  fileList?: string[];\n};\n\nasync function createUrlStreamAsync(url: string) {\n  const response = await cachedFetch(url);\n  if (!response.ok) {\n    throw new Error(`Unexpected response: ${response.statusText}. From url: ${url}`);\n  }\n\n  return response.body;\n}\n\nexport async function extractNpmTarballFromUrlAsync(\n  url: string,\n  props: ExtractProps\n): Promise<void> {\n  await extractNpmTarballAsync(await createUrlStreamAsync(url), props);\n}\n\nexport async function extractNpmTarballAsync(\n  stream: NodeJS.ReadableStream,\n  props: ExtractProps\n): Promise<void> {\n  const { cwd, strip, name, fileList = [] } = props;\n\n  await ensureDirectoryAsync(cwd);\n\n  await pipeline(\n    stream,\n    tar.extract(\n      {\n        cwd,\n        transform: createFileTransform(name),\n        onentry: createEntryResolver(name),\n        strip: strip ?? 1,\n      },\n      fileList\n    )\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}