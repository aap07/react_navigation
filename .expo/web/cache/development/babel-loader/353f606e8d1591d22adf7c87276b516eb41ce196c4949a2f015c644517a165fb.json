{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assign;\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n  sources.forEach(function (source) {\n    var descriptors = Object.keys(source).reduce(function (acc, key) {\n      var propertyDescriptor = Object.getOwnPropertyDescriptor(source, key);\n      if (propertyDescriptor !== undefined) {\n        acc[key] = propertyDescriptor;\n      }\n      return acc;\n    }, {});\n    Object.getOwnPropertySymbols(source).forEach(function (sym) {\n      var descriptor = Object.getOwnPropertyDescriptor(source, sym);\n      if (descriptor && descriptor.enumerable) {\n        descriptors[sym.toString()] = descriptor;\n      }\n    });\n    Object.defineProperties(target, descriptors);\n  });\n  return target;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","assign","target","_len","arguments","length","sources","Array","_key","forEach","source","descriptors","keys","reduce","acc","key","propertyDescriptor","getOwnPropertyDescriptor","undefined","getOwnPropertySymbols","sym","descriptor","enumerable","toString","defineProperties"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-config/build/assign.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assign;\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n *\n * Similar to Object.assign(), but it doesn't execute getters. This allows us to have\n * lazy properties on an object and still be able to merge them together\n *\n */\nfunction assign(target, ...sources) {\n  sources.forEach(source => {\n    let descriptors = Object.keys(source).reduce((acc, key) => {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(source, key);\n      if (propertyDescriptor !== undefined) {\n        acc[key] = propertyDescriptor;\n      }\n      return acc;\n    }, {});\n    // by default, Object.assign copies enumerable Symbols too\n    Object.getOwnPropertySymbols(source).forEach(sym => {\n      let descriptor = Object.getOwnPropertyDescriptor(source, sym);\n      if (descriptor && descriptor.enumerable) {\n        descriptors[sym.toString()] = descriptor;\n      }\n    });\n    Object.defineProperties(target, descriptors);\n  });\n  return target;\n}\n\n//# sourceMappingURL=assign.ts.map"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,MAAM;AAQxB,SAASA,MAAMA,CAACC,MAAM,EAAc;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAATC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAPF,OAAO,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;EAAA;EAChCF,OAAO,CAACG,OAAO,CAAC,UAAAC,MAAM,EAAI;IACxB,IAAIC,WAAW,GAAGf,MAAM,CAACgB,IAAI,CAACF,MAAM,CAAC,CAACG,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG,EAAK;MACzD,IAAMC,kBAAkB,GAAGpB,MAAM,CAACqB,wBAAwB,CAACP,MAAM,EAAEK,GAAG,CAAC;MACvE,IAAIC,kBAAkB,KAAKE,SAAS,EAAE;QACpCJ,GAAG,CAACC,GAAG,CAAC,GAAGC,kBAAkB;MAC/B;MACA,OAAOF,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAENlB,MAAM,CAACuB,qBAAqB,CAACT,MAAM,CAAC,CAACD,OAAO,CAAC,UAAAW,GAAG,EAAI;MAClD,IAAIC,UAAU,GAAGzB,MAAM,CAACqB,wBAAwB,CAACP,MAAM,EAAEU,GAAG,CAAC;MAC7D,IAAIC,UAAU,IAAIA,UAAU,CAACC,UAAU,EAAE;QACvCX,WAAW,CAACS,GAAG,CAACG,QAAQ,CAAC,CAAC,CAAC,GAAGF,UAAU;MAC1C;IACF,CAAC,CAAC;IACFzB,MAAM,CAAC4B,gBAAgB,CAACtB,MAAM,EAAES,WAAW,CAAC;EAC9C,CAAC,CAAC;EACF,OAAOT,MAAM;AACf"},"metadata":{},"sourceType":"script","externalDependencies":[]}