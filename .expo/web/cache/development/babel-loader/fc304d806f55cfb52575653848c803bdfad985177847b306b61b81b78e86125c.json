{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remoteDevtoolsCorsMiddleware = remoteDevtoolsCorsMiddleware;\nfunction _url() {\n  var data = require(\"url\");\n  _url = function _url() {\n    return data;\n  };\n  return data;\n}\nfunction remoteDevtoolsCorsMiddleware(req, res, next) {\n  if (req.url) {\n    var _url$pathname;\n    var url = (0, _url().parse)(req.url);\n    var origin = req.headers.origin;\n    var isValidOrigin = origin && ['devtools://devtools', 'https://chrome-devtools-frontend.appspot.com'].includes(origin);\n    if ((_url$pathname = url.pathname) !== null && _url$pathname !== void 0 && _url$pathname.endsWith('.map') && origin && isValidOrigin) {\n      res.setHeader('Access-Control-Allow-Origin', origin);\n      var setHeader = res.setHeader.bind(res);\n      res.setHeader = function (key) {\n        if (key !== 'Access-Control-Allow-Origin') {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          setHeader.apply(void 0, [key].concat(args));\n        }\n        return res;\n      };\n    }\n  }\n  next();\n}","map":{"version":3,"names":["_url","data","require","remoteDevtoolsCorsMiddleware","req","res","next","url","_url$pathname","parse","origin","headers","isValidOrigin","includes","pathname","endsWith","setHeader","bind","key","_len","arguments","length","args","Array","_key","apply","concat"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\middleware\\remoteDevtoolsCorsMiddleware.ts"],"sourcesContent":["import type { IncomingMessage, ServerResponse } from 'http';\nimport { parse as parseUrl } from 'url';\n\n// Middleware that accepts multiple Access-Control-Allow-Origin for processing *.map.\n// This is a hook middleware before metro processing *.map,\n// which originally allow only devtools://devtools\nexport function remoteDevtoolsCorsMiddleware(\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) {\n  if (req.url) {\n    const url = parseUrl(req.url);\n    const origin = req.headers.origin;\n    const isValidOrigin =\n      origin &&\n      ['devtools://devtools', 'https://chrome-devtools-frontend.appspot.com'].includes(origin);\n    if (url.pathname?.endsWith('.map') && origin && isValidOrigin) {\n      res.setHeader('Access-Control-Allow-Origin', origin);\n\n      // Prevent metro overwrite Access-Control-Allow-Origin header\n      const setHeader = res.setHeader.bind(res);\n      res.setHeader = (key, ...args) => {\n        if (key !== 'Access-Control-Allow-Origin') {\n          setHeader(key, ...args);\n        }\n        return res;\n      };\n    }\n  }\n  next();\n}\n"],"mappings":";;;;;;AACA,SAAAA,KAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,IAAA,YAAAA,KAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAKO,SAASE,4BAA4BA,CAC1CC,GAAoB,EACpBC,GAAmB,EACnBC,IAA2B,EAC3B;EACA,IAAIF,GAAG,CAACG,GAAG,EAAE;IAAA,IAAAC,aAAA;IACX,IAAMD,GAAG,GAAG,IAAAP,IAAA,GAAAS,KAAQ,EAACL,GAAG,CAACG,GAAG,CAAC;IAC7B,IAAMG,MAAM,GAAGN,GAAG,CAACO,OAAO,CAACD,MAAM;IACjC,IAAME,aAAa,GACjBF,MAAM,IACN,CAAC,qBAAqB,EAAE,8CAA8C,CAAC,CAACG,QAAQ,CAACH,MAAM,CAAC;IAC1F,IAAI,CAAAF,aAAA,GAAAD,GAAG,CAACO,QAAQ,cAAAN,aAAA,eAAZA,aAAA,CAAcO,QAAQ,CAAC,MAAM,CAAC,IAAIL,MAAM,IAAIE,aAAa,EAAE;MAC7DP,GAAG,CAACW,SAAS,CAAC,6BAA6B,EAAEN,MAAM,CAAC;MAGpD,IAAMM,SAAS,GAAGX,GAAG,CAACW,SAAS,CAACC,IAAI,CAACZ,GAAG,CAAC;MACzCA,GAAG,CAACW,SAAS,GAAG,UAACE,GAAG,EAAc;QAChC,IAAIA,GAAG,KAAK,6BAA6B,EAAE;UAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADpBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;YAAJF,IAAI,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;UAAA;UAEzBR,SAAS,CAAAS,KAAA,UAACP,GAAG,EAAAQ,MAAA,CAAKJ,IAAI,EAAC;QACzB;QACA,OAAOjB,GAAG;MACZ,CAAC;IACH;EACF;EACAC,IAAI,EAAE;AACR"},"metadata":{},"sourceType":"script","externalDependencies":[]}