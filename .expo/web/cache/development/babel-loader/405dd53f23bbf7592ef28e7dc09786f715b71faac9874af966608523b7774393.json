{"ast":null,"code":"'use strict';\n\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar NODE_VERSION_MAJOR_WITH_BIGINT = 10;\nvar NODE_VERSION_MINOR_WITH_BIGINT = 5;\nvar NODE_VERSION_PATCH_WITH_BIGINT = 0;\nvar nodeVersion = process.versions.node.split('.');\nvar nodeVersionMajor = Number.parseInt(nodeVersion[0], 10);\nvar nodeVersionMinor = Number.parseInt(nodeVersion[1], 10);\nvar nodeVersionPatch = Number.parseInt(nodeVersion[2], 10);\nfunction nodeSupportsBigInt() {\n  if (nodeVersionMajor > NODE_VERSION_MAJOR_WITH_BIGINT) {\n    return true;\n  } else if (nodeVersionMajor === NODE_VERSION_MAJOR_WITH_BIGINT) {\n    if (nodeVersionMinor > NODE_VERSION_MINOR_WITH_BIGINT) {\n      return true;\n    } else if (nodeVersionMinor === NODE_VERSION_MINOR_WITH_BIGINT) {\n      if (nodeVersionPatch >= NODE_VERSION_PATCH_WITH_BIGINT) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction getStats(src, dest, cb) {\n  if (nodeSupportsBigInt()) {\n    fs.stat(src, {\n      bigint: true\n    }, function (err, srcStat) {\n      if (err) return cb(err);\n      fs.stat(dest, {\n        bigint: true\n      }, function (err, destStat) {\n        if (err) {\n          if (err.code === 'ENOENT') return cb(null, {\n            srcStat: srcStat,\n            destStat: null\n          });\n          return cb(err);\n        }\n        return cb(null, {\n          srcStat: srcStat,\n          destStat: destStat\n        });\n      });\n    });\n  } else {\n    fs.stat(src, function (err, srcStat) {\n      if (err) return cb(err);\n      fs.stat(dest, function (err, destStat) {\n        if (err) {\n          if (err.code === 'ENOENT') return cb(null, {\n            srcStat: srcStat,\n            destStat: null\n          });\n          return cb(err);\n        }\n        return cb(null, {\n          srcStat: srcStat,\n          destStat: destStat\n        });\n      });\n    });\n  }\n}\nfunction getStatsSync(src, dest) {\n  var srcStat, destStat;\n  if (nodeSupportsBigInt()) {\n    srcStat = fs.statSync(src, {\n      bigint: true\n    });\n  } else {\n    srcStat = fs.statSync(src);\n  }\n  try {\n    if (nodeSupportsBigInt()) {\n      destStat = fs.statSync(dest, {\n        bigint: true\n      });\n    } else {\n      destStat = fs.statSync(dest);\n    }\n  } catch (err) {\n    if (err.code === 'ENOENT') return {\n      srcStat: srcStat,\n      destStat: null\n    };\n    throw err;\n  }\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n}\nfunction checkPaths(src, dest, funcName, cb) {\n  getStats(src, dest, function (err, stats) {\n    if (err) return cb(err);\n    var srcStat = stats.srcStat,\n      destStat = stats.destStat;\n    if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n      return cb(new Error('Source and destination must not be the same.'));\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)));\n    }\n    return cb(null, {\n      srcStat: srcStat,\n      destStat: destStat\n    });\n  });\n}\nfunction checkPathsSync(src, dest, funcName) {\n  var _getStatsSync = getStatsSync(src, dest),\n    srcStat = _getStatsSync.srcStat,\n    destStat = _getStatsSync.destStat;\n  if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    throw new Error('Source and destination must not be the same.');\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName));\n  }\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n}\nfunction checkParentPaths(src, srcStat, dest, funcName, cb) {\n  var srcParent = path.resolve(path.dirname(src));\n  var destParent = path.resolve(path.dirname(dest));\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb();\n  if (nodeSupportsBigInt()) {\n    fs.stat(destParent, {\n      bigint: true\n    }, function (err, destStat) {\n      if (err) {\n        if (err.code === 'ENOENT') return cb();\n        return cb(err);\n      }\n      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n        return cb(new Error(errMsg(src, dest, funcName)));\n      }\n      return checkParentPaths(src, srcStat, destParent, funcName, cb);\n    });\n  } else {\n    fs.stat(destParent, function (err, destStat) {\n      if (err) {\n        if (err.code === 'ENOENT') return cb();\n        return cb(err);\n      }\n      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n        return cb(new Error(errMsg(src, dest, funcName)));\n      }\n      return checkParentPaths(src, srcStat, destParent, funcName, cb);\n    });\n  }\n}\nfunction checkParentPathsSync(src, srcStat, dest, funcName) {\n  var srcParent = path.resolve(path.dirname(src));\n  var destParent = path.resolve(path.dirname(dest));\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return;\n  var destStat;\n  try {\n    if (nodeSupportsBigInt()) {\n      destStat = fs.statSync(destParent, {\n        bigint: true\n      });\n    } else {\n      destStat = fs.statSync(destParent);\n    }\n  } catch (err) {\n    if (err.code === 'ENOENT') return;\n    throw err;\n  }\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    throw new Error(errMsg(src, dest, funcName));\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName);\n}\nfunction isSrcSubdir(src, dest) {\n  var srcArr = path.resolve(src).split(path.sep).filter(function (i) {\n    return i;\n  });\n  var destArr = path.resolve(dest).split(path.sep).filter(function (i) {\n    return i;\n  });\n  return srcArr.reduce(function (acc, cur, i) {\n    return acc && destArr[i] === cur;\n  }, true);\n}\nfunction errMsg(src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`;\n}\nmodule.exports = {\n  checkPaths: checkPaths,\n  checkPathsSync: checkPathsSync,\n  checkParentPaths: checkParentPaths,\n  checkParentPathsSync: checkParentPathsSync,\n  isSrcSubdir: isSrcSubdir\n};","map":{"version":3,"names":["fs","require","path","NODE_VERSION_MAJOR_WITH_BIGINT","NODE_VERSION_MINOR_WITH_BIGINT","NODE_VERSION_PATCH_WITH_BIGINT","nodeVersion","process","versions","node","split","nodeVersionMajor","Number","parseInt","nodeVersionMinor","nodeVersionPatch","nodeSupportsBigInt","getStats","src","dest","cb","stat","bigint","err","srcStat","destStat","code","getStatsSync","statSync","checkPaths","funcName","stats","ino","dev","Error","isDirectory","isSrcSubdir","errMsg","checkPathsSync","_getStatsSync","checkParentPaths","srcParent","resolve","dirname","destParent","parse","root","checkParentPathsSync","srcArr","sep","filter","i","destArr","reduce","acc","cur","module","exports"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/cli/node_modules/fs-extra/lib/util/stat.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\n\nconst NODE_VERSION_MAJOR_WITH_BIGINT = 10\nconst NODE_VERSION_MINOR_WITH_BIGINT = 5\nconst NODE_VERSION_PATCH_WITH_BIGINT = 0\nconst nodeVersion = process.versions.node.split('.')\nconst nodeVersionMajor = Number.parseInt(nodeVersion[0], 10)\nconst nodeVersionMinor = Number.parseInt(nodeVersion[1], 10)\nconst nodeVersionPatch = Number.parseInt(nodeVersion[2], 10)\n\nfunction nodeSupportsBigInt () {\n  if (nodeVersionMajor > NODE_VERSION_MAJOR_WITH_BIGINT) {\n    return true\n  } else if (nodeVersionMajor === NODE_VERSION_MAJOR_WITH_BIGINT) {\n    if (nodeVersionMinor > NODE_VERSION_MINOR_WITH_BIGINT) {\n      return true\n    } else if (nodeVersionMinor === NODE_VERSION_MINOR_WITH_BIGINT) {\n      if (nodeVersionPatch >= NODE_VERSION_PATCH_WITH_BIGINT) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction getStats (src, dest, cb) {\n  if (nodeSupportsBigInt()) {\n    fs.stat(src, { bigint: true }, (err, srcStat) => {\n      if (err) return cb(err)\n      fs.stat(dest, { bigint: true }, (err, destStat) => {\n        if (err) {\n          if (err.code === 'ENOENT') return cb(null, { srcStat, destStat: null })\n          return cb(err)\n        }\n        return cb(null, { srcStat, destStat })\n      })\n    })\n  } else {\n    fs.stat(src, (err, srcStat) => {\n      if (err) return cb(err)\n      fs.stat(dest, (err, destStat) => {\n        if (err) {\n          if (err.code === 'ENOENT') return cb(null, { srcStat, destStat: null })\n          return cb(err)\n        }\n        return cb(null, { srcStat, destStat })\n      })\n    })\n  }\n}\n\nfunction getStatsSync (src, dest) {\n  let srcStat, destStat\n  if (nodeSupportsBigInt()) {\n    srcStat = fs.statSync(src, { bigint: true })\n  } else {\n    srcStat = fs.statSync(src)\n  }\n  try {\n    if (nodeSupportsBigInt()) {\n      destStat = fs.statSync(dest, { bigint: true })\n    } else {\n      destStat = fs.statSync(dest)\n    }\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  getStats(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  if (nodeSupportsBigInt()) {\n    fs.stat(destParent, { bigint: true }, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb()\n        return cb(err)\n      }\n      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n        return cb(new Error(errMsg(src, dest, funcName)))\n      }\n      return checkParentPaths(src, srcStat, destParent, funcName, cb)\n    })\n  } else {\n    fs.stat(destParent, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb()\n        return cb(err)\n      }\n      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n        return cb(new Error(errMsg(src, dest, funcName)))\n      }\n      return checkParentPaths(src, srcStat, destParent, funcName, cb)\n    })\n  }\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    if (nodeSupportsBigInt()) {\n      destStat = fs.statSync(destParent, { bigint: true })\n    } else {\n      destStat = fs.statSync(destParent)\n    }\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}