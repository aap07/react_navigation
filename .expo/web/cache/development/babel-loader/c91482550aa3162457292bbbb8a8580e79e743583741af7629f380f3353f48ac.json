{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"SerialAsset\", {\n  enumerable: true,\n  get: function get() {\n    return _serializerAssets().SerialAsset;\n  }\n});\nexports.createSerializerFromSerialProcessors = createSerializerFromSerialProcessors;\nexports.withExpoSerializers = withExpoSerializers;\nexports.withSerializerPlugins = withSerializerPlugins;\nfunction _jscSafeUrl() {\n  var data = require(\"jsc-safe-url\");\n  _jscSafeUrl = function _jscSafeUrl() {\n    return data;\n  };\n  return data;\n}\nfunction _baseJSBundle() {\n  var data = _interopRequireDefault(require(\"metro/src/DeltaBundler/Serializers/baseJSBundle\"));\n  _baseJSBundle = function _baseJSBundle() {\n    return data;\n  };\n  return data;\n}\nfunction _bundleToString() {\n  var data = _interopRequireDefault(require(\"metro/src/lib/bundleToString\"));\n  _bundleToString = function _bundleToString() {\n    return data;\n  };\n  return data;\n}\nfunction _env() {\n  var data = require(\"../env\");\n  _env = function _env() {\n    return data;\n  };\n  return data;\n}\nfunction _environmentVariableSerializerPlugin() {\n  var data = require(\"./environmentVariableSerializerPlugin\");\n  _environmentVariableSerializerPlugin = function _environmentVariableSerializerPlugin() {\n    return data;\n  };\n  return data;\n}\nfunction _getCssDeps() {\n  var data = require(\"./getCssDeps\");\n  _getCssDeps = function _getCssDeps() {\n    return data;\n  };\n  return data;\n}\nfunction _serializerAssets() {\n  var data = require(\"./serializerAssets\");\n  _serializerAssets = function _serializerAssets() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction withExpoSerializers(config) {\n  var processors = [];\n  if (!_env().env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(_environmentVariableSerializerPlugin().environmentVariableSerializerPlugin);\n  }\n  return withSerializerPlugins(config, processors);\n}\nfunction withSerializerPlugins(config, processors) {\n  var _config$serializer;\n  var originalSerializer = (_config$serializer = config.serializer) === null || _config$serializer === void 0 ? void 0 : _config$serializer.customSerializer;\n  return _objectSpread(_objectSpread({}, config), {}, {\n    serializer: _objectSpread(_objectSpread({}, config.serializer), {}, {\n      customSerializer: createSerializerFromSerialProcessors(processors, originalSerializer)\n    })\n  });\n}\nfunction getDefaultSerializer(fallbackSerializer) {\n  var defaultSerializer = fallbackSerializer !== null && fallbackSerializer !== void 0 ? fallbackSerializer : _asyncToGenerator(function* () {\n    var bundle = (0, _baseJSBundle().default).apply(void 0, arguments);\n    var outputCode = (0, _bundleToString().default)(bundle).code;\n    return outputCode;\n  });\n  return _asyncToGenerator(function* () {\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n    var graph = props[2],\n      options = props[3];\n    var jsCode = yield defaultSerializer.apply(void 0, props);\n    if (!options.sourceUrl) {\n      return jsCode;\n    }\n    var sourceUrl = (0, _jscSafeUrl().isJscSafeUrl)(options.sourceUrl) ? (0, _jscSafeUrl().toNormalUrl)(options.sourceUrl) : options.sourceUrl;\n    var url = new URL(sourceUrl, 'https://expo.dev');\n    if (url.searchParams.get('platform') !== 'web' || url.searchParams.get('serializer.output') !== 'static') {\n      return jsCode;\n    }\n    var cssDeps = (0, _getCssDeps().getCssSerialAssets)(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter\n    });\n    var jsAsset;\n    if (jsCode) {\n      var stringContents = typeof jsCode === 'string' ? jsCode : jsCode.code;\n      jsAsset = {\n        filename: options.dev ? 'index.js' : `_expo/static/js/web/${(0, _getCssDeps().fileNameFromContents)({\n          filepath: url.pathname,\n          src: stringContents\n        })}.js`,\n        originFilename: 'index.js',\n        type: 'js',\n        metadata: {},\n        source: stringContents\n      };\n    }\n    return JSON.stringify([jsAsset].concat(_toConsumableArray(cssDeps)));\n  });\n}\nfunction createSerializerFromSerialProcessors(processors, originalSerializer) {\n  var finalSerializer = getDefaultSerializer(originalSerializer);\n  return function () {\n    for (var _len2 = arguments.length, props = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      props[_key2] = arguments[_key2];\n    }\n    for (var processor of processors) {\n      if (processor) {\n        props = processor.apply(void 0, _toConsumableArray(props));\n      }\n    }\n    return finalSerializer.apply(void 0, _toConsumableArray(props));\n  };\n}","map":{"version":3,"names":["_jscSafeUrl","data","require","_baseJSBundle","_interopRequireDefault","_bundleToString","_env","_environmentVariableSerializerPlugin","_getCssDeps","_serializerAssets","obj","__esModule","default","withExpoSerializers","config","processors","env","EXPO_NO_CLIENT_ENV_VARS","push","environmentVariableSerializerPlugin","withSerializerPlugins","_config$serializer","originalSerializer","serializer","customSerializer","_objectSpread","createSerializerFromSerialProcessors","getDefaultSerializer","fallbackSerializer","defaultSerializer","_asyncToGenerator","bundle","apply","arguments","outputCode","code","_len","length","props","Array","_key","graph","options","jsCode","sourceUrl","isJscSafeUrl","toNormalUrl","url","URL","searchParams","get","cssDeps","getCssSerialAssets","dependencies","projectRoot","processModuleFilter","jsAsset","stringContents","filename","dev","fileNameFromContents","filepath","pathname","src","originFilename","type","metadata","source","JSON","stringify","concat","_toConsumableArray","finalSerializer","_len2","_key2","processor"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\serializer\\withExpoSerializers.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { isJscSafeUrl, toNormalUrl } from 'jsc-safe-url';\nimport { MixedOutput } from 'metro';\nimport { InputConfigT, SerializerConfigT } from 'metro-config';\nimport baseJSBundle from 'metro/src/DeltaBundler/Serializers/baseJSBundle';\nimport bundleToString from 'metro/src/lib/bundleToString';\n\nimport { env } from '../env';\nimport { environmentVariableSerializerPlugin } from './environmentVariableSerializerPlugin';\nimport { fileNameFromContents, getCssSerialAssets } from './getCssDeps';\nimport { SerialAsset } from './serializerAssets';\n\nexport type Serializer = NonNullable<SerializerConfigT['customSerializer']>;\n\nexport type SerializerParameters = Parameters<Serializer>;\n\n// A serializer that processes the input and returns a modified version.\n// Unlike a serializer, these can be chained together.\nexport type SerializerPlugin = (...props: SerializerParameters) => SerializerParameters;\n\nexport function withExpoSerializers(config: InputConfigT): InputConfigT {\n  const processors: SerializerPlugin[] = [];\n  if (!env.EXPO_NO_CLIENT_ENV_VARS) {\n    processors.push(environmentVariableSerializerPlugin);\n  }\n\n  return withSerializerPlugins(config, processors);\n}\n\n// There can only be one custom serializer as the input doesn't match the output.\n// Here we simply run\nexport function withSerializerPlugins(\n  config: InputConfigT,\n  processors: SerializerPlugin[]\n): InputConfigT {\n  const originalSerializer = config.serializer?.customSerializer;\n\n  return {\n    ...config,\n    serializer: {\n      ...config.serializer,\n      customSerializer: createSerializerFromSerialProcessors(processors, originalSerializer),\n    },\n  };\n}\n\nfunction getDefaultSerializer(fallbackSerializer?: Serializer | null): Serializer {\n  const defaultSerializer =\n    fallbackSerializer ??\n    (async (...params: SerializerParameters) => {\n      const bundle = baseJSBundle(...params);\n      const outputCode = bundleToString(bundle).code;\n      return outputCode;\n    });\n  return async (\n    ...props: SerializerParameters\n  ): Promise<string | { code: string; map: string }> => {\n    const [, , graph, options] = props;\n    const jsCode = await defaultSerializer(...props);\n\n    if (!options.sourceUrl) {\n      return jsCode;\n    }\n    const sourceUrl = isJscSafeUrl(options.sourceUrl)\n      ? toNormalUrl(options.sourceUrl)\n      : options.sourceUrl;\n    const url = new URL(sourceUrl, 'https://expo.dev');\n    if (\n      url.searchParams.get('platform') !== 'web' ||\n      url.searchParams.get('serializer.output') !== 'static'\n    ) {\n      // Default behavior if `serializer.output=static` is not present in the URL.\n      return jsCode;\n    }\n\n    const cssDeps = getCssSerialAssets<MixedOutput>(graph.dependencies, {\n      projectRoot: options.projectRoot,\n      processModuleFilter: options.processModuleFilter,\n    });\n\n    let jsAsset: SerialAsset | undefined;\n\n    if (jsCode) {\n      const stringContents = typeof jsCode === 'string' ? jsCode : jsCode.code;\n      jsAsset = {\n        filename: options.dev\n          ? 'index.js'\n          : `_expo/static/js/web/${fileNameFromContents({\n              filepath: url.pathname,\n              src: stringContents,\n            })}.js`,\n        originFilename: 'index.js',\n        type: 'js',\n        metadata: {},\n        source: stringContents,\n      };\n    }\n\n    return JSON.stringify([jsAsset, ...cssDeps]);\n  };\n}\n\nexport function createSerializerFromSerialProcessors(\n  processors: (SerializerPlugin | undefined)[],\n  originalSerializer?: Serializer | null\n): Serializer {\n  const finalSerializer = getDefaultSerializer(originalSerializer);\n  return (...props: SerializerParameters): ReturnType<Serializer> => {\n    for (const processor of processors) {\n      if (processor) {\n        props = processor(...props);\n      }\n    }\n\n    return finalSerializer(...props);\n  };\n}\n\nexport { SerialAsset };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}