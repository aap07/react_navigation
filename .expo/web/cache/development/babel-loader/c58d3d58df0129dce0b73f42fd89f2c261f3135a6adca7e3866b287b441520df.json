{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expoInstall = void 0;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _args = require(\"../utils/args\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar expoInstall = function () {\n  var _ref = _asyncToGenerator(function* (argv) {\n    var args = (0, _args).assertWithOptionsArgs({\n      \"--help\": Boolean,\n      \"-h\": \"--help\"\n    }, {\n      argv: argv,\n      permissive: true\n    });\n    if (args[\"--help\"]) {\n      (0, _args).printHelp(`Install a module or other package to a project`, `npx expo install`, [`--check     Check which installed packages need to be updated`, `--fix       Automatically update any invalid package versions`, _chalk.default`--npm       Use npm to install dependencies. {dim Default when package-lock.json exists}`, _chalk.default`--yarn      Use Yarn to install dependencies. {dim Default when yarn.lock exists}`, _chalk.default`--bun       Use bun to install dependencies. {dim Default when bun.lockb exists}`, _chalk.default`--pnpm      Use pnpm to install dependencies. {dim Default when pnpm-lock.yaml exists}`, `-h, --help  Usage info`].join(\"\\n\"), [\"\", _chalk.default`  Additional options can be passed to the underlying install command by using {bold --}`, _chalk.default`    {dim $} npx expo install react -- --verbose`, _chalk.default`    {dim >} yarn add react --verbose`, \"\"].join(\"\\n\"));\n    }\n    var _require = require(\"./installAsync\"),\n      installAsync = _require.installAsync;\n    var _require2 = require(\"../utils/errors\"),\n      logCmdError = _require2.logCmdError;\n    var _require3 = require(\"./resolveOptions\"),\n      resolveArgsAsync = _require3.resolveArgsAsync;\n    var _yield$resolveArgsAsy = yield resolveArgsAsync(process.argv.slice(3)).catch(logCmdError),\n      variadic = _yield$resolveArgsAsy.variadic,\n      options = _yield$resolveArgsAsy.options,\n      extras = _yield$resolveArgsAsy.extras;\n    return installAsync(variadic, options, extras).catch(logCmdError);\n  });\n  return function expoInstall(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.expoInstall = expoInstall;","map":{"version":3,"names":["_chalk","_interopRequireDefault","require","_args","expoInstall","_ref","_asyncToGenerator","argv","args","assertWithOptionsArgs","Boolean","permissive","printHelp","default","join","_require","installAsync","_require2","logCmdError","_require3","resolveArgsAsync","_yield$resolveArgsAsy","process","slice","catch","variadic","options","extras","_x","apply","arguments"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\install\\index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport chalk from 'chalk';\n\nimport { Command } from '../../bin/cli';\nimport { assertWithOptionsArgs, printHelp } from '../utils/args';\n\nexport const expoInstall: Command = async (argv) => {\n  const args = assertWithOptionsArgs(\n    {\n      // Other options are parsed manually.\n      '--help': Boolean,\n      // Aliases\n      '-h': '--help',\n    },\n    {\n      argv,\n      // Allow other options, we'll throw an error if unexpected values are passed.\n      permissive: true,\n    }\n  );\n\n  if (args['--help']) {\n    printHelp(\n      `Install a module or other package to a project`,\n      `npx expo install`,\n      [\n        `--check     Check which installed packages need to be updated`,\n        `--fix       Automatically update any invalid package versions`,\n        chalk`--npm       Use npm to install dependencies. {dim Default when package-lock.json exists}`,\n        chalk`--yarn      Use Yarn to install dependencies. {dim Default when yarn.lock exists}`,\n        chalk`--bun       Use bun to install dependencies. {dim Default when bun.lockb exists}`,\n        chalk`--pnpm      Use pnpm to install dependencies. {dim Default when pnpm-lock.yaml exists}`,\n        `-h, --help  Usage info`,\n      ].join('\\n'),\n      [\n        '',\n        chalk`  Additional options can be passed to the underlying install command by using {bold --}`,\n        chalk`    {dim $} npx expo install react -- --verbose`,\n        chalk`    {dim >} yarn add react --verbose`,\n        '',\n      ].join('\\n')\n    );\n  }\n\n  // Load modules after the help prompt so `npx expo install -h` shows as fast as possible.\n  const { installAsync } = require('./installAsync') as typeof import('./installAsync');\n  const { logCmdError } = require('../utils/errors') as typeof import('../utils/errors');\n  const { resolveArgsAsync } = require('./resolveOptions') as typeof import('./resolveOptions');\n\n  const { variadic, options, extras } = await resolveArgsAsync(process.argv.slice(3)).catch(\n    logCmdError\n  );\n  return installAsync(variadic, options, extras).catch(logCmdError);\n};\n"],"mappings":"AAAA;;;;;;;;AACkB,IAAAA,MAAO,GAAAC,sBAAA,CAAAC,OAAA,CAAP,OAAO;AAGwB,IAAAC,KAAe,GAAAD,OAAA;;;;;;AAEzD,IAAME,WAAW;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAY,WAAOC,IAAI,EAAK;IAClD,IAAMC,IAAI,GAAG,IAAAL,KAAqB,EAYjCM,qBAZiC,CAChC;MAEE,QAAQ,EAAEC,OAAO;MAEjB,IAAI,EAAE;KACP,EACD;MACEH,IAAI,EAAJA,IAAI;MAEJI,UAAU,EAAE;KACb,CACF;IAED,IAAIH,IAAI,CAAC,QAAQ,CAAC,EAAE;MAClB,IAAAL,KAAS,EAmBRS,SAnBQ,CACN,gDAA+C,EAC/C,kBAAiB,EAClB,CACG,+DAA8D,EAC9D,+DAA8D,EAC/DZ,MAAK,CAAAa,OAAC,0FAAyF,EAC/Fb,MAAK,CAAAa,OAAC,mFAAkF,EACxFb,MAAK,CAAAa,OAAC,kFAAiF,EACvFb,MAAK,CAAAa,OAAC,wFAAuF,EAC5F,wBAAuB,CACzB,CAACC,IAAI,CAAC,IAAI,CAAC,EACZ,CACE,EAAE,EACFd,MAAK,CAAAa,OAAC,yFAAwF,EAC9Fb,MAAK,CAAAa,OAAC,iDAAgD,EACtDb,MAAK,CAAAa,OAAC,sCAAqC,EAC3C,EAAE,CACH,CAACC,IAAI,CAAC,IAAI,CAAC,CACb;;IAIH,IAAAC,QAAA,GAAyBb,OAAO,iBAAiB,CAAC;MAA1Cc,YAAY,GAAAD,QAAA,CAAZC,YAAY;IACpB,IAAAC,SAAA,GAAwBf,OAAO,kBAAkB,CAAC;MAA1CgB,WAAW,GAAAD,SAAA,CAAXC,WAAW;IACnB,IAAAC,SAAA,GAA6BjB,OAAO,mBAAmB,CAAC;MAAhDkB,gBAAgB,GAAAD,SAAA,CAAhBC,gBAAgB;IAExB,IAAAC,qBAAA,SAA4CD,gBAAgB,CAACE,OAAO,CAACf,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CACvFN,WAAW,CACZ;MAFOO,QAAQ,GAAAJ,qBAAA,CAARI,QAAQ;MAAEC,OAAO,GAAAL,qBAAA,CAAPK,OAAO;MAAEC,MAAM,GAAAN,qBAAA,CAANM,MAAM;IAGjC,OAAOX,YAAY,CAACS,QAAQ,EAAEC,OAAO,EAAEC,MAAM,CAAC,CAACH,KAAK,CAACN,WAAW,CAAC;GAClE;EAAA,gBA/CYd,WAAWA,CAAAwB,EAAA;IAAA,OAAAvB,IAAA,CAAAwB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA+CvB;QA/CY1B,WAAW,GAAXA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}