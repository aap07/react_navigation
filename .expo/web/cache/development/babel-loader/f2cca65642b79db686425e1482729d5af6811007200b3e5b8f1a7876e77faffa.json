{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProjectWebpackConfigFilePath = getProjectWebpackConfigFilePath;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar path = _interopRequireWildcard(require(\"path\"));\nvar _resolveFrom = _interopRequireDefault(require(\"resolve-from\"));\nvar Log = _interopRequireWildcard(require(\"../../../log\"));\nvar _env = require(\"../../../utils/env\");\nvar _errors = require(\"../../../utils/errors\");\nvar _ip = require(\"../../../utils/ip\");\nvar _nodeEnv = require(\"../../../utils/nodeEnv\");\nvar _port = require(\"../../../utils/port\");\nvar _progress = require(\"../../../utils/progress\");\nvar _dotExpo = require(\"../../project/dotExpo\");\nvar _bundlerDevServer = require(\"../BundlerDevServer\");\nvar _compile = require(\"./compile\");\nvar _resolveFromProject = require(\"./resolveFromProject\");\nvar _tls = require(\"./tls\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:start:server:webpack:devServer\");\nfunction assertIsWebpackDevServer(value) {\n  if (!(value == null ? void 0 : value.sockWrite)) {\n    var ref;\n    var ref1;\n    throw new _errors.CommandError(\"WEBPACK\", value ? \"Expected Webpack dev server, found: \" + ((ref1 = (ref = value.constructor) == null ? void 0 : ref.name) != null ? ref1 : value) : \"Webpack dev server not started yet.\");\n  }\n}\nvar WebpackBundlerDevServer = function (_bundlerDevServer$Bun) {\n  _inherits(WebpackBundlerDevServer, _bundlerDevServer$Bun);\n  var _super = _createSuper(WebpackBundlerDevServer);\n  function WebpackBundlerDevServer() {\n    _classCallCheck(this, WebpackBundlerDevServer);\n    return _super.apply(this, arguments);\n  }\n  _createClass(WebpackBundlerDevServer, [{\n    key: \"name\",\n    get: function get() {\n      return \"webpack\";\n    }\n  }, {\n    key: \"startTypeScriptServices\",\n    value: function () {\n      var _startTypeScriptServices = _asyncToGenerator(function* () {});\n      function startTypeScriptServices() {\n        return _startTypeScriptServices.apply(this, arguments);\n      }\n      return startTypeScriptServices;\n    }()\n  }, {\n    key: \"broadcastMessage\",\n    value: function broadcastMessage(method, params) {\n      var ref;\n      if (!this.instance) {\n        return;\n      }\n      assertIsWebpackDevServer((ref = this.instance) == null ? void 0 : ref.server);\n      if (this.customMessageSocketBroadcaster) {\n        this.customMessageSocketBroadcaster(method, params);\n        return;\n      }\n      var hackyConvertedMessage = method === \"reload\" ? \"content-changed\" : method;\n      this.instance.server.sockWrite(this.instance.server.sockets, hackyConvertedMessage, params);\n    }\n  }, {\n    key: \"attachNativeDevServerMiddlewareToDevServer\",\n    value: function () {\n      var _attachNativeDevServerMiddlewareToDevServer = _asyncToGenerator(function* (_ref) {\n        var server = _ref.server,\n          middleware = _ref.middleware,\n          attachToServer = _ref.attachToServer,\n          logger = _ref.logger;\n        var _yield$Promise$resolv = yield Promise.resolve().then(function () {\n            return _interopRequireWildcard(require(\"@expo/dev-server\"));\n          }),\n          attachInspectorProxy = _yield$Promise$resolv.attachInspectorProxy,\n          LogReporter = _yield$Promise$resolv.LogReporter;\n        var _attachToServer = attachToServer(server),\n          messageSocket = _attachToServer.messageSocket,\n          debuggerProxy = _attachToServer.debuggerProxy,\n          eventsSocket = _attachToServer.eventsSocket;\n        this.customMessageSocketBroadcaster = messageSocket.broadcast;\n        var logReporter = new LogReporter(logger);\n        logReporter.reportEvent = eventsSocket.reportEvent;\n        var _attachInspectorProxy = attachInspectorProxy(this.projectRoot, {\n            middleware: middleware,\n            server: server\n          }),\n          inspectorProxy = _attachInspectorProxy.inspectorProxy;\n        return {\n          messageSocket: messageSocket,\n          eventsSocket: eventsSocket,\n          debuggerProxy: debuggerProxy,\n          logReporter: logReporter,\n          inspectorProxy: inspectorProxy\n        };\n      });\n      function attachNativeDevServerMiddlewareToDevServer(_x) {\n        return _attachNativeDevServerMiddlewareToDevServer.apply(this, arguments);\n      }\n      return attachNativeDevServerMiddlewareToDevServer;\n    }()\n  }, {\n    key: \"isTargetingNative\",\n    value: function isTargetingNative() {\n      return [\"ios\", \"android\"].includes(process.env.EXPO_WEBPACK_PLATFORM || \"\");\n    }\n  }, {\n    key: \"createNativeDevServerMiddleware\",\n    value: function () {\n      var _createNativeDevServerMiddleware = _asyncToGenerator(function* (_ref2) {\n        var port = _ref2.port,\n          options = _ref2.options;\n        if (!this.isTargetingNative()) {\n          return null;\n        }\n        var _yield$Promise$resolv2 = yield Promise.resolve().then(function () {\n            return _interopRequireWildcard(require(\"../middleware/createDevServerMiddleware\"));\n          }),\n          createDevServerMiddleware = _yield$Promise$resolv2.createDevServerMiddleware;\n        var nativeMiddleware = createDevServerMiddleware(this.projectRoot, {\n          port: port,\n          watchFolders: [this.projectRoot]\n        });\n        var middleware = yield this.getManifestMiddlewareAsync(options);\n        nativeMiddleware.middleware.use(middleware.getHandler());\n        return nativeMiddleware;\n      });\n      function createNativeDevServerMiddleware(_x2) {\n        return _createNativeDevServerMiddleware.apply(this, arguments);\n      }\n      return createNativeDevServerMiddleware;\n    }()\n  }, {\n    key: \"getAvailablePortAsync\",\n    value: function () {\n      var _getAvailablePortAsync = _asyncToGenerator(function* (options) {\n        try {\n          var ref;\n          var defaultPort = (ref = options == null ? void 0 : options.defaultPort) != null ? ref : 19006;\n          var port = yield (0, _port).choosePortAsync(this.projectRoot, {\n            defaultPort: defaultPort,\n            host: _env.env.WEB_HOST\n          });\n          if (!port) {\n            throw new _errors.CommandError(\"NO_PORT_FOUND\", `Port ${defaultPort} not available.`);\n          }\n          return port;\n        } catch (error) {\n          throw new _errors.CommandError(\"NO_PORT_FOUND\", error.message);\n        }\n      });\n      function getAvailablePortAsync(_x3) {\n        return _getAvailablePortAsync.apply(this, arguments);\n      }\n      return getAvailablePortAsync;\n    }()\n  }, {\n    key: \"bundleAsync\",\n    value: function () {\n      var _bundleAsync = _asyncToGenerator(function* (_ref3) {\n        var mode = _ref3.mode,\n          clear = _ref3.clear;\n        var webpack = (0, _resolveFromProject).importWebpackFromProject(this.projectRoot);\n        if (clear) {\n          yield this.clearWebProjectCacheAsync(this.projectRoot, mode);\n        }\n        var config = yield this.loadConfigAsync({\n          isImageEditingEnabled: true,\n          mode: mode\n        });\n        if (!config.plugins) {\n          config.plugins = [];\n        }\n        var bar = (0, _progress).createProgressBar(_chalk.default`{bold Web} Bundling Javascript [:bar] :percent`, {\n          width: 64,\n          total: 100,\n          clear: true,\n          complete: \"=\",\n          incomplete: \" \"\n        });\n        if (bar != null) {\n          config.plugins.push(new webpack.ProgressPlugin(function (percent) {\n            bar == null ? void 0 : bar.update(percent);\n            if (percent === 1) {\n              bar == null ? void 0 : bar.terminate();\n            }\n          }));\n        }\n        var compiler = webpack(config);\n        try {\n          yield (0, _compile).compileAsync(compiler);\n        } catch (error) {\n          Log.error(_chalk.default.red(\"Failed to compile\"));\n          throw error;\n        } finally {\n          bar == null ? void 0 : bar.terminate();\n        }\n      });\n      function bundleAsync(_x4) {\n        return _bundleAsync.apply(this, arguments);\n      }\n      return bundleAsync;\n    }()\n  }, {\n    key: \"startImplementationAsync\",\n    value: function () {\n      var _startImplementationAsync = _asyncToGenerator(function* (options) {\n        var _this = this;\n        var ref;\n        var webpack = (0, _resolveFromProject).importWebpackFromProject(this.projectRoot);\n        var WebpackDevServer = (0, _resolveFromProject).importWebpackDevServerFromProject(this.projectRoot);\n        yield this.stopAsync();\n        options.port = yield this.getAvailablePortAsync({\n          defaultPort: options.port\n        });\n        var resetDevServer = options.resetDevServer,\n          https = options.https,\n          port = options.port,\n          mode = options.mode;\n        this.urlCreator = this.getUrlCreator({\n          port: port,\n          location: {\n            scheme: https ? \"https\" : \"http\"\n          }\n        });\n        debug(\"Starting webpack on port: \" + port);\n        if (resetDevServer) {\n          yield this.clearWebProjectCacheAsync(this.projectRoot, mode);\n        }\n        if (https) {\n          debug(\"Configuring TLS to enable HTTPS support\");\n          yield (0, _tls).ensureEnvironmentSupportsTLSAsync(this.projectRoot).catch(function (error) {\n            Log.error(`Error creating TLS certificates: ${error}`);\n          });\n        }\n        var config = yield this.loadConfigAsync(options);\n        Log.log(_chalk.default`Starting Webpack on port ${port} in {underline ${mode}} mode.`);\n        var compiler1 = webpack(config);\n        var nativeMiddleware = null;\n        if ((ref = config.devServer) == null ? void 0 : ref.before) {\n          nativeMiddleware = yield this.createNativeDevServerMiddleware({\n            port: port,\n            options: options\n          });\n          var originalBefore = config.devServer.before.bind(config.devServer.before);\n          config.devServer.before = function (app, server, compiler) {\n            originalBefore(app, server, compiler);\n            if (nativeMiddleware == null ? void 0 : nativeMiddleware.middleware) {\n              app.use(nativeMiddleware.middleware);\n            }\n          };\n        }\n        var attachNativeDevServerMiddlewareToDevServer = this.attachNativeDevServerMiddlewareToDevServer;\n        var server1 = new WebpackDevServer(compiler1, config.devServer);\n        server1.listen(port, _env.env.WEB_HOST, function (error) {\n          if (nativeMiddleware) {\n            attachNativeDevServerMiddlewareToDevServer(_objectSpread({\n              server: this\n            }, nativeMiddleware));\n          }\n          if (error) {\n            Log.error(error.message);\n          }\n        });\n        var originalClose = server1.close.bind(server1);\n        server1.close = function (callback) {\n          return originalClose(function (err) {\n            _this.instance = null;\n            callback == null ? void 0 : callback(err);\n          });\n        };\n        var _host = (0, _ip).getIpAddress();\n        var protocol = https ? \"https\" : \"http\";\n        return {\n          server: server1,\n          location: {\n            url: `${protocol}://${_host}:${port}`,\n            port: port,\n            protocol: protocol,\n            host: _host\n          },\n          middleware: nativeMiddleware == null ? void 0 : nativeMiddleware.middleware,\n          messageSocket: {\n            broadcast: this.broadcastMessage\n          }\n        };\n      });\n      function startImplementationAsync(_x5) {\n        return _startImplementationAsync.apply(this, arguments);\n      }\n      return startImplementationAsync;\n    }()\n  }, {\n    key: \"getProjectConfigFilePath\",\n    value: function getProjectConfigFilePath() {\n      var _this2 = this;\n      var ref;\n      return (ref = this.getConfigModuleIds().reduce(function (prev, moduleId) {\n        return prev || _resolveFrom.default.silent(_this2.projectRoot, moduleId);\n      }, null)) != null ? ref : null;\n    }\n  }, {\n    key: \"loadConfigAsync\",\n    value: function () {\n      var _loadConfigAsync = _asyncToGenerator(function* (options, argv) {\n        var env = {\n          projectRoot: this.projectRoot,\n          pwa: !!options.isImageEditingEnabled,\n          logger: {\n            info: function info() {}\n          },\n          mode: options.mode,\n          https: options.https\n        };\n        var _mode;\n        (0, _nodeEnv).setNodeEnv((_mode = env.mode) != null ? _mode : \"development\");\n        require(\"@expo/env\").load(env.projectRoot);\n        var projectWebpackConfig = this.getProjectConfigFilePath();\n        var config;\n        if (projectWebpackConfig) {\n          var webpackConfig = require(projectWebpackConfig);\n          if (typeof webpackConfig === \"function\") {\n            config = yield webpackConfig(env, argv);\n          } else {\n            config = webpackConfig;\n          }\n        } else {\n          var loadDefaultConfigAsync = (0, _resolveFromProject).importExpoWebpackConfigFromProject(this.projectRoot);\n          config = yield loadDefaultConfigAsync(env, argv);\n        }\n        return config;\n      });\n      function loadConfigAsync(_x6, _x7) {\n        return _loadConfigAsync.apply(this, arguments);\n      }\n      return loadConfigAsync;\n    }()\n  }, {\n    key: \"getConfigModuleIds\",\n    value: function getConfigModuleIds() {\n      return [\"./webpack.config.js\"];\n    }\n  }, {\n    key: \"clearWebProjectCacheAsync\",\n    value: function () {\n      var _clearWebProjectCacheAsync = _asyncToGenerator(function* (projectRoot) {\n        var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"development\";\n        Log.log(_chalk.default.dim(`Clearing Webpack ${mode} cache directory...`));\n        var dir = yield (0, _dotExpo).ensureDotExpoProjectDirectoryInitialized(projectRoot);\n        var cacheFolder = path.join(dir, \"web/cache\", mode);\n        try {\n          yield _fs.default.promises.rm(cacheFolder, {\n            recursive: true,\n            force: true\n          });\n        } catch (error) {\n          Log.error(`Could not clear ${mode} web cache directory: ${error.message}`);\n        }\n      });\n      function clearWebProjectCacheAsync(_x8) {\n        return _clearWebProjectCacheAsync.apply(this, arguments);\n      }\n      return clearWebProjectCacheAsync;\n    }()\n  }]);\n  return WebpackBundlerDevServer;\n}(_bundlerDevServer.BundlerDevServer);\nexports.WebpackBundlerDevServer = WebpackBundlerDevServer;\nfunction getProjectWebpackConfigFilePath(projectRoot) {\n  return _resolveFrom.default.silent(projectRoot, \"./webpack.config.js\");\n}","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","getProjectWebpackConfigFilePath","_chalk","_interopRequireDefault","_fs","path","_interopRequireWildcard","_resolveFrom","Log","_env","_errors","_ip","_nodeEnv","_port","_progress","_dotExpo","_bundlerDevServer","_compile","_resolveFromProject","_tls","debug","assertIsWebpackDevServer","value","sockWrite","ref","ref1","CommandError","name","WebpackBundlerDevServer","_bundlerDevServer$Bun","_super","key","get","_startTypeScriptServices","startTypeScriptServices","broadcastMessage","method","params","instance","server","customMessageSocketBroadcaster","hackyConvertedMessage","sockets","_attachNativeDevServerMiddlewareToDevServer","_ref","middleware","attachToServer","logger","_yield$Promise$resolv","Promise","resolve","then","attachInspectorProxy","LogReporter","_attachToServer","messageSocket","debuggerProxy","eventsSocket","broadcast","logReporter","reportEvent","_attachInspectorProxy","projectRoot","inspectorProxy","attachNativeDevServerMiddlewareToDevServer","_x","isTargetingNative","includes","process","env","EXPO_WEBPACK_PLATFORM","_createNativeDevServerMiddleware","_ref2","port","options","_yield$Promise$resolv2","createDevServerMiddleware","nativeMiddleware","watchFolders","getManifestMiddlewareAsync","use","getHandler","createNativeDevServerMiddleware","_x2","_getAvailablePortAsync","defaultPort","choosePortAsync","host","WEB_HOST","error","message","getAvailablePortAsync","_x3","_bundleAsync","_ref3","mode","clear","webpack","importWebpackFromProject","clearWebProjectCacheAsync","config","loadConfigAsync","isImageEditingEnabled","plugins","bar","createProgressBar","default","width","total","complete","incomplete","ProgressPlugin","percent","update","terminate","compiler","compileAsync","red","bundleAsync","_x4","_startImplementationAsync","_this","WebpackDevServer","importWebpackDevServerFromProject","stopAsync","resetDevServer","https","urlCreator","getUrlCreator","location","scheme","ensureEnvironmentSupportsTLSAsync","catch","log","compiler1","devServer","before","originalBefore","bind","app","server1","listen","originalClose","close","callback","err","_host","getIpAddress","protocol","url","startImplementationAsync","_x5","getProjectConfigFilePath","_this2","getConfigModuleIds","reduce","prev","moduleId","silent","_loadConfigAsync","argv","pwa","info","_mode","setNodeEnv","load","projectWebpackConfig","webpackConfig","loadDefaultConfigAsync","importExpoWebpackConfigFromProject","_x6","_x7","_clearWebProjectCacheAsync","undefined","dim","dir","ensureDotExpoProjectDirectoryInitialized","cacheFolder","join","promises","rm","recursive","force","_x8","BundlerDevServer"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\webpack\\WebpackBundlerDevServer.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Application } from 'express';\nimport fs from 'fs';\nimport http from 'http';\nimport * as path from 'path';\nimport resolveFrom from 'resolve-from';\nimport type webpack from 'webpack';\nimport type WebpackDevServer from 'webpack-dev-server';\n\nimport * as Log from '../../../log';\nimport { env } from '../../../utils/env';\nimport { CommandError } from '../../../utils/errors';\nimport { getIpAddress } from '../../../utils/ip';\nimport { setNodeEnv } from '../../../utils/nodeEnv';\nimport { choosePortAsync } from '../../../utils/port';\nimport { createProgressBar } from '../../../utils/progress';\nimport { ensureDotExpoProjectDirectoryInitialized } from '../../project/dotExpo';\nimport { BundlerDevServer, BundlerStartOptions, DevServerInstance } from '../BundlerDevServer';\nimport { compileAsync } from './compile';\nimport {\n  importExpoWebpackConfigFromProject,\n  importWebpackDevServerFromProject,\n  importWebpackFromProject,\n} from './resolveFromProject';\nimport { ensureEnvironmentSupportsTLSAsync } from './tls';\n\nconst debug = require('debug')('expo:start:server:webpack:devServer') as typeof console.log;\n\nexport type WebpackConfiguration = webpack.Configuration & {\n  devServer?: {\n    before?: (app: Application, server: WebpackDevServer, compiler: webpack.Compiler) => void;\n  };\n};\n\nfunction assertIsWebpackDevServer(value: any): asserts value is WebpackDevServer {\n  if (!value?.sockWrite) {\n    throw new CommandError(\n      'WEBPACK',\n      value\n        ? 'Expected Webpack dev server, found: ' + (value.constructor?.name ?? value)\n        : 'Webpack dev server not started yet.'\n    );\n  }\n}\n\nexport class WebpackBundlerDevServer extends BundlerDevServer {\n  get name(): string {\n    return 'webpack';\n  }\n\n  public async startTypeScriptServices(): Promise<void> {\n    //  noop -- this feature is Metro-only.\n  }\n\n  // A custom message websocket broadcaster used to send messages to a React Native runtime.\n  private customMessageSocketBroadcaster:\n    | undefined\n    | ((message: string, data?: Record<string, any>) => void);\n\n  public broadcastMessage(\n    method: string | 'reload' | 'devMenu' | 'sendDevCommand',\n    params?: Record<string, any>\n  ): void {\n    if (!this.instance) {\n      return;\n    }\n\n    assertIsWebpackDevServer(this.instance?.server);\n\n    // Allow any message on native\n    if (this.customMessageSocketBroadcaster) {\n      this.customMessageSocketBroadcaster(method, params);\n      return;\n    }\n\n    // TODO(EvanBacon): Custom Webpack overlay.\n    // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n    // For now, just manually convert the value so our CLI interface can be unified.\n    const hackyConvertedMessage = method === 'reload' ? 'content-changed' : method;\n\n    this.instance.server.sockWrite(this.instance.server.sockets, hackyConvertedMessage, params);\n  }\n\n  private async attachNativeDevServerMiddlewareToDevServer({\n    server,\n    middleware,\n    attachToServer,\n    logger,\n  }: { server: http.Server } & Awaited<ReturnType<typeof this.createNativeDevServerMiddleware>>) {\n    const { attachInspectorProxy, LogReporter } = await import('@expo/dev-server');\n\n    // Hook up the React Native WebSockets to the Webpack dev server.\n    const { messageSocket, debuggerProxy, eventsSocket } = attachToServer(server);\n\n    this.customMessageSocketBroadcaster = messageSocket.broadcast;\n\n    const logReporter = new LogReporter(logger);\n    logReporter.reportEvent = eventsSocket.reportEvent;\n\n    const { inspectorProxy } = attachInspectorProxy(this.projectRoot, {\n      middleware,\n      server,\n    });\n\n    return {\n      messageSocket,\n      eventsSocket,\n      debuggerProxy,\n      logReporter,\n      inspectorProxy,\n    };\n  }\n\n  isTargetingNative(): boolean {\n    // Temporary hack while we implement multi-bundler dev server proxy.\n    return ['ios', 'android'].includes(process.env.EXPO_WEBPACK_PLATFORM || '');\n  }\n\n  private async createNativeDevServerMiddleware({\n    port,\n    options,\n  }: {\n    port: number;\n    options: BundlerStartOptions;\n  }) {\n    if (!this.isTargetingNative()) {\n      return null;\n    }\n\n    const { createDevServerMiddleware } = await import('../middleware/createDevServerMiddleware');\n\n    const nativeMiddleware = createDevServerMiddleware(this.projectRoot, {\n      port,\n      watchFolders: [this.projectRoot],\n    });\n    // Add manifest middleware to the other middleware.\n    // TODO: Move this in to expo/dev-server.\n\n    const middleware = await this.getManifestMiddlewareAsync(options);\n\n    nativeMiddleware.middleware.use(middleware.getHandler());\n\n    return nativeMiddleware;\n  }\n\n  private async getAvailablePortAsync(options: { defaultPort?: number }): Promise<number> {\n    try {\n      const defaultPort = options?.defaultPort ?? 19006;\n      const port = await choosePortAsync(this.projectRoot, {\n        defaultPort,\n        host: env.WEB_HOST,\n      });\n      if (!port) {\n        throw new CommandError('NO_PORT_FOUND', `Port ${defaultPort} not available.`);\n      }\n      return port;\n    } catch (error: any) {\n      throw new CommandError('NO_PORT_FOUND', error.message);\n    }\n  }\n\n  async bundleAsync({ mode, clear }: { mode: 'development' | 'production'; clear: boolean }) {\n    // Do this first to fail faster.\n    const webpack = importWebpackFromProject(this.projectRoot);\n\n    if (clear) {\n      await this.clearWebProjectCacheAsync(this.projectRoot, mode);\n    }\n\n    const config = await this.loadConfigAsync({\n      isImageEditingEnabled: true,\n      mode,\n    });\n\n    if (!config.plugins) {\n      config.plugins = [];\n    }\n\n    const bar = createProgressBar(chalk`{bold Web} Bundling Javascript [:bar] :percent`, {\n      width: 64,\n      total: 100,\n      clear: true,\n      complete: '=',\n      incomplete: ' ',\n    });\n\n    // NOTE(EvanBacon): Add a progress bar to the webpack logger if defined (e.g. not in CI).\n    if (bar != null) {\n      config.plugins.push(\n        new webpack.ProgressPlugin((percent: number) => {\n          bar?.update(percent);\n          if (percent === 1) {\n            bar?.terminate();\n          }\n        })\n      );\n    }\n\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = webpack(config);\n\n    try {\n      await compileAsync(compiler);\n    } catch (error: any) {\n      Log.error(chalk.red('Failed to compile'));\n      throw error;\n    } finally {\n      bar?.terminate();\n    }\n  }\n\n  protected async startImplementationAsync(\n    options: BundlerStartOptions\n  ): Promise<DevServerInstance> {\n    // Do this first to fail faster.\n    const webpack = importWebpackFromProject(this.projectRoot);\n    const WebpackDevServer = importWebpackDevServerFromProject(this.projectRoot);\n\n    await this.stopAsync();\n\n    options.port = await this.getAvailablePortAsync({\n      defaultPort: options.port,\n    });\n    const { resetDevServer, https, port, mode } = options;\n\n    this.urlCreator = this.getUrlCreator({\n      port,\n      location: {\n        scheme: https ? 'https' : 'http',\n      },\n    });\n\n    debug('Starting webpack on port: ' + port);\n\n    if (resetDevServer) {\n      await this.clearWebProjectCacheAsync(this.projectRoot, mode);\n    }\n\n    if (https) {\n      debug('Configuring TLS to enable HTTPS support');\n      await ensureEnvironmentSupportsTLSAsync(this.projectRoot).catch((error) => {\n        Log.error(`Error creating TLS certificates: ${error}`);\n      });\n    }\n\n    const config = await this.loadConfigAsync(options);\n\n    Log.log(chalk`Starting Webpack on port ${port} in {underline ${mode}} mode.`);\n\n    // Create a webpack compiler that is configured with custom messages.\n    const compiler = webpack(config);\n\n    let nativeMiddleware: Awaited<ReturnType<typeof this.createNativeDevServerMiddleware>> | null =\n      null;\n    if (config.devServer?.before) {\n      // Create the middleware required for interacting with a native runtime (Expo Go, or a development build).\n      nativeMiddleware = await this.createNativeDevServerMiddleware({\n        port,\n        options,\n      });\n      // Inject the native manifest middleware.\n      const originalBefore = config.devServer.before.bind(config.devServer.before);\n      config.devServer.before = (\n        app: Application,\n        server: WebpackDevServer,\n        compiler: webpack.Compiler\n      ) => {\n        originalBefore(app, server, compiler);\n\n        if (nativeMiddleware?.middleware) {\n          app.use(nativeMiddleware.middleware);\n        }\n      };\n    }\n    const { attachNativeDevServerMiddlewareToDevServer } = this;\n\n    const server = new WebpackDevServer(\n      // @ts-expect-error: type mismatch -- Webpack types aren't great.\n      compiler,\n      config.devServer\n    );\n    // Launch WebpackDevServer.\n    server.listen(port, env.WEB_HOST, function (this: http.Server, error) {\n      if (nativeMiddleware) {\n        attachNativeDevServerMiddlewareToDevServer({\n          server: this,\n          ...nativeMiddleware,\n        });\n      }\n      if (error) {\n        Log.error(error.message);\n      }\n    });\n\n    // Extend the close method to ensure that we clean up the local info.\n    const originalClose = server.close.bind(server);\n\n    server.close = (callback?: (err?: Error) => void) => {\n      return originalClose((err?: Error) => {\n        this.instance = null;\n        callback?.(err);\n      });\n    };\n\n    const _host = getIpAddress();\n    const protocol = https ? 'https' : 'http';\n\n    return {\n      // Server instance\n      server,\n      // URL Info\n      location: {\n        url: `${protocol}://${_host}:${port}`,\n        port,\n        protocol,\n        host: _host,\n      },\n      middleware: nativeMiddleware?.middleware,\n      // Match the native protocol.\n      messageSocket: {\n        broadcast: this.broadcastMessage,\n      },\n    };\n  }\n\n  /** Load the Webpack config. Exposed for testing. */\n  getProjectConfigFilePath(): string | null {\n    // Check if the project has a webpack.config.js in the root.\n    return (\n      this.getConfigModuleIds().reduce<string | null | undefined>(\n        (prev, moduleId) => prev || resolveFrom.silent(this.projectRoot, moduleId),\n        null\n      ) ?? null\n    );\n  }\n\n  async loadConfigAsync(\n    options: Pick<BundlerStartOptions, 'mode' | 'isImageEditingEnabled' | 'https'>,\n    argv?: string[]\n  ): Promise<WebpackConfiguration> {\n    // let bar: ProgressBar | null = null;\n\n    const env = {\n      projectRoot: this.projectRoot,\n      pwa: !!options.isImageEditingEnabled,\n      // TODO: Use a new loader in Webpack config...\n      logger: {\n        info() {},\n      },\n      mode: options.mode,\n      https: options.https,\n    };\n    setNodeEnv(env.mode ?? 'development');\n    require('@expo/env').load(env.projectRoot);\n    // Check if the project has a webpack.config.js in the root.\n    const projectWebpackConfig = this.getProjectConfigFilePath();\n    let config: WebpackConfiguration;\n    if (projectWebpackConfig) {\n      const webpackConfig = require(projectWebpackConfig);\n      if (typeof webpackConfig === 'function') {\n        config = await webpackConfig(env, argv);\n      } else {\n        config = webpackConfig;\n      }\n    } else {\n      // Fallback to the default expo webpack config.\n      const loadDefaultConfigAsync = importExpoWebpackConfigFromProject(this.projectRoot);\n      // @ts-expect-error: types appear to be broken\n      config = await loadDefaultConfigAsync(env, argv);\n    }\n    return config;\n  }\n\n  protected getConfigModuleIds(): string[] {\n    return ['./webpack.config.js'];\n  }\n\n  protected async clearWebProjectCacheAsync(\n    projectRoot: string,\n    mode: string = 'development'\n  ): Promise<void> {\n    Log.log(chalk.dim(`Clearing Webpack ${mode} cache directory...`));\n\n    const dir = await ensureDotExpoProjectDirectoryInitialized(projectRoot);\n    const cacheFolder = path.join(dir, 'web/cache', mode);\n    try {\n      await fs.promises.rm(cacheFolder, { recursive: true, force: true });\n    } catch (error: any) {\n      Log.error(`Could not clear ${mode} web cache directory: ${error.message}`);\n    }\n  }\n}\n\nexport function getProjectWebpackConfigFilePath(projectRoot: string) {\n  return resolveFrom.silent(projectRoot, './webpack.config.js');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}