{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/prebuild-config/node_modules/@expo/image-utils/build/sharp.d.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport { SharpCommandOptions, SharpGlobalOptions } from './sharp.types';\nexport declare function resizeBufferAsync(buffer: Buffer, sizes: number[]): Promise<Buffer[]>;\n/**\n * Returns `true` if a global sharp instance can be found.\n * This functionality can be overridden with `process.env.EXPO_IMAGE_UTILS_NO_SHARP=1`.\n */\nexport declare function isAvailableAsync(): Promise<boolean>;\nexport declare function sharpAsync(options: SharpGlobalOptions, commands?: SharpCommandOptions[]): Promise<string[]>;\n/**\n * Returns the instance of `sharp` installed by the global `sharp-cli` package.\n * This method will throw errors if the `sharp` instance cannot be found, these errors can be circumvented by ensuring `isAvailableAsync()` resolves to `true`.\n */\nexport declare function findSharpInstanceAsync(): Promise<any | null>;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}