{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _getUserState = require(\"@expo/config/build/getUserState\");\nvar _jsonFile = _interopRequireDefault(require(\"@expo/json-file\"));\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getDirectory() {\n  return (0, _getUserState).getExpoHomeDirectory();\n}\nfunction getFilePath() {\n  return (0, _getUserState).getUserStatePath();\n}\nfunction userSettingsJsonFile() {\n  return new _jsonFile.default(getFilePath(), {\n    ensureDir: true,\n    jsonParseErrorDefault: {},\n    cantReadFileDefault: {}\n  });\n}\nfunction setSessionAsync(_x) {\n  return _setSessionAsync.apply(this, arguments);\n}\nfunction _setSessionAsync() {\n  _setSessionAsync = _asyncToGenerator(function* (sessionData) {\n    yield UserSettings.setAsync(\"auth\", sessionData, {\n      default: {},\n      ensureDir: true\n    });\n  });\n  return _setSessionAsync.apply(this, arguments);\n}\nfunction getSession() {\n  try {\n    var ref;\n    var ref1;\n    return (ref1 = (ref = _jsonFile.default.read((0, _getUserState).getUserStatePath())) == null ? void 0 : ref.auth) != null ? ref1 : null;\n  } catch (error) {\n    if (error.code === \"ENOENT\") {\n      return null;\n    }\n    throw error;\n  }\n}\nfunction getAccessToken() {\n  var _EXPO_TOKEN;\n  return (_EXPO_TOKEN = process.env.EXPO_TOKEN) != null ? _EXPO_TOKEN : null;\n}\nfunction getAnonymousIdentifierAsync() {\n  return _getAnonymousIdentifierAsync.apply(this, arguments);\n}\nfunction _getAnonymousIdentifierAsync() {\n  _getAnonymousIdentifierAsync = _asyncToGenerator(function* () {\n    var settings = yield userSettingsJsonFile();\n    var id = yield settings.getAsync(\"uuid\", null);\n    if (!id) {\n      id = _crypto.default.randomUUID();\n      yield settings.setAsync(\"uuid\", id);\n    }\n    return id;\n  });\n  return _getAnonymousIdentifierAsync.apply(this, arguments);\n}\nvar UserSettings = Object.assign(userSettingsJsonFile(), {\n  getSession: getSession,\n  setSessionAsync: setSessionAsync,\n  getAccessToken: getAccessToken,\n  getDirectory: getDirectory,\n  getFilePath: getFilePath,\n  userSettingsJsonFile: userSettingsJsonFile,\n  getAnonymousIdentifierAsync: getAnonymousIdentifierAsync\n});\nvar _default = UserSettings;\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","_getUserState","_jsonFile","_interopRequireDefault","_crypto","getDirectory","getExpoHomeDirectory","getFilePath","getUserStatePath","userSettingsJsonFile","default","ensureDir","jsonParseErrorDefault","cantReadFileDefault","setSessionAsync","_x","_setSessionAsync","apply","arguments","sessionData","UserSettings","setAsync","getSession","ref","ref1","read","auth","error","code","getAccessToken","_EXPO_TOKEN","process","env","EXPO_TOKEN","getAnonymousIdentifierAsync","_getAnonymousIdentifierAsync","settings","id","getAsync","randomUUID","Object","assign"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\api\\user\\UserSettings.ts"],"sourcesContent":["import { getExpoHomeDirectory, getUserStatePath } from '@expo/config/build/getUserState';\nimport JsonFile from '@expo/json-file';\nimport crypto from 'crypto';\n\ntype SessionData = {\n  sessionSecret: string;\n  // These fields are potentially used by Expo CLI.\n  userId: string;\n  username: string;\n  currentConnection: 'Username-Password-Authentication';\n};\n\nexport type UserSettingsData = {\n  auth?: SessionData | null;\n  ignoreBundledBinaries?: string[];\n  PATH?: string;\n  /** Last development code signing ID used for `npx expo run:ios`. */\n  developmentCodeSigningId?: string;\n  /** Unique user ID which is generated anonymously and can be cleared locally. */\n  uuid?: string;\n};\n\n/** Return the user cache directory. */\nfunction getDirectory() {\n  return getExpoHomeDirectory();\n}\n\nfunction getFilePath(): string {\n  return getUserStatePath();\n}\n\nfunction userSettingsJsonFile(): JsonFile<UserSettingsData> {\n  return new JsonFile<UserSettingsData>(getFilePath(), {\n    ensureDir: true,\n    jsonParseErrorDefault: {},\n    cantReadFileDefault: {},\n  });\n}\n\nasync function setSessionAsync(sessionData?: SessionData): Promise<void> {\n  await UserSettings.setAsync('auth', sessionData, {\n    default: {},\n    ensureDir: true,\n  });\n}\n\nfunction getSession(): SessionData | null {\n  try {\n    return JsonFile.read<UserSettingsData>(getUserStatePath())?.auth ?? null;\n  } catch (error: any) {\n    if (error.code === 'ENOENT') {\n      return null;\n    }\n    throw error;\n  }\n}\n\nfunction getAccessToken(): string | null {\n  return process.env.EXPO_TOKEN ?? null;\n}\n\n// returns an anonymous, unique identifier for a user on the current computer\nasync function getAnonymousIdentifierAsync(): Promise<string> {\n  const settings = await userSettingsJsonFile();\n  let id = await settings.getAsync('uuid', null);\n\n  if (!id) {\n    id = crypto.randomUUID();\n    await settings.setAsync('uuid', id);\n  }\n\n  return id;\n}\n\nconst UserSettings = Object.assign(userSettingsJsonFile(), {\n  getSession,\n  setSessionAsync,\n  getAccessToken,\n  getDirectory,\n  getFilePath,\n  userSettingsJsonFile,\n  getAnonymousIdentifierAsync,\n});\n\nexport default UserSettings;\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;;AAAuD,IAAAC,aAAiC,GAAAD,OAAA,CAAjC,iCAAiC;AACnE,IAAAE,SAAiB,GAAAC,sBAAA,CAAAH,OAAA,CAAjB,iBAAiB;AACnB,IAAAI,OAAQ,GAAAD,sBAAA,CAAAH,OAAA,CAAR,QAAQ;;;;;;AAqB3B,SAASK,YAAYA,CAAA,EAAG;EACtB,OAAO,IAAAJ,aAAoB,EAAEK,oBAAF,EAAE;;AAG/B,SAASC,WAAWA,CAAA,EAAW;EAC7B,OAAO,IAAAN,aAAgB,EAAEO,gBAAF,EAAE;;AAG3B,SAASC,oBAAoBA,CAAA,EAA+B;EAC1D,OAAO,IAAIP,SAAQ,CAAAQ,OAAA,CAAmBH,WAAW,EAAE,EAAE;IACnDI,SAAS,EAAE,IAAI;IACfC,qBAAqB,EAAE,EAAE;IACzBC,mBAAmB,EAAE;GACtB,CAAC;;AACH,SAEcC,eAAeA,CAAAC,EAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAjB,iBAAA,CAA9B,WAA+BoB,WAAyB,EAAiB;IACvE,MAAMC,YAAY,CAACC,QAAQ,CAAC,MAAM,EAAEF,WAAW,EAAE;MAC/CT,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;KACZ,CAAC;GACH;EAAA,OAAAK,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASI,UAAUA,CAAA,EAAuB;EACxC,IAAI;QACKC,GAAmD;QAAnDC,IAAyD;IAAhE,OAAO,CAAAA,IAAyD,GAAzD,CAAAD,GAAmD,GAAnDrB,SAAQ,CAAAQ,OAAA,CAACe,IAAI,CAAmB,IAAAxB,aAAgB,EAAEO,gBAAF,EAAE,CAAC,SAAM,GAAzD,MAAyD,GAAzDe,GAAmD,CAAEG,IAAI,YAAzDF,IAAyD,GAAI,IAAI;GACzE,CAAC,OAAOG,KAAK,EAAO;IACnB,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC3B,OAAO,IAAI;;IAEb,MAAMD,KAAK;;;AAIf,SAASE,cAAcA,CAAA,EAAkB;MAChCC,WAAsB;EAA7B,OAAO,CAAAA,WAAsB,GAAtBC,OAAO,CAACC,GAAG,CAACC,UAAU,YAAtBH,WAAsB,GAAI,IAAI;;AACtC,SAGcI,2BAA2BA,CAAA;EAAA,OAAAC,4BAAA,CAAAlB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAiB,6BAAA;EAAAA,4BAAA,GAAApC,iBAAA,CAA1C,aAA8D;IAC5D,IAAMqC,QAAQ,SAAS3B,oBAAoB,EAAE;IAC7C,IAAI4B,EAAE,SAASD,QAAQ,CAACE,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC;IAE9C,IAAI,CAACD,EAAE,EAAE;MACPA,EAAE,GAAGjC,OAAM,CAAAM,OAAA,CAAC6B,UAAU,EAAE;MACxB,MAAMH,QAAQ,CAACf,QAAQ,CAAC,MAAM,EAAEgB,EAAE,CAAC;;IAGrC,OAAOA,EAAE;GACV;EAAA,OAAAF,4BAAA,CAAAlB,KAAA,OAAAC,SAAA;AAAA;AAED,IAAME,YAAY,GAAGoB,MAAM,CAACC,MAAM,CAAChC,oBAAoB,EAAE,EAAE;EACzDa,UAAU,EAAVA,UAAU;EACVR,eAAe,EAAfA,eAAe;EACfe,cAAc,EAAdA,cAAc;EACdxB,YAAY,EAAZA,YAAY;EACZE,WAAW,EAAXA,WAAW;EACXE,oBAAoB,EAApBA,oBAAoB;EACpByB,2BAA2B,EAA3BA;CACD,CAAC;eAEad,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}