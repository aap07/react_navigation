{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"experimentalImportSupport\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBabelConfig = getBabelConfig;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar getBabelRC = function () {\n  var babelRC = null;\n  return function _getBabelRC(projectRoot, options) {\n    if (babelRC != null) {\n      return babelRC;\n    }\n    babelRC = {\n      plugins: []\n    };\n    var projectBabelRCPath;\n    if (projectRoot) {\n      projectBabelRCPath = _path().default.resolve(projectRoot, '.babelrc');\n    }\n    if (projectBabelRCPath) {\n      if (!_fs().default.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = _path().default.resolve(projectRoot, '.babelrc.js');\n      }\n      if (!_fs().default.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = _path().default.resolve(projectRoot, 'babel.config.js');\n      }\n      if (_fs().default.existsSync(projectBabelRCPath)) {\n        babelRC.extends = projectBabelRCPath;\n      }\n    }\n    if (!babelRC.extends) {\n      var _ref, _resolveFrom$silent;\n      var experimentalImportSupport = options.experimentalImportSupport,\n        presetOptions = _objectWithoutProperties(options, _excluded);\n      var presetPath = (_ref = (_resolveFrom$silent = _resolveFrom().default.silent(projectRoot, 'babel-preset-expo')) !== null && _resolveFrom$silent !== void 0 ? _resolveFrom$silent : _resolveFrom().default.silent(projectRoot, 'metro-react-native-babel-preset')) !== null && _ref !== void 0 ? _ref : require.resolve('babel-preset-expo');\n      babelRC.presets = [[require(presetPath), _objectSpread(_objectSpread({\n        jsxRuntime: 'automatic'\n      }, presetOptions), {}, {\n        disableImportExportTransform: experimentalImportSupport,\n        enableBabelRuntime: options.enableBabelRuntime\n      })]];\n    }\n    return babelRC;\n  };\n}();\nfunction getBabelConfig(filename, options) {\n  var plugins = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var babelRC = getBabelRC(options.projectRoot, options);\n  var extraConfig = {\n    babelrc: typeof options.enableBabelRCLookup === 'boolean' ? options.enableBabelRCLookup : true,\n    code: false,\n    filename: filename,\n    highlightCode: true\n  };\n  var config = _objectSpread(_objectSpread({}, babelRC), extraConfig);\n  var extraPlugins = [];\n  if (options.inlineRequires) {\n    var inlineRequiresPlugin = (0, _resolveFrom().default)(options.projectRoot, 'babel-preset-fbjs/plugins/inline-requires');\n    extraPlugins.push(inlineRequiresPlugin);\n  }\n  config.plugins = extraPlugins.concat(config.plugins, plugins);\n  if (options.dev && options.hot) {\n    var mayContainEditableReactComponents = filename.indexOf('node_modules') === -1;\n    if (mayContainEditableReactComponents) {\n      if (!config.plugins) {\n        config.plugins = [];\n      }\n      config.plugins.push(_resolveFrom().default.silent(options.projectRoot, 'react-refresh/babel'));\n    }\n  }\n  return _objectSpread(_objectSpread({}, babelRC), config);\n}","map":{"version":3,"names":["_fs","data","_interopRequireDefault","require","_path","_resolveFrom","obj","__esModule","default","getBabelRC","babelRC","_getBabelRC","projectRoot","options","plugins","projectBabelRCPath","resolve","existsSync","extends","_ref","_resolveFrom$silent","experimentalImportSupport","presetOptions","_objectWithoutProperties","_excluded","presetPath","silent","presets","_objectSpread","jsxRuntime","disableImportExportTransform","enableBabelRuntime","getBabelConfig","filename","arguments","length","undefined","extraConfig","babelrc","enableBabelRCLookup","code","highlightCode","config","extraPlugins","inlineRequires","inlineRequiresPlugin","push","concat","dev","hot","mayContainEditableReactComponents","indexOf"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\transformer\\getBabelConfig.ts"],"sourcesContent":["/**\n * Copyright (c) Expo.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Forks the default metro-react-native-babel-transformer and adds support for known transforms.\n */\n\nimport type { PluginItem as BabelPlugins, PluginItem } from '@babel/core';\nimport fs from 'fs';\nimport type { BabelTransformerOptions } from 'metro-babel-transformer';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\n/**\n * Return a memoized function that checks for the existence of a\n * project level .babelrc file, and if it doesn't exist, reads the\n * default RN babelrc file and uses that.\n */\nconst getBabelRC = (function () {\n  let babelRC: {\n    // `any` to avoid flow type mismatch with Babel 7's internal type of\n    // `Array<string>` even though it correctly accepts the usage below.\n    presets?: any;\n    extends?: string;\n    plugins: BabelPlugins;\n  } | null = null;\n\n  return function _getBabelRC(projectRoot: string, options: BabelTransformerOptions) {\n    if (babelRC != null) {\n      return babelRC;\n    }\n\n    babelRC = { plugins: [] };\n\n    // Let's look for a babel config file in the project root.\n    // TODO look into adding a command line option to specify this location\n    let projectBabelRCPath;\n\n    // .babelrc\n    if (projectRoot) {\n      projectBabelRCPath = path.resolve(projectRoot, '.babelrc');\n    }\n\n    if (projectBabelRCPath) {\n      // .babelrc.js\n      if (!fs.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = path.resolve(projectRoot, '.babelrc.js');\n      }\n\n      // babel.config.js\n      if (!fs.existsSync(projectBabelRCPath)) {\n        projectBabelRCPath = path.resolve(projectRoot, 'babel.config.js');\n      }\n\n      // If we found a babel config file, extend our config off of it\n      // otherwise the default config will be used\n      if (fs.existsSync(projectBabelRCPath)) {\n        babelRC.extends = projectBabelRCPath;\n      }\n    }\n\n    // If a babel config file doesn't exist in the project then\n    // the default preset for react-native will be used instead.\n    if (!babelRC.extends) {\n      const { experimentalImportSupport, ...presetOptions } = options;\n\n      // Use `babel-preset-expo` instead of `metro-react-native-babel-preset`.\n      const presetPath =\n        resolveFrom.silent(projectRoot, 'babel-preset-expo') ??\n        resolveFrom.silent(projectRoot, 'metro-react-native-babel-preset') ??\n        require.resolve('babel-preset-expo');\n\n      babelRC.presets = [\n        [\n          require(presetPath),\n          {\n            // Default to React 17 automatic JSX transform.\n            jsxRuntime: 'automatic',\n            ...presetOptions,\n            disableImportExportTransform: experimentalImportSupport,\n            enableBabelRuntime: options.enableBabelRuntime,\n          },\n        ],\n      ];\n    }\n\n    return babelRC;\n  };\n})();\n\n/**\n * Given a filename and options, build a Babel\n * config object with the appropriate plugins.\n */\nexport function getBabelConfig(\n  filename: string,\n  options: BabelTransformerOptions,\n  plugins: BabelPlugins = []\n) {\n  const babelRC = getBabelRC(options.projectRoot, options);\n\n  const extraConfig = {\n    babelrc: typeof options.enableBabelRCLookup === 'boolean' ? options.enableBabelRCLookup : true,\n    code: false,\n    filename,\n    highlightCode: true,\n  };\n\n  const config: any = { ...babelRC, ...extraConfig };\n\n  // Add extra plugins\n  const extraPlugins: (string | PluginItem)[] = [];\n\n  // TODO: This probably can be removed\n  if (options.inlineRequires) {\n    const inlineRequiresPlugin = resolveFrom(\n      options.projectRoot,\n      'babel-preset-fbjs/plugins/inline-requires'\n    );\n    extraPlugins.push(inlineRequiresPlugin);\n  }\n\n  config.plugins = extraPlugins.concat(config.plugins, plugins);\n\n  if (options.dev && options.hot) {\n    // Note: this intentionally doesn't include the path separator because\n    // I'm not sure which one it should use on Windows, and false positives\n    // are unlikely anyway. If you later decide to include the separator,\n    // don't forget that the string usually *starts* with \"node_modules\" so\n    // the first one often won't be there.\n    // TODO: Support monorepos\n    const mayContainEditableReactComponents = filename.indexOf('node_modules') === -1;\n\n    if (mayContainEditableReactComponents) {\n      if (!config.plugins) {\n        config.plugins = [];\n      }\n      // Add react refresh runtime.\n      // NOTICE: keep in sync with 'metro-react-native-babel-preset/src/configs/hmr'.\n      config.plugins.push(resolveFrom.silent(options.projectRoot, 'react-refresh/babel'));\n    }\n  }\n\n  return { ...babelRC, ...config };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}