{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { getConfig } from '@expo/config';\nimport path from 'path';\nimport { projectPackageJsonPath } from \"./mergeLinkingOptions\";\nexport function getBuildPropertiesAsync() {\n  return _getBuildPropertiesAsync.apply(this, arguments);\n}\nfunction _getBuildPropertiesAsync() {\n  _getBuildPropertiesAsync = _asyncToGenerator(function* () {\n    var _config$plugins, _config$plugins$find;\n    var projectRoot = path.dirname(projectPackageJsonPath);\n    var _yield$getConfig = yield getConfig(projectRoot, {\n        skipSDKVersionRequirement: true\n      }),\n      config = _yield$getConfig.exp;\n    var buildPropertiesPlugin = (_config$plugins = config.plugins) == null ? void 0 : (_config$plugins$find = _config$plugins.find(function (item) {\n      return item[0] === 'expo-build-properties';\n    })) == null ? void 0 : _config$plugins$find[1];\n    return buildPropertiesPlugin != null ? buildPropertiesPlugin : {};\n  });\n  return _getBuildPropertiesAsync.apply(this, arguments);\n}\nexport function resolveExtraDependenciesAsync() {\n  return _resolveExtraDependenciesAsync.apply(this, arguments);\n}\nfunction _resolveExtraDependenciesAsync() {\n  _resolveExtraDependenciesAsync = _asyncToGenerator(function* () {\n    var _buildProps$android$e, _buildProps$android, _buildProps$ios$extra, _buildProps$ios;\n    var buildProps = yield getBuildPropertiesAsync();\n    return {\n      androidMavenRepos: (_buildProps$android$e = (_buildProps$android = buildProps.android) == null ? void 0 : _buildProps$android.extraMavenRepos) != null ? _buildProps$android$e : [],\n      iosPods: (_buildProps$ios$extra = (_buildProps$ios = buildProps.ios) == null ? void 0 : _buildProps$ios.extraPods) != null ? _buildProps$ios$extra : {}\n    };\n  });\n  return _resolveExtraDependenciesAsync.apply(this, arguments);\n}","map":{"version":3,"names":["getConfig","path","projectPackageJsonPath","getBuildPropertiesAsync","_getBuildPropertiesAsync","apply","arguments","_asyncToGenerator","_config$plugins","_config$plugins$find","projectRoot","dirname","_yield$getConfig","skipSDKVersionRequirement","config","exp","buildPropertiesPlugin","plugins","find","item","resolveExtraDependenciesAsync","_resolveExtraDependenciesAsync","_buildProps$android$e","_buildProps$android","_buildProps$ios$extra","_buildProps$ios","buildProps","androidMavenRepos","android","extraMavenRepos","iosPods","ios","extraPods"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/expo-modules-autolinking/src/autolinking/extraDependencies.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport path from 'path';\n\nimport { projectPackageJsonPath } from './mergeLinkingOptions';\n\ninterface AndroidMavenRepository {\n  url: string;\n}\n\ninterface IosPod {\n  name: string;\n  version?: string;\n  configurations?: string[];\n  modular_headers?: boolean;\n  source?: string;\n  path?: string;\n  podspec?: string;\n  testspecs?: string[];\n  git?: string;\n  branch?: string;\n  tag?: string;\n  commit?: string;\n}\n\ninterface ExtraDependencies {\n  androidMavenRepos: AndroidMavenRepository[];\n  iosPods?: IosPod[];\n}\n\n/**\n * Gets the `expo-build-properties` settings from the app config.\n */\nexport async function getBuildPropertiesAsync(): Promise<Record<string, any>> {\n  const projectRoot = path.dirname(projectPackageJsonPath);\n  const { exp: config } = await getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  const buildPropertiesPlugin = config.plugins?.find(\n    (item) => item[0] === 'expo-build-properties'\n  )?.[1];\n  return buildPropertiesPlugin ?? {};\n}\n\n/**\n * Resolves the extra dependencies from `expo-build-properties` settings.\n */\nexport async function resolveExtraDependenciesAsync(): Promise<Partial<ExtraDependencies>> {\n  const buildProps = await getBuildPropertiesAsync();\n  return {\n    androidMavenRepos: buildProps.android?.extraMavenRepos ?? [],\n    iosPods: buildProps.ios?.extraPods ?? {},\n  };\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,sBAAsB;AA6B/B,gBAAsBC,uBAAuBA,CAAA;EAAA,OAAAC,wBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAO5C,SAAAF,yBAAA;EAAAA,wBAAA,GAAAG,iBAAA,CAPM,aAAuE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IAC5E,IAAMC,WAAW,GAAGT,IAAI,CAACU,OAAO,CAACT,sBAAsB,CAAC;IACxD,IAAAU,gBAAA,SAA8BZ,SAAS,CAACU,WAAW,EAAE;QAAEG,yBAAyB,EAAE;MAAK,CAAC,CAAC;MAA5EC,MAAM,GAAAF,gBAAA,CAAXG,GAAG;IACX,IAAMC,qBAAqB,IAAAR,eAAA,GAAGM,MAAM,CAACG,OAAO,sBAAAR,oBAAA,GAAdD,eAAA,CAAgBU,IAAI,CAChD,UAACC,IAAI;MAAA,OAAKA,IAAI,CAAC,CAAC,CAAC,KAAK,uBAAuB;IAAA,CAC/C,CAAC,qBAF6BV,oBAAA,CAE1B,CAAC,CAAC;IACN,OAAOO,qBAAqB,WAArBA,qBAAqB,GAAI,CAAC,CAAC;EACpC,CAAC;EAAA,OAAAZ,wBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAKD,gBAAsBc,6BAA6BA,CAAA;EAAA,OAAAC,8BAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAMlD,SAAAe,+BAAA;EAAAA,8BAAA,GAAAd,iBAAA,CANM,aAAoF;IAAA,IAAAe,qBAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,eAAA;IACzF,IAAMC,UAAU,SAASvB,uBAAuB,CAAC,CAAC;IAClD,OAAO;MACLwB,iBAAiB,GAAAL,qBAAA,IAAAC,mBAAA,GAAEG,UAAU,CAACE,OAAO,qBAAlBL,mBAAA,CAAoBM,eAAe,YAAAP,qBAAA,GAAI,EAAE;MAC5DQ,OAAO,GAAAN,qBAAA,IAAAC,eAAA,GAAEC,UAAU,CAACK,GAAG,qBAAdN,eAAA,CAAgBO,SAAS,YAAAR,qBAAA,GAAI,CAAC;IACzC,CAAC;EACH,CAAC;EAAA,OAAAH,8BAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}