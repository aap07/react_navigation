{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/handlers/gestures/reanimatedWrapper.d.ts"],"sourcesContent":["import { ComponentClass } from 'react';\nimport { GestureUpdateEvent, GestureStateChangeEvent } from '../gestureHandlerCommon';\nexport interface SharedValue<T> {\n    value: T;\n}\ndeclare let Reanimated: {\n    default: {\n        createAnimatedComponent<P extends object>(component: ComponentClass<P>, options?: unknown): ComponentClass<P>;\n    };\n    useEvent: (callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void, events: string[], rebuild: boolean) => unknown;\n    useSharedValue: <T>(value: T) => SharedValue<T>;\n    setGestureState: (handlerTag: number, newState: number) => void;\n};\nexport { Reanimated };\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}