{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createNativeWrapper;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NativeViewGestureHandler = require(\"./NativeViewGestureHandler\");\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar NATIVE_WRAPPER_PROPS_FILTER = [].concat(_toConsumableArray(_NativeViewGestureHandler.nativeViewProps), ['onGestureHandlerEvent', 'onGestureHandlerStateChange']);\nfunction createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _Component$render;\n  var ComponentWrapper = React.forwardRef(function (props, ref) {\n    var gestureHandlerProps = Object.keys(props).reduce(function (res, key) {\n      var allowedKeys = NATIVE_WRAPPER_PROPS_FILTER;\n      if (allowedKeys.includes(key)) {\n        res[key] = props[key];\n      }\n      return res;\n    }, _objectSpread({}, config));\n    var _ref = (0, React.useRef)();\n    var _gestureHandlerRef = (0, React.useRef)();\n    (0, React.useImperativeHandle)(ref, function () {\n      var node = _gestureHandlerRef.current;\n      if (_ref.current && node) {\n        _ref.current.handlerTag = node.handlerTag;\n        return _ref.current;\n      }\n      return null;\n    }, [_ref, _gestureHandlerRef]);\n    return React.createElement(_NativeViewGestureHandler.NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n      ref: _gestureHandlerRef\n    }), React.createElement(Component, _extends({}, props, {\n      ref: _ref\n    })));\n  });\n  ComponentWrapper.displayName = (Component === null || Component === void 0 ? void 0 : Component.displayName) || (Component === null || Component === void 0 ? void 0 : (_Component$render = Component.render) === null || _Component$render === void 0 ? void 0 : _Component$render.name) || typeof Component === 'string' && Component || 'ComponentWrapper';\n  return ComponentWrapper;\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_NativeViewGestureHandler","NATIVE_WRAPPER_PROPS_FILTER","concat","_toConsumableArray","nativeViewProps","createNativeWrapper","Component","config","arguments","length","undefined","_Component$render","ComponentWrapper","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","allowedKeys","includes","_objectSpread","_ref","useRef","_gestureHandlerRef","useImperativeHandle","node","current","handlerTag","createElement","NativeViewGestureHandler","_extends","displayName","render","name"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\commonjs\\handlers\\createNativeWrapper.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\n\nimport {\n  NativeViewGestureHandler,\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  ...nativeViewProps,\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n] as const;\n\nexport default function createNativeWrapper<P>(\n  Component: React.ComponentType<P>,\n  config: Readonly<NativeViewGestureHandlerProps> = {}\n) {\n  const ComponentWrapper = React.forwardRef<\n    React.ComponentType<any>,\n    P & NativeViewGestureHandlerProps\n  >((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        // TS being overly protective with it's types, see https://github.com/microsoft/TypeScript/issues/26255#issuecomment-458013731 for more info\n        const allowedKeys: readonly string[] = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          // @ts-ignore FIXME(TS)\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    const _ref = useRef<React.ComponentType<P>>();\n    const _gestureHandlerRef = useRef<React.ComponentType<P>>();\n    useImperativeHandle(\n      ref,\n      // @ts-ignore TODO(TS) decide how nulls work in this context\n      () => {\n        const node = _gestureHandlerRef.current;\n        // add handlerTag for relations config\n        if (_ref.current && node) {\n          // @ts-ignore FIXME(TS) think about createHandler return type\n          _ref.current.handlerTag = node.handlerTag;\n          return _ref.current;\n        }\n        return null;\n      },\n      [_ref, _gestureHandlerRef]\n    );\n    return (\n      <NativeViewGestureHandler\n        {...gestureHandlerProps}\n        // @ts-ignore TODO(TS)\n        ref={_gestureHandlerRef}>\n        <Component {...props} ref={_ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  ComponentWrapper.displayName =\n    Component?.displayName ||\n    // @ts-ignore if render doesn't exist it will return undefined and go further\n    Component?.render?.name ||\n    (typeof Component === 'string' && Component) ||\n    'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAGA,IAAAC,yBAAA,GAAAD,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAME,2BAA2B,MAAAC,MAAA,CAAAC,kBAAA,CAC5BH,yBAAA,CAAAI,eAD+B,IAElC,uBAFkC,EAGlC,6BAHkC,EAApC;AAMe,SAASC,mBAATA,CACbC,SADa,EAGb;EAAA,IADAC,MAA+C,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAFrC;EAGb,IAAAG,iBAAA;EACA,IAAMC,gBAAgB,GAAGf,KAAK,CAACgB,UAAN,CAGvB,UAACC,KAAD,EAAQC,GAAR,EAAgB;IAEhB,IAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAC1B,UAACC,GAAD,EAAMC,GAAN,EAAc;MAEZ,IAAMC,WAA8B,GAAGrB,2BAAvC;MACA,IAAIqB,WAAW,CAACC,QAAZ,CAAqBF,GAArB,CAAJ,EAA+B;QAE7BD,GAAG,CAACC,GAAD,CAAH,GAAWP,KAAK,CAACO,GAAD,CAAhB;MACD;MACD,OAAOD,GAAP;IACD,CATyB,EAAAI,aAAA,KAUrBjB,MAAA,CAVqB,CAA5B;IAYA,IAAMkB,IAAI,GAAG,IAAA5B,KAAA,CAAA6B,MAAA,GAAb;IACA,IAAMC,kBAAkB,GAAG,IAAA9B,KAAA,CAAA6B,MAAA,GAA3B;IACA,IAAA7B,KAAA,CAAA+B,mBAAA,EACEb,GADF,EAGE,YAAM;MACJ,IAAMc,IAAI,GAAGF,kBAAkB,CAACG,OAAhC;MAEA,IAAIL,IAAI,CAACK,OAAL,IAAgBD,IAApB,EAA0B;QAExBJ,IAAI,CAACK,OAAL,CAAaC,UAAb,GAA0BF,IAAI,CAACE,UAA/B;QACA,OAAON,IAAI,CAACK,OAAZ;MACD;MACD,OAAO,IAAP;IACD,CAZH,EAaE,CAACL,IAAD,EAAOE,kBAAP,CAbF;IAeA,OACE9B,KAAA,CAAAmC,aAAA,CAAChC,yBAAA,CAAAiC,wBAAD,EAAAC,QAAA,KACMlB,mBADN;MAGED,GAAG,EAAEY;IAHP,IAIE9B,KAAA,CAAAmC,aAAA,CAAC1B,SAAD,EAAA4B,QAAA,KAAepB,KAAf;MAAsBC,GAAG,EAAEU;IAA3B,GAJF,CADF;EAQD,CA1CwB,CAAzB;EA6CAb,gBAAgB,CAACuB,WAAjB,GACE,CAAA7B,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE6B,WAAX,MAEA7B,SAFA,aAEAA,SAFA,wBAAAK,iBAAA,GAEAL,SAAS,CAAE8B,MAFX,cAAAzB,iBAAA,uBAEAA,iBAAA,CAAmB0B,IAFnB,KAGC,OAAO/B,SAAP,KAAqB,QAArB,IAAiCA,SAHlC,IAIA,kBALF;EAOA,OAAOM,gBAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}