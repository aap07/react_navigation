{"ast":null,"code":"'use strict';\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError('Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === 'string') return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === 'Object' && o.constructor) n = o.constructor.name;\n  if (n === 'Map' || n === 'Set') return Array.from(o);\n  if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== 'undefined' && iter[Symbol.iterator] != null || iter['@@iterator'] != null) return Array.from(iter);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nvar parseFiles = require(\"./parser.js\");\nvar _process$argv$slice = process.argv.slice(2),\n  _process$argv$slice2 = _toArray(_process$argv$slice),\n  fileList = _process$argv$slice2.slice(0);\nparseFiles(fileList);","map":{"version":3,"names":["_toArray","arr","_arrayWithHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","i","arr2","iter","Symbol","iterator","isArray","parseFiles","require","_process$argv$slice","process","argv","_process$argv$slice2","fileList"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native/codegen/lib/cli/parser/parser-cli.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *\n * @format\n * @oncall react_native\n */\n\n'use strict';\n\nfunction _toArray(arr) {\n  return (\n    _arrayWithHoles(arr) ||\n    _iterableToArray(arr) ||\n    _unsupportedIterableToArray(arr) ||\n    _nonIterableRest()\n  );\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\n    'Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',\n  );\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === 'string') return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === 'Object' && o.constructor) n = o.constructor.name;\n  if (n === 'Map' || n === 'Set') return Array.from(o);\n  if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArray(iter) {\n  if (\n    (typeof Symbol !== 'undefined' && iter[Symbol.iterator] != null) ||\n    iter['@@iterator'] != null\n  )\n    return Array.from(iter);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nconst parseFiles = require('./parser.js');\nconst _process$argv$slice = process.argv.slice(2),\n  _process$argv$slice2 = _toArray(_process$argv$slice),\n  fileList = _process$argv$slice2.slice(0);\nparseFiles(fileList);\n"],"mappings":"AAWA,YAAY;;AAEZ,SAASA,QAAQA,CAACC,GAAG,EAAE;EACrB,OACEC,eAAe,CAACD,GAAG,CAAC,IACpBE,gBAAgB,CAACF,GAAG,CAAC,IACrBG,2BAA2B,CAACH,GAAG,CAAC,IAChCI,gBAAgB,CAAC,CAAC;AAEtB;AACA,SAASA,gBAAgBA,CAAA,EAAG;EAC1B,MAAM,IAAIC,SAAS,CACjB,2IACF,CAAC;AACH;AACA,SAASF,2BAA2BA,CAACG,CAAC,EAAEC,MAAM,EAAE;EAC9C,IAAI,CAACD,CAAC,EAAE;EACR,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAC9D,IAAIE,CAAC,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,IAAIL,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACS,WAAW,EAAEN,CAAC,GAAGH,CAAC,CAACS,WAAW,CAACC,IAAI;EAC3D,IAAIP,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOQ,KAAK,CAACC,IAAI,CAACZ,CAAC,CAAC;EACpD,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACU,IAAI,CAACV,CAAC,CAAC,EACzE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AACvC;AACA,SAASC,iBAAiBA,CAACR,GAAG,EAAEoB,GAAG,EAAE;EACnC,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGpB,GAAG,CAACqB,MAAM,EAAED,GAAG,GAAGpB,GAAG,CAACqB,MAAM;EACrD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,IAAI,GAAG,IAAIN,KAAK,CAACG,GAAG,CAAC,EAAEE,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAEC,IAAI,CAACD,CAAC,CAAC,GAAGtB,GAAG,CAACsB,CAAC,CAAC;EACrE,OAAOC,IAAI;AACb;AACA,SAASrB,gBAAgBA,CAACsB,IAAI,EAAE;EAC9B,IACG,OAAOC,MAAM,KAAK,WAAW,IAAID,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,IAAI,IAAI,IAC/DF,IAAI,CAAC,YAAY,CAAC,IAAI,IAAI,EAE1B,OAAOP,KAAK,CAACC,IAAI,CAACM,IAAI,CAAC;AAC3B;AACA,SAASvB,eAAeA,CAACD,GAAG,EAAE;EAC5B,IAAIiB,KAAK,CAACU,OAAO,CAAC3B,GAAG,CAAC,EAAE,OAAOA,GAAG;AACpC;AACA,IAAM4B,UAAU,GAAGC,OAAO,cAAc,CAAC;AACzC,IAAMC,mBAAmB,GAAGC,OAAO,CAACC,IAAI,CAAClB,KAAK,CAAC,CAAC,CAAC;EAC/CmB,oBAAoB,GAAGlC,QAAQ,CAAC+B,mBAAmB,CAAC;EACpDI,QAAQ,GAAGD,oBAAoB,CAACnB,KAAK,CAAC,CAAC,CAAC;AAC1Cc,UAAU,CAACM,QAAQ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}