{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.directoryExistsSync = directoryExistsSync;\nexports.directoryExistsAsync = directoryExistsAsync;\nexports.fileExistsAsync = fileExistsAsync;\nexports.removeAsync = exports.copyAsync = exports.copySync = exports.ensureDirectory = exports.ensureDirectoryAsync = void 0;\nvar _fsExtra = _interopRequireDefault(require(\"fs-extra\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction directoryExistsSync(file) {\n  try {\n    var ref;\n    var ref1;\n    return (ref1 = (ref = _fsExtra.default.statSync(file)) == null ? void 0 : ref.isDirectory()) != null ? ref1 : false;\n  } catch (_unused) {\n    return false;\n  }\n}\nfunction directoryExistsAsync(_x) {\n  return _directoryExistsAsync.apply(this, arguments);\n}\nfunction _directoryExistsAsync() {\n  _directoryExistsAsync = _asyncToGenerator(function* (file) {\n    var ref;\n    var ref2;\n    return (ref2 = (ref = yield _fsExtra.default.promises.stat(file).catch(function () {\n      return null;\n    })) == null ? void 0 : ref.isDirectory()) != null ? ref2 : false;\n  });\n  return _directoryExistsAsync.apply(this, arguments);\n}\nfunction fileExistsAsync(_x2) {\n  return _fileExistsAsync.apply(this, arguments);\n}\nfunction _fileExistsAsync() {\n  _fileExistsAsync = _asyncToGenerator(function* (file) {\n    var ref;\n    var ref3;\n    return (ref3 = (ref = yield _fsExtra.default.promises.stat(file).catch(function () {\n      return null;\n    })) == null ? void 0 : ref.isFile()) != null ? ref3 : false;\n  });\n  return _fileExistsAsync.apply(this, arguments);\n}\nvar ensureDirectoryAsync = function ensureDirectoryAsync(path) {\n  return _fsExtra.default.promises.mkdir(path, {\n    recursive: true\n  });\n};\nexports.ensureDirectoryAsync = ensureDirectoryAsync;\nvar ensureDirectory = function ensureDirectory(path) {\n  return _fsExtra.default.mkdirSync(path, {\n    recursive: true\n  });\n};\nexports.ensureDirectory = ensureDirectory;\nvar copySync = _fsExtra.default.copySync;\nexports.copySync = copySync;\nvar copyAsync = _fsExtra.default.copy;\nexports.copyAsync = copyAsync;\nvar removeAsync = _fsExtra.default.remove;\nexports.removeAsync = removeAsync;","map":{"version":3,"names":["_asyncToGenerator","require","directoryExistsSync","directoryExistsAsync","fileExistsAsync","_fsExtra","_interopRequireDefault","file","ref","ref1","default","statSync","isDirectory","_unused","_x","_directoryExistsAsync","apply","arguments","ref2","promises","stat","catch","_x2","_fileExistsAsync","ref3","isFile","ensureDirectoryAsync","path","mkdir","recursive","ensureDirectory","mkdirSync","copySync","copyAsync","copy","removeAsync","remove"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\dir.ts"],"sourcesContent":["import fs from 'fs-extra';\n\nexport function directoryExistsSync(file: string): boolean {\n  try {\n    return fs.statSync(file)?.isDirectory() ?? false;\n  } catch {\n    return false;\n  }\n}\n\nexport async function directoryExistsAsync(file: string): Promise<boolean> {\n  return (await fs.promises.stat(file).catch(() => null))?.isDirectory() ?? false;\n}\n\nexport async function fileExistsAsync(file: string): Promise<boolean> {\n  return (await fs.promises.stat(file).catch(() => null))?.isFile() ?? false;\n}\n\nexport const ensureDirectoryAsync = (path: string) => fs.promises.mkdir(path, { recursive: true });\n\nexport const ensureDirectory = (path: string) => fs.mkdirSync(path, { recursive: true });\n\nexport const copySync = fs.copySync;\n\nexport const copyAsync = fs.copy;\n\nexport const removeAsync = fs.remove;\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAEgBC,mBAAmB,GAAnBA,mBAAmB;QAQbC,oBAAoB,GAApBA,oBAAoB;QAIpBC,eAAe,GAAfA,eAAe;;AAdtB,IAAAC,QAAU,GAAAC,sBAAA,CAAAL,OAAA,CAAV,UAAU;;;;;;AAElB,SAASC,mBAAmBA,CAACK,IAAY,EAAW;EACzD,IAAI;QACKC,GAAiB;QAAjBC,IAAgC;IAAvC,OAAO,CAAAA,IAAgC,GAAhC,CAAAD,GAAiB,GAAjBH,QAAE,CAAAK,OAAA,CAACC,QAAQ,CAACJ,IAAI,CAAC,SAAa,GAA9B,MAA8B,GAA9BC,GAAiB,CAAEI,WAAW,EAAE,YAAhCH,IAAgC,GAAI,KAAK;GACjD,CAAC,OAAAI,OAAA,EAAM;IACN,OAAO,KAAK;;;AAEf,SAEqBV,oBAAoBA,CAAAW,EAAA;EAAA,OAAAC,qBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,sBAAA;EAAAA,qBAAA,GAAAf,iBAAA,CAAnC,WAAoCO,IAAY,EAAoB;QAClEC,GAAgD;QAAhDU,IAA+D;IAAtE,OAAO,CAAAA,IAA+D,GAA/D,CAAAV,GAAgD,SAAzCH,QAAE,CAAAK,OAAA,CAACS,QAAQ,CAACC,IAAI,CAACb,IAAI,CAAC,CAACc,KAAK,CAAC;MAAA,OAAM,IAAI;IAAA,EAAC,SAAc,GAA7D,MAA6D,GAA7Db,GAAgD,CAAEI,WAAW,EAAE,YAA/DM,IAA+D,GAAI,KAAK;GAChF;EAAA,OAAAH,qBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqBb,eAAeA,CAAAkB,GAAA;EAAA,OAAAC,gBAAA,CAAAP,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAM,iBAAA;EAAAA,gBAAA,GAAAvB,iBAAA,CAA9B,WAA+BO,IAAY,EAAoB;QAC7DC,GAAgD;QAAhDgB,IAA0D;IAAjE,OAAO,CAAAA,IAA0D,GAA1D,CAAAhB,GAAgD,SAAzCH,QAAE,CAAAK,OAAA,CAACS,QAAQ,CAACC,IAAI,CAACb,IAAI,CAAC,CAACc,KAAK,CAAC;MAAA,OAAM,IAAI;IAAA,EAAC,SAAS,GAAxD,MAAwD,GAAxDb,GAAgD,CAAEiB,MAAM,EAAE,YAA1DD,IAA0D,GAAI,KAAK;GAC3E;EAAA,OAAAD,gBAAA,CAAAP,KAAA,OAAAC,SAAA;AAAA;AAEM,IAAMS,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,IAAY;EAAA,OAAKtB,QAAE,CAAAK,OAAA,CAACS,QAAQ,CAACS,KAAK,CAACD,IAAI,EAAE;IAAEE,SAAS,EAAE;GAAM,CAAC;AAAA;QAArFH,oBAAoB,GAApBA,oBAAoB;AAE1B,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAIH,IAAY;EAAA,OAAKtB,QAAE,CAAAK,OAAA,CAACqB,SAAS,CAACJ,IAAI,EAAE;IAAEE,SAAS,EAAE;GAAM,CAAC;AAAA;QAA3EC,eAAe,GAAfA,eAAe;AAErB,IAAME,QAAQ,GAAG3B,QAAE,CAAAK,OAAA,CAACsB,QAAQ;QAAtBA,QAAQ,GAARA,QAAQ;AAEd,IAAMC,SAAS,GAAG5B,QAAE,CAAAK,OAAA,CAACwB,IAAI;QAAnBD,SAAS,GAATA,SAAS;AAEf,IAAME,WAAW,GAAG9B,QAAE,CAAAK,OAAA,CAAC0B,MAAM;QAAvBD,WAAW,GAAXA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}