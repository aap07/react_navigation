{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _fs = require(\"fs\");\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _resolveFrom = _interopRequireDefault(require(\"resolve-from\"));\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _fn = require(\"./fn\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar debug = require(\"debug\")(\"expo:utils:fileNotifier\");\nvar FileNotifier = function () {\n  function FileNotifier(projectRoot, moduleIds) {\n    var settings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, FileNotifier);\n    this.projectRoot = projectRoot;\n    this.moduleIds = moduleIds;\n    this.settings = settings;\n    this.unsubscribe = null;\n    this.watchFile = (0, _fn).memoize(this.startWatchingFile.bind(this));\n    FileNotifier.instances.push(this);\n  }\n  _createClass(FileNotifier, [{\n    key: \"resolveFilePath\",\n    value: function resolveFilePath() {\n      for (var moduleId of this.moduleIds) {\n        var filePath = _resolveFrom.default.silent(this.projectRoot, moduleId);\n        if (filePath) {\n          return filePath;\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"startObserving\",\n    value: function startObserving(callback) {\n      var configPath = this.resolveFilePath();\n      if (configPath) {\n        debug(`Observing ${configPath}`);\n        return this.watchFile(configPath, callback);\n      }\n      return configPath;\n    }\n  }, {\n    key: \"stopObserving\",\n    value: function stopObserving() {\n      var _obj, ref;\n      (ref = (_obj = this).unsubscribe) == null ? void 0 : ref.call(_obj);\n    }\n  }, {\n    key: \"startWatchingFile\",\n    value: function startWatchingFile(filePath, callback) {\n      var _this = this;\n      var configName = _path.default.relative(this.projectRoot, filePath);\n      var listener = function listener(cur, prev) {\n        if (prev.size || cur.size) {\n          Log.log(`\\u203A Detected a change in ${_chalk.default.bold(configName)}. Restart the server to see the new results.` + (_this.settings.additionalWarning || \"\"));\n        }\n      };\n      var watcher = (0, _fs).watchFile(filePath, callback != null ? callback : listener);\n      this.unsubscribe = function () {\n        watcher.unref();\n      };\n      return filePath;\n    }\n  }], [{\n    key: \"stopAll\",\n    value: function stopAll() {\n      for (var instance of FileNotifier.instances) {\n        instance.stopObserving();\n      }\n    }\n  }]);\n  return FileNotifier;\n}();\nFileNotifier.instances = [];\nexports.FileNotifier = FileNotifier;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_chalk","_interopRequireDefault","_fs","_path","_resolveFrom","Log","_interopRequireWildcard","_fn","debug","FileNotifier","projectRoot","moduleIds","settings","arguments","length","undefined","unsubscribe","watchFile","memoize","startWatchingFile","bind","instances","push","key","value","resolveFilePath","moduleId","filePath","default","silent","startObserving","callback","configPath","stopObserving","_obj","ref","call","_this","configName","relative","listener","cur","prev","size","log","bold","additionalWarning","watcher","unref","stopAll","instance"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\FileNotifier.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { watchFile } from 'fs';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport * as Log from '../log';\nimport { memoize } from './fn';\n\nconst debug = require('debug')('expo:utils:fileNotifier') as typeof console.log;\n\n/** Observes and reports file changes. */\nexport class FileNotifier {\n  static instances: FileNotifier[] = [];\n\n  static stopAll() {\n    for (const instance of FileNotifier.instances) {\n      instance.stopObserving();\n    }\n  }\n\n  private unsubscribe: (() => void) | null = null;\n\n  constructor(\n    /** Project root to resolve the module IDs relative to. */\n    private projectRoot: string,\n    /** List of module IDs sorted by priority. Only the first file that exists will be observed. */\n    private moduleIds: string[],\n    private settings: {\n      /** An additional warning message to add to the notice. */\n      additionalWarning?: string;\n    } = {}\n  ) {\n    FileNotifier.instances.push(this);\n  }\n\n  /** Get the file in the project. */\n  private resolveFilePath(): string | null {\n    for (const moduleId of this.moduleIds) {\n      const filePath = resolveFrom.silent(this.projectRoot, moduleId);\n      if (filePath) {\n        return filePath;\n      }\n    }\n    return null;\n  }\n\n  public startObserving(callback?: (cur: any, prev: any) => void) {\n    const configPath = this.resolveFilePath();\n    if (configPath) {\n      debug(`Observing ${configPath}`);\n      return this.watchFile(configPath, callback);\n    }\n    return configPath;\n  }\n\n  public stopObserving() {\n    this.unsubscribe?.();\n  }\n\n  /** Watch the file and warn to reload the CLI if it changes. */\n  public watchFile = memoize(this.startWatchingFile.bind(this));\n\n  private startWatchingFile(filePath: string, callback?: (cur: any, prev: any) => void): string {\n    const configName = path.relative(this.projectRoot, filePath);\n    const listener = (cur: any, prev: any) => {\n      if (prev.size || cur.size) {\n        Log.log(\n          `\\u203A Detected a change in ${chalk.bold(\n            configName\n          )}. Restart the server to see the new results.` + (this.settings.additionalWarning || '')\n        );\n      }\n    };\n\n    const watcher = watchFile(filePath, callback ?? listener);\n\n    this.unsubscribe = () => {\n      watcher.unref();\n    };\n\n    return filePath;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}