{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/utils/commonCodeMod.d.ts"],"sourcesContent":["export interface CodeBlock {\n    start: number;\n    end: number;\n    code: string;\n}\n/**\n * Insert contents at given offset\n * @param srcContents source contents\n * @param insertion content to insert\n * @param offset `srcContents` offset to insert `insertion`\n * @returns updated contents\n */\nexport declare function insertContentsAtOffset(srcContents: string, insertion: string, offset: number): string;\n/**\n * Replace contents at given start and end offset\n *\n * @param contents source contents\n * @param replacement new contents to place in [startOffset:endOffset]\n * @param startOffset `contents` start offset for replacement\n * @param endOffset `contents` end offset for replacement\n * @returns updated contents\n */\nexport declare function replaceContentsWithOffset(contents: string, replacement: string, startOffset: number, endOffset: number): string;\n/**\n * String.prototype.search() with offset support\n *\n * @param source source string to search\n * @param regexp RegExp pattern to search\n * @param offset start offset of `source` to search `regexp` pattern\n * @returns The index of the first match between the regular expression and the given string, or -1 if no match was found.\n */\nexport declare function searchFromOffset(source: string, regexp: RegExp, offset: number): number;\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}