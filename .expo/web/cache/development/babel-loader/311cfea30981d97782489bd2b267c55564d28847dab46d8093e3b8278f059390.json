{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport passwordPrompt from 'password-prompt';\nimport { waitForUser } from \"./utils\";\nvar DefaultUI = {\n  getWindowsEncryptionPassword: function () {\n    var _getWindowsEncryptionPassword = _asyncToGenerator(function* () {\n      return yield passwordPrompt('devcert password (http://bit.ly/devcert-what-password?):');\n    });\n    function getWindowsEncryptionPassword() {\n      return _getWindowsEncryptionPassword.apply(this, arguments);\n    }\n    return getWindowsEncryptionPassword;\n  }(),\n  warnChromeOnLinuxWithoutCertutil: function () {\n    var _warnChromeOnLinuxWithoutCertutil = _asyncToGenerator(function* () {\n      console.warn(`\n      WARNING: It looks like you have Chrome installed, but you specified\n      'skipCertutilInstall: true'. Unfortunately, without installing\n      certutil, it's impossible get Chrome to trust devcert's certificates\n      The certificates will work, but Chrome will continue to warn you that\n      they are untrusted.\n    `);\n    });\n    function warnChromeOnLinuxWithoutCertutil() {\n      return _warnChromeOnLinuxWithoutCertutil.apply(this, arguments);\n    }\n    return warnChromeOnLinuxWithoutCertutil;\n  }(),\n  closeFirefoxBeforeContinuing: function () {\n    var _closeFirefoxBeforeContinuing = _asyncToGenerator(function* () {\n      console.log('Please close Firefox before continuing');\n    });\n    function closeFirefoxBeforeContinuing() {\n      return _closeFirefoxBeforeContinuing.apply(this, arguments);\n    }\n    return closeFirefoxBeforeContinuing;\n  }(),\n  startFirefoxWizard: function () {\n    var _startFirefoxWizard = _asyncToGenerator(function* (certificateHost) {\n      console.log(`\n      devcert was unable to automatically configure Firefox. You'll need to\n      complete this process manually. Don't worry though - Firefox will walk\n      you through it.\n\n      When you're ready, hit any key to continue. Firefox will launch and\n      display a wizard to walk you through how to trust the devcert\n      certificate. When you are finished, come back here and we'll finish up.\n\n      (If Firefox doesn't start, go ahead and start it and navigate to\n      ${certificateHost} in a new tab.)\n\n      If you are curious about why all this is necessary, check out\n      https://github.com/davewasmer/devcert#how-it-works\n\n      <Press any key to launch Firefox wizard>\n    `);\n      yield waitForUser();\n    });\n    function startFirefoxWizard(_x) {\n      return _startFirefoxWizard.apply(this, arguments);\n    }\n    return startFirefoxWizard;\n  }(),\n  firefoxWizardPromptPage: function () {\n    var _firefoxWizardPromptPage = _asyncToGenerator(function* (certificateURL) {\n      return `\n      <html>\n        <head>\n          <meta http-equiv=\"refresh\" content=\"0; url=${certificateURL}\" />\n        </head>\n      </html>\n    `;\n    });\n    function firefoxWizardPromptPage(_x2) {\n      return _firefoxWizardPromptPage.apply(this, arguments);\n    }\n    return firefoxWizardPromptPage;\n  }(),\n  waitForFirefoxWizard: function () {\n    var _waitForFirefoxWizard = _asyncToGenerator(function* () {\n      console.log(`\n      Launching Firefox ...\n\n      Great! Once you've finished the Firefox wizard for adding the devcert\n      certificate, just hit any key here again and we'll wrap up.\n\n      <Press any key to continue>\n    `);\n      yield waitForUser();\n    });\n    function waitForFirefoxWizard() {\n      return _waitForFirefoxWizard.apply(this, arguments);\n    }\n    return waitForFirefoxWizard;\n  }()\n};\nexport default DefaultUI;","map":{"version":3,"names":["passwordPrompt","waitForUser","DefaultUI","getWindowsEncryptionPassword","_getWindowsEncryptionPassword","_asyncToGenerator","apply","arguments","warnChromeOnLinuxWithoutCertutil","_warnChromeOnLinuxWithoutCertutil","console","warn","closeFirefoxBeforeContinuing","_closeFirefoxBeforeContinuing","log","startFirefoxWizard","_startFirefoxWizard","certificateHost","_x","firefoxWizardPromptPage","_firefoxWizardPromptPage","certificateURL","_x2","waitForFirefoxWizard","_waitForFirefoxWizard"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/devcert/src/user-interface.ts"],"sourcesContent":["import passwordPrompt from 'password-prompt';\nimport { waitForUser } from './utils';\n\nexport interface UserInterface {\n  getWindowsEncryptionPassword(): Promise<string>;\n  warnChromeOnLinuxWithoutCertutil(): Promise<void>;\n  closeFirefoxBeforeContinuing(): Promise<void>;\n  startFirefoxWizard(certificateHost: string): Promise<void>;\n  firefoxWizardPromptPage(certificateURL: string): Promise<string>;\n  waitForFirefoxWizard(): Promise<void>;\n}\n\nconst DefaultUI: UserInterface = {\n  async getWindowsEncryptionPassword() {\n    return await passwordPrompt('devcert password (http://bit.ly/devcert-what-password?):');\n  },\n  async warnChromeOnLinuxWithoutCertutil() {\n    console.warn(`\n      WARNING: It looks like you have Chrome installed, but you specified\n      'skipCertutilInstall: true'. Unfortunately, without installing\n      certutil, it's impossible get Chrome to trust devcert's certificates\n      The certificates will work, but Chrome will continue to warn you that\n      they are untrusted.\n    `);\n  },\n  async closeFirefoxBeforeContinuing() {\n    console.log('Please close Firefox before continuing');\n  },\n  async startFirefoxWizard(certificateHost) {\n    console.log(`\n      devcert was unable to automatically configure Firefox. You'll need to\n      complete this process manually. Don't worry though - Firefox will walk\n      you through it.\n\n      When you're ready, hit any key to continue. Firefox will launch and\n      display a wizard to walk you through how to trust the devcert\n      certificate. When you are finished, come back here and we'll finish up.\n\n      (If Firefox doesn't start, go ahead and start it and navigate to\n      ${ certificateHost } in a new tab.)\n\n      If you are curious about why all this is necessary, check out\n      https://github.com/davewasmer/devcert#how-it-works\n\n      <Press any key to launch Firefox wizard>\n    `);\n    await waitForUser();\n  },\n  async firefoxWizardPromptPage(certificateURL: string) {\n    return `\n      <html>\n        <head>\n          <meta http-equiv=\"refresh\" content=\"0; url=${certificateURL}\" />\n        </head>\n      </html>\n    `;\n  },\n  async waitForFirefoxWizard() {\n    console.log(`\n      Launching Firefox ...\n\n      Great! Once you've finished the Firefox wizard for adding the devcert\n      certificate, just hit any key here again and we'll wrap up.\n\n      <Press any key to continue>\n    `)\n    await waitForUser();\n  }\n}\n\nexport default DefaultUI;"],"mappings":";AAAA,OAAOA,cAAc,MAAM,iBAAiB;AAC5C,SAASC,WAAW;AAWpB,IAAMC,SAAwB,GAAG;EACzBC,4BAA4B;IAAA,IAAAC,6BAAA,GAAAC,iBAAA,cAAG;MACnC,aAAaL,cAAc,CAAC,0DAA0D,CAAC;IACzF,CAAC;IAAA,SAAAG,6BAAA;MAAA,OAAAC,6BAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAJ,4BAAA;EAAA;EACKK,gCAAgC;IAAA,IAAAC,iCAAA,GAAAJ,iBAAA,cAAG;MACvCK,OAAO,CAACC,IAAI,CAAE;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACJ,CAAC;IAAA,SAAAH,iCAAA;MAAA,OAAAC,iCAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,gCAAA;EAAA;EACKI,4BAA4B;IAAA,IAAAC,6BAAA,GAAAR,iBAAA,cAAG;MACnCK,OAAO,CAACI,GAAG,CAAC,wCAAwC,CAAC;IACvD,CAAC;IAAA,SAAAF,6BAAA;MAAA,OAAAC,6BAAA,CAAAP,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAK,4BAAA;EAAA;EACKG,kBAAkB;IAAA,IAAAC,mBAAA,GAAAX,iBAAA,YAACY,eAAe,EAAE;MACxCP,OAAO,CAACI,GAAG,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAASG,eAAiB;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;MACF,MAAMhB,WAAW,CAAC,CAAC;IACrB,CAAC;IAAA,SAAAc,mBAAAG,EAAA;MAAA,OAAAF,mBAAA,CAAAV,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAQ,kBAAA;EAAA;EACKI,uBAAuB;IAAA,IAAAC,wBAAA,GAAAf,iBAAA,YAACgB,cAAsB,EAAE;MACpD,OAAQ;AACZ;AACA;AACA,uDAAuDA,cAAe;AACtE;AACA;AACA,KAAK;IACH,CAAC;IAAA,SAAAF,wBAAAG,GAAA;MAAA,OAAAF,wBAAA,CAAAd,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAY,uBAAA;EAAA;EACKI,oBAAoB;IAAA,IAAAC,qBAAA,GAAAnB,iBAAA,cAAG;MAC3BK,OAAO,CAACI,GAAG,CAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;MACF,MAAMb,WAAW,CAAC,CAAC;IACrB,CAAC;IAAA,SAAAsB,qBAAA;MAAA,OAAAC,qBAAA,CAAAlB,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAgB,oBAAA;EAAA;AACH,CAAC;AAED,eAAerB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}