{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getWatchFolders = getWatchFolders;\nexports.globAllPackageJsonPaths = globAllPackageJsonPaths;\nexports.resolveAllWorkspacePackageJsonPaths = resolveAllWorkspacePackageJsonPaths;\nfunction _assert() {\n  var data = _interopRequireDefault(require(\"assert\"));\n  _assert = function _assert() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _glob() {\n  var data = require(\"glob\");\n  _glob = function _glob() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _getModulesPaths() {\n  var data = require(\"./getModulesPaths\");\n  _getModulesPaths = function _getModulesPaths() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction readJsonFile(filePath) {\n  var file = _fs().default.readFileSync(filePath, 'utf8');\n  return JSON.parse(file);\n}\nfunction isValidJsonFile(filePath) {\n  try {\n    readJsonFile(filePath);\n    return true;\n  } catch (_unused) {\n    return false;\n  }\n}\nfunction globAllPackageJsonPaths(workspaceProjectRoot, linkedPackages) {\n  return linkedPackages.map(function (glob) {\n    return (0, _glob().sync)(_path().default.join(glob, 'package.json').replace(/\\\\/g, '/'), {\n      cwd: workspaceProjectRoot,\n      absolute: true,\n      ignore: ['**/@(Carthage|Pods|node_modules)/**']\n    }).map(function (pkgPath) {\n      return isValidJsonFile(pkgPath) ? pkgPath : null;\n    });\n  }).flat().filter(Boolean).map(function (p) {\n    return _path().default.join(p);\n  });\n}\nfunction getWorkspacePackagesArray(_ref) {\n  var workspaces = _ref.workspaces;\n  if (Array.isArray(workspaces)) {\n    return workspaces;\n  }\n  (0, _assert().default)(workspaces === null || workspaces === void 0 ? void 0 : workspaces.packages, 'Could not find a `workspaces` object in the root package.json');\n  return workspaces.packages;\n}\nfunction resolveAllWorkspacePackageJsonPaths(workspaceProjectRoot) {\n  try {\n    var rootPackageJsonFilePath = _path().default.join(workspaceProjectRoot, 'package.json');\n    var rootPackageJson = readJsonFile(rootPackageJsonFilePath);\n    var packages = getWorkspacePackagesArray(rootPackageJson);\n    return globAllPackageJsonPaths(workspaceProjectRoot, packages);\n  } catch (_unused2) {\n    return [];\n  }\n}\nfunction getWatchFolders(projectRoot) {\n  var workspaceRoot = (0, _getModulesPaths().getWorkspaceRoot)(_path().default.resolve(projectRoot));\n  if (!workspaceRoot) {\n    return [];\n  }\n  var packages = resolveAllWorkspacePackageJsonPaths(workspaceRoot);\n  if (!packages.length) {\n    return [];\n  }\n  return uniqueItems([_path().default.join(workspaceRoot, 'node_modules')].concat(_toConsumableArray(packages.map(function (pkg) {\n    return _path().default.dirname(pkg);\n  }))));\n}\nfunction uniqueItems(items) {\n  return _toConsumableArray(new Set(items));\n}","map":{"version":3,"names":["_assert","data","_interopRequireDefault","require","_fs","_glob","_path","_getModulesPaths","obj","__esModule","default","readJsonFile","filePath","file","readFileSync","JSON","parse","isValidJsonFile","_unused","globAllPackageJsonPaths","workspaceProjectRoot","linkedPackages","map","glob","sync","join","replace","cwd","absolute","ignore","pkgPath","flat","filter","Boolean","p","getWorkspacePackagesArray","_ref","workspaces","Array","isArray","packages","resolveAllWorkspacePackageJsonPaths","rootPackageJsonFilePath","rootPackageJson","_unused2","getWatchFolders","projectRoot","workspaceRoot","getWorkspaceRoot","resolve","length","uniqueItems","concat","_toConsumableArray","pkg","dirname","items","Set"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\getWatchFolders.ts"],"sourcesContent":["import assert from 'assert';\nimport fs from 'fs';\nimport { sync as globSync } from 'glob';\nimport path from 'path';\n\nimport { getWorkspaceRoot } from './getModulesPaths';\n\nfunction readJsonFile(filePath: string) {\n  // Read with fs\n  const file = fs.readFileSync(filePath, 'utf8');\n  // Parse with JSON.parse\n  return JSON.parse(file);\n}\n\nfunction isValidJsonFile(filePath: string): boolean {\n  try {\n    // Throws if invalid or unable to read.\n    readJsonFile(filePath);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * @param workspaceProjectRoot Root file path for the yarn workspace\n * @param linkedPackages List of folders that contain linked node modules, ex: `['packages/*', 'apps/*']`\n * @returns List of valid package.json file paths, ex: `['/Users/me/app/apps/my-app/package.json', '/Users/me/app/packages/my-package/package.json']`\n */\nexport function globAllPackageJsonPaths(\n  workspaceProjectRoot: string,\n  linkedPackages: string[]\n): string[] {\n  return linkedPackages\n    .map((glob) => {\n      return globSync(path.join(glob, 'package.json').replace(/\\\\/g, '/'), {\n        cwd: workspaceProjectRoot,\n        absolute: true,\n        ignore: ['**/@(Carthage|Pods|node_modules)/**'],\n      }).map((pkgPath) => {\n        return isValidJsonFile(pkgPath) ? pkgPath : null;\n      });\n    })\n    .flat()\n    .filter(Boolean)\n    .map((p) => path.join(p as string));\n}\n\nfunction getWorkspacePackagesArray({ workspaces }: any): string[] {\n  if (Array.isArray(workspaces)) {\n    return workspaces;\n  }\n\n  assert(workspaces?.packages, 'Could not find a `workspaces` object in the root package.json');\n\n  return workspaces.packages;\n}\n\n/**\n * @param workspaceProjectRoot root file path for a yarn workspace.\n * @returns list of package.json file paths that are linked to the yarn workspace.\n */\nexport function resolveAllWorkspacePackageJsonPaths(workspaceProjectRoot: string) {\n  try {\n    const rootPackageJsonFilePath = path.join(workspaceProjectRoot, 'package.json');\n    // Could throw if package.json is invalid.\n    const rootPackageJson = readJsonFile(rootPackageJsonFilePath);\n\n    // Extract the \"packages\" array or use \"workspaces\" as packages array (yarn workspaces spec).\n    const packages = getWorkspacePackagesArray(rootPackageJson);\n\n    // Glob all package.json files and return valid paths.\n    return globAllPackageJsonPaths(workspaceProjectRoot, packages);\n  } catch {\n    return [];\n  }\n}\n\n/**\n * @param projectRoot file path to app's project root\n * @returns list of node module paths to watch in Metro bundler, ex: `['/Users/me/app/node_modules/', '/Users/me/app/apps/my-app/', '/Users/me/app/packages/my-package/']`\n */\nexport function getWatchFolders(projectRoot: string): string[] {\n  const workspaceRoot = getWorkspaceRoot(path.resolve(projectRoot));\n  // Rely on default behavior in standard projects.\n  if (!workspaceRoot) {\n    return [];\n  }\n\n  const packages = resolveAllWorkspacePackageJsonPaths(workspaceRoot);\n  if (!packages.length) {\n    return [];\n  }\n\n  return uniqueItems([\n    path.join(workspaceRoot, 'node_modules'),\n    ...packages.map((pkg) => path.dirname(pkg)),\n  ]);\n}\n\nfunction uniqueItems(items: string[]): string[] {\n  return [...new Set(items)];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}