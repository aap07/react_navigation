{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatArrayOfReactDelegateHandler = exports.generatePackageListAsync = exports.resolveModuleAsync = exports.getSwiftModuleNames = void 0;\nvar fast_glob_1 = __importDefault(require(\"fast-glob\"));\nvar fs_extra_1 = __importDefault(require(\"fs-extra\"));\nvar path_1 = __importDefault(require(\"path\"));\nvar indent = '  ';\nfunction findPodspecFiles(_x) {\n  return _findPodspecFiles.apply(this, arguments);\n}\nfunction _findPodspecFiles() {\n  _findPodspecFiles = _asyncToGenerator(function* (revision) {\n    var _revision$config;\n    var configPodspecPaths = (_revision$config = revision.config) == null ? void 0 : _revision$config.iosPodspecPaths();\n    if (configPodspecPaths && configPodspecPaths.length) {\n      return configPodspecPaths;\n    }\n    var podspecFiles = yield (0, fast_glob_1.default)('*/*.podspec', {\n      cwd: revision.path,\n      ignore: ['**/node_modules/**']\n    });\n    return podspecFiles;\n  });\n  return _findPodspecFiles.apply(this, arguments);\n}\nfunction getSwiftModuleNames(pods, swiftModuleNames) {\n  if (swiftModuleNames && swiftModuleNames.length) {\n    return swiftModuleNames;\n  }\n  return pods.map(function (pod) {\n    return pod.podName.replace(/[^a-zA-Z0-9]/g, '_');\n  });\n}\nexports.getSwiftModuleNames = getSwiftModuleNames;\nfunction resolveModuleAsync(_x2, _x3, _x4) {\n  return _resolveModuleAsync.apply(this, arguments);\n}\nfunction _resolveModuleAsync() {\n  _resolveModuleAsync = _asyncToGenerator(function* (packageName, revision, options) {\n    var _revision$config2, _revision$config$iosM, _revision$config3, _revision$config$iosA, _revision$config4, _revision$config$iosR, _revision$config5, _revision$config$iosD, _revision$config6;\n    var podspecFiles = yield findPodspecFiles(revision);\n    if (!podspecFiles.length) {\n      return null;\n    }\n    var pods = podspecFiles.map(function (podspecFile) {\n      return {\n        podName: path_1.default.basename(podspecFile, path_1.default.extname(podspecFile)),\n        podspecDir: path_1.default.dirname(path_1.default.join(revision.path, podspecFile))\n      };\n    });\n    var swiftModuleNames = getSwiftModuleNames(pods, (_revision$config2 = revision.config) == null ? void 0 : _revision$config2.iosSwiftModuleNames());\n    return {\n      packageName: packageName,\n      pods: pods,\n      swiftModuleNames: swiftModuleNames,\n      flags: options.flags,\n      modules: (_revision$config$iosM = (_revision$config3 = revision.config) == null ? void 0 : _revision$config3.iosModules()) != null ? _revision$config$iosM : [],\n      appDelegateSubscribers: (_revision$config$iosA = (_revision$config4 = revision.config) == null ? void 0 : _revision$config4.iosAppDelegateSubscribers()) != null ? _revision$config$iosA : [],\n      reactDelegateHandlers: (_revision$config$iosR = (_revision$config5 = revision.config) == null ? void 0 : _revision$config5.iosReactDelegateHandlers()) != null ? _revision$config$iosR : [],\n      debugOnly: (_revision$config$iosD = (_revision$config6 = revision.config) == null ? void 0 : _revision$config6.iosDebugOnly()) != null ? _revision$config$iosD : false\n    };\n  });\n  return _resolveModuleAsync.apply(this, arguments);\n}\nexports.resolveModuleAsync = resolveModuleAsync;\nfunction generatePackageListAsync(_x5, _x6) {\n  return _generatePackageListAsync.apply(this, arguments);\n}\nfunction _generatePackageListAsync() {\n  _generatePackageListAsync = _asyncToGenerator(function* (modules, targetPath) {\n    var className = path_1.default.basename(targetPath, path_1.default.extname(targetPath));\n    var generatedFileContent = yield generatePackageListFileContentAsync(modules, className);\n    yield fs_extra_1.default.outputFile(targetPath, generatedFileContent);\n  });\n  return _generatePackageListAsync.apply(this, arguments);\n}\nexports.generatePackageListAsync = generatePackageListAsync;\nfunction generatePackageListFileContentAsync(_x7, _x8) {\n  return _generatePackageListFileContentAsync.apply(this, arguments);\n}\nfunction _generatePackageListFileContentAsync() {\n  _generatePackageListFileContentAsync = _asyncToGenerator(function* (modules, className) {\n    var _ref, _ref2, _ref3, _ref4, _ref5, _ref6;\n    var iosModules = modules.filter(function (module) {\n      return module.modules.length || module.appDelegateSubscribers.length || module.reactDelegateHandlers.length;\n    });\n    var modulesToImport = iosModules.filter(function (module) {\n      return !module.debugOnly;\n    });\n    var debugOnlyModules = iosModules.filter(function (module) {\n      return module.debugOnly;\n    });\n    var swiftModules = (_ref = []).concat.apply(_ref, _toConsumableArray(modulesToImport.map(function (module) {\n      return module.swiftModuleNames;\n    }))).filter(Boolean);\n    var debugOnlySwiftModules = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(debugOnlyModules.map(function (module) {\n      return module.swiftModuleNames;\n    }))).filter(Boolean);\n    var modulesClassNames = (_ref3 = []).concat.apply(_ref3, _toConsumableArray(modulesToImport.map(function (module) {\n      return module.modules;\n    }))).filter(Boolean);\n    var debugOnlyModulesClassNames = (_ref4 = []).concat.apply(_ref4, _toConsumableArray(debugOnlyModules.map(function (module) {\n      return module.modules;\n    }))).filter(Boolean);\n    var appDelegateSubscribers = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(modulesToImport.map(function (module) {\n      return module.appDelegateSubscribers;\n    })));\n    var debugOnlyAppDelegateSubscribers = (_ref6 = []).concat.apply(_ref6, _toConsumableArray(debugOnlyModules.map(function (module) {\n      return module.appDelegateSubscribers;\n    })));\n    var reactDelegateHandlerModules = modulesToImport.filter(function (module) {\n      return !!module.reactDelegateHandlers.length;\n    });\n    var debugOnlyReactDelegateHandlerModules = debugOnlyModules.filter(function (module) {\n      return !!module.reactDelegateHandlers.length;\n    });\n    return `/**\n * Automatically generated by expo-modules-autolinking.\n *\n * This autogenerated class provides a list of classes of native Expo modules,\n * but only these that are written in Swift and use the new API for creating Expo modules.\n */\n\nimport ExpoModulesCore\n${generateCommonImportList(swiftModules)}\n${generateDebugOnlyImportList(debugOnlySwiftModules)}\n@objc(${className})\npublic class ${className}: ModulesProvider {\n  public override func getModuleClasses() -> [AnyModule.Type] {\n${generateModuleClasses(modulesClassNames, debugOnlyModulesClassNames)}\n  }\n\n  public override func getAppDelegateSubscribers() -> [ExpoAppDelegateSubscriber.Type] {\n${generateModuleClasses(appDelegateSubscribers, debugOnlyAppDelegateSubscribers)}\n  }\n\n  public override func getReactDelegateHandlers() -> [ExpoReactDelegateHandlerTupleType] {\n${generateReactDelegateHandlers(reactDelegateHandlerModules, debugOnlyReactDelegateHandlerModules)}\n  }\n}\n`;\n  });\n  return _generatePackageListFileContentAsync.apply(this, arguments);\n}\nfunction generateCommonImportList(swiftModules) {\n  return swiftModules.map(function (moduleName) {\n    return `import ${moduleName}`;\n  }).join('\\n');\n}\nfunction generateDebugOnlyImportList(swiftModules) {\n  if (!swiftModules.length) {\n    return '';\n  }\n  return wrapInDebugConfigurationCheck(0, swiftModules.map(function (moduleName) {\n    return `import ${moduleName}`;\n  }).join('\\n')) + '\\n';\n}\nfunction generateModuleClasses(classNames, debugOnlyClassName) {\n  var commonClassNames = formatArrayOfClassNames(classNames);\n  if (debugOnlyClassName.length > 0) {\n    return wrapInDebugConfigurationCheck(2, `return ${formatArrayOfClassNames(classNames.concat(debugOnlyClassName))}`, `return ${commonClassNames}`);\n  } else {\n    return `${indent.repeat(2)}return ${commonClassNames}`;\n  }\n}\nfunction formatArrayOfClassNames(classNames) {\n  return `[${classNames.map(function (className) {\n    return `\\n${indent.repeat(3)}${className}.self`;\n  }).join(',')}\n${indent.repeat(2)}]`;\n}\nfunction generateReactDelegateHandlers(module, debugOnlyModules) {\n  var commonModules = formatArrayOfReactDelegateHandler(module);\n  if (debugOnlyModules.length > 0) {\n    return wrapInDebugConfigurationCheck(2, `return ${formatArrayOfReactDelegateHandler(module.concat(debugOnlyModules))}`, `return ${commonModules}`);\n  } else {\n    return `${indent.repeat(2)}return ${commonModules}`;\n  }\n}\nfunction formatArrayOfReactDelegateHandler(modules) {\n  var values = [];\n  for (var module of modules) {\n    for (var handler of module.reactDelegateHandlers) {\n      values.push(`(packageName: \"${module.packageName}\", handler: ${handler}.self)`);\n    }\n  }\n  return `[${values.map(function (value) {\n    return `\\n${indent.repeat(3)}${value}`;\n  }).join(',')}\n${indent.repeat(2)}]`;\n}\nexports.formatArrayOfReactDelegateHandler = formatArrayOfReactDelegateHandler;\nfunction wrapInDebugConfigurationCheck(indentationLevel, debugBlock) {\n  var releaseBlock = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (releaseBlock) {\n    return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(indentationLevel)}${debugBlock}\\n${indent.repeat(indentationLevel)}#else\\n${indent.repeat(indentationLevel)}${releaseBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n  }\n  return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(indentationLevel)}${debugBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n}","map":{"version":3,"names":["fast_glob_1","__importDefault","require","fs_extra_1","path_1","indent","findPodspecFiles","_x","_findPodspecFiles","apply","arguments","_asyncToGenerator","revision","_revision$config","configPodspecPaths","config","iosPodspecPaths","length","podspecFiles","default","cwd","path","ignore","getSwiftModuleNames","pods","swiftModuleNames","map","pod","podName","replace","exports","resolveModuleAsync","_x2","_x3","_x4","_resolveModuleAsync","packageName","options","_revision$config2","_revision$config$iosM","_revision$config3","_revision$config$iosA","_revision$config4","_revision$config$iosR","_revision$config5","_revision$config$iosD","_revision$config6","podspecFile","basename","extname","podspecDir","dirname","join","iosSwiftModuleNames","flags","modules","iosModules","appDelegateSubscribers","iosAppDelegateSubscribers","reactDelegateHandlers","iosReactDelegateHandlers","debugOnly","iosDebugOnly","generatePackageListAsync","_x5","_x6","_generatePackageListAsync","targetPath","className","generatedFileContent","generatePackageListFileContentAsync","outputFile","_x7","_x8","_generatePackageListFileContentAsync","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","filter","module","modulesToImport","debugOnlyModules","swiftModules","concat","_toConsumableArray","Boolean","debugOnlySwiftModules","modulesClassNames","debugOnlyModulesClassNames","debugOnlyAppDelegateSubscribers","reactDelegateHandlerModules","debugOnlyReactDelegateHandlerModules","generateCommonImportList","generateDebugOnlyImportList","generateModuleClasses","generateReactDelegateHandlers","moduleName","wrapInDebugConfigurationCheck","classNames","debugOnlyClassName","commonClassNames","formatArrayOfClassNames","repeat","commonModules","formatArrayOfReactDelegateHandler","values","handler","push","value","indentationLevel","debugBlock","releaseBlock","undefined"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\expo-modules-autolinking\\src\\platforms\\ios.ts"],"sourcesContent":["import glob from 'fast-glob';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport {\n  ModuleDescriptorIos,\n  ModuleIosPodspecInfo,\n  PackageRevision,\n  SearchOptions,\n} from '../types';\n\nconst indent = '  ';\n\nasync function findPodspecFiles(revision: PackageRevision): Promise<string[]> {\n  const configPodspecPaths = revision.config?.iosPodspecPaths();\n  if (configPodspecPaths && configPodspecPaths.length) {\n    return configPodspecPaths;\n  }\n\n  const podspecFiles = await glob('*/*.podspec', {\n    cwd: revision.path,\n    ignore: ['**/node_modules/**'],\n  });\n\n  return podspecFiles;\n}\n\nexport function getSwiftModuleNames(\n  pods: ModuleIosPodspecInfo[],\n  swiftModuleNames: string[] | undefined\n): string[] {\n  if (swiftModuleNames && swiftModuleNames.length) {\n    return swiftModuleNames;\n  }\n  // by default, non-alphanumeric characters in the pod name are replaced by _ in the module name\n  return pods.map((pod) => pod.podName.replace(/[^a-zA-Z0-9]/g, '_'));\n}\n\n/**\n * Resolves module search result with additional details required for iOS platform.\n */\nexport async function resolveModuleAsync(\n  packageName: string,\n  revision: PackageRevision,\n  options: SearchOptions\n): Promise<ModuleDescriptorIos | null> {\n  const podspecFiles = await findPodspecFiles(revision);\n  if (!podspecFiles.length) {\n    return null;\n  }\n\n  const pods = podspecFiles.map((podspecFile) => ({\n    podName: path.basename(podspecFile, path.extname(podspecFile)),\n    podspecDir: path.dirname(path.join(revision.path, podspecFile)),\n  }));\n\n  const swiftModuleNames = getSwiftModuleNames(pods, revision.config?.iosSwiftModuleNames());\n\n  return {\n    packageName,\n    pods,\n    swiftModuleNames,\n    flags: options.flags,\n    modules: revision.config?.iosModules() ?? [],\n    appDelegateSubscribers: revision.config?.iosAppDelegateSubscribers() ?? [],\n    reactDelegateHandlers: revision.config?.iosReactDelegateHandlers() ?? [],\n    debugOnly: revision.config?.iosDebugOnly() ?? false,\n  };\n}\n\n/**\n * Generates Swift file that contains all autolinked Swift packages.\n */\nexport async function generatePackageListAsync(\n  modules: ModuleDescriptorIos[],\n  targetPath: string\n): Promise<void> {\n  const className = path.basename(targetPath, path.extname(targetPath));\n  const generatedFileContent = await generatePackageListFileContentAsync(modules, className);\n\n  await fs.outputFile(targetPath, generatedFileContent);\n}\n\n/**\n * Generates the string to put into the generated package list.\n */\nasync function generatePackageListFileContentAsync(\n  modules: ModuleDescriptorIos[],\n  className: string\n): Promise<string> {\n  const iosModules = modules.filter(\n    (module) =>\n      module.modules.length ||\n      module.appDelegateSubscribers.length ||\n      module.reactDelegateHandlers.length\n  );\n\n  const modulesToImport = iosModules.filter((module) => !module.debugOnly);\n  const debugOnlyModules = iosModules.filter((module) => module.debugOnly);\n\n  const swiftModules = ([] as string[])\n    .concat(...modulesToImport.map((module) => module.swiftModuleNames))\n    .filter(Boolean);\n\n  const debugOnlySwiftModules = ([] as string[])\n    .concat(...debugOnlyModules.map((module) => module.swiftModuleNames))\n    .filter(Boolean);\n\n  const modulesClassNames = ([] as string[])\n    .concat(...modulesToImport.map((module) => module.modules))\n    .filter(Boolean);\n\n  const debugOnlyModulesClassNames = ([] as string[])\n    .concat(...debugOnlyModules.map((module) => module.modules))\n    .filter(Boolean);\n\n  const appDelegateSubscribers = ([] as string[]).concat(\n    ...modulesToImport.map((module) => module.appDelegateSubscribers)\n  );\n\n  const debugOnlyAppDelegateSubscribers = ([] as string[]).concat(\n    ...debugOnlyModules.map((module) => module.appDelegateSubscribers)\n  );\n\n  const reactDelegateHandlerModules = modulesToImport.filter(\n    (module) => !!module.reactDelegateHandlers.length\n  );\n\n  const debugOnlyReactDelegateHandlerModules = debugOnlyModules.filter(\n    (module) => !!module.reactDelegateHandlers.length\n  );\n\n  return `/**\n * Automatically generated by expo-modules-autolinking.\n *\n * This autogenerated class provides a list of classes of native Expo modules,\n * but only these that are written in Swift and use the new API for creating Expo modules.\n */\n\nimport ExpoModulesCore\n${generateCommonImportList(swiftModules)}\n${generateDebugOnlyImportList(debugOnlySwiftModules)}\n@objc(${className})\npublic class ${className}: ModulesProvider {\n  public override func getModuleClasses() -> [AnyModule.Type] {\n${generateModuleClasses(modulesClassNames, debugOnlyModulesClassNames)}\n  }\n\n  public override func getAppDelegateSubscribers() -> [ExpoAppDelegateSubscriber.Type] {\n${generateModuleClasses(appDelegateSubscribers, debugOnlyAppDelegateSubscribers)}\n  }\n\n  public override func getReactDelegateHandlers() -> [ExpoReactDelegateHandlerTupleType] {\n${generateReactDelegateHandlers(reactDelegateHandlerModules, debugOnlyReactDelegateHandlerModules)}\n  }\n}\n`;\n}\n\nfunction generateCommonImportList(swiftModules: string[]): string {\n  return swiftModules.map((moduleName) => `import ${moduleName}`).join('\\n');\n}\n\nfunction generateDebugOnlyImportList(swiftModules: string[]): string {\n  if (!swiftModules.length) {\n    return '';\n  }\n\n  return (\n    wrapInDebugConfigurationCheck(\n      0,\n      swiftModules.map((moduleName) => `import ${moduleName}`).join('\\n')\n    ) + '\\n'\n  );\n}\n\nfunction generateModuleClasses(classNames: string[], debugOnlyClassName: string[]): string {\n  const commonClassNames = formatArrayOfClassNames(classNames);\n  if (debugOnlyClassName.length > 0) {\n    return wrapInDebugConfigurationCheck(\n      2,\n      `return ${formatArrayOfClassNames(classNames.concat(debugOnlyClassName))}`,\n      `return ${commonClassNames}`\n    );\n  } else {\n    return `${indent.repeat(2)}return ${commonClassNames}`;\n  }\n}\n\n/**\n * Formats an array of class names to Swift's array containing these classes.\n */\nfunction formatArrayOfClassNames(classNames: string[]): string {\n  return `[${classNames.map((className) => `\\n${indent.repeat(3)}${className}.self`).join(',')}\n${indent.repeat(2)}]`;\n}\n\nfunction generateReactDelegateHandlers(\n  module: ModuleDescriptorIos[],\n  debugOnlyModules: ModuleDescriptorIos[]\n): string {\n  const commonModules = formatArrayOfReactDelegateHandler(module);\n  if (debugOnlyModules.length > 0) {\n    return wrapInDebugConfigurationCheck(\n      2,\n      `return ${formatArrayOfReactDelegateHandler(module.concat(debugOnlyModules))}`,\n      `return ${commonModules}`\n    );\n  } else {\n    return `${indent.repeat(2)}return ${commonModules}`;\n  }\n}\n\n/**\n * Formats an array of modules to Swift's array containing ReactDelegateHandlers\n */\nexport function formatArrayOfReactDelegateHandler(modules: ModuleDescriptorIos[]): string {\n  const values: string[] = [];\n  for (const module of modules) {\n    for (const handler of module.reactDelegateHandlers) {\n      values.push(`(packageName: \"${module.packageName}\", handler: ${handler}.self)`);\n    }\n  }\n  return `[${values.map((value) => `\\n${indent.repeat(3)}${value}`).join(',')}\n${indent.repeat(2)}]`;\n}\n\nfunction wrapInDebugConfigurationCheck(\n  indentationLevel: number,\n  debugBlock: string,\n  releaseBlock: string | null = null\n) {\n  if (releaseBlock) {\n    return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(\n      indentationLevel\n    )}${debugBlock}\\n${indent.repeat(indentationLevel)}#else\\n${indent.repeat(\n      indentationLevel\n    )}${releaseBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n  }\n\n  return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(\n    indentationLevel\n  )}${debugBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}