{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.link = link;\nexports.learnMore = learnMore;\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _terminalLink = _interopRequireDefault(require(\"terminal-link\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction link(url) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$text = _ref.text,\n    text = _ref$text === void 0 ? url : _ref$text,\n    _ref$dim = _ref.dim,\n    dim = _ref$dim === void 0 ? true : _ref$dim;\n  var output;\n  if (_terminalLink.default.isSupported) {\n    output = (0, _terminalLink).default(text, url);\n  } else {\n    output = `${text === url ? \"\" : text + \": \"}${_chalk.default.underline(url)}`;\n  }\n  return dim ? _chalk.default.dim(output) : output;\n}\nfunction learnMore(url) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    maybeLearnMoreMessage = _ref2.learnMoreMessage,\n    _ref2$dim = _ref2.dim,\n    dim = _ref2$dim === void 0 ? true : _ref2$dim;\n  return link(url, {\n    text: maybeLearnMoreMessage != null ? maybeLearnMoreMessage : \"Learn more\",\n    dim: dim\n  });\n}","map":{"version":3,"names":["link","learnMore","_chalk","_interopRequireDefault","require","_terminalLink","url","_ref","arguments","length","undefined","_ref$text","text","_ref$dim","dim","output","default","isSupported","underline","_ref2","maybeLearnMoreMessage","learnMoreMessage","_ref2$dim"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\link.ts"],"sourcesContent":["import chalk from 'chalk';\nimport terminalLink from 'terminal-link';\n\n/**\n * Prints a link for given URL, using text if provided, otherwise text is just the URL.\n * Format links as dim (unless disabled) and with an underline.\n *\n * @example https://expo.dev\n */\nexport function link(\n  url: string,\n  { text = url, dim = true }: { text?: string; dim?: boolean } = {}\n): string {\n  let output: string;\n  // Links can be disabled via env variables https://github.com/jamestalmage/supports-hyperlinks/blob/master/index.js\n  if (terminalLink.isSupported) {\n    output = terminalLink(text, url);\n  } else {\n    output = `${text === url ? '' : text + ': '}${chalk.underline(url)}`;\n  }\n  return dim ? chalk.dim(output) : output;\n}\n\n/**\n * Provide a consistent \"Learn more\" link experience.\n * Format links as dim (unless disabled) with an underline.\n *\n * @example [Learn more](https://expo.dev)\n * @example Learn more: https://expo.dev\n */\nexport function learnMore(\n  url: string,\n  {\n    learnMoreMessage: maybeLearnMoreMessage,\n    dim = true,\n  }: { learnMoreMessage?: string; dim?: boolean } = {}\n): string {\n  return link(url, { text: maybeLearnMoreMessage ?? 'Learn more', dim });\n}\n"],"mappings":"AAAA;;;;;QASgBA,IAAI,GAAJA,IAAI;QAqBJC,SAAS,GAATA,SAAS;AA9BP,IAAAC,MAAO,GAAAC,sBAAA,CAAAC,OAAA,CAAP,OAAO;AACA,IAAAC,aAAe,GAAAF,sBAAA,CAAAC,OAAA,CAAf,eAAe;;;;;;AAQjC,SAASJ,IAAIA,CAClBM,GAAW,EAEH;EAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MADuD,EAAE;IAAAG,SAAA,GAAAJ,IAAA,CAA/DK,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAGL,GAAG,GAAAK,SAAA;IAAAE,QAAA,GAAAN,IAAA,CAAEO,GAAG;IAAHA,GAAG,GAAAD,QAAA,cAAG,IAAI,GAAAA,QAAA;EAExB,IAAIE,MAAM;EAEV,IAAIV,aAAY,CAAAW,OAAA,CAACC,WAAW,EAAE;IAC5BF,MAAM,GAAG,IAAAV,aAAY,EAAWW,OAAX,CAACJ,IAAI,EAAEN,GAAG,CAAC;GACjC,MAAM;IACLS,MAAM,GAAI,GAAEH,IAAI,KAAKN,GAAG,GAAG,EAAE,GAAGM,IAAI,GAAG,IAAK,GAAEV,MAAK,CAAAc,OAAA,CAACE,SAAS,CAACZ,GAAG,CAAE,EAAC;;EAEtE,OAAOQ,GAAG,GAAGZ,MAAK,CAAAc,OAAA,CAACF,GAAG,CAACC,MAAM,CAAC,GAAGA,MAAM;;AAUlC,SAASd,SAASA,CACvBK,GAAW,EAKH;EAAA,IAAAa,KAAA,GAAAX,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAD0C,EAAE;IAFhCY,qBAAqB,GAAAD,KAAA,CAAvCE,gBAAgB;IAAAC,SAAA,GAAAH,KAAA,CAChBL,GAAG;IAAHA,GAAG,GAAAQ,SAAA,cAAG,IAAI,GAAAA,SAAA;EAGZ,OAAOtB,IAAI,CAACM,GAAG,EAAE;IAAEM,IAAI,EAAEQ,qBAAqB,WAArBA,qBAAqB,GAAI,YAAY;IAAEN,GAAG,EAAHA;GAAK,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}