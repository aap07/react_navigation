{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _cliPlatformIos() {\n  var data = require(\"@react-native-community/cli-platform-ios\");\n  _cliPlatformIos = function _cliPlatformIos() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _util() {\n  var data = require(\"util\");\n  _util = function _util() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar xcodeEnvFile = '.xcode.env';\nvar pathSeparator = '/';\nfunction removeLastPathComponent(pathString) {\n  return _path().default.dirname(pathString);\n}\nfunction pathHasXcodeEnvFile(pathString) {\n  var xcodeEnvPath = pathString + pathSeparator + xcodeEnvFile;\n  return _fs().default.existsSync(xcodeEnvPath);\n}\nfunction pathDoesNotHaveXcodeEnvFile(pathString) {\n  return !pathHasXcodeEnvFile(pathString);\n}\nvar _default = {\n  label: '.xcode.env',\n  description: 'File to customize Xcode environment',\n  getDiagnostics: function () {\n    var _getDiagnostics = _asyncToGenerator(function* (_, config) {\n      try {\n        var _ref;\n        var projectRoot = (_ref = config === null || config === void 0 ? void 0 : config.root) != null ? _ref : (0, _cliTools().findProjectRoot)();\n        var missingXcodeEnvFile = (0, _cliPlatformIos().findPodfilePaths)(projectRoot).some(function (p) {\n          var basePath = _path().default.dirname(p);\n          return !pathHasXcodeEnvFile(basePath);\n        });\n        return {\n          needsToBeFixed: missingXcodeEnvFile\n        };\n      } catch (e) {\n        return {\n          needsToBeFixed: e.message\n        };\n      }\n    });\n    function getDiagnostics(_x, _x2) {\n      return _getDiagnostics.apply(this, arguments);\n    }\n    return getDiagnostics;\n  }(),\n  runAutomaticFix: function () {\n    var _runAutomaticFix = _asyncToGenerator(function* (_ref2) {\n      var loader = _ref2.loader,\n        config = _ref2.config;\n      try {\n        var _ref3;\n        loader.stop();\n        var templateXcodeEnv = '_xcode.env';\n        var projectRoot = (_ref3 = config === null || config === void 0 ? void 0 : config.root) != null ? _ref3 : (0, _cliTools().findProjectRoot)();\n        var templateIosPath = (0, _cliTools().resolveNodeModuleDir)(projectRoot, 'react-native/template/ios');\n        var src = templateIosPath + pathSeparator + templateXcodeEnv;\n        var copyFileAsync = (0, _util().promisify)(_fs().default.copyFile);\n        (0, _cliPlatformIos().findPodfilePaths)(projectRoot).map(removeLastPathComponent).filter(pathDoesNotHaveXcodeEnvFile).forEach(function () {\n          var _ref4 = _asyncToGenerator(function* (pathString) {\n            var destFilePath = pathString + pathSeparator + xcodeEnvFile;\n            yield copyFileAsync(src, destFilePath);\n          });\n          return function (_x4) {\n            return _ref4.apply(this, arguments);\n          };\n        }());\n        loader.succeed('.xcode.env file have been created!');\n      } catch (e) {\n        loader.fail(e);\n      }\n    });\n    function runAutomaticFix(_x3) {\n      return _runAutomaticFix.apply(this, arguments);\n    }\n    return runAutomaticFix;\n  }()\n};\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_cliPlatformIos","data","_cliTools","_fs","_interopRequireDefault","_path","_util","obj","__esModule","xcodeEnvFile","pathSeparator","removeLastPathComponent","pathString","dirname","pathHasXcodeEnvFile","xcodeEnvPath","existsSync","pathDoesNotHaveXcodeEnvFile","_default","label","description","getDiagnostics","_getDiagnostics","_","config","_ref","projectRoot","root","findProjectRoot","missingXcodeEnvFile","findPodfilePaths","some","p","basePath","needsToBeFixed","e","message","_x","_x2","apply","arguments","runAutomaticFix","_runAutomaticFix","_ref2","loader","_ref3","stop","templateXcodeEnv","templateIosPath","resolveNodeModuleDir","src","copyFileAsync","promisify","copyFile","map","filter","forEach","_ref4","destFilePath","_x4","succeed","fail","_x3"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/healthchecks/xcodeEnv.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _cliPlatformIos() {\n  const data = require(\"@react-native-community/cli-platform-ios\");\n  _cliPlatformIos = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fs() {\n  const data = _interopRequireDefault(require(\"fs\"));\n  _fs = function () {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _util() {\n  const data = require(\"util\");\n  _util = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst xcodeEnvFile = '.xcode.env';\nconst pathSeparator = '/';\nfunction removeLastPathComponent(pathString) {\n  return _path().default.dirname(pathString);\n}\nfunction pathHasXcodeEnvFile(pathString) {\n  const xcodeEnvPath = pathString + pathSeparator + xcodeEnvFile;\n  return _fs().default.existsSync(xcodeEnvPath);\n}\nfunction pathDoesNotHaveXcodeEnvFile(pathString) {\n  return !pathHasXcodeEnvFile(pathString);\n}\nvar _default = {\n  label: '.xcode.env',\n  description: 'File to customize Xcode environment',\n  getDiagnostics: async (_, config) => {\n    try {\n      const projectRoot = (config === null || config === void 0 ? void 0 : config.root) ?? (0, _cliTools().findProjectRoot)();\n      const missingXcodeEnvFile = (0, _cliPlatformIos().findPodfilePaths)(projectRoot).some(p => {\n        const basePath = _path().default.dirname(p);\n        return !pathHasXcodeEnvFile(basePath);\n      });\n      return {\n        needsToBeFixed: missingXcodeEnvFile\n      };\n    } catch (e) {\n      return {\n        needsToBeFixed: e.message\n      };\n    }\n  },\n  runAutomaticFix: async ({\n    loader,\n    config\n  }) => {\n    try {\n      loader.stop();\n      const templateXcodeEnv = '_xcode.env';\n      const projectRoot = (config === null || config === void 0 ? void 0 : config.root) ?? (0, _cliTools().findProjectRoot)();\n      const templateIosPath = (0, _cliTools().resolveNodeModuleDir)(projectRoot, 'react-native/template/ios');\n      const src = templateIosPath + pathSeparator + templateXcodeEnv;\n      const copyFileAsync = (0, _util().promisify)(_fs().default.copyFile);\n      (0, _cliPlatformIos().findPodfilePaths)(projectRoot).map(removeLastPathComponent)\n      // avoid overriding existing .xcode.env\n      .filter(pathDoesNotHaveXcodeEnvFile).forEach(async pathString => {\n        const destFilePath = pathString + pathSeparator + xcodeEnvFile;\n        await copyFileAsync(src, destFilePath);\n      });\n      loader.succeed('.xcode.env file have been created!');\n    } catch (e) {\n      loader.fail(e);\n    }\n  }\n};\nexports.default = _default;\n\n//# sourceMappingURL=xcodeEnv.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}