{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetInternalStateForTesting = resetInternalStateForTesting;\nexports.getRudderAnalyticsClient = getRudderAnalyticsClient;\nexports.setUserDataAsync = setUserDataAsync;\nexports.logEventAsync = logEventAsync;\nexports.getContext = getContext;\nvar _rudderSdkNode = _interopRequireDefault(require(\"@expo/rudder-sdk-node\"));\nvar ciInfo = _interopRequireWildcard(require(\"ci-info\"));\nvar _os = _interopRequireDefault(require(\"os\"));\nvar _userSettings = _interopRequireDefault(require(\"../../api/user/UserSettings\"));\nvar _user = require(\"../../api/user/user\");\nvar _env = require(\"../env\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nvar PLATFORM_TO_ANALYTICS_PLATFORM = {\n  darwin: \"Mac\",\n  win32: \"Windows\",\n  linux: \"Linux\"\n};\nvar client = null;\nvar identified = false;\nvar identifyData = null;\nfunction resetInternalStateForTesting() {\n  identified = false;\n  identifyData = null;\n  client = null;\n}\nfunction getRudderAnalyticsClient() {\n  if (client) {\n    return client;\n  }\n  client = new _rudderSdkNode.default(_env.env.EXPO_STAGING || _env.env.EXPO_LOCAL ? \"24TKICqYKilXM480mA7ktgVDdea\" : \"24TKR7CQAaGgIrLTgu3Fp4OdOkI\", \"https://cdp.expo.dev/v1/batch\", {\n    flushInterval: 300\n  });\n  process.on(\"SIGINT\", function () {\n    return client == null ? void 0 : client.flush == null ? void 0 : client.flush();\n  });\n  process.on(\"SIGTERM\", function () {\n    return client == null ? void 0 : client.flush == null ? void 0 : client.flush();\n  });\n  return client;\n}\nfunction setUserDataAsync(_x, _x2) {\n  return _setUserDataAsync.apply(this, arguments);\n}\nfunction _setUserDataAsync() {\n  _setUserDataAsync = _asyncToGenerator(function* (userId, traits) {\n    if (_env.env.EXPO_NO_TELEMETRY) {\n      return;\n    }\n    var deviceId = yield _userSettings.default.getAnonymousIdentifierAsync();\n    identifyData = {\n      userId: userId,\n      deviceId: deviceId,\n      traits: traits\n    };\n    identifyIfNotYetIdentified();\n  });\n  return _setUserDataAsync.apply(this, arguments);\n}\nfunction logEventAsync(_x3) {\n  return _logEventAsync.apply(this, arguments);\n}\nfunction _logEventAsync() {\n  _logEventAsync = _asyncToGenerator(function* (event) {\n    var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (_env.env.EXPO_NO_TELEMETRY) {\n      return;\n    }\n    try {\n      yield (0, _user).getUserAsync();\n    } catch (_unused) {}\n    identifyIfNotYetIdentified();\n    if (!identifyData) {\n      return;\n    }\n    var _identifyData = identifyData,\n      userId = _identifyData.userId,\n      deviceId = _identifyData.deviceId;\n    var commonEventProperties = {\n      source_version: \"0.10.13\",\n      source: \"expo\"\n    };\n    var identity = {\n      userId: userId,\n      anonymousId: deviceId\n    };\n    getRudderAnalyticsClient().track(_objectSpread(_objectSpread({\n      event: event,\n      properties: _objectSpread(_objectSpread({}, properties), commonEventProperties)\n    }, identity), {}, {\n      context: getContext()\n    }));\n  });\n  return _logEventAsync.apply(this, arguments);\n}\nfunction identifyIfNotYetIdentified() {\n  if (_env.env.EXPO_NO_TELEMETRY || identified || !identifyData) {\n    return;\n  }\n  getRudderAnalyticsClient().identify({\n    userId: identifyData.userId,\n    anonymousId: identifyData.deviceId,\n    traits: identifyData.traits\n  });\n  identified = true;\n}\nfunction getContext() {\n  var platform = PLATFORM_TO_ANALYTICS_PLATFORM[_os.default.platform()] || _os.default.platform();\n  return {\n    os: {\n      name: platform,\n      version: _os.default.release()\n    },\n    device: {\n      type: platform,\n      model: platform\n    },\n    app: {\n      name: \"expo\",\n      version: \"0.10.13\"\n    },\n    ci: ciInfo.isCI ? {\n      name: ciInfo.name,\n      isPr: ciInfo.isPR\n    } : undefined\n  };\n}","map":{"version":3,"names":["_defineProperty","require","_asyncToGenerator","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","resetInternalStateForTesting","getRudderAnalyticsClient","setUserDataAsync","logEventAsync","getContext","_rudderSdkNode","_interopRequireDefault","ciInfo","_interopRequireWildcard","_os","_userSettings","_user","_env","PLATFORM_TO_ANALYTICS_PLATFORM","darwin","win32","linux","client","identified","identifyData","default","env","EXPO_STAGING","EXPO_LOCAL","flushInterval","process","on","flush","_x","_x2","_setUserDataAsync","userId","traits","EXPO_NO_TELEMETRY","deviceId","getAnonymousIdentifierAsync","identifyIfNotYetIdentified","_x3","_logEventAsync","event","properties","undefined","getUserAsync","_unused","_identifyData","commonEventProperties","source_version","source","identity","anonymousId","track","context","identify","platform","os","name","version","release","device","type","model","app","ci","isCI","isPr","isPR"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\analytics\\rudderstackClient.ts"],"sourcesContent":["import RudderAnalytics from '@expo/rudder-sdk-node';\nimport * as ciInfo from 'ci-info';\nimport os from 'os';\n\nimport UserSettings from '../../api/user/UserSettings';\nimport { getUserAsync } from '../../api/user/user';\nimport { env } from '../env';\n\nconst PLATFORM_TO_ANALYTICS_PLATFORM: { [platform: string]: string } = {\n  darwin: 'Mac',\n  win32: 'Windows',\n  linux: 'Linux',\n};\n\nlet client: RudderAnalytics | null = null;\nlet identified = false;\nlet identifyData: {\n  userId: string;\n  deviceId: string;\n  traits: Record<string, any>;\n} | null = null;\n\nexport function resetInternalStateForTesting() {\n  identified = false;\n  identifyData = null;\n  client = null;\n}\n\nexport function getRudderAnalyticsClient(): RudderAnalytics {\n  if (client) {\n    return client;\n  }\n\n  client = new RudderAnalytics(\n    env.EXPO_STAGING || env.EXPO_LOCAL\n      ? '24TKICqYKilXM480mA7ktgVDdea'\n      : '24TKR7CQAaGgIrLTgu3Fp4OdOkI', // expo unified\n    'https://cdp.expo.dev/v1/batch',\n    {\n      flushInterval: 300,\n    }\n  );\n\n  // Install flush on exit...\n  process.on('SIGINT', () => client?.flush?.());\n  process.on('SIGTERM', () => client?.flush?.());\n\n  return client;\n}\n\nexport async function setUserDataAsync(userId: string, traits: Record<string, any>): Promise<void> {\n  if (env.EXPO_NO_TELEMETRY) {\n    return;\n  }\n\n  const deviceId = await UserSettings.getAnonymousIdentifierAsync();\n\n  identifyData = {\n    userId,\n    deviceId,\n    traits,\n  };\n\n  identifyIfNotYetIdentified();\n}\n\ntype Event =\n  | 'action'\n  | 'Open Url on Device'\n  | 'Start Project'\n  | 'Serve Manifest'\n  | 'Serve Expo Updates Manifest'\n  | 'dev client start command'\n  | 'dev client run command'\n  | 'metro config'\n  | 'metro debug';\n\n/**\n * Log an event, ensuring the user is identified before logging the event.\n **/\nexport async function logEventAsync(\n  event: Event,\n  properties: Record<string, any> = {}\n): Promise<void> {\n  if (env.EXPO_NO_TELEMETRY) {\n    return;\n  }\n\n  // this has the side effect of calling `setUserData` which fetches the user and populates identifyData\n  try {\n    await getUserAsync();\n  } catch {}\n\n  identifyIfNotYetIdentified();\n\n  if (!identifyData) {\n    return;\n  }\n  const { userId, deviceId } = identifyData;\n  const commonEventProperties = { source_version: process.env.__EXPO_VERSION, source: 'expo' };\n\n  const identity = { userId, anonymousId: deviceId };\n  getRudderAnalyticsClient().track({\n    event,\n    properties: { ...properties, ...commonEventProperties },\n    ...identity,\n    context: getContext(),\n  });\n}\n\nfunction identifyIfNotYetIdentified(): void {\n  if (env.EXPO_NO_TELEMETRY || identified || !identifyData) {\n    return;\n  }\n\n  getRudderAnalyticsClient().identify({\n    userId: identifyData.userId,\n    anonymousId: identifyData.deviceId,\n    traits: identifyData.traits,\n  });\n  identified = true;\n}\n\n/** Exposed for testing only */\nexport function getContext(): Record<string, any> {\n  const platform = PLATFORM_TO_ANALYTICS_PLATFORM[os.platform()] || os.platform();\n  return {\n    os: { name: platform, version: os.release() },\n    device: { type: platform, model: platform },\n    app: { name: 'expo', version: process.env.__EXPO_VERSION },\n    ci: ciInfo.isCI ? { name: ciInfo.name, isPr: ciInfo.isPR } : undefined,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}