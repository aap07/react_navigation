{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _path() {\n  var data = require(\"path\");\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nvar _downloadAndUnzip = require(\"../downloadAndUnzip\");\nvar _executeWinCommand = require(\"../windows/executeWinCommand\");\nvar _androidWinHelpers = require(\"../windows/androidWinHelpers\");\nvar _createShortcut = require(\"../windows/create-shortcut\");\nvar _default = {\n  label: 'Android Studio',\n  description: 'Required for building and installing your app on Android',\n  getDiagnostics: function () {\n    var _getDiagnostics = _asyncToGenerator(function* (_ref) {\n      var IDEs = _ref.IDEs;\n      var needsToBeFixed = IDEs['Android Studio'] === 'Not Found';\n      var missing = {\n        needsToBeFixed: needsToBeFixed,\n        version: IDEs['Android Studio']\n      };\n      if (needsToBeFixed && process.platform === 'win32') {\n        var androidStudioPath = (0, _path().join)((0, _androidWinHelpers.getUserAndroidPath)(), 'android-studio', 'bin', 'studio.exe').replace(/\\\\/g, '\\\\\\\\');\n        var _yield = yield (0, _executeWinCommand.executeCommand)(`wmic datafile where name=\"${androidStudioPath}\" get Version`),\n          stdout = _yield.stdout;\n        var version = stdout.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n        if (version === '') {\n          return missing;\n        }\n        return {\n          needsToBeFixed: false,\n          version: version\n        };\n      }\n      return missing;\n    });\n    function getDiagnostics(_x) {\n      return _getDiagnostics.apply(this, arguments);\n    }\n    return getDiagnostics;\n  }(),\n  win32AutomaticFix: function () {\n    var _win32AutomaticFix = _asyncToGenerator(function* (_ref2) {\n      var loader = _ref2.loader;\n      var androidStudioUrl = 'https://redirector.gvt1.com/edgedl/android/studio/ide-zips/3.6.3.0/android-studio-ide-192.6392135-windows.zip';\n      var installPath = (0, _androidWinHelpers.getUserAndroidPath)();\n      yield (0, _downloadAndUnzip.downloadAndUnzip)({\n        loader: loader,\n        downloadUrl: androidStudioUrl,\n        component: 'Android Studio',\n        installPath: installPath\n      });\n      var prefix = process.arch === 'x64' ? '64' : '';\n      var binFolder = (0, _path().join)(installPath, 'android-studio', 'bin');\n      yield (0, _createShortcut.createShortcut)({\n        path: (0, _path().join)(binFolder, `studio${prefix}.exe`),\n        name: 'Android Studio',\n        ico: (0, _path().join)(binFolder, 'studio.ico')\n      });\n      loader.succeed(`Android Studio installed successfully in \"${installPath}\".`);\n    });\n    function win32AutomaticFix(_x2) {\n      return _win32AutomaticFix.apply(this, arguments);\n    }\n    return win32AutomaticFix;\n  }(),\n  runAutomaticFix: function () {\n    var _runAutomaticFix = _asyncToGenerator(function* (_ref3) {\n      var loader = _ref3.loader,\n        logManualInstallation = _ref3.logManualInstallation;\n      loader.fail();\n      return logManualInstallation({\n        healthcheck: 'Android Studio',\n        url: _cliTools().link.docs('environment-setup', {\n          hash: 'android-studio',\n          guide: 'native',\n          platform: 'android'\n        })\n      });\n    });\n    function runAutomaticFix(_x3) {\n      return _runAutomaticFix.apply(this, arguments);\n    }\n    return runAutomaticFix;\n  }()\n};\nexports.default = _default;","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","default","_path","data","_cliTools","_downloadAndUnzip","_executeWinCommand","_androidWinHelpers","_createShortcut","_default","label","description","getDiagnostics","_getDiagnostics","_ref","IDEs","needsToBeFixed","missing","version","process","platform","androidStudioPath","join","getUserAndroidPath","replace","_yield","executeCommand","stdout","trim","_x","apply","arguments","win32AutomaticFix","_win32AutomaticFix","_ref2","loader","androidStudioUrl","installPath","downloadAndUnzip","downloadUrl","component","prefix","arch","binFolder","createShortcut","path","name","ico","succeed","_x2","runAutomaticFix","_runAutomaticFix","_ref3","logManualInstallation","fail","healthcheck","url","link","docs","hash","guide","_x3"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-doctor/build/tools/healthchecks/androidStudio.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nfunction _path() {\n  const data = require(\"path\");\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nvar _downloadAndUnzip = require(\"../downloadAndUnzip\");\nvar _executeWinCommand = require(\"../windows/executeWinCommand\");\nvar _androidWinHelpers = require(\"../windows/androidWinHelpers\");\nvar _createShortcut = require(\"../windows/create-shortcut\");\nvar _default = {\n  label: 'Android Studio',\n  description: 'Required for building and installing your app on Android',\n  getDiagnostics: async ({\n    IDEs\n  }) => {\n    const needsToBeFixed = IDEs['Android Studio'] === 'Not Found';\n    const missing = {\n      needsToBeFixed,\n      version: IDEs['Android Studio']\n    };\n\n    // On Windows `doctor` installs Android Studio locally in a well-known place\n    if (needsToBeFixed && process.platform === 'win32') {\n      const androidStudioPath = (0, _path().join)((0, _androidWinHelpers.getUserAndroidPath)(), 'android-studio', 'bin', 'studio.exe').replace(/\\\\/g, '\\\\\\\\');\n      const {\n        stdout\n      } = await (0, _executeWinCommand.executeCommand)(`wmic datafile where name=\"${androidStudioPath}\" get Version`);\n      const version = stdout.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n      if (version === '') {\n        return missing;\n      }\n      return {\n        needsToBeFixed: false,\n        version\n      };\n    }\n    return missing;\n  },\n  win32AutomaticFix: async ({\n    loader\n  }) => {\n    // Need a GitHub action to update automatically. See #1180\n    const androidStudioUrl = 'https://redirector.gvt1.com/edgedl/android/studio/ide-zips/3.6.3.0/android-studio-ide-192.6392135-windows.zip';\n    const installPath = (0, _androidWinHelpers.getUserAndroidPath)();\n    await (0, _downloadAndUnzip.downloadAndUnzip)({\n      loader,\n      downloadUrl: androidStudioUrl,\n      component: 'Android Studio',\n      installPath: installPath\n    });\n    const prefix = process.arch === 'x64' ? '64' : '';\n    const binFolder = (0, _path().join)(installPath, 'android-studio', 'bin');\n    await (0, _createShortcut.createShortcut)({\n      path: (0, _path().join)(binFolder, `studio${prefix}.exe`),\n      name: 'Android Studio',\n      ico: (0, _path().join)(binFolder, 'studio.ico')\n    });\n    loader.succeed(`Android Studio installed successfully in \"${installPath}\".`);\n  },\n  runAutomaticFix: async ({\n    loader,\n    logManualInstallation\n  }) => {\n    loader.fail();\n    return logManualInstallation({\n      healthcheck: 'Android Studio',\n      url: _cliTools().link.docs('environment-setup', {\n        hash: 'android-studio',\n        guide: 'native',\n        platform: 'android'\n      })\n    });\n  }\n};\nexports.default = _default;\n\n//# sourceMappingURL=androidStudio.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}