{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureSlash = ensureSlash;\nexports.getEntryPoint = getEntryPoint;\nexports.getEntryPointWithExtensions = getEntryPointWithExtensions;\nexports.getFileWithExtensions = getFileWithExtensions;\nexports.getPossibleProjectRoot = getPossibleProjectRoot;\nexports.resolveEntryPoint = resolveEntryPoint;\nexports.resolveFromSilentWithExtensions = resolveFromSilentWithExtensions;\nfunction _fs() {\n  var data = _interopRequireDefault(require(\"fs\"));\n  _fs = function _fs() {\n    return data;\n  };\n  return data;\n}\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _resolveFrom() {\n  var data = _interopRequireDefault(require(\"resolve-from\"));\n  _resolveFrom = function _resolveFrom() {\n    return data;\n  };\n  return data;\n}\nfunction _Config() {\n  var data = require(\"../Config\");\n  _Config = function _Config() {\n    return data;\n  };\n  return data;\n}\nfunction _extensions() {\n  var data = require(\"./extensions\");\n  _extensions = function _extensions() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction ensureSlash(inputPath, needsSlash) {\n  var hasSlash = inputPath.endsWith('/');\n  if (hasSlash && !needsSlash) {\n    return inputPath.substr(0, inputPath.length - 1);\n  } else if (!hasSlash && needsSlash) {\n    return `${inputPath}/`;\n  } else {\n    return inputPath;\n  }\n}\nfunction getPossibleProjectRoot() {\n  return _fs().default.realpathSync(process.cwd());\n}\nvar nativePlatforms = ['ios', 'android'];\nfunction resolveEntryPoint(projectRoot, _ref) {\n  var platform = _ref.platform,\n    projectConfig = _ref.projectConfig;\n  var platforms = nativePlatforms.includes(platform) ? [platform, 'native'] : [platform];\n  return getEntryPoint(projectRoot, ['./index'], platforms, projectConfig);\n}\nfunction getEntryPoint(projectRoot, entryFiles, platforms, projectConfig) {\n  var extensions = (0, _extensions().getBareExtensions)(platforms);\n  return getEntryPointWithExtensions(projectRoot, entryFiles, extensions, projectConfig);\n}\nfunction getEntryPointWithExtensions(projectRoot, entryFiles, extensions, projectConfig) {\n  if (!projectConfig) {\n    var original = process.stdout.write;\n    process.stdout.write = function () {\n      return true;\n    };\n    try {\n      projectConfig = (0, _Config().getConfig)(projectRoot, {\n        skipSDKVersionRequirement: true\n      });\n    } finally {\n      process.stdout.write = original;\n    }\n  }\n  var _projectConfig = projectConfig,\n    pkg = _projectConfig.pkg;\n  if (pkg) {\n    var main = pkg.main;\n    if (main && typeof main === 'string') {\n      var entry = getFileWithExtensions(projectRoot, main, extensions);\n      if (!entry) {\n        entry = resolveFromSilentWithExtensions(projectRoot, main, extensions);\n        if (!entry) throw new Error(`Cannot resolve entry file: The \\`main\\` field defined in your \\`package.json\\` points to a non-existent path.`);\n      }\n      return entry;\n    }\n  }\n  for (var fileName of entryFiles) {\n    var _entry = resolveFromSilentWithExtensions(projectRoot, fileName, extensions);\n    if (_entry) return _entry;\n  }\n  try {\n    return (0, _resolveFrom().default)(projectRoot, 'expo/AppEntry');\n  } catch (_unused) {\n    throw new Error(`The project entry file could not be resolved. Please define it in the \\`main\\` field of the \\`package.json\\`, create an \\`index.js\\`, or install the \\`expo\\` package.`);\n  }\n}\nfunction resolveFromSilentWithExtensions(fromDirectory, moduleId, extensions) {\n  for (var extension of extensions) {\n    var modulePath = _resolveFrom().default.silent(fromDirectory, `${moduleId}.${extension}`);\n    if (modulePath && modulePath.endsWith(extension)) {\n      return modulePath;\n    }\n  }\n  return _resolveFrom().default.silent(fromDirectory, moduleId) || null;\n}\nfunction getFileWithExtensions(fromDirectory, moduleId, extensions) {\n  var modulePath = _path().default.join(fromDirectory, moduleId);\n  if (_fs().default.existsSync(modulePath)) {\n    return modulePath;\n  }\n  for (var extension of extensions) {\n    var _modulePath = _path().default.join(fromDirectory, `${moduleId}.${extension}`);\n    if (_fs().default.existsSync(_modulePath)) {\n      return _modulePath;\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["_fs","data","_interopRequireDefault","require","_path","_resolveFrom","_Config","_extensions","obj","__esModule","default","ensureSlash","inputPath","needsSlash","hasSlash","endsWith","substr","length","getPossibleProjectRoot","realpathSync","process","cwd","nativePlatforms","resolveEntryPoint","projectRoot","_ref","platform","projectConfig","platforms","includes","getEntryPoint","entryFiles","extensions","getBareExtensions","getEntryPointWithExtensions","original","stdout","write","getConfig","skipSDKVersionRequirement","_projectConfig","pkg","main","entry","getFileWithExtensions","resolveFromSilentWithExtensions","Error","fileName","_unused","fromDirectory","moduleId","extension","modulePath","silent","join","existsSync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\config\\src\\paths\\paths.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { getConfig } from '../Config';\nimport { ProjectConfig } from '../Config.types';\nimport { getBareExtensions } from './extensions';\n\n// https://github.com/facebook/create-react-app/blob/9750738cce89a967cc71f28390daf5d4311b193c/packages/react-scripts/config/paths.js#L22\nexport function ensureSlash(inputPath: string, needsSlash: boolean): string {\n  const hasSlash = inputPath.endsWith('/');\n  if (hasSlash && !needsSlash) {\n    return inputPath.substr(0, inputPath.length - 1);\n  } else if (!hasSlash && needsSlash) {\n    return `${inputPath}/`;\n  } else {\n    return inputPath;\n  }\n}\n\nexport function getPossibleProjectRoot(): string {\n  return fs.realpathSync(process.cwd());\n}\n\nconst nativePlatforms = ['ios', 'android'];\n\nexport function resolveEntryPoint(\n  projectRoot: string,\n  { platform, projectConfig }: { platform: string; projectConfig?: Partial<ProjectConfig> }\n) {\n  const platforms = nativePlatforms.includes(platform) ? [platform, 'native'] : [platform];\n  return getEntryPoint(projectRoot, ['./index'], platforms, projectConfig);\n}\n\nexport function getEntryPoint(\n  projectRoot: string,\n  entryFiles: string[],\n  platforms: string[],\n  projectConfig?: Partial<ProjectConfig>\n): string | null {\n  const extensions = getBareExtensions(platforms);\n  return getEntryPointWithExtensions(projectRoot, entryFiles, extensions, projectConfig);\n}\n\n// Used to resolve the main entry file for a project.\nexport function getEntryPointWithExtensions(\n  projectRoot: string,\n  entryFiles: string[],\n  extensions: string[],\n  projectConfig?: Partial<ProjectConfig>\n): string {\n  if (!projectConfig) {\n    // drop all logging abilities\n    const original = process.stdout.write;\n    process.stdout.write = () => true;\n    try {\n      projectConfig = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n    } finally {\n      process.stdout.write = original;\n    }\n  }\n\n  const { pkg } = projectConfig;\n\n  if (pkg) {\n    // If the config doesn't define a custom entry then we want to look at the `package.json`s `main` field, and try again.\n    const { main } = pkg;\n    if (main && typeof main === 'string') {\n      // Testing the main field against all of the provided extensions - for legacy reasons we can't use node module resolution as the package.json allows you to pass in a file without a relative path and expect it as a relative path.\n      let entry = getFileWithExtensions(projectRoot, main, extensions);\n      if (!entry) {\n        // Allow for paths like: `{ \"main\": \"expo/AppEntry\" }`\n        entry = resolveFromSilentWithExtensions(projectRoot, main, extensions);\n        if (!entry)\n          throw new Error(\n            `Cannot resolve entry file: The \\`main\\` field defined in your \\`package.json\\` points to a non-existent path.`\n          );\n      }\n      return entry;\n    }\n  }\n\n  // Now we will start looking for a default entry point using the provided `entryFiles` argument.\n  // This will add support for create-react-app (src/index.js) and react-native-cli (index.js) which don't define a main.\n  for (const fileName of entryFiles) {\n    const entry = resolveFromSilentWithExtensions(projectRoot, fileName, extensions);\n    if (entry) return entry;\n  }\n\n  try {\n    // If none of the default files exist then we will attempt to use the main Expo entry point.\n    // This requires `expo` to be installed in the project to work as it will use `node_module/expo/AppEntry.js`\n    // Doing this enables us to create a bare minimum Expo project.\n\n    // TODO(Bacon): We may want to do a check against `./App` and `expo` in the `package.json` `dependencies` as we can more accurately ensure that the project is expo-min without needing the modules installed.\n    return resolveFrom(projectRoot, 'expo/AppEntry');\n  } catch {\n    throw new Error(\n      `The project entry file could not be resolved. Please define it in the \\`main\\` field of the \\`package.json\\`, create an \\`index.js\\`, or install the \\`expo\\` package.`\n    );\n  }\n}\n\n// Resolve from but with the ability to resolve like a bundler\nexport function resolveFromSilentWithExtensions(\n  fromDirectory: string,\n  moduleId: string,\n  extensions: string[]\n): string | null {\n  for (const extension of extensions) {\n    const modulePath = resolveFrom.silent(fromDirectory, `${moduleId}.${extension}`);\n    if (modulePath && modulePath.endsWith(extension)) {\n      return modulePath;\n    }\n  }\n  return resolveFrom.silent(fromDirectory, moduleId) || null;\n}\n\n// Statically attempt to resolve a module but with the ability to resolve like a bundler.\n// This won't use node module resolution.\nexport function getFileWithExtensions(\n  fromDirectory: string,\n  moduleId: string,\n  extensions: string[]\n): string | null {\n  const modulePath = path.join(fromDirectory, moduleId);\n  if (fs.existsSync(modulePath)) {\n    return modulePath;\n  }\n  for (const extension of extensions) {\n    const modulePath = path.join(fromDirectory, `${moduleId}.${extension}`);\n    if (fs.existsSync(modulePath)) {\n      return modulePath;\n    }\n  }\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}