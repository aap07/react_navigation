{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/config-plugins/build/android/Updates.d.ts"],"sourcesContent":["import { ConfigPlugin } from '../Plugin.types';\nimport { ExpoConfigUpdates } from '../utils/Updates';\nimport { AndroidManifest } from './Manifest';\nimport { ResourceXML } from './Resources';\nexport declare enum Config {\n    ENABLED = \"expo.modules.updates.ENABLED\",\n    CHECK_ON_LAUNCH = \"expo.modules.updates.EXPO_UPDATES_CHECK_ON_LAUNCH\",\n    LAUNCH_WAIT_MS = \"expo.modules.updates.EXPO_UPDATES_LAUNCH_WAIT_MS\",\n    SDK_VERSION = \"expo.modules.updates.EXPO_SDK_VERSION\",\n    RUNTIME_VERSION = \"expo.modules.updates.EXPO_RUNTIME_VERSION\",\n    UPDATE_URL = \"expo.modules.updates.EXPO_UPDATE_URL\",\n    RELEASE_CHANNEL = \"expo.modules.updates.EXPO_RELEASE_CHANNEL\",\n    UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY = \"expo.modules.updates.UPDATES_CONFIGURATION_REQUEST_HEADERS_KEY\",\n    CODE_SIGNING_CERTIFICATE = \"expo.modules.updates.CODE_SIGNING_CERTIFICATE\",\n    CODE_SIGNING_METADATA = \"expo.modules.updates.CODE_SIGNING_METADATA\"\n}\nexport declare const withUpdates: ConfigPlugin<{\n    expoUsername: string | null;\n}>;\nexport declare function applyRuntimeVersionFromConfig(config: Pick<ExpoConfigUpdates, 'sdkVersion' | 'runtimeVersion'>, stringsJSON: ResourceXML): ResourceXML;\nexport declare function setUpdatesConfig(projectRoot: string, config: ExpoConfigUpdates, androidManifest: AndroidManifest, username: string | null, expoUpdatesPackageVersion?: string | null): AndroidManifest;\nexport declare function setVersionsConfig(config: Pick<ExpoConfigUpdates, 'sdkVersion' | 'runtimeVersion'>, androidManifest: AndroidManifest): AndroidManifest;\nexport declare function ensureBuildGradleContainsConfigurationScript(projectRoot: string, buildGradleContents: string): string;\nexport declare function formatApplyLineForBuildGradle(projectRoot: string): string;\nexport declare function isBuildGradleConfigured(projectRoot: string, buildGradleContents: string): boolean;\nexport declare function isMainApplicationMetaDataSet(androidManifest: AndroidManifest): boolean;\nexport declare function isMainApplicationMetaDataSynced(projectRoot: string, config: ExpoConfigUpdates, androidManifest: AndroidManifest, username: string | null): boolean;\nexport declare function areVersionsSynced(config: Pick<ExpoConfigUpdates, 'runtimeVersion' | 'sdkVersion'>, androidManifest: AndroidManifest): boolean;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}