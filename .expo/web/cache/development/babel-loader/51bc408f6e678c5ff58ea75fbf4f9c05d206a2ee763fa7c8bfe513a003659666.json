{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.docs = exports.contributing = exports.community = exports.blog = void 0;\nexports.getOS = getOS;\nexports.setPlatform = setPlatform;\nexports.setVersion = setVersion;\nexports.showcase = void 0;\nfunction _os() {\n  var data = _interopRequireDefault(require(\"os\"));\n  _os = function _os() {\n    return data;\n  };\n  return data;\n}\nfunction _assert() {\n  var data = _interopRequireDefault(require(\"assert\"));\n  _assert = function _assert() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction getOS() {\n  switch (_os().default.platform()) {\n    case 'aix':\n    case 'freebsd':\n    case 'linux':\n    case 'openbsd':\n    case 'sunos':\n      return 'linux';\n    case 'darwin':\n      return 'macos';\n    case 'win32':\n      return 'windows';\n    default:\n      return '';\n  }\n}\nvar _platform = 'android';\nvar _version;\nfunction doclink(section, path, hashOrOverrides) {\n  var url = new URL('https://reactnative.dev/');\n  var isObj = typeof hashOrOverrides === 'object';\n  var hash = isObj ? hashOrOverrides.hash : hashOrOverrides;\n  var version = isObj && hashOrOverrides.version ? hashOrOverrides.version : _version;\n  var OS = isObj && hashOrOverrides.os ? hashOrOverrides.os : getOS();\n  var platform = isObj && hashOrOverrides.platform ? hashOrOverrides.platform : _platform;\n  url.pathname = _version ? `${section}/${version}/${path}` : `${section}/${path}`;\n  url.searchParams.set('os', OS);\n  url.searchParams.set('platform', platform);\n  if (isObj) {\n    var otherKeys = Object.keys(hashOrOverrides).filter(function (key) {\n      return !['hash', 'version', 'os', 'platform'].includes(key);\n    });\n    for (var key of otherKeys) {\n      url.searchParams.set(key, hashOrOverrides[key]);\n    }\n  }\n  if (hash) {\n    _assert().default.doesNotMatch(hash, /#/, \"Anchor links should be written withou a '#'\");\n    url.hash = hash;\n  }\n  return url.toString();\n}\nvar docs = doclink.bind(null, 'docs');\nexports.docs = docs;\nvar contributing = doclink.bind(null, 'contributing');\nexports.contributing = contributing;\nvar community = doclink.bind(null, 'community');\nexports.community = community;\nvar showcase = doclink.bind(null, 'showcase');\nexports.showcase = showcase;\nvar blog = doclink.bind(null, 'blog');\nexports.blog = blog;\nfunction setPlatform(target) {\n  _platform = target;\n}\nfunction setVersion(reactNativeVersion) {\n  _version = reactNativeVersion;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","docs","contributing","community","blog","getOS","setPlatform","setVersion","showcase","_os","data","_interopRequireDefault","require","_assert","obj","__esModule","default","platform","_platform","_version","doclink","section","path","hashOrOverrides","url","URL","isObj","hash","version","OS","os","pathname","searchParams","set","otherKeys","keys","filter","key","includes","doesNotMatch","toString","bind","target","reactNativeVersion"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-tools/build/doclink.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.docs = exports.contributing = exports.community = exports.blog = void 0;\nexports.getOS = getOS;\nexports.setPlatform = setPlatform;\nexports.setVersion = setVersion;\nexports.showcase = void 0;\nfunction _os() {\n  const data = _interopRequireDefault(require(\"os\"));\n  _os = function () {\n    return data;\n  };\n  return data;\n}\nfunction _assert() {\n  const data = _interopRequireDefault(require(\"assert\"));\n  _assert = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction getOS() {\n  // Using os.platform instead of process.platform so we can test more easily. Once jest upgrades\n  // to ^29.4 we could use process.platforms and jest.replaceProperty(process, 'platforms', 'someplatform');\n  switch (_os().default.platform()) {\n    case 'aix':\n    case 'freebsd':\n    case 'linux':\n    case 'openbsd':\n    case 'sunos':\n      // King of controversy, right here.\n      return 'linux';\n    case 'darwin':\n      return 'macos';\n    case 'win32':\n      return 'windows';\n    default:\n      return '';\n  }\n}\nlet _platform = 'android';\nlet _version;\n/**\n * Create a deeplink to our documentation based on the user's OS and the Platform they're trying to build.\n */\nfunction doclink(section, path, hashOrOverrides) {\n  const url = new URL('https://reactnative.dev/');\n\n  // Overrides\n  const isObj = typeof hashOrOverrides === 'object';\n  const hash = isObj ? hashOrOverrides.hash : hashOrOverrides;\n  const version = isObj && hashOrOverrides.version ? hashOrOverrides.version : _version;\n  const OS = isObj && hashOrOverrides.os ? hashOrOverrides.os : getOS();\n  const platform = isObj && hashOrOverrides.platform ? hashOrOverrides.platform : _platform;\n  url.pathname = _version ? `${section}/${version}/${path}` : `${section}/${path}`;\n  url.searchParams.set('os', OS);\n  url.searchParams.set('platform', platform);\n  if (isObj) {\n    const otherKeys = Object.keys(hashOrOverrides).filter(key => !['hash', 'version', 'os', 'platform'].includes(key));\n    for (let key of otherKeys) {\n      url.searchParams.set(key, hashOrOverrides[key]);\n    }\n  }\n  if (hash) {\n    _assert().default.doesNotMatch(hash, /#/, \"Anchor links should be written withou a '#'\");\n    url.hash = hash;\n  }\n  return url.toString();\n}\nconst docs = doclink.bind(null, 'docs');\nexports.docs = docs;\nconst contributing = doclink.bind(null, 'contributing');\nexports.contributing = contributing;\nconst community = doclink.bind(null, 'community');\nexports.community = community;\nconst showcase = doclink.bind(null, 'showcase');\nexports.showcase = showcase;\nconst blog = doclink.bind(null, 'blog');\n\n/**\n * When the user builds, we should define the target platform globally.\n */\nexports.blog = blog;\nfunction setPlatform(target) {\n  _platform = target;\n}\n\n/**\n * Can we figure out what version of react native they're using?\n */\nfunction setVersion(reactNativeVersion) {\n  _version = reactNativeVersion;\n}\n\n//# sourceMappingURL=doclink.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}