{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDefaultMetroConfig;\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar INTERNAL_CALLSITES_REGEX = new RegExp(['/Libraries/Renderer/implementations/.+\\\\.js$', '/Libraries/BatchedBridge/MessageQueue\\\\.js$', '/Libraries/YellowBox/.+\\\\.js$', '/Libraries/LogBox/.+\\\\.js$', '/Libraries/Core/Timers/.+\\\\.js$', '/Libraries/WebSocket/.+\\\\.js$', '/Libraries/vendor/.+\\\\.js$', '/node_modules/react-devtools-core/.+\\\\.js$', '/node_modules/react-refresh/.+\\\\.js$', '/node_modules/scheduler/.+\\\\.js$', '/node_modules/event-target-shim/.+\\\\.js$', '/node_modules/invariant/.+\\\\.js$', '/node_modules/react-native/index.js$', '/metro-runtime/.+\\\\.js$', '^\\\\[native code\\\\]$'].join('|'));\nfunction getDefaultMetroConfig(ctx) {\n  return {\n    resolver: {\n      resolverMainFields: ['react-native', 'browser', 'main'],\n      unstable_conditionNames: ['require', 'react-native']\n    },\n    serializer: {\n      getPolyfills: function getPolyfills() {\n        return require(_path().default.join(ctx.reactNativePath, 'rn-get-polyfills'))();\n      }\n    },\n    server: {\n      port: Number(process.env.RCT_METRO_PORT) || 8081\n    },\n    symbolicator: {\n      customizeFrame: function customizeFrame(frame) {\n        var collapse = Boolean(frame.file && INTERNAL_CALLSITES_REGEX.test(frame.file));\n        return {\n          collapse: collapse\n        };\n      }\n    },\n    transformer: {\n      allowOptionalDependencies: true,\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      asyncRequireModulePath: require.resolve('metro-runtime/src/modules/asyncRequire'),\n      babelTransformerPath: require.resolve('metro-react-native-babel-transformer')\n    },\n    watchFolders: []\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getDefaultMetroConfig","_path","data","_interopRequireDefault","require","obj","__esModule","INTERNAL_CALLSITES_REGEX","RegExp","join","ctx","resolver","resolverMainFields","unstable_conditionNames","serializer","getPolyfills","reactNativePath","server","port","Number","process","env","RCT_METRO_PORT","symbolicator","customizeFrame","frame","collapse","Boolean","file","test","transformer","allowOptionalDependencies","assetRegistryPath","asyncRequireModulePath","resolve","babelTransformerPath","watchFolders"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli-plugin-metro/build/tools/getDefaultMetroConfig.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDefaultMetroConfig;\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * This module reproduces defaults from the @react-native/metro-config package,\n * used in ./loadMetroConfig.js to provide a soft upgrade process when upgrading\n * to React Native 0.72.\n *\n * These values will be used when:\n * - RN CLI 11.x or greater is present in a project (from React Native 0.72).\n * - The project has not yet followed the upgrade instructions to update\n *   metro.config.js to extend '@react-native/metro-config'.\n *\n * Until we remove this file in a future release, updates should be made both\n * here and in '@react-native/metro-config'. (Note: Updates to these values are\n * generally rare.)\n *\n * TODO(@huntie): Remove this file in a future React Native release.\n */\n\n/**\n * @deprecated (React Native 0.72.0) Defaults should be updated here and in\n *   https://github.com/facebook/react-native/tree/main/package/metro-config/index.js\n */\nconst INTERNAL_CALLSITES_REGEX = new RegExp(['/Libraries/Renderer/implementations/.+\\\\.js$', '/Libraries/BatchedBridge/MessageQueue\\\\.js$', '/Libraries/YellowBox/.+\\\\.js$', '/Libraries/LogBox/.+\\\\.js$', '/Libraries/Core/Timers/.+\\\\.js$', '/Libraries/WebSocket/.+\\\\.js$', '/Libraries/vendor/.+\\\\.js$', '/node_modules/react-devtools-core/.+\\\\.js$', '/node_modules/react-refresh/.+\\\\.js$', '/node_modules/scheduler/.+\\\\.js$', '/node_modules/event-target-shim/.+\\\\.js$', '/node_modules/invariant/.+\\\\.js$', '/node_modules/react-native/index.js$', '/metro-runtime/.+\\\\.js$', '^\\\\[native code\\\\]$'].join('|'));\n\n/**\n * Get the static Metro config defaults for a React Native project.\n *\n * @deprecated (React Native 0.72.0) Defaults should be updated here and in\n *   https://github.com/facebook/react-native/tree/main/package/metro-config/index.js\n */\nfunction getDefaultMetroConfig(ctx) {\n  return {\n    resolver: {\n      resolverMainFields: ['react-native', 'browser', 'main'],\n      unstable_conditionNames: ['require', 'react-native']\n    },\n    serializer: {\n      getPolyfills: () => require(_path().default.join(ctx.reactNativePath, 'rn-get-polyfills'))()\n    },\n    server: {\n      port: Number(process.env.RCT_METRO_PORT) || 8081\n    },\n    symbolicator: {\n      customizeFrame: frame => {\n        const collapse = Boolean(frame.file && INTERNAL_CALLSITES_REGEX.test(frame.file));\n        return {\n          collapse\n        };\n      }\n    },\n    transformer: {\n      allowOptionalDependencies: true,\n      assetRegistryPath: 'react-native/Libraries/Image/AssetRegistry',\n      asyncRequireModulePath: require.resolve('metro-runtime/src/modules/asyncRequire'),\n      babelTransformerPath: require.resolve('metro-react-native-babel-transformer')\n    },\n    watchFolders: []\n  };\n}\n\n//# sourceMappingURL=getDefaultMetroConfig.ts.map"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,qBAAqB;AACvC,SAASC,KAAKA,CAAA,EAAG;EACf,IAAMC,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACpDH,KAAK,GAAG,SAAAA,MAAA,EAAY;IAClB,OAAOC,IAAI;EACb,CAAC;EACD,OAAOA,IAAI;AACb;AACA,SAASC,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEN,OAAO,EAAEM;EAAI,CAAC;AAAE;AAsB9F,IAAME,wBAAwB,GAAG,IAAIC,MAAM,CAAC,CAAC,8CAA8C,EAAE,6CAA6C,EAAE,+BAA+B,EAAE,4BAA4B,EAAE,iCAAiC,EAAE,+BAA+B,EAAE,4BAA4B,EAAE,4CAA4C,EAAE,sCAAsC,EAAE,kCAAkC,EAAE,0CAA0C,EAAE,kCAAkC,EAAE,sCAAsC,EAAE,yBAAyB,EAAE,qBAAqB,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;AAQ3lB,SAAST,qBAAqBA,CAACU,GAAG,EAAE;EAClC,OAAO;IACLC,QAAQ,EAAE;MACRC,kBAAkB,EAAE,CAAC,cAAc,EAAE,SAAS,EAAE,MAAM,CAAC;MACvDC,uBAAuB,EAAE,CAAC,SAAS,EAAE,cAAc;IACrD,CAAC;IACDC,UAAU,EAAE;MACVC,YAAY,EAAE,SAAAA,aAAA;QAAA,OAAMX,OAAO,CAACH,KAAK,CAAC,CAAC,CAACF,OAAO,CAACU,IAAI,CAACC,GAAG,CAACM,eAAe,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;MAAA;IAC9F,CAAC;IACDC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM,CAACC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAC,IAAI;IAC9C,CAAC;IACDC,YAAY,EAAE;MACZC,cAAc,EAAE,SAAAA,eAAAC,KAAK,EAAI;QACvB,IAAMC,QAAQ,GAAGC,OAAO,CAACF,KAAK,CAACG,IAAI,IAAIrB,wBAAwB,CAACsB,IAAI,CAACJ,KAAK,CAACG,IAAI,CAAC,CAAC;QACjF,OAAO;UACLF,QAAQ,EAARA;QACF,CAAC;MACH;IACF,CAAC;IACDI,WAAW,EAAE;MACXC,yBAAyB,EAAE,IAAI;MAC/BC,iBAAiB,EAAE,4CAA4C;MAC/DC,sBAAsB,EAAE7B,OAAO,CAAC8B,OAAO,CAAC,wCAAwC,CAAC;MACjFC,oBAAoB,EAAE/B,OAAO,CAAC8B,OAAO,CAAC,sCAAsC;IAC9E,CAAC;IACDE,YAAY,EAAE;EAChB,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}