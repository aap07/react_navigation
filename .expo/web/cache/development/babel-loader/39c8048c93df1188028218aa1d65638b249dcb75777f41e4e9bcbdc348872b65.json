{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/expo-modules-autolinking/build/types.d.ts"],"sourcesContent":["import { ExpoModuleConfig } from './ExpoModuleConfig';\nexport type SupportedPlatform = 'ios' | 'android' | 'web';\nexport interface SearchOptions {\n    searchPaths: string[];\n    ignorePaths?: string[] | null;\n    exclude?: string[] | null;\n    platform: SupportedPlatform;\n    silent?: boolean;\n    nativeModulesDir?: string | null;\n    flags?: Record<string, any>;\n}\nexport interface ResolveOptions extends SearchOptions {\n    json?: boolean;\n}\nexport interface GenerateOptions extends ResolveOptions {\n    target: string;\n    namespace?: string;\n    empty?: boolean;\n}\nexport interface PatchReactImportsOptions {\n    podsRoot: string;\n    dryRun: boolean;\n}\nexport type PackageRevision = {\n    path: string;\n    version: string;\n    config?: ExpoModuleConfig;\n    duplicates?: PackageRevision[];\n};\nexport type SearchResults = {\n    [moduleName: string]: PackageRevision;\n};\nexport interface ModuleAndroidProjectInfo {\n    name: string;\n    sourceDir: string;\n}\nexport interface ModuleAndroidPluginInfo {\n    id: string;\n    sourceDir: string;\n}\nexport interface ModuleDescriptorAndroid {\n    packageName: string;\n    projects: ModuleAndroidProjectInfo[];\n    plugins?: ModuleAndroidPluginInfo[];\n    modules: string[];\n}\nexport interface ModuleIosPodspecInfo {\n    podName: string;\n    podspecDir: string;\n}\nexport interface ModuleDescriptorIos {\n    packageName: string;\n    pods: ModuleIosPodspecInfo[];\n    flags: Record<string, any> | undefined;\n    swiftModuleNames: string[];\n    modules: string[];\n    appDelegateSubscribers: string[];\n    reactDelegateHandlers: string[];\n    debugOnly: boolean;\n}\nexport type ModuleDescriptor = ModuleDescriptorAndroid | ModuleDescriptorIos;\nexport interface AndroidGradlePluginDescriptor {\n    /**\n     * Gradle plugin ID\n     */\n    id: string;\n    /**\n     * Artifact group\n     */\n    group: string;\n    /**\n     * Relative path to the gradle plugin directory\n     */\n    sourceDir: string;\n}\n/**\n * Represents a raw config from `expo-module.json`.\n */\nexport interface RawExpoModuleConfig {\n    /**\n     * An array of supported platforms.\n     */\n    platforms?: SupportedPlatform[];\n    /**\n     * iOS-specific config.\n     */\n    ios?: {\n        /**\n         * Names of Swift native modules classes to put to the generated modules provider file.\n         */\n        modules?: string[];\n        /**\n         * Names of Swift native modules classes to put to the generated modules provider file.\n         * @deprecated Deprecated in favor of `modules`. Might be removed in the future releases.\n         */\n        modulesClassNames?: string[];\n        /**\n         * Names of Swift classes that hooks into `ExpoAppDelegate` to receive AppDelegate life-cycle events.\n         */\n        appDelegateSubscribers?: string[];\n        /**\n         * Names of Swift classes that implement `ExpoReactDelegateHandler` to hook React instance creation.\n         */\n        reactDelegateHandlers?: string[];\n        /**\n         * Podspec relative path.\n         * To have multiple podspecs, string array type is also supported.\n         */\n        podspecPath?: string | string[];\n        /**\n         * Swift product module name. If empty, the pod name is used for Swift imports.\n         * To have multiple modules, string array is also supported.\n         */\n        swiftModuleName?: string | string[];\n        /**\n         * Whether this module will be added only to the debug configuration.\n         * Defaults to false.\n         */\n        debugOnly?: boolean;\n    };\n    /**\n     * Android-specific config.\n     */\n    android?: {\n        /**\n         * Full names (package + class name) of Kotlin native modules classes to put to the generated package provider file.\n         */\n        modules?: string[];\n        /**\n         * Full names (package + class name) of Kotlin native modules classes to put to the generated package provider file.\n         * @deprecated Deprecated in favor of `modules`. Might be removed in the future releases.\n         */\n        modulesClassNames?: string[];\n        /**\n         * build.gradle relative path.\n         * To have multiple build.gradle projects, string array type is also supported.\n         */\n        gradlePath?: string | string[];\n        /**\n         * Gradle plugins.\n         */\n        gradlePlugins?: AndroidGradlePluginDescriptor[];\n    };\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}