{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unstable_exportStaticAsync = unstable_exportStaticAsync;\nexports.getFilesToExportFromServerAsync = getFilesToExportFromServerAsync;\nexports.exportFromServerAsync = exportFromServerAsync;\nexports.getHtmlFiles = getHtmlFiles;\nexports.getPathVariations = getPathVariations;\nvar _assert = _interopRequireDefault(require(\"assert\"));\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _prettyBytes = _interopRequireDefault(require(\"pretty-bytes\"));\nvar _util = require(\"util\");\nvar _log = require(\"../log\");\nvar _devServerManager = require(\"../start/server/DevServerManager\");\nvar _metroBundlerDevServer = require(\"../start/server/metro/MetroBundlerDevServer\");\nvar _metroErrorInterface = require(\"../start/server/metro/metroErrorInterface\");\nvar _favicon = require(\"./favicon\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:export:generateStaticRoutes\");\nfunction unstable_exportStaticAsync(_x, _x2) {\n  return _unstable_exportStaticAsync.apply(this, arguments);\n}\nfunction _unstable_exportStaticAsync() {\n  _unstable_exportStaticAsync = _asyncToGenerator(function* (projectRoot, options) {\n    _log.Log.warn(\"Static exporting with Metro is an experimental feature.\");\n    var devServerManager = new _devServerManager.DevServerManager(projectRoot, {\n      minify: options.minify,\n      mode: \"production\",\n      location: {}\n    });\n    yield devServerManager.startAsync([{\n      type: \"metro\"\n    }]);\n    yield exportFromServerAsync(projectRoot, devServerManager, options);\n    yield devServerManager.stopAsync();\n  });\n  return _unstable_exportStaticAsync.apply(this, arguments);\n}\nfunction matchGroupName(name) {\n  var ref;\n  return (ref = name.match(/^\\(([^/]+?)\\)$/)) == null ? void 0 : ref[1];\n}\nfunction getFilesToExportFromServerAsync(_x3, _x4) {\n  return _getFilesToExportFromServerAsync.apply(this, arguments);\n}\nfunction _getFilesToExportFromServerAsync() {\n  _getFilesToExportFromServerAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var manifest = _ref.manifest,\n      renderAsync = _ref.renderAsync;\n    var files = new Map();\n    yield Promise.all(getHtmlFiles({\n      manifest: manifest\n    }).map(function () {\n      var _ref4 = _asyncToGenerator(function* (outputPath) {\n        var pathname = outputPath.replace(/(index)?\\.html$/, \"\");\n        try {\n          files.set(outputPath, \"\");\n          var data = yield renderAsync(pathname);\n          files.set(outputPath, data);\n        } catch (e) {\n          yield (0, _metroErrorInterface).logMetroErrorAsync({\n            error: e,\n            projectRoot: projectRoot\n          });\n          throw new Error(\"Failed to statically export route: \" + pathname);\n        }\n      });\n      return function (_x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }()));\n    return files;\n  });\n  return _getFilesToExportFromServerAsync.apply(this, arguments);\n}\nfunction exportFromServerAsync(_x5, _x6, _x7) {\n  return _exportFromServerAsync.apply(this, arguments);\n}\nfunction _exportFromServerAsync() {\n  _exportFromServerAsync = _asyncToGenerator(function* (projectRoot, devServerManager, _ref2) {\n    var outputDir = _ref2.outputDir,\n      minify = _ref2.minify;\n    var injectFaviconTag = yield (0, _favicon).getVirtualFaviconAssetsAsync(projectRoot, outputDir);\n    var devServer = devServerManager.getDefaultDevServer();\n    (0, _assert).default(devServer instanceof _metroBundlerDevServer.MetroBundlerDevServer);\n    var _yield$Promise$all = yield Promise.all([devServer.getRoutesAsync(), devServer.getStaticResourcesAsync({\n        mode: \"production\",\n        minify: minify\n      }), devServer.getStaticRenderFunctionAsync({\n        mode: \"production\",\n        minify: minify\n      })]),\n      _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3),\n      manifest = _yield$Promise$all2[0],\n      resources = _yield$Promise$all2[1],\n      _renderAsync = _yield$Promise$all2[2];\n    debug(\"Routes:\\n\", (0, _util).inspect(manifest, {\n      colors: true,\n      depth: null\n    }));\n    var files = yield getFilesToExportFromServerAsync(projectRoot, {\n      manifest: manifest,\n      renderAsync: function () {\n        var _renderAsync2 = _asyncToGenerator(function* (pathname) {\n          var template = yield _renderAsync(pathname);\n          var html = yield devServer.composeResourcesWithHtml({\n            mode: \"production\",\n            resources: resources,\n            template: template\n          });\n          if (injectFaviconTag) {\n            html = injectFaviconTag(html);\n          }\n          return html;\n        });\n        function renderAsync(_x9) {\n          return _renderAsync2.apply(this, arguments);\n        }\n        return renderAsync;\n      }()\n    });\n    resources.forEach(function (resource) {\n      files.set(resource.filename, resource.source);\n    });\n    _fs.default.mkdirSync(_path.default.join(outputDir), {\n      recursive: true\n    });\n    _log.Log.log(\"\");\n    _log.Log.log(_chalk.default.bold`Exporting ${files.size} files:`);\n    yield Promise.all(_toConsumableArray(files.entries()).sort(function (_ref5, _ref6) {\n      var _ref7 = _slicedToArray(_ref5, 1),\n        a = _ref7[0];\n      var _ref8 = _slicedToArray(_ref6, 1),\n        b = _ref8[0];\n      return a.localeCompare(b);\n    }).map(function () {\n      var _ref10 = _asyncToGenerator(function* (_ref9) {\n        var _ref11 = _slicedToArray(_ref9, 2),\n          file = _ref11[0],\n          contents = _ref11[1];\n        var length = Buffer.byteLength(contents, \"utf8\");\n        _log.Log.log(file, _chalk.default.gray`(${(0, _prettyBytes).default(length)})`);\n        var outputPath = _path.default.join(outputDir, file);\n        yield _fs.default.promises.mkdir(_path.default.dirname(outputPath), {\n          recursive: true\n        });\n        yield _fs.default.promises.writeFile(outputPath, contents);\n      });\n      return function (_x10) {\n        return _ref10.apply(this, arguments);\n      };\n    }()));\n    _log.Log.log(\"\");\n  });\n  return _exportFromServerAsync.apply(this, arguments);\n}\nfunction getHtmlFiles(_ref3) {\n  var manifest = _ref3.manifest;\n  var htmlFiles = new Set();\n  function traverseScreens(screens) {\n    var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    for (var value of Object.values(screens)) {\n      if (typeof value === \"string\") {\n        var filePath = basePath + value;\n        if (value === \"\") {\n          filePath = basePath === \"\" ? \"index\" : basePath.endsWith(\"/\") ? basePath + \"index\" : basePath.slice(0, -1);\n        }\n        addOptionalGroups(filePath);\n      } else if (typeof value === \"object\" && (value == null ? void 0 : value.screens)) {\n        var newPath = basePath + value.path + \"/\";\n        traverseScreens(value.screens, newPath);\n      }\n    }\n  }\n  function addOptionalGroups(path) {\n    var variations = getPathVariations(path);\n    for (var variation of variations) {\n      htmlFiles.add(variation);\n    }\n  }\n  traverseScreens(manifest.screens);\n  return Array.from(htmlFiles).map(function (value) {\n    var parts = value.split(\"/\");\n    var partsWithGroups = parts.map(function (part) {\n      if (part.startsWith(\":\")) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith(\"*\")) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    return partsWithGroups.join(\"/\") + \".html\";\n  });\n}\nfunction getPathVariations(routePath) {\n  var variations = new Set([routePath]);\n  var segments1 = routePath.split(\"/\");\n  function generateVariations(segments, index) {\n    if (index >= segments.length) {\n      return;\n    }\n    var newSegments = _toConsumableArray(segments);\n    while (index < newSegments.length && matchGroupName(newSegments[index]) && newSegments.length > 1) {\n      newSegments.splice(index, 1);\n      variations.add(newSegments.join(\"/\"));\n      generateVariations(newSegments, index + 1);\n    }\n    generateVariations(segments, index + 1);\n  }\n  generateVariations(segments1, 0);\n  return Array.from(variations);\n}","map":{"version":3,"names":["_slicedToArray","require","_toConsumableArray","_asyncToGenerator","unstable_exportStaticAsync","getFilesToExportFromServerAsync","exportFromServerAsync","getHtmlFiles","getPathVariations","_assert","_interopRequireDefault","_chalk","_fs","_path","_prettyBytes","_util","_log","_devServerManager","_metroBundlerDevServer","_metroErrorInterface","_favicon","debug","_x","_x2","_unstable_exportStaticAsync","apply","arguments","projectRoot","options","Log","warn","devServerManager","DevServerManager","minify","mode","location","startAsync","type","stopAsync","matchGroupName","name","ref","match","_x3","_x4","_getFilesToExportFromServerAsync","_ref","manifest","renderAsync","files","Map","Promise","all","map","_ref4","outputPath","pathname","replace","set","data","e","logMetroErrorAsync","error","Error","_x8","_x5","_x6","_x7","_exportFromServerAsync","_ref2","outputDir","injectFaviconTag","getVirtualFaviconAssetsAsync","devServer","getDefaultDevServer","default","MetroBundlerDevServer","_yield$Promise$all","getRoutesAsync","getStaticResourcesAsync","getStaticRenderFunctionAsync","_yield$Promise$all2","resources","inspect","colors","depth","_renderAsync2","template","html","composeResourcesWithHtml","_x9","forEach","resource","filename","source","mkdirSync","join","recursive","log","bold","size","entries","sort","_ref5","_ref6","_ref7","a","_ref8","b","localeCompare","_ref10","_ref9","_ref11","file","contents","length","Buffer","byteLength","gray","promises","mkdir","dirname","writeFile","_x10","_ref3","htmlFiles","Set","traverseScreens","screens","basePath","undefined","value","Object","values","filePath","endsWith","slice","addOptionalGroups","newPath","path","variations","variation","add","Array","from","parts","split","partsWithGroups","part","startsWith","routePath","segments1","generateVariations","segments","index","newSegments","splice"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\export\\exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright © 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport prettyBytes from 'pretty-bytes';\nimport { inspect } from 'util';\n\nimport { Log } from '../log';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport { getVirtualFaviconAssetsAsync } from './favicon';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = { outputDir: string; minify: boolean };\n\n/** @private */\nexport async function unstable_exportStaticAsync(projectRoot: string, options: Options) {\n  // NOTE(EvanBacon): Please don't use this feature.\n  Log.warn('Static exporting with Metro is an experimental feature.');\n\n  const devServerManager = new DevServerManager(projectRoot, {\n    minify: options.minify,\n    mode: 'production',\n    location: {},\n  });\n\n  await devServerManager.startAsync([\n    {\n      type: 'metro',\n    },\n  ]);\n\n  await exportFromServerAsync(projectRoot, devServerManager, options);\n\n  await devServerManager.stopAsync();\n}\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n  }: {\n    manifest: any;\n    renderAsync: (pathname: string) => Promise<string>;\n  }\n): Promise<Map<string, string>> {\n  // name : contents\n  const files = new Map<string, string>();\n\n  await Promise.all(\n    getHtmlFiles({ manifest }).map(async (outputPath) => {\n      const pathname = outputPath.replace(/(index)?\\.html$/, '');\n      try {\n        files.set(outputPath, '');\n        const data = await renderAsync(pathname);\n        files.set(outputPath, data);\n      } catch (e: any) {\n        await logMetroErrorAsync({ error: e, projectRoot });\n        throw new Error('Failed to statically export route: ' + pathname);\n      }\n    })\n  );\n\n  return files;\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServerManager: DevServerManager,\n  { outputDir, minify }: Options\n): Promise<void> {\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, outputDir);\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const [manifest, resources, renderAsync] = await Promise.all([\n    devServer.getRoutesAsync(),\n    devServer.getStaticResourcesAsync({ mode: 'production', minify }),\n    devServer.getStaticRenderFunctionAsync({\n      mode: 'production',\n      minify,\n    }),\n  ]);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  const files = await getFilesToExportFromServerAsync(projectRoot, {\n    manifest,\n    async renderAsync(pathname: string) {\n      const template = await renderAsync(pathname);\n      let html = await devServer.composeResourcesWithHtml({\n        mode: 'production',\n        resources,\n        template,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  resources.forEach((resource) => {\n    files.set(resource.filename, resource.source);\n  });\n\n  fs.mkdirSync(path.join(outputDir), { recursive: true });\n\n  Log.log('');\n  Log.log(chalk.bold`Exporting ${files.size} files:`);\n  await Promise.all(\n    [...files.entries()]\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(async ([file, contents]) => {\n        const length = Buffer.byteLength(contents, 'utf8');\n        Log.log(file, chalk.gray`(${prettyBytes(length)})`);\n        const outputPath = path.join(outputDir, file);\n        await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n        await fs.promises.writeFile(outputPath, contents);\n      })\n  );\n  Log.log('');\n}\n\nexport function getHtmlFiles({ manifest }: { manifest: any }): string[] {\n  const htmlFiles = new Set<string>();\n\n  function traverseScreens(screens: string | { screens: any; path: string }, basePath = '') {\n    for (const value of Object.values(screens)) {\n      if (typeof value === 'string') {\n        let filePath = basePath + value;\n        if (value === '') {\n          filePath =\n            basePath === ''\n              ? 'index'\n              : basePath.endsWith('/')\n              ? basePath + 'index'\n              : basePath.slice(0, -1);\n        }\n        // TODO: Dedupe requests for alias routes.\n        addOptionalGroups(filePath);\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = basePath + value.path + '/';\n        traverseScreens(value.screens, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add(variation);\n    }\n  }\n\n  traverseScreens(manifest.screens);\n\n  return Array.from(htmlFiles).map((value) => {\n    const parts = value.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    return partsWithGroups.join('/') + '.html';\n  });\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>([routePath]);\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], index: number): void {\n    if (index >= segments.length) {\n      return;\n    }\n\n    const newSegments = [...segments];\n    while (\n      index < newSegments.length &&\n      matchGroupName(newSegments[index]) &&\n      newSegments.length > 1\n    ) {\n      newSegments.splice(index, 1);\n      variations.add(newSegments.join('/'));\n      generateVariations(newSegments, index + 1);\n    }\n\n    generateVariations(segments, index + 1);\n  }\n\n  generateVariations(segments, 0);\n\n  return Array.from(variations);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}