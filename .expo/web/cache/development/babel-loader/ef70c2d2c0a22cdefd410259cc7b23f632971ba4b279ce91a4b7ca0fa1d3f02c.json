{"ast":null,"code":"import React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styleToBarStyle from \"./styleToBarStyle\";\nimport useColorScheme from \"./useColorScheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ExpoStatusBar(props) {\n  var style = props.style,\n    animated = props.animated,\n    hidden = props.hidden,\n    hideTransitionAnimation = props.hideTransitionAnimation,\n    networkActivityIndicatorVisible = props.networkActivityIndicatorVisible;\n  var showHideTransition = hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation;\n  var colorScheme = useColorScheme();\n  var barStyle = styleToBarStyle(style, colorScheme);\n  return _jsx(StatusBar, {\n    barStyle: barStyle,\n    animated: animated,\n    hidden: hidden,\n    networkActivityIndicatorVisible: networkActivityIndicatorVisible,\n    showHideTransition: showHideTransition\n  });\n}","map":{"version":3,"names":["React","StatusBar","styleToBarStyle","useColorScheme","jsx","_jsx","ExpoStatusBar","props","style","animated","hidden","hideTransitionAnimation","networkActivityIndicatorVisible","showHideTransition","undefined","colorScheme","barStyle"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/expo-status-bar/src/ExpoStatusBar.ios.tsx"],"sourcesContent":["import React from 'react';\nimport { StatusBar } from 'react-native';\n\nimport { StatusBarProps } from './StatusBar.types';\nimport styleToBarStyle from './styleToBarStyle';\nimport useColorScheme from './useColorScheme';\n\nexport default function ExpoStatusBar(props: StatusBarProps) {\n  const { style, animated, hidden, hideTransitionAnimation, networkActivityIndicatorVisible } =\n    props;\n\n  const showHideTransition =\n    hideTransitionAnimation === 'none' ? undefined : hideTransitionAnimation;\n\n  // Pick appropriate default value depending on current theme, so if we are\n  // locked to light mode we don't end up with a light status bar\n  const colorScheme = useColorScheme();\n  const barStyle = styleToBarStyle(style, colorScheme);\n\n  return (\n    <StatusBar\n      barStyle={barStyle}\n      animated={animated}\n      hidden={hidden}\n      networkActivityIndicatorVisible={networkActivityIndicatorVisible}\n      showHideTransition={showHideTransition}\n    />\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,SAAA;AAI1B,OAAOC,eAAe;AACtB,OAAOC,cAAc;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAE9C,eAAe,SAASC,aAAaA,CAACC,KAAqB,EAAE;EAC3D,IAAQC,KAAK,GACXD,KAAK,CADCC,KAAK;IAAEC,QAAQ,GACrBF,KAAK,CADQE,QAAQ;IAAEC,MAAM,GAC7BH,KAAK,CADkBG,MAAM;IAAEC,uBAAuB,GACtDJ,KAAK,CAD0BI,uBAAuB;IAAEC,+BAA+B,GACvFL,KAAK,CADmDK,+BAA+B;EAGzF,IAAMC,kBAAkB,GACtBF,uBAAuB,KAAK,MAAM,GAAGG,SAAS,GAAGH,uBAAuB;EAI1E,IAAMI,WAAW,GAAGZ,cAAc,CAAC,CAAC;EACpC,IAAMa,QAAQ,GAAGd,eAAe,CAACM,KAAK,EAAEO,WAAW,CAAC;EAEpD,OACEV,IAAA,CAACJ,SAAS;IACRe,QAAQ,EAAEA,QAAS;IACnBP,QAAQ,EAAEA,QAAS;IACnBC,MAAM,EAAEA,MAAO;IACfE,+BAA+B,EAAEA,+BAAgC;IACjEC,kBAAkB,EAAEA;EAAmB,CACxC,CAAC;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}