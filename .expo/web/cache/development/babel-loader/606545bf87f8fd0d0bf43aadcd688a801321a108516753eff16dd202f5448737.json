{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setSplashStrings = setSplashStrings;\nexports.withAndroidSplashStrings = void 0;\nfunction _configPlugins() {\n  var data = require(\"@expo/config-plugins\");\n  _configPlugins = function _configPlugins() {\n    return data;\n  };\n  return data;\n}\nfunction _getAndroidSplashConfig() {\n  var data = require(\"./getAndroidSplashConfig\");\n  _getAndroidSplashConfig = function _getAndroidSplashConfig() {\n    return data;\n  };\n  return data;\n}\nvar RESIZE_MODE_KEY = 'expo_splash_screen_resize_mode';\nvar STATUS_BAR_TRANSLUCENT_KEY = 'expo_splash_screen_status_bar_translucent';\nvar withAndroidSplashStrings = function withAndroidSplashStrings(config) {\n  return (0, _configPlugins().withStringsXml)(config, function (config) {\n    var splashConfig = (0, _getAndroidSplashConfig().getAndroidSplashConfig)(config);\n    if (splashConfig) {\n      var _config$androidStatus;\n      var resizeMode = splashConfig.resizeMode;\n      var statusBarTranslucent = !!((_config$androidStatus = config.androidStatusBar) !== null && _config$androidStatus !== void 0 && _config$androidStatus.translucent);\n      config.modResults = setSplashStrings(config.modResults, resizeMode, statusBarTranslucent);\n    }\n    return config;\n  });\n};\nexports.withAndroidSplashStrings = withAndroidSplashStrings;\nfunction setSplashStrings(strings, resizeMode, statusBarTranslucent) {\n  return _configPlugins().AndroidConfig.Strings.setStringItem([_configPlugins().AndroidConfig.Resources.buildResourceItem({\n    name: RESIZE_MODE_KEY,\n    value: resizeMode,\n    translatable: false\n  }), _configPlugins().AndroidConfig.Resources.buildResourceItem({\n    name: STATUS_BAR_TRANSLUCENT_KEY,\n    value: String(statusBarTranslucent),\n    translatable: false\n  })], strings);\n}","map":{"version":3,"names":["_configPlugins","data","require","_getAndroidSplashConfig","RESIZE_MODE_KEY","STATUS_BAR_TRANSLUCENT_KEY","withAndroidSplashStrings","config","withStringsXml","splashConfig","getAndroidSplashConfig","_config$androidStatus","resizeMode","statusBarTranslucent","androidStatusBar","translucent","modResults","setSplashStrings","exports","strings","AndroidConfig","Strings","setStringItem","Resources","buildResourceItem","name","value","translatable","String"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\prebuild-config\\src\\plugins\\unversioned\\expo-splash-screen\\withAndroidSplashStrings.ts"],"sourcesContent":["import { AndroidConfig, ConfigPlugin, withStringsXml } from '@expo/config-plugins';\n\nimport { getAndroidSplashConfig } from './getAndroidSplashConfig';\n\nconst RESIZE_MODE_KEY = 'expo_splash_screen_resize_mode';\nconst STATUS_BAR_TRANSLUCENT_KEY = 'expo_splash_screen_status_bar_translucent';\n\nexport const withAndroidSplashStrings: ConfigPlugin = (config) => {\n  return withStringsXml(config, (config) => {\n    const splashConfig = getAndroidSplashConfig(config);\n    if (splashConfig) {\n      const { resizeMode } = splashConfig;\n      const statusBarTranslucent = !!config.androidStatusBar?.translucent;\n      config.modResults = setSplashStrings(config.modResults, resizeMode, statusBarTranslucent);\n    }\n    return config;\n  });\n};\n\nexport function setSplashStrings(\n  strings: AndroidConfig.Resources.ResourceXML,\n  resizeMode: string,\n  statusBarTranslucent: boolean\n): AndroidConfig.Resources.ResourceXML {\n  return AndroidConfig.Strings.setStringItem(\n    [\n      AndroidConfig.Resources.buildResourceItem({\n        name: RESIZE_MODE_KEY,\n        value: resizeMode,\n        translatable: false,\n      }),\n      AndroidConfig.Resources.buildResourceItem({\n        name: STATUS_BAR_TRANSLUCENT_KEY,\n        value: String(statusBarTranslucent),\n        translatable: false,\n      }),\n    ],\n    strings\n  );\n}\n"],"mappings":";;;;;;;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA,GAAAC,OAAA;EAAAF,cAAA,YAAAA,eAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAAAE,wBAAA;EAAA,IAAAF,IAAA,GAAAC,OAAA;EAAAC,uBAAA,YAAAA,wBAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,IAAMG,eAAe,GAAG,gCAAgC;AACxD,IAAMC,0BAA0B,GAAG,2CAA2C;AAEvE,IAAMC,wBAAsC,GAAI,SAA1CA,wBAAsCA,CAAIC,MAAM,EAAK;EAChE,OAAO,IAAAP,cAAA,GAAAQ,cAAc,EAACD,MAAM,EAAG,UAAAA,MAAM,EAAK;IACxC,IAAME,YAAY,GAAG,IAAAN,uBAAA,GAAAO,sBAAsB,EAACH,MAAM,CAAC;IACnD,IAAIE,YAAY,EAAE;MAAA,IAAAE,qBAAA;MAChB,IAAQC,UAAA,GAAeH,YAAY,CAA3BG,UAAA;MACR,IAAMC,oBAAoB,GAAG,CAAC,GAAAF,qBAAA,GAACJ,MAAM,CAACO,gBAAgB,cAAAH,qBAAA,eAAvBA,qBAAA,CAAyBI,WAAW;MACnER,MAAM,CAACS,UAAU,GAAGC,gBAAgB,CAACV,MAAM,CAACS,UAAU,EAAEJ,UAAU,EAAEC,oBAAoB,CAAC;IAC3F;IACA,OAAON,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACW,OAAA,CAAAZ,wBAAA,GAAAA,wBAAA;AAEK,SAASW,gBAAgBA,CAC9BE,OAA4C,EAC5CP,UAAkB,EAClBC,oBAA6B,EACQ;EACrC,OAAOb,cAAA,GAAAoB,aAAa,CAACC,OAAO,CAACC,aAAa,CACxC,CACEtB,cAAA,GAAAoB,aAAa,CAACG,SAAS,CAACC,iBAAiB,CAAC;IACxCC,IAAI,EAAErB,eAAe;IACrBsB,KAAK,EAAEd,UAAU;IACjBe,YAAY,EAAE;EAChB,CAAC,CAAC,EACF3B,cAAA,GAAAoB,aAAa,CAACG,SAAS,CAACC,iBAAiB,CAAC;IACxCC,IAAI,EAAEpB,0BAA0B;IAChCqB,KAAK,EAAEE,MAAM,CAACf,oBAAoB,CAAC;IACnCc,YAAY,EAAE;EAChB,CAAC,CAAC,CACH,EACDR,OAAO,CACR;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}