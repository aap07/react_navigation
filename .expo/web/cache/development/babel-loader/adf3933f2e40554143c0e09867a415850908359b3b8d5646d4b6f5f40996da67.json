{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createExoticTransformer = createExoticTransformer;\nfunction _createMatcher() {\n  var data = require(\"./createMatcher\");\n  _createMatcher = function _createMatcher() {\n    return data;\n  };\n  return data;\n}\nfunction _createMultiRuleTransformer() {\n  var data = require(\"./createMultiRuleTransformer\");\n  _createMultiRuleTransformer = function _createMultiRuleTransformer() {\n    return data;\n  };\n  return data;\n}\nfunction _getCacheKey() {\n  var data = require(\"./getCacheKey\");\n  _getCacheKey = function _getCacheKey() {\n    return data;\n  };\n  return data;\n}\nfunction createExoticTransformer(_ref) {\n  var nodeModulesPaths = _ref.nodeModulesPaths,\n    transpileModules = _ref.transpileModules;\n  if (!nodeModulesPaths) {\n    nodeModulesPaths = ['node_modules'];\n  }\n  var nodeModuleMatcher = (0, _createMatcher().createModuleMatcher)({\n    folders: nodeModulesPaths,\n    moduleIds: []\n  });\n  var impossibleNodeModuleMatcher = (0, _createMatcher().createModuleMatcher)({\n    moduleIds: ['victory', '@expo/vector-icons'].concat(_toConsumableArray(transpileModules || [])),\n    folders: nodeModulesPaths\n  });\n  var transform = (0, _createMultiRuleTransformer().createMultiRuleTransformer)({\n    getRuleType: function getRuleType(_ref2) {\n      var filename = _ref2.filename;\n      return nodeModuleMatcher.test(filename) && !impossibleNodeModuleMatcher.test(filename) ? 'module' : 'app';\n    },\n    rules: [{\n      name: 'bob',\n      type: 'module',\n      test: (0, _createMatcher().createModuleMatcher)({\n        moduleIds: ['.*/lib/commonjs/'],\n        folders: nodeModulesPaths\n      }),\n      transform: _createMultiRuleTransformer().loaders.passthroughModule,\n      warn: true\n    }, {\n      name: 'react-native',\n      type: 'module',\n      test: (0, _createMatcher().createReactNativeMatcher)({\n        folders: nodeModulesPaths\n      }),\n      transform: _createMultiRuleTransformer().loaders.reactNativeModule,\n      warn: true\n    }, {\n      name: 'expo-module',\n      type: 'module',\n      test: (0, _createMatcher().createExpoMatcher)({\n        folders: nodeModulesPaths\n      }),\n      transform: _createMultiRuleTransformer().loaders.expoModule,\n      warn: true\n    }, {\n      name: 'sucrase',\n      type: 'module',\n      test: (0, _createMatcher().createKnownCommunityMatcher)({\n        folders: nodeModulesPaths\n      }),\n      transform: _createMultiRuleTransformer().loaders.untranspiledModule,\n      warn: true\n    }, {\n      name: 'skip-module',\n      type: 'module',\n      test: function test() {\n        return true;\n      },\n      transform: _createMultiRuleTransformer().loaders.passthroughModule\n    }, {\n      name: 'babel',\n      test: function test() {\n        return true;\n      },\n      transform: _createMultiRuleTransformer().loaders.app\n    }]\n  });\n  return {\n    transform: transform,\n    getCacheKey: _getCacheKey().getCacheKey\n  };\n}","map":{"version":3,"names":["_createMatcher","data","require","_createMultiRuleTransformer","_getCacheKey","createExoticTransformer","_ref","nodeModulesPaths","transpileModules","nodeModuleMatcher","createModuleMatcher","folders","moduleIds","impossibleNodeModuleMatcher","concat","_toConsumableArray","transform","createMultiRuleTransformer","getRuleType","_ref2","filename","test","rules","name","type","loaders","passthroughModule","warn","createReactNativeMatcher","reactNativeModule","createExpoMatcher","expoModule","createKnownCommunityMatcher","untranspiledModule","app","getCacheKey"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\transformer\\createExoticTransformer.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\nimport { BabelTransformer } from 'metro-babel-transformer';\n\nimport {\n  createExpoMatcher,\n  createKnownCommunityMatcher,\n  createModuleMatcher,\n  createReactNativeMatcher,\n} from './createMatcher';\nimport { createMultiRuleTransformer, loaders } from './createMultiRuleTransformer';\nimport { getCacheKey } from './getCacheKey';\n\n/**\n * Create an experimental multi-rule transformer for a React Native app.\n *\n * @example\n * ```\n * module.exports = createExoticTransformer({\n *    nodeModulesPaths: ['react-native'],\n *    transpileModules: ['@stripe/stripe-react-native'],\n * });\n * ```\n *\n * @param props.nodeModulesPaths paths to node_modules folders, relative to project root. Default: `['node_modules']`\n * @param props.transpileModules matchers for module names that should be transpiled using the project Babel configuration. Example: `['@stripe/stripe-react-native']`\n * @returns a Metro `transformer` function and default `getCacheKey` function.\n */\nexport function createExoticTransformer({\n  nodeModulesPaths,\n  transpileModules,\n}: {\n  nodeModulesPaths?: string[];\n  transpileModules?: string[];\n}): BabelTransformer {\n  if (!nodeModulesPaths) {\n    nodeModulesPaths = ['node_modules'];\n  }\n  // Match any node modules, or monorepo module.\n  const nodeModuleMatcher = createModuleMatcher({ folders: nodeModulesPaths, moduleIds: [] });\n\n  // Match node modules which are so oddly written that we must\n  // transpile them with every possible option (most expensive).\n  const impossibleNodeModuleMatcher = createModuleMatcher({\n    moduleIds: [\n      // victory is too wild\n      // SyntaxError in ../../node_modules/victory-native/lib/components/victory-primitives/bar.js: Missing semicolon. (9:1)\n      'victory',\n      // vector icons has some hidden issues that break NCL\n      '@expo/vector-icons',\n      ...(transpileModules || []),\n    ],\n    folders: nodeModulesPaths,\n  });\n\n  const transform = createMultiRuleTransformer({\n    // Specify which rules to use on a per-file basis, basically\n    // this is used to determine which modules are node modules, and which are application code.\n    getRuleType({ filename }) {\n      // Is a node module, and is not one of the impossible modules.\n      return nodeModuleMatcher.test(filename) && !impossibleNodeModuleMatcher.test(filename)\n        ? 'module'\n        : 'app';\n    },\n\n    // Order is very important, we use wild card matchers to transpile\n    // \"every unhandled node module\" and \"every unhandled application module\".\n    rules: [\n      // Match bob compiler modules, use the passthrough loader.\n      {\n        name: 'bob',\n        type: 'module',\n        test: createModuleMatcher({ moduleIds: ['.*/lib/commonjs/'], folders: nodeModulesPaths }),\n        transform: loaders.passthroughModule,\n        warn: true,\n      },\n      // Match React Native modules, convert them statically using sucrase.\n      {\n        name: 'react-native',\n        type: 'module',\n        test: createReactNativeMatcher({ folders: nodeModulesPaths }),\n        transform: loaders.reactNativeModule,\n        warn: true,\n      },\n      // Match Expo SDK modules, convert them statically using sucrase.\n      {\n        name: 'expo-module',\n        type: 'module',\n        test: createExpoMatcher({ folders: nodeModulesPaths }),\n        transform: loaders.expoModule,\n        warn: true,\n      },\n      // Match known problematic modules, convert them statically using an expensive, dynamic sucrase.\n      {\n        name: 'sucrase',\n        type: 'module',\n        test: createKnownCommunityMatcher({\n          folders: nodeModulesPaths,\n        }),\n        transform: loaders.untranspiledModule,\n        warn: true,\n      },\n      // Pass through any unhandled node modules as passthrough, this is where the most savings occur.\n      // Ideally, you want your project to pass all node modules through this loader.\n      // This should be the last \"module\" rule.\n      // Message library authors and ask them to ship their modules as pre-transpiled\n      // commonjs, to improve the development speed of your project.\n      {\n        name: 'skip-module',\n        type: 'module',\n        test: () => true,\n        transform: loaders.passthroughModule,\n      },\n      // All application code should be transpiled with the user's babel preset,\n      // this is the most expensive operation but provides the most customization to the user.\n      // The goal is to use this as sparingly as possible.\n      {\n        name: 'babel',\n        test: () => true,\n        transform: loaders.app,\n      },\n    ],\n  });\n\n  return {\n    transform,\n    getCacheKey,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}