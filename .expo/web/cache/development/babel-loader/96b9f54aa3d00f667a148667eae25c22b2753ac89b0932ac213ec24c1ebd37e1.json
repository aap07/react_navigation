{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createKnownCommunityMatcher = exports.createExpoMatcher = void 0;\nexports.createModuleMatcher = createModuleMatcher;\nexports.createReactNativeMatcher = void 0;\nfunction createModuleMatcher(_ref) {\n  var _ref$folders = _ref.folders,\n    folders = _ref$folders === void 0 ? ['node_modules'] : _ref$folders,\n    moduleIds = _ref.moduleIds;\n  var modulePathsGroup = folders.join('|');\n  var moduleMatchersGroup = moduleIds.join('|');\n  var moduleMatcherId = '^' + [modulePathsGroup, moduleMatchersGroup].map(function (value) {\n    return `(?:${value})`;\n  }).join('/');\n  return new RegExp(moduleMatcherId);\n}\nvar createReactNativeMatcher = function createReactNativeMatcher(_ref2) {\n  var folders = _ref2.folders;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: ['react-native/']\n  });\n};\nexports.createReactNativeMatcher = createReactNativeMatcher;\nvar createExpoMatcher = function createExpoMatcher(_ref3) {\n  var folders = _ref3.folders;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: ['expo', '@expo', '@use-expo']\n  });\n};\nexports.createExpoMatcher = createExpoMatcher;\nvar createKnownCommunityMatcher = function createKnownCommunityMatcher() {\n  var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    folders = _ref4.folders,\n    _ref4$moduleIds = _ref4.moduleIds,\n    moduleIds = _ref4$moduleIds === void 0 ? [] : _ref4$moduleIds;\n  return createModuleMatcher({\n    folders: folders,\n    moduleIds: [].concat(_toConsumableArray(moduleIds), ['@react-', '@(?:[\\\\w|-]+)/react-native', 'react-native-', 'victory-', 'native-base', 'styled-components', 'three/build/three.module.js', 'three/examples/jsm', 'html-elements/', 'react-navigation-'])\n  });\n};\nexports.createKnownCommunityMatcher = createKnownCommunityMatcher;","map":{"version":3,"names":["createModuleMatcher","_ref","_ref$folders","folders","moduleIds","modulePathsGroup","join","moduleMatchersGroup","moduleMatcherId","map","value","RegExp","createReactNativeMatcher","_ref2","exports","createExpoMatcher","_ref3","createKnownCommunityMatcher","_ref4","arguments","length","undefined","_ref4$moduleIds","concat","_toConsumableArray"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\metro-config\\src\\transformer\\createMatcher.ts"],"sourcesContent":["// Copyright 2021-present 650 Industries (Expo). All rights reserved.\n\nexport function createModuleMatcher({\n  folders = ['node_modules'],\n  moduleIds,\n}: {\n  folders?: string[];\n  moduleIds: string[];\n}) {\n  const modulePathsGroup = folders.join('|');\n\n  const moduleMatchersGroup = moduleIds.join('|');\n\n  const moduleMatcherId =\n    '^' + [modulePathsGroup, moduleMatchersGroup].map((value) => `(?:${value})`).join('/');\n\n  return new RegExp(moduleMatcherId);\n}\n\nexport const createReactNativeMatcher = ({ folders }: { folders?: string[] }) =>\n  createModuleMatcher({\n    folders,\n    moduleIds: ['react-native/'],\n  });\n\nexport const createExpoMatcher = ({ folders }: { folders?: string[] }) =>\n  createModuleMatcher({\n    folders,\n    // We'll work to start reducing this.\n    moduleIds: ['expo', '@expo', '@use-expo'],\n  });\n\n// TODO: Make this list as short as possible before releasing.\n// TODO: Add SDK version compat list.\nexport const createKnownCommunityMatcher = ({\n  folders,\n  moduleIds = [],\n}: {\n  folders?: string[];\n  moduleIds?: string[];\n} = {}) =>\n  createModuleMatcher({\n    folders,\n    moduleIds: [\n      ...moduleIds,\n      // The more complex, the longer the entire project takes...\n      // react-native-community, react-native-masked-view, react-native-picker, react-native-segmented-control, react-native\n      '@react-',\n      // @sentry/react-native\n      '@(?:[\\\\w|-]+)/react-native',\n      'react-native-',\n      'victory-',\n      'native-base',\n      'styled-components',\n      // three.js\n      'three/build/three.module.js',\n      'three/examples/jsm',\n      // Special case for testing expo/expo repo\n      'html-elements/',\n      // shared-element\n      'react-navigation-',\n    ],\n  });\n"],"mappings":";;;;;;;;;AAEO,SAASA,mBAAmBA,CAAAC,IAAA,EAMhC;EAAA,IAAAC,YAAA,GAAAD,IAAA,CALDE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,CAAC,cAAc,CAAC,GAAAA,YAAA;IAC1BE,SAAA,GAAAH,IAAA,CAAAG,SAAA;EAKA,IAAMC,gBAAgB,GAAGF,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;EAE1C,IAAMC,mBAAmB,GAAGH,SAAS,CAACE,IAAI,CAAC,GAAG,CAAC;EAE/C,IAAME,eAAe,GACnB,GAAG,GAAG,CAACH,gBAAgB,EAAEE,mBAAmB,CAAC,CAACE,GAAG,CAAE,UAAAC,KAAK;IAAA,OAAM,MAAKA,KAAM,GAAE;EAAA,EAAC,CAACJ,IAAI,CAAC,GAAG,CAAC;EAExF,OAAO,IAAIK,MAAM,CAACH,eAAe,CAAC;AACpC;AAEO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAAC,KAAA;EAAA,IAAMV,OAAA,GAAAU,KAAA,CAAAV,OAAA;EAAA,OACzCH,mBAAmB,CAAC;IAClBG,OAAO,EAAPA,OAAO;IACPC,SAAS,EAAE,CAAC,eAAe;EAC7B,CAAC,CAAC;AAAA;AAACU,OAAA,CAAAF,wBAAA,GAAAA,wBAAA;AAEE,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA;EAAA,IAAMb,OAAA,GAAAa,KAAA,CAAAb,OAAA;EAAA,OAClCH,mBAAmB,CAAC;IAClBG,OAAO,EAAPA,OAAO;IAEPC,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW;EAC1C,CAAC,CAAC;AAAA;AAGJU,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AACO,IAAME,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAA;EAAA,IAAAC,KAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAMpC,CAAC,CAAC;IALJhB,OAAO,GAAAe,KAAA,CAAPf,OAAO;IAAAmB,eAAA,GAAAJ,KAAA,CACPd,SAAS;IAATA,SAAS,GAAAkB,eAAA,cAAG,KAAAA,eAAA;EAAA,OAKZtB,mBAAmB,CAAC;IAClBG,OAAO,EAAPA,OAAO;IACPC,SAAS,KAAAmB,MAAA,CAAAC,kBAAA,CACJpB,SAAS,IAGZ,SAAS,EAET,4BAA4B,EAC5B,eAAe,EACf,UAAU,EACV,aAAa,EACb,mBAAmB,EAEnB,6BAA6B,EAC7B,oBAAoB,EAEpB,gBAAgB,EAEhB,mBAAmB;EAEvB,CAAC,CAAC;AAAA;AAACU,OAAA,CAAAG,2BAAA,GAAAA,2BAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}