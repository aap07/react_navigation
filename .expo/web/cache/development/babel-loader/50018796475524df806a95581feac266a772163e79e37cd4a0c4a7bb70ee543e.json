{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startReactDevToolsProxyAsync = startReactDevToolsProxyAsync;\nexports.closeReactDevToolsProxy = closeReactDevToolsProxy;\nexports.addReactDevToolsReloadListener = addReactDevToolsReloadListener;\nvar _assert = _interopRequireDefault(require(\"assert\"));\nvar _events = require(\"events\");\nvar _ws = _interopRequireDefault(require(\"ws\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar serverInstance = null;\nvar eventEmitter = new _events.EventEmitter();\nvar RELOAD_COMMAND = \"Expo::RELOAD\";\nfunction startReactDevToolsProxyAsync(_x) {\n  return _startReactDevToolsProxyAsync.apply(this, arguments);\n}\nfunction _startReactDevToolsProxyAsync() {\n  _startReactDevToolsProxyAsync = _asyncToGenerator(function* (options) {\n    if (serverInstance != null) {\n      return;\n    }\n    var ref;\n    serverInstance = new _ws.default.WebSocketServer({\n      port: (ref = options == null ? void 0 : options.port) != null ? ref : 8097\n    });\n    serverInstance.on(\"connection\", function connection(ws) {\n      ws.on(\"message\", function message(rawData, isBinary) {\n        (0, _assert).default(!isBinary);\n        var data = rawData.toString();\n        if (data === RELOAD_COMMAND) {\n          closeAllOtherClients(ws);\n          eventEmitter.emit(RELOAD_COMMAND);\n          return;\n        }\n        serverInstance == null ? void 0 : serverInstance.clients.forEach(function each(client) {\n          if (client !== ws && client.readyState === _ws.default.OPEN) {\n            client.send(data, {\n              binary: isBinary\n            });\n          }\n        });\n      });\n    });\n    serverInstance.on(\"close\", function () {\n      serverInstance = null;\n    });\n  });\n  return _startReactDevToolsProxyAsync.apply(this, arguments);\n}\nfunction closeReactDevToolsProxy() {\n  serverInstance == null ? void 0 : serverInstance.close();\n  serverInstance = null;\n}\nfunction addReactDevToolsReloadListener(listener) {\n  eventEmitter.addListener(RELOAD_COMMAND, listener);\n}\nfunction closeAllOtherClients(self) {\n  serverInstance == null ? void 0 : serverInstance.clients.forEach(function each(client) {\n    if (client !== self && client.readyState === _ws.default.OPEN) {\n      client.close();\n    }\n  });\n}","map":{"version":3,"names":["_asyncToGenerator","require","startReactDevToolsProxyAsync","closeReactDevToolsProxy","addReactDevToolsReloadListener","_assert","_interopRequireDefault","_events","_ws","serverInstance","eventEmitter","EventEmitter","RELOAD_COMMAND","_x","_startReactDevToolsProxyAsync","apply","arguments","options","ref","default","WebSocketServer","port","on","connection","ws","message","rawData","isBinary","data","toString","closeAllOtherClients","emit","clients","forEach","each","client","readyState","OPEN","send","binary","close","listener","addListener","self"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\start\\server\\ReactDevToolsProxy.ts"],"sourcesContent":["import assert from 'assert';\nimport { EventEmitter } from 'events';\nimport WebSocket from 'ws';\n\nlet serverInstance: WebSocket.WebSocketServer | null = null;\n\nconst eventEmitter = new EventEmitter();\n\n/**\n * Private command to support DevTools frontend reload.\n *\n * The react-devtools maintains state between frontend(webpage) and backend(app).\n * If we reload the frontend without reloading the app, the react-devtools will stuck on incorrect state.\n * We introduce this special reload command.\n * As long as the frontend reload, we will close app's WebSocket connection and tell app to reconnect again.\n */\nconst RELOAD_COMMAND = 'Expo::RELOAD';\n\n/**\n * Start the react-devtools WebSocket proxy server\n */\nexport async function startReactDevToolsProxyAsync(options?: { port: number }) {\n  if (serverInstance != null) {\n    return;\n  }\n\n  serverInstance = new WebSocket.WebSocketServer({ port: options?.port ?? 8097 });\n\n  serverInstance.on('connection', function connection(ws) {\n    ws.on('message', function message(rawData, isBinary) {\n      assert(!isBinary);\n      const data = rawData.toString();\n\n      if (data === RELOAD_COMMAND) {\n        closeAllOtherClients(ws);\n        eventEmitter.emit(RELOAD_COMMAND);\n        return;\n      }\n\n      serverInstance?.clients.forEach(function each(client) {\n        if (client !== ws && client.readyState === WebSocket.OPEN) {\n          client.send(data, { binary: isBinary });\n        }\n      });\n    });\n  });\n\n  serverInstance.on('close', function () {\n    serverInstance = null;\n  });\n}\n\n/**\n * Close the WebSocket server\n */\nexport function closeReactDevToolsProxy() {\n  serverInstance?.close();\n  serverInstance = null;\n}\n\n/**\n * add event listener from react-devtools frontend reload\n */\nexport function addReactDevToolsReloadListener(listener: (...args: any[]) => void) {\n  eventEmitter.addListener(RELOAD_COMMAND, listener);\n}\n\n/**\n * Close all other WebSocket clients other than the current `self` client\n */\nfunction closeAllOtherClients(self: WebSocket.WebSocket) {\n  serverInstance?.clients.forEach(function each(client) {\n    if (client !== self && client.readyState === WebSocket.OPEN) {\n      client.close();\n    }\n  });\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAqBsBC,4BAA4B,GAA5BA,4BAA4B;QAkClCC,uBAAuB,GAAvBA,uBAAuB;QAQvBC,8BAA8B,GAA9BA,8BAA8B;AA/D3B,IAAAC,OAAQ,GAAAC,sBAAA,CAAAL,OAAA,CAAR,QAAQ;AACE,IAAAM,OAAQ,GAAAN,OAAA,CAAR,QAAQ;AACf,IAAAO,GAAI,GAAAF,sBAAA,CAAAL,OAAA,CAAJ,IAAI;;;;;;AAE1B,IAAIQ,cAAc,GAAqC,IAAI;AAE3D,IAAMC,YAAY,GAAG,IAAIH,OAAY,CAAAI,YAAA,EAAE;AAUvC,IAAMC,cAAc,GAAG,cAAc;AAAC,SAKhBV,4BAA4BA,CAAAW,EAAA;EAAA,OAAAC,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,8BAAA;EAAAA,6BAAA,GAAAd,iBAAA,CAA3C,WAA4CiB,OAA0B,EAAE;IAC7E,IAAIR,cAAc,IAAI,IAAI,EAAE;MAC1B;;QAGqDS,GAAa;IAApET,cAAc,GAAG,IAAID,GAAS,CAAAW,OAAA,CAACC,eAAe,CAAC;MAAEC,IAAI,EAAE,CAAAH,GAAa,GAAbD,OAAO,QAAM,GAAb,MAAa,GAAbA,OAAO,CAAEI,IAAI,YAAbH,GAAa,GAAI;KAAM,CAAC;IAE/ET,cAAc,CAACa,EAAE,CAAC,YAAY,EAAE,SAASC,UAAUA,CAACC,EAAE,EAAE;MACtDA,EAAE,CAACF,EAAE,CAAC,SAAS,EAAE,SAASG,OAAOA,CAACC,OAAO,EAAEC,QAAQ,EAAE;QACnD,IAAAtB,OAAM,EAAWc,OAAX,CAAC,CAACQ,QAAQ,CAAC;QACjB,IAAMC,IAAI,GAAGF,OAAO,CAACG,QAAQ,EAAE;QAE/B,IAAID,IAAI,KAAKhB,cAAc,EAAE;UAC3BkB,oBAAoB,CAACN,EAAE,CAAC;UACxBd,YAAY,CAACqB,IAAI,CAACnB,cAAc,CAAC;UACjC;;QAGFH,cAAc,QAAS,GAAvB,MAAuB,GAAvBA,cAAc,CAAEuB,OAAO,CAACC,OAAO,CAAC,SAASC,IAAIA,CAACC,MAAM,EAAE;UACpD,IAAIA,MAAM,KAAKX,EAAE,IAAIW,MAAM,CAACC,UAAU,KAAK5B,GAAS,CAAAW,OAAA,CAACkB,IAAI,EAAE;YACzDF,MAAM,CAACG,IAAI,CAACV,IAAI,EAAE;cAAEW,MAAM,EAAEZ;aAAU,CAAC;;SAE1C,CAAC;OACH,CAAC;KACH,CAAC;IAEFlB,cAAc,CAACa,EAAE,CAAC,OAAO,EAAE,YAAY;MACrCb,cAAc,GAAG,IAAI;KACtB,CAAC;GACH;EAAA,OAAAK,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAKM,SAASb,uBAAuBA,CAAA,EAAG;EACxCM,cAAc,QAAO,GAArB,MAAqB,GAArBA,cAAc,CAAE+B,KAAK,EAAE;EACvB/B,cAAc,GAAG,IAAI;;AAMhB,SAASL,8BAA8BA,CAACqC,QAAkC,EAAE;EACjF/B,YAAY,CAACgC,WAAW,CAAC9B,cAAc,EAAE6B,QAAQ,CAAC;;AAMpD,SAASX,oBAAoBA,CAACa,IAAyB,EAAE;EACvDlC,cAAc,QAAS,GAAvB,MAAuB,GAAvBA,cAAc,CAAEuB,OAAO,CAACC,OAAO,CAAC,SAASC,IAAIA,CAACC,MAAM,EAAE;IACpD,IAAIA,MAAM,KAAKQ,IAAI,IAAIR,MAAM,CAACC,UAAU,KAAK5B,GAAS,CAAAW,OAAA,CAACkB,IAAI,EAAE;MAC3DF,MAAM,CAACK,KAAK,EAAE;;GAEjB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}