{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _wrapNativeSuper = require(\"@babel/runtime/helpers/wrapNativeSuper\");\nvar _excluded = [\"shouldRepoUpdate\"],\n  _excluded2 = [\"formatWarning\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getImprovedPodInstallError = exports.getPodRepoUpdateMessage = exports.getPodUpdateMessage = exports.CocoaPodsPackageManager = exports.extractMissingDependencyError = exports.CocoaPodsError = void 0;\nvar spawn_async_1 = __importDefault(require(\"@expo/spawn-async\"));\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar fs_1 = require(\"fs\");\nvar os_1 = __importDefault(require(\"os\"));\nvar path_1 = __importDefault(require(\"path\"));\nvar spawn_1 = require(\"../utils/spawn\");\nvar CocoaPodsError = function (_Error) {\n  _inherits(CocoaPodsError, _Error);\n  var _super = _createSuper(CocoaPodsError);\n  function CocoaPodsError(message, code, cause) {\n    var _this;\n    _classCallCheck(this, CocoaPodsError);\n    _this = _super.call(this, cause ? `${message}\\n└─ Cause: ${cause.message}` : message);\n    _this.code = code;\n    _this.cause = cause;\n    _this.name = 'CocoaPodsError';\n    _this.isPackageManagerError = true;\n    return _this;\n  }\n  return _createClass(CocoaPodsError);\n}(_wrapNativeSuper(Error));\nexports.CocoaPodsError = CocoaPodsError;\nfunction extractMissingDependencyError(errorOutput) {\n  var results = errorOutput.match(/Unable to find a specification for ['\"`]([\\w-_\\d\\s]+)['\"`] depended upon by ['\"`]([\\w-_\\d\\s]+)['\"`]/);\n  if (results) {\n    return [results[1], results[2]];\n  }\n  return null;\n}\nexports.extractMissingDependencyError = extractMissingDependencyError;\nvar CocoaPodsPackageManager = function () {\n  function CocoaPodsPackageManager(_ref) {\n    var cwd = _ref.cwd,\n      silent = _ref.silent;\n    _classCallCheck(this, CocoaPodsPackageManager);\n    this.silent = !!silent;\n    this.options = {\n      cwd: cwd,\n      stdio: 'pipe'\n    };\n  }\n  _createClass(CocoaPodsPackageManager, [{\n    key: \"name\",\n    get: function get() {\n      return 'CocoaPods';\n    }\n  }, {\n    key: \"installAsync\",\n    value: function () {\n      var _installAsync2 = _asyncToGenerator(function* () {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          spinner = _ref2.spinner;\n        yield this._installAsync({\n          spinner: spinner\n        });\n      });\n      function installAsync() {\n        return _installAsync2.apply(this, arguments);\n      }\n      return installAsync;\n    }()\n  }, {\n    key: \"isCLIInstalledAsync\",\n    value: function isCLIInstalledAsync() {\n      return CocoaPodsPackageManager.isCLIInstalledAsync(this.options);\n    }\n  }, {\n    key: \"installCLIAsync\",\n    value: function installCLIAsync() {\n      return CocoaPodsPackageManager.installCLIAsync({\n        nonInteractive: true,\n        spawnOptions: this.options\n      });\n    }\n  }, {\n    key: \"handleInstallErrorAsync\",\n    value: function () {\n      var _handleInstallErrorAsync = _asyncToGenerator(function* (_ref3) {\n        var error = _ref3.error,\n          _ref3$shouldUpdate = _ref3.shouldUpdate,\n          shouldUpdate = _ref3$shouldUpdate === void 0 ? true : _ref3$shouldUpdate,\n          _ref3$updatedPackages = _ref3.updatedPackages,\n          updatedPackages = _ref3$updatedPackages === void 0 ? [] : _ref3$updatedPackages,\n          spinner = _ref3.spinner;\n        if (!error.output) {\n          throw error;\n        }\n        if (!shouldUpdate) {\n          throw getImprovedPodInstallError(error, {\n            cwd: this.options.cwd\n          });\n        }\n        var errorOutput = error.output.join(os_1.default.EOL).trim();\n        var _getPodUpdateMessage = getPodUpdateMessage(errorOutput),\n          updatePackage = _getPodUpdateMessage.updatePackage,\n          shouldUpdateRepo = _getPodUpdateMessage.shouldUpdateRepo;\n        if (!updatePackage || updatedPackages.includes(updatePackage)) {\n          return yield this._installAsync({\n            spinner: spinner,\n            shouldRepoUpdate: true,\n            shouldUpdate: false,\n            updatedPackages: updatedPackages\n          });\n        }\n        updatedPackages.push(updatePackage);\n        return yield this.runInstallTypeCommandAsync(['update', updatePackage, shouldUpdateRepo ? '' : '--no-repo-update'].filter(Boolean), {\n          formatWarning: function formatWarning() {\n            var updateMessage = `Failed to update ${chalk_1.default.bold(updatePackage)}. Attempting to update the repo instead.`;\n            return updateMessage;\n          },\n          spinner: spinner,\n          updatedPackages: updatedPackages\n        });\n      });\n      function handleInstallErrorAsync(_x) {\n        return _handleInstallErrorAsync.apply(this, arguments);\n      }\n      return handleInstallErrorAsync;\n    }()\n  }, {\n    key: \"_installAsync\",\n    value: function () {\n      var _installAsync3 = _asyncToGenerator(function* () {\n        var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var shouldRepoUpdate = _ref4.shouldRepoUpdate,\n          props = _objectWithoutProperties(_ref4, _excluded);\n        return yield this.runInstallTypeCommandAsync(['install', shouldRepoUpdate ? '--repo-update' : ''].filter(Boolean), _objectSpread({\n          formatWarning: function formatWarning(error) {\n            return getPodRepoUpdateMessage(error.output.join(os_1.default.EOL).trim()).message;\n          }\n        }, props));\n      });\n      function _installAsync() {\n        return _installAsync3.apply(this, arguments);\n      }\n      return _installAsync;\n    }()\n  }, {\n    key: \"runInstallTypeCommandAsync\",\n    value: function () {\n      var _runInstallTypeCommandAsync = _asyncToGenerator(function* (command) {\n        var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var formatWarning = _ref5.formatWarning,\n          props = _objectWithoutProperties(_ref5, _excluded2);\n        try {\n          return yield this._runAsync(command);\n        } catch (error) {\n          if (formatWarning) {\n            var warning = formatWarning(error);\n            if (props.spinner) {\n              props.spinner.text = chalk_1.default.bold(warning);\n            }\n            if (!this.silent) {\n              console.warn(chalk_1.default.yellow(warning));\n            }\n          }\n          return yield this.handleInstallErrorAsync(_objectSpread({\n            error: error\n          }, props));\n        }\n      });\n      function runInstallTypeCommandAsync(_x2) {\n        return _runInstallTypeCommandAsync.apply(this, arguments);\n      }\n      return runInstallTypeCommandAsync;\n    }()\n  }, {\n    key: \"addWithParametersAsync\",\n    value: function () {\n      var _addWithParametersAsync = _asyncToGenerator(function* (names, parameters) {\n        throw new Error('Unimplemented');\n      });\n      function addWithParametersAsync(_x3, _x4) {\n        return _addWithParametersAsync.apply(this, arguments);\n      }\n      return addWithParametersAsync;\n    }()\n  }, {\n    key: \"addAsync\",\n    value: function addAsync() {\n      var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      throw new Error('Unimplemented');\n    }\n  }, {\n    key: \"addDevAsync\",\n    value: function addDevAsync() {\n      var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      throw new Error('Unimplemented');\n    }\n  }, {\n    key: \"addGlobalAsync\",\n    value: function addGlobalAsync() {\n      var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      throw new Error('Unimplemented');\n    }\n  }, {\n    key: \"removeAsync\",\n    value: function removeAsync() {\n      var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      throw new Error('Unimplemented');\n    }\n  }, {\n    key: \"removeDevAsync\",\n    value: function removeDevAsync() {\n      var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      throw new Error('Unimplemented');\n    }\n  }, {\n    key: \"removeGlobalAsync\",\n    value: function removeGlobalAsync() {\n      var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      throw new Error('Unimplemented');\n    }\n  }, {\n    key: \"versionAsync\",\n    value: function () {\n      var _versionAsync = _asyncToGenerator(function* () {\n        var _yield = yield (0, spawn_async_1.default)('pod', ['--version'], this.options),\n          stdout = _yield.stdout;\n        return stdout.trim();\n      });\n      function versionAsync() {\n        return _versionAsync.apply(this, arguments);\n      }\n      return versionAsync;\n    }()\n  }, {\n    key: \"configAsync\",\n    value: function () {\n      var _configAsync = _asyncToGenerator(function* (key) {\n        throw new Error('Unimplemented');\n      });\n      function configAsync(_x5) {\n        return _configAsync.apply(this, arguments);\n      }\n      return configAsync;\n    }()\n  }, {\n    key: \"removeLockfileAsync\",\n    value: function () {\n      var _removeLockfileAsync = _asyncToGenerator(function* () {\n        throw new Error('Unimplemented');\n      });\n      function removeLockfileAsync() {\n        return _removeLockfileAsync.apply(this, arguments);\n      }\n      return removeLockfileAsync;\n    }()\n  }, {\n    key: \"uninstallAsync\",\n    value: function () {\n      var _uninstallAsync = _asyncToGenerator(function* () {\n        throw new Error('Unimplemented');\n      });\n      function uninstallAsync() {\n        return _uninstallAsync.apply(this, arguments);\n      }\n      return uninstallAsync;\n    }()\n  }, {\n    key: \"podRepoUpdateAsync\",\n    value: function () {\n      var _podRepoUpdateAsync = _asyncToGenerator(function* () {\n        try {\n          yield this._runAsync(['repo', 'update']);\n        } catch (error) {\n          var _error$stderr;\n          error.message = error.message || ((_error$stderr = error.stderr) != null ? _error$stderr : error.stdout);\n          throw new CocoaPodsError('The command `pod install --repo-update` failed', 'COMMAND_FAILED', error);\n        }\n      });\n      function podRepoUpdateAsync() {\n        return _podRepoUpdateAsync.apply(this, arguments);\n      }\n      return podRepoUpdateAsync;\n    }()\n  }, {\n    key: \"_runAsync\",\n    value: function () {\n      var _runAsync2 = _asyncToGenerator(function* (args) {\n        if (!this.silent) {\n          console.log(`> pod ${args.join(' ')}`);\n        }\n        var promise = (0, spawn_async_1.default)('pod', [].concat(_toConsumableArray(args), ['--ansi']), _objectSpread(_objectSpread({}, this.options), {}, {\n          stdio: 'pipe'\n        }));\n        if (!this.silent) {\n          if (promise.child.stdout) {\n            promise.child.stdout.pipe(process.stdout);\n          }\n        }\n        return yield promise;\n      });\n      function _runAsync(_x6) {\n        return _runAsync2.apply(this, arguments);\n      }\n      return _runAsync;\n    }()\n  }], [{\n    key: \"getPodProjectRoot\",\n    value: function getPodProjectRoot(projectRoot) {\n      if (CocoaPodsPackageManager.isUsingPods(projectRoot)) return projectRoot;\n      var iosProject = path_1.default.join(projectRoot, 'ios');\n      if (CocoaPodsPackageManager.isUsingPods(iosProject)) return iosProject;\n      var macOsProject = path_1.default.join(projectRoot, 'macos');\n      if (CocoaPodsPackageManager.isUsingPods(macOsProject)) return macOsProject;\n      return null;\n    }\n  }, {\n    key: \"isUsingPods\",\n    value: function isUsingPods(projectRoot) {\n      return (0, fs_1.existsSync)(path_1.default.join(projectRoot, 'Podfile'));\n    }\n  }, {\n    key: \"gemInstallCLIAsync\",\n    value: function () {\n      var _gemInstallCLIAsync = _asyncToGenerator(function* () {\n        var nonInteractive = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var spawnOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          stdio: 'inherit'\n        };\n        var options = ['install', 'cocoapods', '--no-document'];\n        try {\n          yield (0, spawn_async_1.default)('gem', options, spawnOptions);\n        } catch (error) {\n          if (nonInteractive) {\n            throw new CocoaPodsError('Failed to install CocoaPods CLI with gem (recommended)', 'COMMAND_FAILED', error);\n          }\n          yield (0, spawn_1.spawnSudoAsync)(['gem'].concat(options), spawnOptions);\n        }\n      });\n      function gemInstallCLIAsync() {\n        return _gemInstallCLIAsync.apply(this, arguments);\n      }\n      return gemInstallCLIAsync;\n    }()\n  }, {\n    key: \"brewLinkCLIAsync\",\n    value: function () {\n      var _brewLinkCLIAsync = _asyncToGenerator(function* () {\n        var spawnOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          stdio: 'inherit'\n        };\n        yield (0, spawn_async_1.default)('brew', ['link', 'cocoapods'], spawnOptions);\n      });\n      function brewLinkCLIAsync() {\n        return _brewLinkCLIAsync.apply(this, arguments);\n      }\n      return brewLinkCLIAsync;\n    }()\n  }, {\n    key: \"brewInstallCLIAsync\",\n    value: function () {\n      var _brewInstallCLIAsync = _asyncToGenerator(function* () {\n        var spawnOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          stdio: 'inherit'\n        };\n        yield (0, spawn_async_1.default)('brew', ['install', 'cocoapods'], spawnOptions);\n      });\n      function brewInstallCLIAsync() {\n        return _brewInstallCLIAsync.apply(this, arguments);\n      }\n      return brewInstallCLIAsync;\n    }()\n  }, {\n    key: \"installCLIAsync\",\n    value: function () {\n      var _installCLIAsync = _asyncToGenerator(function* (_ref6) {\n        var _ref6$nonInteractive = _ref6.nonInteractive,\n          nonInteractive = _ref6$nonInteractive === void 0 ? false : _ref6$nonInteractive,\n          _ref6$spawnOptions = _ref6.spawnOptions,\n          spawnOptions = _ref6$spawnOptions === void 0 ? {\n            stdio: 'inherit'\n          } : _ref6$spawnOptions;\n        if (!spawnOptions) {\n          spawnOptions = {\n            stdio: 'inherit'\n          };\n        }\n        var silent = !!spawnOptions.ignoreStdio;\n        try {\n          !silent && console.log(`\\u203A Attempting to install CocoaPods CLI with Gem`);\n          yield CocoaPodsPackageManager.gemInstallCLIAsync(nonInteractive, spawnOptions);\n          !silent && console.log(`\\u203A Successfully installed CocoaPods CLI with Gem`);\n          return true;\n        } catch (error) {\n          if (!silent) {\n            var _error$stderr2;\n            console.log(chalk_1.default.yellow(`\\u203A Failed to install CocoaPods CLI with Gem`));\n            console.log(chalk_1.default.red((_error$stderr2 = error.stderr) != null ? _error$stderr2 : error.message));\n            console.log(`\\u203A Attempting to install CocoaPods CLI with Homebrew`);\n          }\n          try {\n            yield CocoaPodsPackageManager.brewInstallCLIAsync(spawnOptions);\n            if (!(yield CocoaPodsPackageManager.isCLIInstalledAsync(spawnOptions))) {\n              try {\n                yield CocoaPodsPackageManager.brewLinkCLIAsync(spawnOptions);\n                if (!(yield CocoaPodsPackageManager.isCLIInstalledAsync(spawnOptions))) {\n                  throw new CocoaPodsError('CLI could not be installed automatically with gem or Homebrew, please install CocoaPods manually and try again', 'NO_CLI', error);\n                }\n              } catch (error) {\n                throw new CocoaPodsError('Homebrew installation appeared to succeed but CocoaPods CLI not found in PATH and unable to link.', 'NO_CLI', error);\n              }\n            }\n            !silent && console.log(`\\u203A Successfully installed CocoaPods CLI with Homebrew`);\n            return true;\n          } catch (error) {\n            !silent && console.warn(chalk_1.default.yellow(`\\u203A Failed to install CocoaPods with Homebrew. Please install CocoaPods CLI manually and try again.`));\n            throw new CocoaPodsError(`Failed to install CocoaPods with Homebrew. Please install CocoaPods CLI manually and try again.`, 'NO_CLI', error);\n          }\n        }\n      });\n      function installCLIAsync(_x7) {\n        return _installCLIAsync.apply(this, arguments);\n      }\n      return installCLIAsync;\n    }()\n  }, {\n    key: \"isAvailable\",\n    value: function isAvailable(projectRoot, silent) {\n      if (process.platform !== 'darwin') {\n        !silent && console.log(chalk_1.default.red('CocoaPods is only supported on macOS machines'));\n        return false;\n      }\n      if (!CocoaPodsPackageManager.isUsingPods(projectRoot)) {\n        !silent && console.log(chalk_1.default.yellow('CocoaPods is not supported in this project'));\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"isCLIInstalledAsync\",\n    value: function () {\n      var _isCLIInstalledAsync = _asyncToGenerator(function* () {\n        var spawnOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          stdio: 'inherit'\n        };\n        try {\n          yield (0, spawn_async_1.default)('pod', ['--version'], spawnOptions);\n          return true;\n        } catch (_unused) {\n          return false;\n        }\n      });\n      function isCLIInstalledAsync() {\n        return _isCLIInstalledAsync.apply(this, arguments);\n      }\n      return isCLIInstalledAsync;\n    }()\n  }]);\n  return CocoaPodsPackageManager;\n}();\nexports.CocoaPodsPackageManager = CocoaPodsPackageManager;\nfunction shouldPodRepoUpdate(errorOutput) {\n  var output = errorOutput;\n  var isPodRepoUpdateError = output.includes('pod repo update') || output.includes('--no-repo-update');\n  return isPodRepoUpdateError;\n}\nfunction getPodUpdateMessage(output) {\n  var _props$;\n  var props = output.match(/run ['\"`]pod update ([\\w-_\\d/]+)( --no-repo-update)?['\"`] to apply changes/);\n  return {\n    updatePackage: (_props$ = props == null ? void 0 : props[1]) != null ? _props$ : null,\n    shouldUpdateRepo: !(props != null && props[2])\n  };\n}\nexports.getPodUpdateMessage = getPodUpdateMessage;\nfunction getPodRepoUpdateMessage(errorOutput) {\n  var warningInfo = extractMissingDependencyError(errorOutput);\n  var brokenPackage = getPodUpdateMessage(errorOutput);\n  var message;\n  if (warningInfo) {\n    message = `Couldn't install: ${warningInfo[1]} » ${chalk_1.default.underline(warningInfo[0])}.`;\n  } else if (brokenPackage != null && brokenPackage.updatePackage) {\n    message = `Couldn't install: ${brokenPackage == null ? void 0 : brokenPackage.updatePackage}.`;\n  } else {\n    message = `Couldn't install Pods.`;\n  }\n  message += ` Updating the Pods project and trying again...`;\n  return _objectSpread({\n    message: message\n  }, brokenPackage);\n}\nexports.getPodRepoUpdateMessage = getPodRepoUpdateMessage;\nfunction getImprovedPodInstallError(error, _ref7) {\n  var _ref7$cwd = _ref7.cwd,\n    cwd = _ref7$cwd === void 0 ? process.cwd() : _ref7$cwd;\n  var errorOutput = error.output.join(os_1.default.EOL).trim();\n  if (error.stdout.match(/No [`'\"]Podfile[`'\"] found in the project directory/)) {\n    error.message = `No Podfile found in directory: ${cwd}. Ensure CocoaPods is setup any try again.`;\n  } else if (shouldPodRepoUpdate(errorOutput)) {\n    var warningInfo = extractMissingDependencyError(errorOutput);\n    var reason;\n    if (warningInfo) {\n      reason = `Couldn't install: ${warningInfo[1]} » ${chalk_1.default.underline(warningInfo[0])}`;\n    } else {\n      reason = `This is often due to native package versions mismatching`;\n    }\n    var solution;\n    if (warningInfo != null && warningInfo[0]) {\n      if (warningInfo[0].match(/^(?:@?expo|@?react)(-|\\/)/)) {\n        solution = `Ensure the node module \"${warningInfo[0]}\" is installed in your project, then run 'npx pod-install' to try again.`;\n      } else {\n        solution = `Ensure the CocoaPod \"${warningInfo[0]}\" is installed in your project, then run 'npx pod-install' to try again.`;\n      }\n    } else {\n      solution = `Try deleting the 'ios/Pods' folder or the 'ios/Podfile.lock' file and running 'npx pod-install' to resolve.`;\n    }\n    error.message = `${reason}. ${solution}`;\n    if (error.stdout) {\n      var cocoapodsDebugInfo = error.stdout.split(os_1.default.EOL);\n      var firstWarning = cocoapodsDebugInfo.findIndex(function (v) {\n        return v.startsWith('[!]');\n      });\n      if (firstWarning !== -1) {\n        var warning = cocoapodsDebugInfo.slice(firstWarning).join(os_1.default.EOL);\n        error.message += `\\n\\n${chalk_1.default.gray(warning)}`;\n      }\n    }\n    return new CocoaPodsError('Command `pod install --repo-update` failed.', 'COMMAND_FAILED', error);\n  } else {\n    var _error$stdout$match;\n    var stderr = error.stderr.trim();\n    var usefulError = (_error$stdout$match = error.stdout.match(/\\[!\\]\\s((?:.|\\n)*)/)) == null ? void 0 : _error$stdout$match[1];\n    if (usefulError) {\n      var _error$message;\n      if ((_error$message = error.message) != null && _error$message.match(/pod exited with non-zero code: 1/)) {\n        error.message = '';\n      }\n      stderr = null;\n    }\n    error.message = [usefulError, error.message, stderr].filter(Boolean).join('\\n');\n  }\n  return new CocoaPodsError('Command `pod install` failed.', 'COMMAND_FAILED', error);\n}\nexports.getImprovedPodInstallError = getImprovedPodInstallError;","map":{"version":3,"names":["spawn_async_1","__importDefault","require","chalk_1","fs_1","os_1","path_1","spawn_1","CocoaPodsError","_Error","_inherits","_super","_createSuper","message","code","cause","_this","_classCallCheck","call","name","isPackageManagerError","_createClass","_wrapNativeSuper","Error","exports","extractMissingDependencyError","errorOutput","results","match","CocoaPodsPackageManager","_ref","cwd","silent","options","stdio","key","get","value","_installAsync2","_asyncToGenerator","_ref2","arguments","length","undefined","spinner","_installAsync","installAsync","apply","isCLIInstalledAsync","installCLIAsync","nonInteractive","spawnOptions","_handleInstallErrorAsync","_ref3","error","_ref3$shouldUpdate","shouldUpdate","_ref3$updatedPackages","updatedPackages","output","getImprovedPodInstallError","join","default","EOL","trim","_getPodUpdateMessage","getPodUpdateMessage","updatePackage","shouldUpdateRepo","includes","shouldRepoUpdate","push","runInstallTypeCommandAsync","filter","Boolean","formatWarning","updateMessage","bold","handleInstallErrorAsync","_x","_installAsync3","_ref4","props","_objectWithoutProperties","_excluded","_objectSpread","getPodRepoUpdateMessage","_runInstallTypeCommandAsync","command","_ref5","_excluded2","_runAsync","warning","text","console","warn","yellow","_x2","_addWithParametersAsync","names","parameters","addWithParametersAsync","_x3","_x4","addAsync","addDevAsync","addGlobalAsync","removeAsync","removeDevAsync","removeGlobalAsync","_versionAsync","_yield","stdout","versionAsync","_configAsync","configAsync","_x5","_removeLockfileAsync","removeLockfileAsync","_uninstallAsync","uninstallAsync","_podRepoUpdateAsync","_error$stderr","stderr","podRepoUpdateAsync","_runAsync2","args","log","promise","concat","_toConsumableArray","child","pipe","process","_x6","getPodProjectRoot","projectRoot","isUsingPods","iosProject","macOsProject","existsSync","_gemInstallCLIAsync","spawnSudoAsync","gemInstallCLIAsync","_brewLinkCLIAsync","brewLinkCLIAsync","_brewInstallCLIAsync","brewInstallCLIAsync","_installCLIAsync","_ref6","_ref6$nonInteractive","_ref6$spawnOptions","ignoreStdio","_error$stderr2","red","_x7","isAvailable","platform","_isCLIInstalledAsync","_unused","shouldPodRepoUpdate","isPodRepoUpdateError","_props$","warningInfo","brokenPackage","underline","_ref7","_ref7$cwd","reason","solution","cocoapodsDebugInfo","split","firstWarning","findIndex","v","startsWith","slice","gray","_error$stdout$match","usefulError","_error$message"],"sources":["../../src/ios/CocoaPodsPackageManager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}