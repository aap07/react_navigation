{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport * as React from 'react';\nvar MaskedView = function (_MaskedViewBase) {\n  _inherits(MaskedView, _MaskedViewBase);\n  var _super = _createSuper(MaskedView);\n  function MaskedView() {\n    _classCallCheck(this, MaskedView);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(MaskedView);\n}(MaskedViewBase);\nexport { MaskedView as default };","map":{"version":3,"names":["React","MaskedView","_MaskedViewBase","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","MaskedViewBase","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/masked-view/types/index.d.ts"],"sourcesContent":["// CREDITS: These types are based on the original work made by all the people who contributed to @types/react-native\n\nimport * as React from 'react';\nimport * as ReactNative from 'react-native';\n\ninterface MaskedViewProps extends ReactNative.ViewProps {\n  maskElement: React.ReactElement;\n}\n/**\n * @see https://github.com/react-native-community/react-native-masked-view\n */\ndeclare class MaskedViewComponent extends React.Component<MaskedViewProps> {}\ndeclare const MaskedViewBase: ReactNative.Constructor<\n  ReactNative.NativeMethodsMixin\n> &\n  typeof MaskedViewComponent;\nexport default class MaskedView extends MaskedViewBase {}\n"],"mappings":";;;;;;;AAEA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,IAcVC,UAAU,aAAAC,eAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,eAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAAA,SAAAA,WAAA;IAAAK,eAAA,OAAAL,UAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAA,OAAAC,YAAA,CAAAR,UAAA;AAAA,EAASS,cAAc;AAAA,SAAjCT,UAAU,IAAAU,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}