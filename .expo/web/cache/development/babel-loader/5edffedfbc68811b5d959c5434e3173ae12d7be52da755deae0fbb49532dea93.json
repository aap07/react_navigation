{"ast":null,"code":"import DraggingGestureHandler from \"./DraggingGestureHandler\";","map":{"version":3,"names":["DraggingGestureHandler"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/react-native-gesture-handler/lib/typescript/web_hammer/FlingGestureHandler.d.ts"],"sourcesContent":["import DraggingGestureHandler from './DraggingGestureHandler';\nimport { HammerInputExt } from './GestureHandler';\ndeclare class FlingGestureHandler extends DraggingGestureHandler {\n    get name(): string;\n    get NativeGestureClass(): SwipeRecognizerStatic;\n    onGestureActivated(event: HammerInputExt): void;\n    onRawEvent(ev: HammerInputExt): void;\n    getHammerConfig(): {\n        pointers: any;\n        direction: number;\n    };\n    getTargetDirections(direction: number): number[];\n    getDirection(): number;\n    isGestureEnabledForEvent({ numberOfPointers }: any, _recognizer: any, { maxPointers: pointerLength }: any): {\n        failed: boolean;\n        success?: undefined;\n    } | {\n        success: boolean;\n        failed?: undefined;\n    };\n    updateGestureConfig({ numberOfPointers, direction, ...props }: any): Partial<{\n        enabled: boolean;\n        minPointers: number;\n        maxPointers: number;\n        minDist: number;\n        minDistSq: number;\n        minVelocity: number;\n        minVelocitySq: number;\n        maxDist: number;\n        maxDistSq: number;\n        failOffsetXStart: number;\n        failOffsetYStart: number;\n        failOffsetXEnd: number;\n        failOffsetYEnd: number;\n        activeOffsetXStart: number;\n        activeOffsetXEnd: number;\n        activeOffsetYStart: number;\n        activeOffsetYEnd: number;\n        waitFor: any[] | null;\n        simultaneousHandlers: any[] | null;\n    }>;\n}\nexport default FlingGestureHandler;\n"],"mappings":"AAAA,OAAOA,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}