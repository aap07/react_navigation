{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LaunchBrowserTypes = void 0;\nvar LaunchBrowserTypes;\nexports.LaunchBrowserTypes = LaunchBrowserTypes;\n(function (LaunchBrowserTypes) {\n  LaunchBrowserTypes[LaunchBrowserTypes[\"CHROME\"] = 0] = \"CHROME\";\n  LaunchBrowserTypes[LaunchBrowserTypes[\"EDGE\"] = 1] = \"EDGE\";\n})(LaunchBrowserTypes || (exports.LaunchBrowserTypes = LaunchBrowserTypes = {}));","map":{"version":3,"names":["LaunchBrowserTypes","exports"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\dev-server\\src\\LaunchBrowser.types.ts"],"sourcesContent":["export interface LaunchBrowserInstance {\n  close: () => Promise<void>;\n}\n\n/**\n * Supported browser types\n */\nexport enum LaunchBrowserTypes {\n  CHROME,\n  EDGE,\n}\n\n/**\n * Internal browser implementation constraints\n */\nexport interface LaunchBrowserImpl {\n  /**\n   * Return whether the given `browserType` is supported\n   */\n  isSupportedBrowser: (browserType: LaunchBrowserTypes) => Promise<boolean>;\n\n  /**\n   * Create temp directory for browser profile\n   *\n   * @param baseDirName The base directory name for the created directory\n   */\n  createTempBrowserDir: (baseDirName: string) => Promise<string>;\n\n  /**\n   * Launch the browser\n   */\n  launchAsync: (browserType: LaunchBrowserTypes, args: string[]) => Promise<LaunchBrowserInstance>;\n\n  /**\n   * Close current browser instance\n   */\n  close: () => Promise<void>;\n}\n"],"mappings":";;;;;;AAIA,IAGYA,kBAAkB;AAK9BC,OAAA,CAAAD,kBAAA,GAAAA,kBAAA;AAAA,WALYA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;EAAlBA,kBAAkB,CAAlBA,kBAAkB;AAAA,GAAlBA,kBAAkB,KAAAC,OAAA,CAAAD,kBAAA,GAAlBA,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}