{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Formatter = void 0;\nvar code_frame_1 = require(\"@babel/code-frame\");\nvar chalk_1 = __importDefault(require(\"chalk\"));\nvar fs = __importStar(require(\"fs\"));\nvar os = __importStar(require(\"os\"));\nvar path = __importStar(require(\"path\"));\nvar Matchers_1 = require(\"./Matchers\");\nvar Parser_1 = require(\"./Parser\");\nvar switchRegex_1 = require(\"./switchRegex\");\nvar symbols_1 = require(\"./utils/symbols\");\nvar Status;\n(function (Status) {\n  Status[\"Pass\"] = \"pass\";\n  Status[\"Fail\"] = \"fail\";\n  Status[\"Pending\"] = \"pending\";\n  Status[\"Error\"] = \"error\";\n  Status[\"Completion\"] = \"completion\";\n  Status[\"Measure\"] = \"measure\";\n})(Status || (Status = {}));\nfunction highlightLastPathComponent(filePath) {\n  return chalk_1.default.dim(path.dirname(filePath) + '/') + path.basename(filePath);\n}\nfunction format(command) {\n  var argumentText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var success = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  var symbol = statusSymbol(success ? Status.Completion : Status.Fail);\n  return [symbol, chalk_1.default.bold(command), argumentText].join(' ').trim();\n}\nfunction formatTest(testCase, status) {\n  return [statusSymbol(status), testCase].join(' ').trim();\n}\nfunction heading(prefix, text, description) {\n  return [prefix, chalk_1.default.white(text), description].join(' ').trim();\n}\nfunction statusSymbol(status) {\n  switch (status) {\n    case Status.Pass:\n      return chalk_1.default.green(symbols_1.PASS);\n    case Status.Fail:\n      return chalk_1.default.red(symbols_1.FAIL);\n    case Status.Pending:\n      return chalk_1.default.cyan(symbols_1.PENDING);\n    case Status.Error:\n      return chalk_1.default.red(symbols_1.ERROR);\n    case Status.Completion:\n      return chalk_1.default.white(symbols_1.COMPLETION);\n    case Status.Measure:\n      return chalk_1.default.magenta(symbols_1.MEASURE);\n    default:\n      return '';\n  }\n}\nfunction coloredTime(time) {\n  var flt = parseFloat(time);\n  if (flt >= 0 && flt <= 0.025) {\n    return time;\n  } else if (flt >= 0.026 && flt <= 0.1) {\n    return chalk_1.default.yellow(time);\n  }\n  return chalk_1.default.red(time);\n}\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction relativePath(projectRoot, filePath) {\n  return slash(path.relative(projectRoot, filePath));\n}\nfunction formatBreadCrumb(fileName, target, project) {\n  return [project === target ? project : [project, target].filter(Boolean).join(`/`), fileName].filter(Boolean).join(` ${symbols_1.BREADCRUMB} `);\n}\nfunction getAppRoot(filePath) {\n  var appRoot = filePath;\n  var isBuildFolder = function isBuildFolder(path) {\n    return /((Debug|Release)-[^/\\s\\d]*$)|(.app$)/.test(path);\n  };\n  while (!isBuildFolder(appRoot) && appRoot.length > 1) {\n    appRoot = path.dirname(appRoot);\n  }\n  return isBuildFolder(appRoot) ? appRoot : '';\n}\nvar Formatter = function () {\n  function Formatter(props) {\n    _classCallCheck(this, Formatter);\n    this.props = props;\n    this.errors = [];\n    this.warnings = [];\n  }\n  _createClass(Formatter, [{\n    key: \"parser\",\n    get: function get() {\n      if (this._parser) {\n        return this._parser;\n      }\n      this._parser = new Parser_1.Parser(this);\n      return this._parser;\n    }\n  }, {\n    key: \"pipe\",\n    value: function pipe(data) {\n      var _this = this;\n      var lines = [];\n      data.split(os.EOL).forEach(function (line) {\n        var results = _this.parser.parse(line);\n        if (typeof results === 'string' && results.trim()) {\n          lines.push(results);\n        }\n      });\n      return lines;\n    }\n  }, {\n    key: \"dimConfiguration\",\n    value: function dimConfiguration(configuration) {\n      return chalk_1.default.dim(`(${configuration})`);\n    }\n  }, {\n    key: \"getTitleForConfigurationType\",\n    value: function getTitleForConfigurationType(type) {\n      switch (type) {\n        case 'Clean':\n          return 'Cleaning';\n        case 'Aggregate':\n          return 'Aggregate';\n        case 'Analyze':\n          return 'Analyzing';\n        case 'Build':\n          return 'Building';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: \"formatTarget\",\n    value: function formatTarget(props) {\n      return format(this.getTitleForConfigurationType(props.type), this.dimConfiguration(formatBreadCrumb(props.configuration, props.target, props.project)));\n    }\n  }, {\n    key: \"formatCopy\",\n    value: function formatCopy(_ref) {\n      var from = _ref.from,\n        to = _ref.to;\n      var relativeFile = relativePath(this.props.projectRoot, from);\n      var appFileRoot = getAppRoot(to);\n      var relativeAppFile = relativePath(appFileRoot, to);\n      return format('Copying  ', [relativeFile, relativeAppFile].join(' ➜ '));\n    }\n  }, {\n    key: \"getFileOperationTitle\",\n    value: function getFileOperationTitle(type) {\n      switch (type) {\n        case 'Analyze':\n          return 'Analyzing';\n        case 'GenerateDSYMFile':\n          return `Generating debug`;\n        case 'Ld':\n          return 'Linking  ';\n        case 'Libtool':\n          return 'Packaging';\n        case 'ProcessPCH':\n          return 'Precompiling';\n        case 'ProcessInfoPlistFile':\n          return 'Preparing';\n        case 'CodeSign':\n          return 'Signing  ';\n        case 'Touch':\n          return 'Creating ';\n        case 'CompileC':\n        case 'CompileSwift':\n        case 'CompileXIB':\n        case 'CompileStoryboard':\n          return 'Compiling';\n        default:\n          return '';\n      }\n    }\n  }, {\n    key: \"formatFileOperation\",\n    value: function formatFileOperation(props) {\n      var title = this.getFileOperationTitle(props.type);\n      switch (props.type) {\n        case 'Analyze':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        case 'GenerateDSYMFile':\n          return format(title, formatBreadCrumb(`'${props.fileName}'`, props.target, props.project));\n        case 'Ld':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        case 'Libtool':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        case 'ProcessPCH':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        case 'ProcessInfoPlistFile':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        case 'CodeSign':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        case 'Touch':\n          return format(title, props.fileName);\n        case 'CompileC':\n        case 'CompileSwift':\n        case 'CompileXIB':\n        case 'CompileStoryboard':\n          return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n        default:\n          return '';\n      }\n    }\n  }, {\n    key: \"formatPhaseSuccess\",\n    value: function formatPhaseSuccess(phaseName, duration) {\n      return format(capitalize(phaseName.toLowerCase()), `Succeeded${duration ? ` (${duration})` : ''}`, true);\n    }\n  }, {\n    key: \"formatPhaseScriptExecution\",\n    value: function formatPhaseScriptExecution(scriptName, target, project) {\n      return format('Executing', formatBreadCrumb(`'${scriptName}'`, target, project));\n    }\n  }, {\n    key: \"formatPreprocess\",\n    value: function formatPreprocess(file) {\n      return format('Preprocessing', file);\n    }\n  }, {\n    key: \"formatShellCommand\",\n    value: function formatShellCommand(command, args) {\n      return '';\n    }\n  }, {\n    key: \"formatCompileCommand\",\n    value: function formatCompileCommand(compilerCommand, filePath) {\n      return '';\n    }\n  }, {\n    key: \"formatProcessPchCommand\",\n    value: function formatProcessPchCommand(filePath) {\n      return '';\n    }\n  }, {\n    key: \"formatWriteFile\",\n    value: function formatWriteFile(file) {\n      return '';\n    }\n  }, {\n    key: \"formatOther\",\n    value: function formatOther(text) {\n      return '';\n    }\n  }, {\n    key: \"formatSingleLineCompileIssue\",\n    value: function formatSingleLineCompileIssue(type, filePathAndLocation, fileName, reason, target, project) {\n      var _splitPathInfo = splitPathInfo(filePathAndLocation),\n        filePath = _splitPathInfo.filePath,\n        lineNumber = _splitPathInfo.lineNumber,\n        columnNumber = _splitPathInfo.columnNumber;\n      if (type === 'warning') {\n        if (!this.shouldShowCompileWarning(filePath, lineNumber, columnNumber)) {\n          return '';\n        }\n      }\n      var sanitizedFilePath = lineNumber === '1' && columnNumber === '1' ? filePath : filePathAndLocation;\n      var packageName = [project, target].join('/');\n      var color = type === 'warning' ? chalk_1.default.yellow : chalk_1.default.red;\n      var platform = color.bold(`${packageName}:`);\n      var symbol = type === 'warning' ? symbols_1.WARNING : symbols_1.ERROR;\n      var appFileRoot = getAppRoot(sanitizedFilePath);\n      var relativeAppFile = appFileRoot ? chalk_1.default.gray('[app]/') + relativePath(appFileRoot, sanitizedFilePath) : sanitizedFilePath;\n      var results = chalk_1.default`${symbol} ${platform} ${reason.trim()}\\n   {gray └─${relativeAppFile}}`;\n      if (type === 'warning') {\n        this.warnings.push(results);\n      } else {\n        this.errors.push(results);\n      }\n      return results;\n    }\n  }, {\n    key: \"formatRemark\",\n    value: function formatRemark(msg) {\n      return '';\n    }\n  }, {\n    key: \"formatEmitSwiftModule\",\n    value: function formatEmitSwiftModule(type, arch, target, project) {\n      return '';\n    }\n  }, {\n    key: \"formatCompileSwiftSources\",\n    value: function formatCompileSwiftSources(type, arch, pkg, target, project) {\n      return '';\n    }\n  }, {\n    key: \"formatCleanRemove\",\n    value: function formatCleanRemove(msg) {\n      return '';\n    }\n  }, {\n    key: \"formatWriteAuxiliaryFiles\",\n    value: function formatWriteAuxiliaryFiles(text) {\n      return '';\n    }\n  }, {\n    key: \"formatTiffutil\",\n    value: function formatTiffutil(file) {\n      return format('Validating', file);\n    }\n  }, {\n    key: \"formatCheckDependencies\",\n    value: function formatCheckDependencies(text) {\n      return format('Check Dependencies');\n    }\n  }, {\n    key: \"formatWillNotBeCodeSigned\",\n    value: function formatWillNotBeCodeSigned(message) {\n      var results = `${chalk_1.default.yellow(symbols_1.WARNING + ' ' + message)}`;\n      this.warnings.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatCompileError\",\n    value: function formatCompileError(fileName, filePathAndLocation, reason, line, cursor) {\n      var _splitPathInfo2 = splitPathInfo(filePathAndLocation),\n        filePath = _splitPathInfo2.filePath,\n        lineNumber = _splitPathInfo2.lineNumber,\n        columnNumber = _splitPathInfo2.columnNumber;\n      var results = formatWarningOrError({\n        isError: true,\n        filePath: filePath,\n        reason: reason,\n        cursor: cursor,\n        lineText: line,\n        lineNumber: lineNumber,\n        columnNumber: columnNumber,\n        projectRoot: this.props.projectRoot,\n        maxWarningLineLength: this.props.maxWarningLineLength\n      });\n      this.errors.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatError\",\n    value: function formatError(message) {\n      var _this2 = this;\n      var results = switchRegex_1.switchRegex(message, [[Matchers_1.Matchers.Errors.UNSUPPORTED_ENTITLEMENT_MATCHER, function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 6),\n          $1 = _ref3[1],\n          $2 = _ref3[2],\n          $3 = _ref3[3],\n          $4 = _ref3[4],\n          $5 = _ref3[5];\n        return _this2.formatUnsupportedEntitlementError($1, $2, $3, $4, $5);\n      }], [null, function () {\n        return _this2.formatGenericError(message);\n      }]]);\n      this.errors.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatUnsupportedEntitlementError\",\n    value: function formatUnsupportedEntitlementError(profileName, entitlementName, entitlementType, target, project) {\n      var packageName = [project, target].join('/');\n      var platform = chalk_1.default.red.bold(`${packageName}:`);\n      if (entitlementType === 'capability') {\n        return chalk_1.default`${symbols_1.ERROR} ${platform} Provisioning Profile ${profileName} does not support the {red ${entitlementName}} capability.`;\n      }\n      return chalk_1.default`${symbols_1.ERROR} ${platform} Entitlements file defines the value {red \"${entitlementName}\"} which is not registered for profile ${profileName}.`;\n    }\n  }, {\n    key: \"formatFileMissingError\",\n    value: function formatFileMissingError(reason, filePath) {\n      var results = `\\n${chalk_1.default.red(symbols_1.ERROR + ' ' + reason)} ${filePath}\\n\\n`;\n      this.errors.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatLdWarning\",\n    value: function formatLdWarning(reason) {\n      var _this3 = this;\n      var results = switchRegex_1.switchRegex(reason, [[Matchers_1.Matchers.Warnings.LINKER_METHOD_OVERRIDE, function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 6),\n          $1 = _ref5[1],\n          $2 = _ref5[2],\n          $3 = _ref5[3],\n          $4 = _ref5[4],\n          $5 = _ref5[5];\n        return _this3.formatLdMethodOverride($1, [{\n          filePath: $2,\n          name: $3\n        }, {\n          filePath: $4,\n          name: $5\n        }]);\n      }], [null, function () {\n        return `${chalk_1.default.yellow(symbols_1.WARNING + ' ' + reason)}`;\n      }]]);\n      this.warnings.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatUndefinedSymbols\",\n    value: function formatUndefinedSymbols(message, symbol, reference) {\n      var symbols = chalk_1.default.gray(`┌─ Symbol: ${symbol}\\n└─ Referenced from: ${reference}`);\n      var results = `${chalk_1.default.red(symbols_1.ERROR + ' ' + message)}\\n${symbols}\\n`;\n      this.errors.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatLdMethodOverride\",\n    value: function formatLdMethodOverride(methodName, collisions) {\n      var formattedMessage = chalk_1.default.yellow(symbols_1.WARNING + ` ld: duplicate method '${chalk_1.default.bold(methodName)}' in`);\n      var types = ['category', 'class'];\n      var symbols = chalk_1.default.gray(collisions.map(function (_ref6, i) {\n        var filePath = _ref6.filePath,\n          name = _ref6.name;\n        var appFileRoot = getAppRoot(filePath);\n        var relativeAppFile = relativePath(appFileRoot, filePath);\n        var branch = i === collisions.length - 1 ? '└─' : i === 0 ? '┌─' : '├─';\n        return `${branch}${`[${types[i]}]`}: ${name} ${chalk_1.default.dim(relativeAppFile)}`;\n      }).join('\\n'));\n      return `${formattedMessage}\\n${symbols}\\n`;\n    }\n  }, {\n    key: \"formatDuplicateSymbols\",\n    value: function formatDuplicateSymbols(message, filePaths, isWarning) {\n      var formattedMessage = isWarning ? chalk_1.default.yellow(symbols_1.WARNING + ' ' + message) : chalk_1.default.red(symbols_1.ERROR + ' ' + message);\n      var symbols = chalk_1.default.gray(filePaths.map(function (p, i) {\n        var branch = i === filePaths.length - 1 ? '└─' : i === 0 ? '┌─' : '├─';\n        return `${branch} ${path.basename(p)}`;\n      }).join('\\n'));\n      var results = `${formattedMessage}\\n${symbols}\\n`;\n      if (isWarning) {\n        this.warnings.push(results);\n      } else {\n        this.errors.push(results);\n      }\n      return results;\n    }\n  }, {\n    key: \"formatVersionMismatchWarning\",\n    value: function formatVersionMismatchWarning(os, deploymentTarget, version, minVersion, maxVersion, target, project) {\n      var packageName = [project, target].join('/');\n      var platform = chalk_1.default.bold(`${packageName}:`);\n      var packageNameWithVersion = chalk_1.default.greenBright(os) + chalk_1.default.cyan`@` + chalk_1.default.magenta(version);\n      var expectedRange = `>= ${minVersion} <= ${maxVersion}`;\n      return `${symbols_1.WARNING} ${platform} ${packageNameWithVersion} deployment version mismatch, expected ${expectedRange}`;\n    }\n  }, {\n    key: \"formatMissingArchitectureWarning\",\n    value: function formatMissingArchitectureWarning(binaryPath, architectures, currentArchitectures) {\n      var appFileRoot = getAppRoot(binaryPath);\n      var relativeAppFile = appFileRoot ? chalk_1.default.gray('[app]/') + relativePath(appFileRoot, binaryPath) : binaryPath;\n      var architectureString = currentArchitectures.length === 1 ? 'architecture' : 'architectures';\n      var supportedString = chalk_1.default.dim(`Supported architectures: ${architectures.join(', ')}.`);\n      return chalk_1.default.yellow(`${symbols_1.WARNING} Vendored binary '${relativeAppFile}' does not support current build ${architectureString} (${chalk_1.default.bold(currentArchitectures.join(', '))}). `) + supportedString;\n    }\n  }, {\n    key: \"formatDuplicateFileCompilerWarning\",\n    value: function formatDuplicateFileCompilerWarning(filePath, buildPhase, target, project) {\n      var message = `${chalk_1.default.yellow`Skipping duplicate file:`} ${relativePath(this.props.projectRoot, filePath)}`;\n      var fileName = path.basename(filePath);\n      var crumbs = chalk_1.default.gray('Remove: ' + ['Xcode', `${project}/${target}`, 'Build Phases', buildPhase, fileName].join(` ${symbols_1.BREADCRUMB} `));\n      return `${symbols_1.WARNING} ${message}\\n   ${crumbs}\\n`;\n    }\n  }, {\n    key: \"formatReservedFileInCopyBundleResourcesCompilerWarning\",\n    value: function formatReservedFileInCopyBundleResourcesCompilerWarning(filePath, reservedFileDescription, target, project) {\n      var message = `${chalk_1.default.yellow`Target's ${chalk_1.default.bold(reservedFileDescription)} file is incorrectly linked:`} ${relativePath(this.props.projectRoot, filePath)}`;\n      var fileName = path.basename(filePath);\n      var crumbs = chalk_1.default.gray('Remove: ' + ['Xcode', `${project}/${target}`, 'Build Phases', 'Copy Bundle Resources', fileName].join(` ${symbols_1.BREADCRUMB} `));\n      return `${symbols_1.WARNING} ${message}\\n   ${crumbs}\\n`;\n    }\n  }, {\n    key: \"formatMissingFileCompilerWarning\",\n    value: function formatMissingFileCompilerWarning(filePath) {\n      return `${symbols_1.WARNING} ${chalk_1.default.yellow`No such file or directory:`} ${filePath}`;\n    }\n  }, {\n    key: \"formatGenericError\",\n    value: function formatGenericError(message) {\n      return `\\n${chalk_1.default.red(symbols_1.ERROR + ' ' + message)}\\n\\n`;\n    }\n  }, {\n    key: \"formatGenericWarning\",\n    value: function formatGenericWarning(message) {\n      return symbols_1.INDENT + chalk_1.default.yellow(message);\n    }\n  }, {\n    key: \"formatWarning\",\n    value: function formatWarning(message) {\n      var _this4 = this;\n      var results = switchRegex_1.switchRegex(message, [[Matchers_1.Matchers.Warnings.MISSING_ARCHITECTURE, function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 4),\n          $1 = _ref8[1],\n          $2 = _ref8[2],\n          $3 = _ref8[3];\n        return _this4.formatMissingArchitectureWarning($1, $2 === null || $2 === void 0 ? void 0 : $2.split(' ').map(function (value) {\n          return value.trim();\n        }), $3 === null || $3 === void 0 ? void 0 : $3.split(' ').map(function (value) {\n          return value.trim();\n        }));\n      }], [Matchers_1.Matchers.Warnings.VERSION_MISMATCH, function (_ref9) {\n        var _ref10 = _slicedToArray(_ref9, 8),\n          $1 = _ref10[1],\n          $2 = _ref10[2],\n          $3 = _ref10[3],\n          $4 = _ref10[4],\n          $5 = _ref10[5],\n          $6 = _ref10[6],\n          $7 = _ref10[7];\n        return _this4.formatVersionMismatchWarning($1, $2, $3, $4, $5, $6, $7);\n      }], [Matchers_1.Matchers.Warnings.MISSING_FILE_COMPILER_WARNING_MATCHER, function (_ref11) {\n        var _ref12 = _slicedToArray(_ref11, 2),\n          $1 = _ref12[1];\n        return _this4.formatMissingFileCompilerWarning($1);\n      }], [Matchers_1.Matchers.Warnings.SKIPPING_DUPLICATE_FILE, function (_ref13) {\n        var _ref14 = _slicedToArray(_ref13, 5),\n          $1 = _ref14[1],\n          $2 = _ref14[2],\n          $3 = _ref14[3],\n          $4 = _ref14[4];\n        return _this4.formatDuplicateFileCompilerWarning($2, $1, $3, $4);\n      }], [Matchers_1.Matchers.Warnings.TARGETS_FILE_INCLUDED, function (_ref15) {\n        var _ref16 = _slicedToArray(_ref15, 5),\n          $1 = _ref16[1],\n          $2 = _ref16[2],\n          $3 = _ref16[3],\n          $4 = _ref16[4];\n        return _this4.formatReservedFileInCopyBundleResourcesCompilerWarning($2, $1, $3, $4);\n      }], [null, function () {\n        return _this4.formatGenericWarning(message);\n      }]]);\n      this.warnings.push(results);\n      return results;\n    }\n  }, {\n    key: \"formatCompileWarning\",\n    value: function formatCompileWarning(fileName, filePathAndLocation, reason, line, cursor) {\n      var _splitPathInfo3 = splitPathInfo(filePathAndLocation),\n        filePath = _splitPathInfo3.filePath,\n        lineNumber = _splitPathInfo3.lineNumber,\n        columnNumber = _splitPathInfo3.columnNumber;\n      if (this.shouldShowCompileWarning(filePath, lineNumber, columnNumber)) {\n        var results = formatWarningOrError({\n          isError: false,\n          filePath: filePath,\n          reason: reason,\n          cursor: cursor,\n          lineText: line,\n          lineNumber: lineNumber,\n          columnNumber: columnNumber,\n          projectRoot: this.props.projectRoot,\n          maxWarningLineLength: this.props.maxWarningLineLength\n        });\n        this.warnings.push(results);\n        return results;\n      }\n      return '';\n    }\n  }, {\n    key: \"shouldShowCompileWarning\",\n    value: function shouldShowCompileWarning(filePath, lineNumber, columnNumber) {\n      return true;\n    }\n  }, {\n    key: \"formatPendingTest\",\n    value: function formatPendingTest(suite, test) {\n      return symbols_1.INDENT + formatTest(`${test} [PENDING]`, Status.Pending);\n    }\n  }, {\n    key: \"formatPassingTest\",\n    value: function formatPassingTest(suite, test, time) {\n      return symbols_1.INDENT + formatTest(`${test} (${coloredTime(time)} seconds)`, Status.Pass);\n    }\n  }, {\n    key: \"formatMeasuringTest\",\n    value: function formatMeasuringTest(suite, test, time) {\n      return symbols_1.INDENT + formatTest(`${test} measured (${coloredTime(time)} seconds)`, Status.Measure);\n    }\n  }, {\n    key: \"formatFailingTest\",\n    value: function formatFailingTest(suite, test, reason, filePath) {\n      return symbols_1.INDENT + formatTest(`${test}, ${reason}`, Status.Fail);\n    }\n  }, {\n    key: \"formatTestRunStarted\",\n    value: function formatTestRunStarted(name) {\n      return heading('Test Suite', name, 'started');\n    }\n  }, {\n    key: \"formatTestSuiteStarted\",\n    value: function formatTestSuiteStarted(name) {\n      return heading('', name, '');\n    }\n  }, {\n    key: \"formatTestRunFinished\",\n    value: function formatTestRunFinished(name, time) {\n      return '';\n    }\n  }, {\n    key: \"formatTestSummary\",\n    value: function formatTestSummary(executedMessage, failuresPerSuite) {\n      var failures = this.formatFailures(failuresPerSuite);\n      var finalMessage = '';\n      if (!failures) {\n        finalMessage = chalk_1.default.green(executedMessage);\n      } else {\n        finalMessage = chalk_1.default.red(executedMessage);\n      }\n      var text = [failures, finalMessage].join('\\n\\n\\n').trim();\n      return `\\n\\n${text}`;\n    }\n  }, {\n    key: \"formatFailures\",\n    value: function formatFailures(failuresPerSuite) {\n      var _this5 = this;\n      return Object.entries(failuresPerSuite).map(function (_ref17) {\n        var _ref18 = _slicedToArray(_ref17, 2),\n          suite = _ref18[0],\n          failures = _ref18[1];\n        var formattedFailures = failures.map(function (failure) {\n          return _this5.formatFailure(failure);\n        }).join('\\n\\n');\n        return `\\n${suite}\\n${formattedFailures}`;\n      }).join('\\n');\n    }\n  }, {\n    key: \"formatFailure\",\n    value: function formatFailure(f) {\n      var _splitPathInfo4 = splitPathInfo(f.filePath),\n        filePath = _splitPathInfo4.filePath,\n        lineNumber = _splitPathInfo4.lineNumber,\n        columnNumber = _splitPathInfo4.columnNumber;\n      return formatWarningOrError({\n        isError: true,\n        testName: f.testCase,\n        filePath: filePath,\n        reason: f.reason,\n        lineNumber: lineNumber,\n        columnNumber: columnNumber,\n        projectRoot: this.props.projectRoot,\n        maxWarningLineLength: this.props.maxWarningLineLength\n      });\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {}\n  }, {\n    key: \"prettyFormat\",\n    value: function prettyFormat(text) {\n      return this.parser.parse(text);\n    }\n  }, {\n    key: \"optionalNewline\",\n    value: function optionalNewline() {\n      return '\\n';\n    }\n  }, {\n    key: \"getBuildSummary\",\n    value: function getBuildSummary() {\n      return `\\n\\u203A ${this.errors.length} error(s), and ${this.warnings.length} warning(s)\\n`;\n    }\n  }]);\n  return Formatter;\n}();\nexports.Formatter = Formatter;\nFormatter.format = format;\nFormatter.formatBreadCrumb = formatBreadCrumb;\nFormatter.getAppRoot = getAppRoot;\nFormatter.highlightLastPathComponent = highlightLastPathComponent;\nFormatter.relativePath = relativePath;\nfunction formatPaths(config) {\n  var filePath = chalk_1.default.reset.cyan(config.filePath);\n  return chalk_1.default.dim('(') + filePath + chalk_1.default.dim(`:${[config.line, config.col].filter(Boolean).join(':')})`);\n}\nfunction splitPathInfo(filePathAndLocation) {\n  var _filePathAndLocation$ = filePathAndLocation.split(':'),\n    _filePathAndLocation$2 = _slicedToArray(_filePathAndLocation$, 3),\n    path = _filePathAndLocation$2[0],\n    line = _filePathAndLocation$2[1],\n    column = _filePathAndLocation$2[2];\n  return {\n    filePath: path || filePathAndLocation,\n    lineNumber: line,\n    columnNumber: column\n  };\n}\nfunction parseOptionalInt(text) {\n  if (!text) return undefined;\n  try {\n    var result = parseInt(text, 10);\n    return isNaN(result) ? undefined : result;\n  } catch (_unused) {\n    return undefined;\n  }\n}\nfunction formatWarningOrError(_ref19) {\n  var projectRoot = _ref19.projectRoot,\n    filePath = _ref19.filePath,\n    reason = _ref19.reason,\n    cursor = _ref19.cursor,\n    lineText = _ref19.lineText,\n    lineNumber = _ref19.lineNumber,\n    columnNumber = _ref19.columnNumber,\n    isError = _ref19.isError,\n    _ref19$maxWarningLine = _ref19.maxWarningLineLength,\n    maxWarningLineLength = _ref19$maxWarningLine === void 0 ? 200 : _ref19$maxWarningLine;\n  var _a;\n  var line = parseOptionalInt(lineNumber) || 0;\n  var column = parseOptionalInt(columnNumber);\n  var color = isError ? chalk_1.default.red : chalk_1.default.yellow;\n  var icon = color(isError ? symbols_1.ERROR : symbols_1.WARNING);\n  var displayFilePath = !filePath ? null : getAppRoot(filePath) ? filePath : slash(path.relative(projectRoot, filePath));\n  var formattedPath = formatPaths({\n    filePath: displayFilePath,\n    col: column,\n    line: line\n  });\n  var pathWithPrefix = `${icon} ${formattedPath}`;\n  var formattedReason = color(grayOutMatch(reason, /(\\[-.*?\\])/).replace(/(\\(.*?\\)\\s?)/, ''));\n  var isHermes = filePath.endsWith('.jsbundle');\n  var isPreviewTooLong = isHermes || lineText && lineText.length > maxWarningLineLength;\n  if (isPreviewTooLong) {\n    var previewLine = '';\n    var cursorLine = formattedReason;\n    if (lineText && column != null) {\n      var rangeWindow = Math.round(Math.max((_a = displayFilePath === null || displayFilePath === void 0 ? void 0 : displayFilePath.length) !== null && _a !== void 0 ? _a : 0, 80) / 2);\n      var minBounds = Math.max(0, column - rangeWindow);\n      var maxBounds = Math.min(minBounds + rangeWindow * 2, lineText.length);\n      previewLine = lineText.slice(minBounds, maxBounds);\n      if (minBounds > 0) {\n        minBounds -= 3;\n        previewLine = chalk_1.default.dim('...') + previewLine;\n      }\n      if (maxBounds < lineText.length) {\n        previewLine += chalk_1.default.dim('...');\n      }\n      cursorLine = (column == null ? chalk_1.default.reset(cursor) : fill(column) + chalk_1.default.reset('^')).slice(minBounds) + ' ' + formattedReason;\n    }\n    return ['', pathWithPrefix, '', previewLine, cursorLine, chalk_1.default.dim('(warning truncated)')].join('\\n');\n  }\n  try {\n    var raw = fs.readFileSync(filePath, 'utf8');\n    var location = {\n      start: {\n        line: line,\n        column: column\n      }\n    };\n    var framed = code_frame_1.codeFrameColumns(raw, location, {\n      highlightCode: false,\n      message: formattedReason\n    });\n    return `\\n${pathWithPrefix}\\n\\n${framed}\\n`;\n  } catch (_unused2) {\n    var customCursor = column == null ? chalk_1.default.reset(cursor) : fill(column) + chalk_1.default.reset('^');\n    var _framed = `${lineText}\\n${customCursor} ${formattedReason}`;\n    return `\\n${pathWithPrefix}\\n\\n${_framed}\\n`;\n  }\n}\nfunction fill(width) {\n  return Array(width).join(' ');\n}\nfunction grayOutMatch(text, reg) {\n  return replaceMatch(text, reg, chalk_1.default.gray.dim);\n}\nfunction replaceMatch(text, reg, callback) {\n  var match = text.match(reg);\n  if (match === null || match === void 0 ? void 0 : match.length) {\n    return text.replace(reg, callback(match[0]));\n  }\n  return text;\n}\nfunction slash(path) {\n  var isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path);\n  var hasNonAscii = /[^\\u0000-\\u0080]+/.test(path);\n  if (isExtendedLengthPath || hasNonAscii) {\n    return path;\n  }\n  return path.replace(/\\\\/g, '/');\n}","map":{"version":3,"names":["code_frame_1","require","chalk_1","__importDefault","fs","__importStar","os","path","Matchers_1","Parser_1","switchRegex_1","symbols_1","Status","highlightLastPathComponent","filePath","default","dim","dirname","basename","format","command","argumentText","arguments","length","undefined","success","symbol","statusSymbol","Completion","Fail","bold","join","trim","formatTest","testCase","status","heading","prefix","text","description","white","Pass","green","PASS","red","FAIL","Pending","cyan","PENDING","Error","ERROR","COMPLETION","Measure","magenta","MEASURE","coloredTime","time","flt","parseFloat","yellow","capitalize","string","charAt","toUpperCase","slice","relativePath","projectRoot","slash","relative","formatBreadCrumb","fileName","target","project","filter","Boolean","BREADCRUMB","getAppRoot","appRoot","isBuildFolder","test","Formatter","props","_classCallCheck","errors","warnings","_createClass","key","get","_parser","Parser","value","pipe","data","_this","lines","split","EOL","forEach","line","results","parser","parse","push","dimConfiguration","configuration","getTitleForConfigurationType","type","formatTarget","formatCopy","_ref","from","to","relativeFile","appFileRoot","relativeAppFile","getFileOperationTitle","formatFileOperation","title","formatPhaseSuccess","phaseName","duration","toLowerCase","formatPhaseScriptExecution","scriptName","formatPreprocess","file","formatShellCommand","args","formatCompileCommand","compilerCommand","formatProcessPchCommand","formatWriteFile","formatOther","formatSingleLineCompileIssue","filePathAndLocation","reason","_splitPathInfo","splitPathInfo","lineNumber","columnNumber","shouldShowCompileWarning","sanitizedFilePath","packageName","color","platform","WARNING","gray","formatRemark","msg","formatEmitSwiftModule","arch","formatCompileSwiftSources","pkg","formatCleanRemove","formatWriteAuxiliaryFiles","formatTiffutil","formatCheckDependencies","formatWillNotBeCodeSigned","message","formatCompileError","cursor","_splitPathInfo2","formatWarningOrError","isError","lineText","maxWarningLineLength","formatError","_this2","switchRegex","Matchers","Errors","UNSUPPORTED_ENTITLEMENT_MATCHER","_ref2","_ref3","_slicedToArray","$1","$2","$3","$4","$5","formatUnsupportedEntitlementError","formatGenericError","profileName","entitlementName","entitlementType","formatFileMissingError","formatLdWarning","_this3","Warnings","LINKER_METHOD_OVERRIDE","_ref4","_ref5","formatLdMethodOverride","name","formatUndefinedSymbols","reference","symbols","methodName","collisions","formattedMessage","types","map","_ref6","i","branch","formatDuplicateSymbols","filePaths","isWarning","p","formatVersionMismatchWarning","deploymentTarget","version","minVersion","maxVersion","packageNameWithVersion","greenBright","expectedRange","formatMissingArchitectureWarning","binaryPath","architectures","currentArchitectures","architectureString","supportedString","formatDuplicateFileCompilerWarning","buildPhase","crumbs","formatReservedFileInCopyBundleResourcesCompilerWarning","reservedFileDescription","formatMissingFileCompilerWarning","formatGenericWarning","INDENT","formatWarning","_this4","MISSING_ARCHITECTURE","_ref7","_ref8","VERSION_MISMATCH","_ref9","_ref10","$6","$7","MISSING_FILE_COMPILER_WARNING_MATCHER","_ref11","_ref12","SKIPPING_DUPLICATE_FILE","_ref13","_ref14","TARGETS_FILE_INCLUDED","_ref15","_ref16","formatCompileWarning","_splitPathInfo3","formatPendingTest","suite","formatPassingTest","formatMeasuringTest","formatFailingTest","formatTestRunStarted","formatTestSuiteStarted","formatTestRunFinished","formatTestSummary","executedMessage","failuresPerSuite","failures","formatFailures","finalMessage","_this5","Object","entries","_ref17","_ref18","formattedFailures","failure","formatFailure","f","_splitPathInfo4","testName","finish","prettyFormat","optionalNewline","getBuildSummary","exports","formatPaths","config","reset","col","_filePathAndLocation$","_filePathAndLocation$2","column","parseOptionalInt","result","parseInt","isNaN","_unused","_ref19","_ref19$maxWarningLine","icon","displayFilePath","formattedPath","pathWithPrefix","formattedReason","grayOutMatch","replace","isHermes","endsWith","isPreviewTooLong","previewLine","cursorLine","rangeWindow","Math","round","max","_a","minBounds","maxBounds","min","fill","raw","readFileSync","location","start","framed","codeFrameColumns","highlightCode","_unused2","customCursor","width","Array","reg","replaceMatch","callback","match","isExtendedLengthPath","hasNonAscii"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\xcpretty\\src\\Formatter.ts"],"sourcesContent":["import { codeFrameColumns } from '@babel/code-frame';\nimport chalk from 'chalk';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\nimport { Matchers } from './Matchers';\nimport { Failure, Parser } from './Parser';\nimport { switchRegex } from './switchRegex';\nimport {\n  BREADCRUMB,\n  COMPLETION,\n  ERROR,\n  FAIL,\n  INDENT,\n  MEASURE,\n  PASS,\n  PENDING,\n  WARNING,\n} from './utils/symbols';\n\nenum Status {\n  Pass = 'pass',\n  Fail = 'fail',\n  Pending = 'pending',\n  Error = 'error',\n  Completion = 'completion',\n  Measure = 'measure',\n}\n\nfunction highlightLastPathComponent(filePath: string): string {\n  return chalk.dim(path.dirname(filePath) + '/') + path.basename(filePath);\n}\n\nfunction format(command: string, argumentText = '', success = true) {\n  const symbol = statusSymbol(success ? Status.Completion : Status.Fail);\n  return [symbol, chalk.bold(command), argumentText].join(' ').trim();\n}\n\nfunction formatTest(testCase: string, status: Status) {\n  return [statusSymbol(status), testCase].join(' ').trim();\n}\n\nfunction heading(prefix: string, text: string, description: string): string {\n  return [prefix, chalk.white(text), description].join(' ').trim();\n}\n\nfunction statusSymbol(status: Status) {\n  switch (status) {\n    case Status.Pass:\n      return chalk.green(PASS);\n    case Status.Fail:\n      return chalk.red(FAIL);\n    case Status.Pending:\n      return chalk.cyan(PENDING);\n    case Status.Error:\n      return chalk.red(ERROR);\n    case Status.Completion:\n      return chalk.white(COMPLETION);\n    case Status.Measure:\n      return chalk.magenta(MEASURE);\n    default:\n      return '';\n  }\n}\n\nfunction coloredTime(time: string) {\n  const flt = parseFloat(time);\n  if (flt >= 0 && flt <= 0.025) {\n    return time;\n  } else if (flt >= 0.026 && flt <= 0.1) {\n    return chalk.yellow(time);\n  }\n  return chalk.red(time);\n}\n\nfunction capitalize(string: string): string {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction relativePath(projectRoot: string, filePath: string): string {\n  return slash(path.relative(projectRoot, filePath));\n}\n\nfunction formatBreadCrumb(fileName: string, target?: string, project?: string): string {\n  // TODO: Simplify\n  return [project === target ? project : [project, target].filter(Boolean).join(`/`), fileName]\n    .filter(Boolean)\n    .join(` ${BREADCRUMB} `);\n}\n\nfunction getAppRoot(filePath: string): string {\n  let appRoot = filePath;\n\n  const isBuildFolder = (path: string) => /((Debug|Release)-[^/\\s\\d]*$)|(.app$)/.test(path);\n\n  while (!isBuildFolder(appRoot) && appRoot.length > 1) {\n    appRoot = path.dirname(appRoot);\n  }\n  return isBuildFolder(appRoot) ? appRoot : '';\n}\n\nexport type FileOperation = {\n  type:\n    | 'Analyze'\n    | 'GenerateDSYMFile'\n    | 'Ld'\n    | 'Libtool'\n    | 'ProcessPCH'\n    | 'ProcessInfoPlistFile'\n    | 'CodeSign'\n    | 'Touch'\n    | 'CompileC'\n    | 'CompileSwift'\n    | 'CompileXIB'\n    | 'CompileStoryboard';\n  filePath: string;\n  fileName: string;\n  arch?: string;\n  // normal\n  linkType?: string;\n  target?: string;\n  project?: string;\n};\n\nexport type ConfigurationOperation = {\n  type: 'Analyze' | 'Aggregate' | 'Build' | 'Clean';\n  configuration: string;\n  target?: string;\n  project?: string;\n};\n\nexport type CopyFileProps = {\n  type: 'CpResource' | 'CopyStringsFile' | 'CopyPlistFile' | 'CpHeader';\n  from: string;\n  to: string;\n  target?: string;\n  project?: string;\n};\n\nexport class Formatter {\n  static format = format;\n  static formatBreadCrumb = formatBreadCrumb;\n  static getAppRoot = getAppRoot;\n  static highlightLastPathComponent = highlightLastPathComponent;\n  static relativePath = relativePath;\n\n  _parser: Parser | undefined;\n\n  get parser(): Parser {\n    if (this._parser) {\n      return this._parser;\n    }\n    this._parser = new Parser(this);\n    return this._parser;\n  }\n\n  errors: string[] = [];\n\n  warnings: string[] = [];\n\n  constructor(\n    public props: {\n      // isASCII: boolean;\n      // isColorDisabled: boolean;\n      projectRoot: string;\n      /** Sets the max character length for a warning before cropping the preview. Useful for minified files that can be upwards of a thousand characters long. */\n      maxWarningLineLength?: number;\n    }\n  ) {}\n\n  pipe(data: string): string[] {\n    const lines: string[] = [];\n    data.split(os.EOL).forEach(line => {\n      const results = this.parser.parse(line);\n      if (typeof results === 'string' && results.trim()) {\n        lines.push(results);\n      }\n    });\n    return lines;\n  }\n\n  private dimConfiguration(configuration: string): string {\n    return chalk.dim(`(${configuration})`);\n  }\n\n  getTitleForConfigurationType(type: ConfigurationOperation['type']): string {\n    switch (type) {\n      case 'Clean':\n        return 'Cleaning';\n      case 'Aggregate':\n        return 'Aggregate';\n      case 'Analyze':\n        return 'Analyzing';\n      case 'Build':\n        return 'Building';\n      default:\n        return 'Unknown';\n    }\n  }\n\n  formatTarget(props: ConfigurationOperation): string {\n    return format(\n      this.getTitleForConfigurationType(props.type),\n      this.dimConfiguration(formatBreadCrumb(props.configuration, props.target, props.project))\n    );\n  }\n\n  formatCopy({ from, to }: CopyFileProps): string {\n    const relativeFile = relativePath(this.props.projectRoot, from);\n    const appFileRoot = getAppRoot(to);\n    const relativeAppFile = relativePath(appFileRoot, to);\n    return format('Copying  ', [relativeFile, relativeAppFile].join(' ➜ '));\n  }\n\n  getFileOperationTitle(type: FileOperation['type']): string {\n    switch (type) {\n      case 'Analyze':\n        return 'Analyzing';\n      case 'GenerateDSYMFile':\n        return `Generating debug`;\n      case 'Ld':\n        return 'Linking  ';\n      case 'Libtool':\n        return 'Packaging';\n      case 'ProcessPCH':\n        return 'Precompiling';\n      case 'ProcessInfoPlistFile':\n        return 'Preparing';\n      case 'CodeSign':\n        return 'Signing  ';\n      case 'Touch':\n        return 'Creating ';\n      case 'CompileC':\n      case 'CompileSwift':\n      case 'CompileXIB':\n      case 'CompileStoryboard':\n        return 'Compiling';\n      default:\n        // Unknown file operation\n        return '';\n    }\n  }\n\n  formatFileOperation(props: FileOperation): string {\n    const title = this.getFileOperationTitle(props.type);\n\n    switch (props.type) {\n      case 'Analyze':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      case 'GenerateDSYMFile':\n        return format(title, formatBreadCrumb(`'${props.fileName}'`, props.target, props.project));\n      case 'Ld':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      case 'Libtool':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      case 'ProcessPCH':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      case 'ProcessInfoPlistFile':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      case 'CodeSign':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      case 'Touch':\n        return format(title, props.fileName);\n      case 'CompileC':\n      case 'CompileSwift':\n      case 'CompileXIB':\n      case 'CompileStoryboard':\n        return format(title, formatBreadCrumb(props.fileName, props.target, props.project));\n      default:\n        // Unknown file operation\n        return '';\n    }\n  }\n\n  formatPhaseSuccess(phaseName: string, duration?: string): string {\n    return format(\n      capitalize(phaseName.toLowerCase()),\n      `Succeeded${duration ? ` (${duration})` : ''}`,\n      true\n    );\n  }\n\n  formatPhaseScriptExecution(scriptName: string, target?: string, project?: string): string {\n    // TODO: Track (scriptName === '[CP] Copy XCFrameworks')\n    return format('Executing', formatBreadCrumb(`'${scriptName}'`, target, project));\n  }\n\n  formatPreprocess(file: string): string {\n    return format('Preprocessing', file);\n  }\n\n  formatShellCommand(command: string, args: string): string {\n    return '';\n  }\n\n  formatCompileCommand(compilerCommand: string, filePath: string): string {\n    return '';\n  }\n\n  formatProcessPchCommand(filePath: string): string {\n    return '';\n  }\n\n  formatWriteFile(file: string): string {\n    return '';\n  }\n\n  formatOther(text: string): string {\n    return '';\n  }\n\n  formatSingleLineCompileIssue(\n    type: 'warning' | 'error',\n    filePathAndLocation: string,\n    fileName: string,\n    reason: string,\n    target: string,\n    project: string\n  ): string {\n    // Allow disabling this warning.\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(filePathAndLocation);\n    if (type === 'warning') {\n      if (!this.shouldShowCompileWarning(filePath, lineNumber, columnNumber)) {\n        return '';\n      }\n    }\n    // Prevent `/foo/bar:1:1` instead using `/foo/bar` since it's a bit more focused.\n    const sanitizedFilePath =\n      lineNumber === '1' && columnNumber === '1' ? filePath : filePathAndLocation;\n\n    // Get the `Project/Target` prefix.\n    const packageName = [project, target].join('/');\n    // Choose a color.\n    const color = type === 'warning' ? chalk.yellow : chalk.red;\n    const platform = color.bold(`${packageName}:`);\n    // Choose a symbol.\n    const symbol = type === 'warning' ? WARNING : ERROR;\n\n    // Get a more concise file path when the issue is inside the build folder.\n    const appFileRoot = getAppRoot(sanitizedFilePath);\n    const relativeAppFile = appFileRoot\n      ? chalk.gray('[app]/') + relativePath(appFileRoot, sanitizedFilePath)\n      : sanitizedFilePath;\n\n    // Create the message.\n    const results = chalk`${symbol} ${platform} ${reason.trim()}\\n   {gray └─${relativeAppFile}}`;\n\n    // Ensure we track the message\n    if (type === 'warning') {\n      this.warnings.push(results);\n    } else {\n      this.errors.push(results);\n    }\n    return results;\n  }\n\n  // These are like comments but for Xcode logs.\n  formatRemark(msg: string): string {\n    return '';\n  }\n\n  formatEmitSwiftModule(\n    type: 'normal' | string,\n    arch: 'x86_64' | string,\n    target?: string,\n    project?: string\n  ): string {\n    return '';\n  }\n  formatCompileSwiftSources(\n    type: 'normal' | string,\n    arch: 'x86_64' | string,\n    pkg: string | 'com.apple.xcode.tools.swift.compiler',\n    target?: string,\n    project?: string\n  ): string {\n    return '';\n  }\n\n  formatCleanRemove(msg: string): string {\n    return '';\n  }\n\n  formatWriteAuxiliaryFiles(text: string): string {\n    return '';\n  }\n\n  formatTiffutil(file: string): string {\n    return format('Validating', file);\n  }\n\n  formatCheckDependencies(text: string): string {\n    return format('Check Dependencies');\n  }\n\n  formatWillNotBeCodeSigned(message: string): string {\n    const results = `${chalk.yellow(WARNING + ' ' + message)}`;\n    this.warnings.push(results);\n    return results;\n  }\n\n  // COMPILER / LINKER ERRORS AND WARNINGS\n  /**\n   *\n   * @param fileName 'SampleTest.m',\n   * @param filePathAndLocation '/Users/foo/bar.m:12:59',\n   * @param reason 'expected identifier',\n   * @param line '                [[thread should] equal:thread.];',\n   * @param cursor '                                           ^'\n   */\n  formatCompileError(\n    fileName: string,\n    filePathAndLocation: string,\n    reason: string,\n    line: string,\n    cursor: string\n  ): string {\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(filePathAndLocation);\n    const results = formatWarningOrError({\n      isError: true,\n      filePath,\n      reason,\n      cursor,\n      lineText: line,\n      lineNumber,\n      columnNumber,\n      projectRoot: this.props.projectRoot,\n      maxWarningLineLength: this.props.maxWarningLineLength,\n    });\n    this.errors.push(results);\n    return results;\n  }\n\n  formatError(message: string): string {\n    const results = switchRegex(message, [\n      [\n        Matchers.Errors.UNSUPPORTED_ENTITLEMENT_MATCHER,\n        ([, $1, $2, $3, $4, $5]) => {\n          return this.formatUnsupportedEntitlementError(\n            $1,\n            $2,\n            $3 as 'capability' | 'entitlement',\n            $4,\n            $5\n          );\n        },\n      ],\n      [null, () => this.formatGenericError(message)],\n    ]);\n\n    this.errors.push(results);\n\n    return results;\n  }\n\n  /**\n   * In: `error: Provisioning profile \"iOS Team Provisioning Profile: *\" doesn't support the Push Notifications capability. (in target 'yolo90' from project 'yolo90')`\n   * Out: `❌  yolo90/yolo90: Provisioning Profile \"iOS Team Provisioning Profile: *\" does not support the Push Notifications capability.`\n   *\n   * In: `error: Provisioning profile \"iOS Team Provisioning Profile: *\" doesn't include the aps-environment entitlement. (in target 'yolo90' from project 'yolo90')`\n   * Out: `❌  yolo90/yolo90: Entitlements file defines the value \"aps-environment\" which is not registered for profile \"iOS Team Provisioning Profile: *\".`\n   *\n   * @param profileName `\"iOS Team Provisioning Profile: *\"`\n   * @param entitlementName `Push Notifications` | `aps-environment`\n   * @param entitlementType `capability` | `entitlement`\n   * @param target boost-for-react-native\n   * @param project Pods\n   */\n  formatUnsupportedEntitlementError(\n    profileName: string,\n    entitlementName: string,\n    entitlementType: 'capability' | 'entitlement',\n    target?: string,\n    project?: string\n  ): string {\n    const packageName = [project, target].join('/');\n    const platform = chalk.red.bold(`${packageName}:`);\n\n    if (entitlementType === 'capability') {\n      return chalk`${ERROR} ${platform} Provisioning Profile ${profileName} does not support the {red ${entitlementName}} capability.`;\n    }\n    return chalk`${ERROR} ${platform} Entitlements file defines the value {red \"${entitlementName}\"} which is not registered for profile ${profileName}.`;\n  }\n\n  formatFileMissingError(reason: string, filePath: string): string {\n    const results = `\\n${chalk.red(ERROR + ' ' + reason)} ${filePath}\\n\\n`;\n    this.errors.push(results);\n    return results;\n  }\n\n  formatLdWarning(reason: string): string {\n    const results = switchRegex(reason, [\n      [\n        Matchers.Warnings.LINKER_METHOD_OVERRIDE,\n        ([, $1, $2, $3, $4, $5]) => {\n          return this.formatLdMethodOverride($1, [\n            { filePath: $2, name: $3 },\n            { filePath: $4, name: $5 },\n          ]);\n        },\n      ],\n      [null, () => `${chalk.yellow(WARNING + ' ' + reason)}`],\n    ]);\n\n    this.warnings.push(results);\n\n    return results;\n  }\n\n  formatUndefinedSymbols(message: string, symbol: string, reference: string): string {\n    const symbols = chalk.gray(`┌─ Symbol: ${symbol}\\n└─ Referenced from: ${reference}`);\n    const results = `${chalk.red(ERROR + ' ' + message)}\\n${symbols}\\n`;\n    this.errors.push(results);\n    return results;\n  }\n\n  formatLdMethodOverride(\n    methodName: string,\n    collisions: { filePath: string; name: string }[]\n  ): string {\n    const formattedMessage = chalk.yellow(\n      WARNING + ` ld: duplicate method '${chalk.bold(methodName)}' in`\n    );\n    const types = ['category', 'class'];\n    const symbols = chalk.gray(\n      collisions\n        .map(({ filePath, name }, i) => {\n          const appFileRoot = getAppRoot(filePath);\n          const relativeAppFile = relativePath(appFileRoot, filePath);\n          const branch = i === collisions.length - 1 ? '└─' : i === 0 ? '┌─' : '├─';\n          return `${branch}${`[${types[i]}]`}: ${name} ${chalk.dim(relativeAppFile)}`;\n        })\n        .join('\\n')\n    );\n    return `${formattedMessage}\\n${symbols}\\n`;\n  }\n\n  formatDuplicateSymbols(message: string, filePaths: string[], isWarning: boolean): string {\n    const formattedMessage = isWarning\n      ? chalk.yellow(WARNING + ' ' + message)\n      : chalk.red(ERROR + ' ' + message);\n    const symbols = chalk.gray(\n      filePaths\n        .map((p, i) => {\n          const branch = i === filePaths.length - 1 ? '└─' : i === 0 ? '┌─' : '├─';\n          return `${branch} ${path.basename(p)}`;\n        })\n        .join('\\n')\n    );\n    const results = `${formattedMessage}\\n${symbols}\\n`;\n\n    if (isWarning) {\n      this.warnings.push(results);\n    } else {\n      this.errors.push(results);\n    }\n    return results;\n  }\n\n  /**\n   * In: `The iOS Simulator deployment target 'IPHONEOS_DEPLOYMENT_TARGET' is set to 8.0, but the range of supported deployment target versions is 9.0 to 14.3.99. (in target 'boost-for-react-native' from project 'Pods')`\n   * Out: `⚠️ Pods/boost-for-react-native: iOS@8.0 version mismatch. Expected >= 9.0 < 14.3.99`\n   *\n   * @param os iOS\n   * @param deploymentTarget IPHONEOS_DEPLOYMENT_TARGET\n   * @param version 8.0\n   * @param minVersion 9.0\n   * @param maxVersion 14.3.99\n   * @param target boost-for-react-native\n   * @param project Pods\n   */\n  formatVersionMismatchWarning(\n    os: string,\n    deploymentTarget: string,\n    version: string,\n    minVersion: string,\n    maxVersion: string,\n    target: string,\n    project: string\n  ): string {\n    const packageName = [project, target].join('/');\n    const platform = chalk.bold(`${packageName}:`);\n    const packageNameWithVersion = chalk.greenBright(os) + chalk.cyan`@` + chalk.magenta(version);\n    const expectedRange = `>= ${minVersion} <= ${maxVersion}`;\n    return `${WARNING} ${platform} ${packageNameWithVersion} deployment version mismatch, expected ${expectedRange}`;\n  }\n\n  /**\n   * In: `warning: [CP] Vendored binary '/Users/evanbacon/Library/Developer/Xcode/DerivedData/yolo67-hcjsxsdqyxnsgdednlbpylgeffja/Build/Intermediates.noindex/Pods.build/Debug-iphonesimulator/hermes-engine.build/DerivedSources/hermes.framework.dSYM/Contents/Resources/DWARF/hermes' contains architectures (armv7 armv7s arm64) none of which match the current build architectures (x86_64).`\n   * Out: `⚠️  Vendored binary '[app]/hermes-engine.build/DerivedSources/hermes.framework.dSYM/Contents/Resources/DWARF/hermes' does not support current build architecture (x86_64). Supported architectures: armv7, armv7s, arm64.`\n   *\n   * @param os iOS\n   * @param deploymentTarget IPHONEOS_DEPLOYMENT_TARGET\n   * @param version 8.0\n   * @param minVersion 9.0\n   * @param maxVersion 14.3.99\n   * @param target boost-for-react-native\n   * @param project Pods\n   */\n  formatMissingArchitectureWarning(\n    binaryPath: string,\n    architectures: string[],\n    currentArchitectures: string[]\n  ): string {\n    const appFileRoot = getAppRoot(binaryPath);\n    const relativeAppFile = appFileRoot\n      ? chalk.gray('[app]/') + relativePath(appFileRoot, binaryPath)\n      : binaryPath;\n\n    const architectureString = currentArchitectures.length === 1 ? 'architecture' : 'architectures';\n    const supportedString = chalk.dim(`Supported architectures: ${architectures.join(', ')}.`);\n    return (\n      chalk.yellow(\n        `${WARNING} Vendored binary '${relativeAppFile}' does not support current build ${architectureString} (${chalk.bold(\n          currentArchitectures.join(', ')\n        )}). `\n      ) + supportedString\n    );\n  }\n\n  /**\n   * In: `Skipping duplicate build file in Compile Sources build phase: /Users/evanbacon/Documents/GitHub/expo/ios/Exponent/Kernel/ReactAppManager/EXReactAppManager.mm (in target 'Exponent' from project 'Exponent')`\n   * Out:\n   * `⚠️ Skipping duplicate file: Exponent/Kernel/ReactAppManager/EXReactAppManager.mm:\n   *    Remove: Exponent » Exponent » Build Phases » Compile Sources » EXReactAppManager.mm`\n   *\n   * @param filePath\n   * @param buildPhase 'Compile Sources'\n   * @param target Exponent-watch-app\n   * @param project Exponent\n   */\n  formatDuplicateFileCompilerWarning(\n    filePath: string,\n    buildPhase: string,\n    target: string,\n    project: string\n  ): string {\n    const message = `${chalk.yellow`Skipping duplicate file:`} ${relativePath(\n      this.props.projectRoot,\n      filePath\n    )}`;\n    const fileName = path.basename(filePath);\n    const crumbs = chalk.gray(\n      'Remove: ' +\n        ['Xcode', `${project}/${target}`, 'Build Phases', buildPhase, fileName].join(\n          ` ${BREADCRUMB} `\n        )\n    );\n\n    return `${WARNING} ${message}\\n   ${crumbs}\\n`;\n  }\n\n  /**\n   * In: `The Copy Bundle Resources build phase contains this target's Info.plist file '/Users/evanbacon/Documents/GitHub/expo/ios/Exponent/Supporting/Info.plist'. (in target 'Exponent' from project 'Exponent')`\n   * Out:\n   * `⚠️ Target's Info.plist file is incorrectly linked: Exponent/Supporting/Info.plist:\n   *    Remove: Exponent » Exponent » Build Phases » Copy Bundle Resources » Info.plist`\n   *\n   * @param filePath\n   * @param reservedFileDescription 'entitlements'\n   * @param target Exponent-watch-app\n   * @param project Exponent\n   */\n  formatReservedFileInCopyBundleResourcesCompilerWarning(\n    filePath: string,\n    reservedFileDescription: string,\n    target: string,\n    project: string\n  ): string {\n    const message = `${chalk.yellow`Target's ${chalk.bold(\n      reservedFileDescription\n    )} file is incorrectly linked:`} ${relativePath(this.props.projectRoot, filePath)}`;\n    const fileName = path.basename(filePath);\n    const crumbs = chalk.gray(\n      'Remove: ' +\n        ['Xcode', `${project}/${target}`, 'Build Phases', 'Copy Bundle Resources', fileName].join(\n          ` ${BREADCRUMB} `\n        )\n    );\n\n    return `${WARNING} ${message}\\n   ${crumbs}\\n`;\n  }\n\n  formatMissingFileCompilerWarning(filePath: string): string {\n    return `${WARNING} ${chalk.yellow`No such file or directory:`} ${filePath}`;\n  }\n\n  formatGenericError(message: string): string {\n    return `\\n${chalk.red(ERROR + ' ' + message)}\\n\\n`;\n  }\n\n  formatGenericWarning(message: string): string {\n    return INDENT + chalk.yellow(message);\n  }\n\n  formatWarning(message: string): string {\n    const results = switchRegex(message, [\n      [\n        Matchers.Warnings.MISSING_ARCHITECTURE,\n        ([, $1, $2, $3]) => {\n          return this.formatMissingArchitectureWarning(\n            $1,\n            $2?.split(' ').map(value => value.trim()),\n            $3?.split(' ').map(value => value.trim())\n          );\n        },\n      ],\n      [\n        Matchers.Warnings.VERSION_MISMATCH,\n        ([, $1, $2, $3, $4, $5, $6, $7]) => {\n          return this.formatVersionMismatchWarning($1, $2, $3, $4, $5, $6, $7);\n        },\n      ],\n      [\n        Matchers.Warnings.MISSING_FILE_COMPILER_WARNING_MATCHER,\n        ([, $1]) => {\n          return this.formatMissingFileCompilerWarning($1);\n        },\n      ],\n      [\n        Matchers.Warnings.SKIPPING_DUPLICATE_FILE,\n        ([, $1, $2, $3, $4]) => {\n          return this.formatDuplicateFileCompilerWarning($2, $1, $3, $4);\n        },\n      ],\n      [\n        Matchers.Warnings.TARGETS_FILE_INCLUDED,\n        ([, $1, $2, $3, $4]) => {\n          return this.formatReservedFileInCopyBundleResourcesCompilerWarning($2, $1, $3, $4);\n        },\n      ],\n      [null, () => this.formatGenericWarning(message)],\n    ]);\n\n    this.warnings.push(results);\n\n    return results;\n  }\n\n  // TODO: see how we can unify formatError and formatCompileError,\n  //       the same for warnings\n  formatCompileWarning(\n    fileName: string,\n    filePathAndLocation: string,\n    reason: string,\n    line?: string,\n    cursor?: string\n  ): string {\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(filePathAndLocation);\n    if (this.shouldShowCompileWarning(filePath, lineNumber, columnNumber)) {\n      const results = formatWarningOrError({\n        isError: false,\n        filePath,\n        reason,\n        cursor,\n        lineText: line,\n        lineNumber,\n        columnNumber,\n        projectRoot: this.props.projectRoot,\n        maxWarningLineLength: this.props.maxWarningLineLength,\n      });\n      this.warnings.push(results);\n      return results;\n    }\n    return '';\n  }\n\n  shouldShowCompileWarning(filePath: string, lineNumber?: string, columnNumber?: string): boolean {\n    return true;\n  }\n\n  formatPendingTest(suite: string, test: string): string {\n    return INDENT + formatTest(`${test} [PENDING]`, Status.Pending);\n  }\n\n  formatPassingTest(suite: string, test: string, time: string): string {\n    return INDENT + formatTest(`${test} (${coloredTime(time)} seconds)`, Status.Pass);\n  }\n\n  formatMeasuringTest(suite: string, test: string, time: string): string {\n    return INDENT + formatTest(`${test} measured (${coloredTime(time)} seconds)`, Status.Measure);\n  }\n\n  formatFailingTest(suite: string, test: string, reason: string, filePath: string): string {\n    return INDENT + formatTest(`${test}, ${reason}`, Status.Fail);\n  }\n\n  formatTestRunStarted(name: string): string {\n    return heading('Test Suite', name, 'started');\n  }\n\n  formatTestSuiteStarted(name: string): string {\n    return heading('', name, '');\n  }\n\n  formatTestRunFinished(name: string, time: string): string {\n    return '';\n  }\n\n  // Will be printed by default. Override with '' if you don't want summary\n  formatTestSummary(executedMessage: string, failuresPerSuite: Record<string, Failure[]>): string {\n    const failures = this.formatFailures(failuresPerSuite);\n    let finalMessage = '';\n    if (!failures) {\n      finalMessage = chalk.green(executedMessage);\n    } else {\n      finalMessage = chalk.red(executedMessage);\n    }\n\n    const text = [failures, finalMessage].join('\\n\\n\\n').trim();\n    return `\\n\\n${text}`;\n  }\n\n  formatFailures(failuresPerSuite: Record<string, Failure[]>): string {\n    return Object.entries(failuresPerSuite)\n      .map(([suite, failures]) => {\n        const formattedFailures = failures.map(failure => this.formatFailure(failure)).join('\\n\\n');\n\n        return `\\n${suite}\\n${formattedFailures}`;\n      })\n      .join('\\n');\n  }\n\n  formatFailure(f: Failure): string {\n    const { filePath, lineNumber, columnNumber } = splitPathInfo(f.filePath);\n\n    return formatWarningOrError({\n      isError: true,\n      testName: f.testCase,\n      filePath,\n      reason: f.reason,\n      // cursor,\n      lineNumber,\n      columnNumber,\n      projectRoot: this.props.projectRoot,\n      maxWarningLineLength: this.props.maxWarningLineLength,\n    });\n  }\n\n  finish() {}\n\n  // Override if you want to catch something specific with your regex\n  prettyFormat(text: string) {\n    return this.parser.parse(text);\n  }\n\n  // If you want to print inline, override #optionalNewline with ''\n  optionalNewline() {\n    return '\\n';\n  }\n\n  getBuildSummary(): string {\n    return `\\n\\u203A ${this.errors.length} error(s), and ${this.warnings.length} warning(s)\\n`;\n  }\n}\n\nfunction formatPaths(config: { filePath: string | null; line?: number; col?: number }) {\n  const filePath = chalk.reset.cyan(config.filePath);\n  return (\n    chalk.dim('(') +\n    filePath +\n    chalk.dim(`:${[config.line, config.col].filter(Boolean).join(':')})`)\n  );\n}\n\n/**\n * Split a string like `/Users/foo/bar.m:420:68` into its components.\n *\n * @param filePath '/Users/foo/bar.m:420:68'\n */\nfunction splitPathInfo(\n  filePathAndLocation: string\n): { filePath: string; lineNumber?: string; columnNumber?: string } {\n  const [path, line, column] = filePathAndLocation.split(':');\n\n  return {\n    filePath: path || filePathAndLocation,\n    lineNumber: line,\n    columnNumber: column,\n  };\n}\n\nfunction parseOptionalInt(text?: string): number | undefined {\n  if (!text) return undefined;\n  try {\n    const result = parseInt(text, 10);\n    return isNaN(result) ? undefined : result;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction formatWarningOrError({\n  projectRoot,\n  filePath,\n  reason,\n  cursor,\n  lineText,\n  lineNumber,\n  columnNumber,\n  isError,\n  maxWarningLineLength = 200,\n}: {\n  projectRoot: string;\n  filePath: string;\n  reason: string;\n  cursor?: string;\n  lineText?: string;\n  lineNumber?: string;\n  columnNumber?: string;\n  isError: boolean;\n  testName?: string;\n  maxWarningLineLength?: number;\n}) {\n  const line = parseOptionalInt(lineNumber) || 0;\n  const column = parseOptionalInt(columnNumber);\n  const color = isError ? chalk.red : chalk.yellow;\n  const icon = color(isError ? ERROR : WARNING);\n\n  const displayFilePath = !filePath\n    ? // If no file path, use null\n      null\n    : // If the file path is inside of the build folder (Hermes), then use absolute path.\n    getAppRoot(filePath)\n    ? filePath\n    : // Otherwise, use relative path\n      slash(path.relative(projectRoot, filePath));\n\n  const formattedPath = formatPaths({\n    filePath: displayFilePath,\n    col: column,\n    line,\n  });\n\n  const pathWithPrefix = `${icon} ${formattedPath}`;\n\n  const formattedReason = color(grayOutMatch(reason, /(\\[-.*?\\])/).replace(/(\\(.*?\\)\\s?)/, ''));\n\n  // Add special case for .jsbundle files that are parsed with Hermes.\n  const isHermes = filePath.endsWith('.jsbundle');\n  const isPreviewTooLong = isHermes || (lineText && lineText.length > maxWarningLineLength);\n  // When the preview is too long, we skip reading the file and attempting to apply\n  // code coloring, this is because it can get very slow.\n  if (isPreviewTooLong) {\n    let previewLine = '';\n    let cursorLine = formattedReason;\n\n    // Create a curtailed preview line like:\n    // `...transition:'fade'},k._updatePropsStack=function(){clearImmediate(k._updateImmediate),k._updateImmediate...`\n    // If there is no text preview or column number, we can't do anything.\n    if (lineText && column != null) {\n      const rangeWindow = Math.round(Math.max(displayFilePath?.length ?? 0, 80) / 2);\n      let minBounds = Math.max(0, column - rangeWindow);\n      const maxBounds = Math.min(minBounds + rangeWindow * 2, lineText.length);\n      previewLine = lineText.slice(minBounds, maxBounds);\n\n      // If we splice content off the start, then we should append `...`.\n      // This is unlikely to happen since we limit the activation size.\n      if (minBounds > 0) {\n        // Adjust the min bounds so the cursor is aligned after we add the \"...\"\n        minBounds -= 3;\n        previewLine = chalk.dim('...') + previewLine;\n      }\n      if (maxBounds < lineText.length) {\n        previewLine += chalk.dim('...');\n      }\n\n      // If the column property could be found, then use that to fix the cursor location which is often broken in regex.\n      cursorLine =\n        (column == null ? chalk.reset(cursor) : fill(column) + chalk.reset('^')).slice(minBounds) +\n        ' ' +\n        formattedReason;\n    }\n\n    return ['', pathWithPrefix, '', previewLine, cursorLine, chalk.dim('(warning truncated)')].join(\n      '\\n'\n    );\n  }\n\n  try {\n    const raw = fs.readFileSync(filePath, 'utf8');\n    const location = { start: { line, column } };\n    const framed = codeFrameColumns(raw, location, {\n      // TODO: Support iOS languages: C++, Objc, swift, Ruby, Bash\n      // Maybe something like prism but for terminals?\n      highlightCode: false,\n      // Remove `(_Nonnull, _Nullable, or _Null_unspecified)` options\n      message: formattedReason,\n    });\n\n    return `\\n${pathWithPrefix}\\n\\n${framed}\\n`;\n  } catch {\n    // If the column property could be found, then use that to fix the cursor location which is often broken in regex.\n    const customCursor = column == null ? chalk.reset(cursor) : fill(column) + chalk.reset('^');\n\n    const framed = `${lineText}\\n${customCursor} ${formattedReason}`;\n\n    return `\\n${pathWithPrefix}\\n\\n${framed}\\n`;\n  }\n}\n\nfunction fill(width: number): string {\n  return Array(width).join(' ');\n}\n\n// Dim values like `[-Wnullability-completeness]`\nfunction grayOutMatch(text: string, reg: RegExp): string {\n  return replaceMatch(text, reg, chalk.gray.dim);\n}\n\nfunction replaceMatch(text: string, reg: RegExp, callback: (text: string) => string): string {\n  const match = text.match(reg);\n  if (match?.length) {\n    return text.replace(reg, callback(match[0]));\n  }\n  return text;\n}\n\nfunction slash(path: string) {\n  const isExtendedLengthPath = /^\\\\\\\\\\?\\\\/.test(path);\n  const hasNonAscii = /[^\\u0000-\\u0080]+/.test(path); // eslint-disable-line no-control-regex\n\n  if (isExtendedLengthPath || hasNonAscii) {\n    return path;\n  }\n\n  return path.replace(/\\\\/g, '/');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}