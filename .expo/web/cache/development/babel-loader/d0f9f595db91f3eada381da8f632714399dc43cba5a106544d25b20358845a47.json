{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changePlaceholderInTemplate = changePlaceholderInTemplate;\nexports.replaceNameInUTF8File = replaceNameInUTF8File;\nexports.replacePlaceholderWithPackageName = replacePlaceholderWithPackageName;\nexports.validatePackageName = validatePackageName;\nfunction _path() {\n  var data = _interopRequireDefault(require(\"path\"));\n  _path = function _path() {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  var data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function _cliTools() {\n    return data;\n  };\n  return data;\n}\nvar _walk = _interopRequireDefault(require(\"../../tools/walk\"));\nfunction _fsExtra() {\n  var data = _interopRequireDefault(require(\"fs-extra\"));\n  _fsExtra = function _fsExtra() {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar DEFAULT_TITLE_PLACEHOLDER = 'Hello App Display Name';\nfunction validatePackageName(packageName) {\n  var packageNameParts = packageName.split('.');\n  var packageNameRegex = /^([A-Za-z]([0-9A-Z_a-z])*\\.)+[A-Za-z]([0-9A-Z_a-z])*$/;\n  if (packageNameParts.length < 2) {\n    throw `The package name ${packageName} is invalid. It should contain at least two segments, e.g. com.app`;\n  }\n  if (!packageNameRegex.test(packageName)) {\n    throw `The ${packageName} package name is not valid. It can contain only alphanumeric characters and dots.`;\n  }\n}\nfunction replaceNameInUTF8File(_x, _x2, _x3) {\n  return _replaceNameInUTF8File.apply(this, arguments);\n}\nfunction _replaceNameInUTF8File() {\n  _replaceNameInUTF8File = _asyncToGenerator(function* (filePath, projectName, templateName) {\n    _cliTools().logger.debug(`Replacing in ${filePath}`);\n    var fileContent = yield _fsExtra().default.readFile(filePath, 'utf8');\n    var replacedFileContent = fileContent.replace(new RegExp(templateName, 'g'), projectName).replace(new RegExp(templateName.toLowerCase(), 'g'), projectName.toLowerCase());\n    if (fileContent !== replacedFileContent) {\n      yield _fsExtra().default.writeFile(filePath, replacedFileContent, 'utf8');\n    }\n  });\n  return _replaceNameInUTF8File.apply(this, arguments);\n}\nfunction renameFile(_x4, _x5, _x6) {\n  return _renameFile.apply(this, arguments);\n}\nfunction _renameFile() {\n  _renameFile = _asyncToGenerator(function* (filePath, oldName, newName) {\n    var newFileName = _path().default.join(_path().default.dirname(filePath), _path().default.basename(filePath).replace(new RegExp(oldName, 'g'), newName));\n    _cliTools().logger.debug(`Renaming ${filePath} -> file:${newFileName}`);\n    yield _fsExtra().default.rename(filePath, newFileName);\n  });\n  return _renameFile.apply(this, arguments);\n}\nfunction shouldRenameFile(filePath, nameToReplace) {\n  return _path().default.basename(filePath).includes(nameToReplace);\n}\nfunction shouldIgnoreFile(filePath) {\n  return filePath.match(/node_modules|yarn.lock|package-lock.json/g);\n}\nfunction isIosFile(filePath) {\n  return filePath.includes('ios');\n}\nvar UNDERSCORED_DOTFILES = ['buckconfig', 'eslintrc.js', 'flowconfig', 'gitattributes', 'gitignore', 'prettierrc.js', 'watchmanconfig', 'editorconfig', 'bundle', 'ruby-version', 'node-version', 'xcode.env'];\nfunction processDotfiles(_x7) {\n  return _processDotfiles.apply(this, arguments);\n}\nfunction _processDotfiles() {\n  _processDotfiles = _asyncToGenerator(function* (filePath) {\n    var dotfile = UNDERSCORED_DOTFILES.find(function (e) {\n      return filePath.includes(`_${e}`);\n    });\n    if (dotfile === undefined) {\n      return;\n    }\n    yield renameFile(filePath, `_${dotfile}`, `.${dotfile}`);\n  });\n  return _processDotfiles.apply(this, arguments);\n}\nfunction createAndroidPackagePaths(_x8, _x9) {\n  return _createAndroidPackagePaths.apply(this, arguments);\n}\nfunction _createAndroidPackagePaths() {\n  _createAndroidPackagePaths = _asyncToGenerator(function* (filePath, packageName) {\n    var pathParts = filePath.split('/').slice(-2);\n    if (pathParts[0] === 'java' && pathParts[1] === 'com') {\n      var pathToFolders = filePath.split('/').slice(0, -2).join('/');\n      var segmentsList = packageName.split('.');\n      if (segmentsList.length > 1) {\n        var initialDir = process.cwd();\n        process.chdir(filePath.split('/').slice(0, -1).join('/'));\n        try {\n          yield _fsExtra().default.rename(`${filePath}/${segmentsList.join('.')}`, `${pathToFolders}/${segmentsList[segmentsList.length - 1]}`);\n          yield _fsExtra().default.rmdir(filePath);\n          for (var segment of segmentsList) {\n            _fsExtra().default.mkdirSync(segment);\n            process.chdir(segment);\n          }\n          yield _fsExtra().default.rename(`${pathToFolders}/${segmentsList[segmentsList.length - 1]}`, process.cwd());\n        } catch (_unused) {\n          throw 'Failed to create correct paths for Android.';\n        }\n        process.chdir(initialDir);\n      }\n    }\n  });\n  return _createAndroidPackagePaths.apply(this, arguments);\n}\nfunction replacePlaceholderWithPackageName(_x10) {\n  return _replacePlaceholderWithPackageName.apply(this, arguments);\n}\nfunction _replacePlaceholderWithPackageName() {\n  _replacePlaceholderWithPackageName = _asyncToGenerator(function* (_ref) {\n    var projectName = _ref.projectName,\n      placeholderName = _ref.placeholderName,\n      placeholderTitle = _ref.placeholderTitle,\n      packageName = _ref.packageName;\n    validatePackageName(packageName);\n    var cleanPackageName = packageName.replace(/(?:[\\0-\\x2D\\/:-@\\[-`\\{-\\xA9\\xAB-\\xB1\\xB4\\xB6-\\xB8\\xBB\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u036F\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482-\\u0489\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u061F\\u064B-\\u065F\\u066A-\\u066D\\u0670\\u06D4\\u06D6-\\u06E4\\u06E7-\\u06ED\\u06FD\\u06FE\\u0700-\\u070F\\u0711\\u0730-\\u074C\\u07A6-\\u07B0\\u07B2-\\u07BF\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FB-\\u07FF\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u083F\\u0859-\\u085F\\u086B-\\u086F\\u0888\\u088F-\\u089F\\u08CA-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962-\\u0965\\u0970\\u0981-\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA-\\u09BC\\u09BE-\\u09CD\\u09CF-\\u09DB\\u09DE\\u09E2-\\u09E5\\u09F2\\u09F3\\u09FA\\u09FB\\u09FD-\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A70\\u0A71\\u0A75-\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA-\\u0ABC\\u0ABE-\\u0ACF\\u0AD1-\\u0ADF\\u0AE2-\\u0AE5\\u0AF0-\\u0AF8\\u0AFA-\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A-\\u0B3C\\u0B3E-\\u0B5B\\u0B5E\\u0B62-\\u0B65\\u0B70\\u0B78-\\u0B82\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BCF\\u0BD1-\\u0BE5\\u0BF3-\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C3E-\\u0C57\\u0C5B\\u0C5C\\u0C5E\\u0C5F\\u0C62-\\u0C65\\u0C70-\\u0C77\\u0C7F\\u0C81-\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA-\\u0CBC\\u0CBE-\\u0CDC\\u0CDF\\u0CE2-\\u0CE5\\u0CF0\\u0CF3-\\u0D03\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D3E-\\u0D4D\\u0D4F-\\u0D53\\u0D57\\u0D62-\\u0D65\\u0D79\\u0D80-\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DE5\\u0DF0-\\u0E00\\u0E31\\u0E34-\\u0E3F\\u0E47-\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EB1\\u0EB4-\\u0EBC\\u0EBE\\u0EBF\\u0EC5\\u0EC7-\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F1F\\u0F34-\\u0F3F\\u0F48\\u0F6D-\\u0F87\\u0F8D-\\u0FFF\\u102B-\\u103E\\u104A-\\u104F\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B-\\u1368\\u137D-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u1712-\\u171E\\u1732-\\u173F\\u1752-\\u175F\\u176D\\u1771-\\u177F\\u17B4-\\u17D6\\u17D8-\\u17DB\\u17DD-\\u17DF\\u17EA-\\u17EF\\u17FA-\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u1885\\u1886\\u18A9\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19FF\\u1A17-\\u1A1F\\u1A55-\\u1A7F\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1B04\\u1B34-\\u1B44\\u1B4D-\\u1B4F\\u1B5A-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BFF\\u1C24-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1CFB-\\u1CFF\\u1DC0-\\u1DFF\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u206F\\u2072\\u2073\\u207A-\\u207E\\u208A-\\u208F\\u209D-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A-\\u245F\\u249C-\\u24E9\\u2500-\\u2775\\u2794-\\u2BFF\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF4-\\u2CFC\\u2CFE\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7F\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u302A-\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097-\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u3191\\u3196-\\u319F\\u31C0-\\u31EF\\u3200-\\u321F\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA66F-\\uA67E\\uA69E\\uA69F\\uA6F0-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7CB-\\uA7CF\\uA7D2\\uA7D4\\uA7DA-\\uA7F1\\uA802\\uA806\\uA80B\\uA823-\\uA82F\\uA836-\\uA83F\\uA874-\\uA881\\uA8B4-\\uA8CF\\uA8DA-\\uA8F1\\uA8F8-\\uA8FA\\uA8FC\\uA8FF\\uA926-\\uA92F\\uA947-\\uA95F\\uA97D-\\uA983\\uA9B3-\\uA9CE\\uA9DA-\\uA9DF\\uA9E5\\uA9FF\\uAA29-\\uAA3F\\uAA43\\uAA4C-\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAEB-\\uAAF1\\uAAF5-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABE3-\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB1E\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD06\\uDD34-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEE0\\uDEFC-\\uDEFF\\uDF24-\\uDF2C\\uDF4B-\\uDF4F\\uDF76-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDD6F\\uDD7B\\uDD8B\\uDD93\\uDD96\\uDDA2\\uDDB2\\uDDBA\\uDDBD-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDF7F\\uDF86\\uDFB1\\uDFBB-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56\\uDC57\\uDC77\\uDC78\\uDC9F-\\uDCA6\\uDCB0-\\uDCDF\\uDCF3\\uDCF6-\\uDCFA\\uDD1C-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBB\\uDDD0\\uDDD1\\uDE01-\\uDE0F\\uDE14\\uDE18\\uDE36-\\uDE3F\\uDE49-\\uDE5F\\uDE7F\\uDEA0-\\uDEBF\\uDEC8\\uDEE5-\\uDEEA\\uDEF0-\\uDEFF\\uDF36-\\uDF3F\\uDF56\\uDF57\\uDF73-\\uDF77\\uDF92-\\uDFA8\\uDFB0-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCF9\\uDD24-\\uDD2F\\uDD3A-\\uDE5F\\uDE7F\\uDEAA-\\uDEAF\\uDEB2-\\uDEFF\\uDF28-\\uDF2F\\uDF46-\\uDF50\\uDF55-\\uDF6F\\uDF82-\\uDFAF\\uDFCC-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC51\\uDC70\\uDC73\\uDC74\\uDC76-\\uDC82\\uDCB0-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDD02\\uDD27-\\uDD35\\uDD40-\\uDD43\\uDD45\\uDD46\\uDD48-\\uDD4F\\uDD73-\\uDD75\\uDD77-\\uDD82\\uDDB3-\\uDDC0\\uDDC5-\\uDDCF\\uDDDB\\uDDDD-\\uDDE0\\uDDF5-\\uDDFF\\uDE12\\uDE2C-\\uDE3E\\uDE41-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEDF-\\uDEEF\\uDEFA-\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A-\\uDF3C\\uDF3E-\\uDF4F\\uDF51-\\uDF5C\\uDF62-\\uDFFF]|\\uD805[\\uDC35-\\uDC46\\uDC4B-\\uDC4F\\uDC5A-\\uDC5E\\uDC62-\\uDC7F\\uDCB0-\\uDCC3\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDAF-\\uDDD7\\uDDDC-\\uDDFF\\uDE30-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEAB-\\uDEB7\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B-\\uDF2F\\uDF3C-\\uDF3F\\uDF47-\\uDFFF]|\\uD806[\\uDC2C-\\uDC9F\\uDCF3-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD30-\\uDD3E\\uDD40\\uDD42-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD1-\\uDDE0\\uDDE2\\uDDE4-\\uDDFF\\uDE01-\\uDE0A\\uDE33-\\uDE39\\uDE3B-\\uDE4F\\uDE51-\\uDE5B\\uDE8A-\\uDE9C\\uDE9E-\\uDEAF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC2F-\\uDC3F\\uDC41-\\uDC4F\\uDC6D-\\uDC71\\uDC90-\\uDCFF\\uDD07\\uDD0A\\uDD31-\\uDD45\\uDD47-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8A-\\uDD97\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF3-\\uDF01\\uDF03\\uDF11\\uDF34-\\uDF4F\\uDF5A-\\uDFAF\\uDFB1-\\uDFBF\\uDFD5-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82A\\uD82D\\uD82E\\uD830-\\uD833\\uD836\\uD83D\\uD83F\\uD87C\\uD87D\\uD87F\\uD889-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80B[\\uDC00-\\uDF8F\\uDFF1-\\uDFFF]|\\uD80D[\\uDC30-\\uDC40\\uDC47-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDE6F\\uDEBF\\uDECA-\\uDECF\\uDEEE-\\uDEFF\\uDF30-\\uDF3F\\uDF44-\\uDF4F\\uDF5A\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE97-\\uDEFF\\uDF4B-\\uDF4F\\uDF51-\\uDF92\\uDFA0-\\uDFDF\\uDFE2\\uDFE4-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82B[\\uDC00-\\uDFEF\\uDFF4\\uDFFC\\uDFFF]|\\uD82C[\\uDD23-\\uDD31\\uDD33-\\uDD4F\\uDD53\\uDD54\\uDD56-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDFFF]|\\uD834[\\uDC00-\\uDEBF\\uDED4-\\uDEDF\\uDEF4-\\uDF5F\\uDF79-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD837[\\uDC00-\\uDEFF\\uDF1F-\\uDF24\\uDF2B-\\uDFFF]|\\uD838[\\uDC00-\\uDC2F\\uDC6E-\\uDCFF\\uDD2D-\\uDD36\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDE8F\\uDEAE-\\uDEBF\\uDEEC-\\uDEEF\\uDEFA-\\uDFFF]|\\uD839[\\uDC00-\\uDCCF\\uDCEC-\\uDCEF\\uDCFA-\\uDFDF\\uDFE7\\uDFEC\\uDFEF\\uDFFF]|\\uD83A[\\uDCC5\\uDCC6\\uDCD0-\\uDCFF\\uDD44-\\uDD4A\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDC70\\uDCAC\\uDCB0\\uDCB5-\\uDD00\\uDD2E\\uDD3E-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDCFF\\uDD0D-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEE0-\\uDEFF]|\\uD86D[\\uDF3A-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFEF]|\\uD87B[\\uDE5E-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDF4F]|\\uD888[\\uDFB0-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+/g, '');\n    for (var filePath of (0, _walk.default)(process.cwd()).reverse()) {\n      if (shouldIgnoreFile(filePath)) {\n        continue;\n      }\n      var iosFile = isIosFile(filePath);\n      if (!(yield _fsExtra().default.stat(filePath)).isDirectory()) {\n        var newName = iosFile ? projectName : cleanPackageName;\n        yield replaceNameInUTF8File(filePath, `PRODUCT_BUNDLE_IDENTIFIER = \"${cleanPackageName}\"`, 'PRODUCT_BUNDLE_IDENTIFIER = \"(.*)\"');\n        if (filePath.includes('app.json')) {\n          yield replaceNameInUTF8File(filePath, projectName, placeholderName);\n        } else {\n          yield replaceNameInUTF8File(filePath, `return \"${projectName}\"`, `return \"${placeholderName}\"`);\n          yield replaceNameInUTF8File(filePath, `<string name=\"app_name\">${projectName}</string>`, `<string name=\"app_name\">${placeholderTitle}</string>`);\n          yield replaceNameInUTF8File(filePath, newName, `com.${placeholderName}`);\n          yield replaceNameInUTF8File(filePath, newName, placeholderName);\n          yield replaceNameInUTF8File(filePath, newName, placeholderTitle);\n        }\n      }\n      var fileName = cleanPackageName;\n      if (shouldRenameFile(filePath, placeholderName)) {\n        if (iosFile) {\n          fileName = projectName;\n        }\n        yield renameFile(filePath, placeholderName, fileName);\n      } else if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n        yield renameFile(filePath, placeholderName.toLowerCase(), fileName.toLowerCase());\n      }\n      try {\n        yield createAndroidPackagePaths(filePath, cleanPackageName);\n      } catch (error) {\n        throw new (_cliTools().CLIError)('Failed to create correct paths for Android.');\n      }\n      yield processDotfiles(filePath);\n    }\n  });\n  return _replacePlaceholderWithPackageName.apply(this, arguments);\n}\nfunction changePlaceholderInTemplate(_x11) {\n  return _changePlaceholderInTemplate.apply(this, arguments);\n}\nfunction _changePlaceholderInTemplate() {\n  _changePlaceholderInTemplate = _asyncToGenerator(function* (_ref2) {\n    var projectName = _ref2.projectName,\n      placeholderName = _ref2.placeholderName,\n      _ref2$placeholderTitl = _ref2.placeholderTitle,\n      placeholderTitle = _ref2$placeholderTitl === void 0 ? DEFAULT_TITLE_PLACEHOLDER : _ref2$placeholderTitl,\n      _ref2$projectTitle = _ref2.projectTitle,\n      projectTitle = _ref2$projectTitle === void 0 ? projectName : _ref2$projectTitle,\n      packageName = _ref2.packageName;\n    _cliTools().logger.debug(`Changing ${placeholderName} for ${projectName} in template`);\n    if (packageName) {\n      try {\n        yield replacePlaceholderWithPackageName({\n          projectName: projectName,\n          placeholderName: placeholderName,\n          placeholderTitle: placeholderTitle,\n          packageName: packageName\n        });\n      } catch (error) {\n        throw new (_cliTools().CLIError)(error.message);\n      }\n    } else {\n      for (var filePath of (0, _walk.default)(process.cwd()).reverse()) {\n        if (shouldIgnoreFile(filePath)) {\n          continue;\n        }\n        if (!(yield _fsExtra().default.stat(filePath)).isDirectory()) {\n          yield replaceNameInUTF8File(filePath, projectName, placeholderName);\n          yield replaceNameInUTF8File(filePath, projectTitle, placeholderTitle);\n        }\n        if (shouldRenameFile(filePath, placeholderName)) {\n          yield renameFile(filePath, placeholderName, projectName);\n        } else if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n          yield renameFile(filePath, placeholderName.toLowerCase(), projectName.toLowerCase());\n        }\n        yield processDotfiles(filePath);\n      }\n    }\n  });\n  return _changePlaceholderInTemplate.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","Object","defineProperty","exports","value","changePlaceholderInTemplate","replaceNameInUTF8File","replacePlaceholderWithPackageName","validatePackageName","_path","data","_interopRequireDefault","_cliTools","_walk","_fsExtra","obj","__esModule","default","DEFAULT_TITLE_PLACEHOLDER","packageName","packageNameParts","split","packageNameRegex","length","test","_x","_x2","_x3","_replaceNameInUTF8File","apply","arguments","filePath","projectName","templateName","logger","debug","fileContent","readFile","replacedFileContent","replace","RegExp","toLowerCase","writeFile","renameFile","_x4","_x5","_x6","_renameFile","oldName","newName","newFileName","join","dirname","basename","rename","shouldRenameFile","nameToReplace","includes","shouldIgnoreFile","match","isIosFile","UNDERSCORED_DOTFILES","processDotfiles","_x7","_processDotfiles","dotfile","find","e","undefined","createAndroidPackagePaths","_x8","_x9","_createAndroidPackagePaths","pathParts","slice","pathToFolders","segmentsList","initialDir","process","cwd","chdir","rmdir","segment","mkdirSync","_unused","_x10","_replacePlaceholderWithPackageName","_ref","placeholderName","placeholderTitle","cleanPackageName","reverse","iosFile","stat","isDirectory","fileName","error","CLIError","_x11","_changePlaceholderInTemplate","_ref2","_ref2$placeholderTitl","_ref2$projectTitle","projectTitle","message"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@react-native-community/cli/build/commands/init/editTemplate.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.changePlaceholderInTemplate = changePlaceholderInTemplate;\nexports.replaceNameInUTF8File = replaceNameInUTF8File;\nexports.replacePlaceholderWithPackageName = replacePlaceholderWithPackageName;\nexports.validatePackageName = validatePackageName;\nfunction _path() {\n  const data = _interopRequireDefault(require(\"path\"));\n  _path = function () {\n    return data;\n  };\n  return data;\n}\nfunction _cliTools() {\n  const data = require(\"@react-native-community/cli-tools\");\n  _cliTools = function () {\n    return data;\n  };\n  return data;\n}\nvar _walk = _interopRequireDefault(require(\"../../tools/walk\"));\nfunction _fsExtra() {\n  const data = _interopRequireDefault(require(\"fs-extra\"));\n  _fsExtra = function () {\n    return data;\n  };\n  return data;\n}\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// We need `graceful-fs` behavior around async file renames on Win32.\n// `gracefulify` does not support patching `fs.promises`. Use `fs-extra`, which\n// exposes its own promise-based interface over `graceful-fs`.\n\n/**\n  TODO: This is a default placeholder for title in react-native template.\n  We should get rid of this once custom templates adapt `placeholderTitle` in their configurations.\n*/\nconst DEFAULT_TITLE_PLACEHOLDER = 'Hello App Display Name';\nfunction validatePackageName(packageName) {\n  const packageNameParts = packageName.split('.');\n  const packageNameRegex = /^([a-zA-Z]([a-zA-Z0-9_])*\\.)+[a-zA-Z]([a-zA-Z0-9_])*$/u;\n  if (packageNameParts.length < 2) {\n    throw `The package name ${packageName} is invalid. It should contain at least two segments, e.g. com.app`;\n  }\n  if (!packageNameRegex.test(packageName)) {\n    throw `The ${packageName} package name is not valid. It can contain only alphanumeric characters and dots.`;\n  }\n}\nasync function replaceNameInUTF8File(filePath, projectName, templateName) {\n  _cliTools().logger.debug(`Replacing in ${filePath}`);\n  const fileContent = await _fsExtra().default.readFile(filePath, 'utf8');\n  const replacedFileContent = fileContent.replace(new RegExp(templateName, 'g'), projectName).replace(new RegExp(templateName.toLowerCase(), 'g'), projectName.toLowerCase());\n  if (fileContent !== replacedFileContent) {\n    await _fsExtra().default.writeFile(filePath, replacedFileContent, 'utf8');\n  }\n}\nasync function renameFile(filePath, oldName, newName) {\n  const newFileName = _path().default.join(_path().default.dirname(filePath), _path().default.basename(filePath).replace(new RegExp(oldName, 'g'), newName));\n  _cliTools().logger.debug(`Renaming ${filePath} -> file:${newFileName}`);\n  await _fsExtra().default.rename(filePath, newFileName);\n}\nfunction shouldRenameFile(filePath, nameToReplace) {\n  return _path().default.basename(filePath).includes(nameToReplace);\n}\nfunction shouldIgnoreFile(filePath) {\n  return filePath.match(/node_modules|yarn.lock|package-lock.json/g);\n}\nfunction isIosFile(filePath) {\n  return filePath.includes('ios');\n}\nconst UNDERSCORED_DOTFILES = ['buckconfig', 'eslintrc.js', 'flowconfig', 'gitattributes', 'gitignore', 'prettierrc.js', 'watchmanconfig', 'editorconfig', 'bundle', 'ruby-version', 'node-version', 'xcode.env'];\nasync function processDotfiles(filePath) {\n  const dotfile = UNDERSCORED_DOTFILES.find(e => filePath.includes(`_${e}`));\n  if (dotfile === undefined) {\n    return;\n  }\n  await renameFile(filePath, `_${dotfile}`, `.${dotfile}`);\n}\nasync function createAndroidPackagePaths(filePath, packageName) {\n  const pathParts = filePath.split('/').slice(-2);\n  if (pathParts[0] === 'java' && pathParts[1] === 'com') {\n    const pathToFolders = filePath.split('/').slice(0, -2).join('/');\n    const segmentsList = packageName.split('.');\n    if (segmentsList.length > 1) {\n      const initialDir = process.cwd();\n      process.chdir(filePath.split('/').slice(0, -1).join('/'));\n      try {\n        await _fsExtra().default.rename(`${filePath}/${segmentsList.join('.')}`, `${pathToFolders}/${segmentsList[segmentsList.length - 1]}`);\n        await _fsExtra().default.rmdir(filePath);\n        for (const segment of segmentsList) {\n          _fsExtra().default.mkdirSync(segment);\n          process.chdir(segment);\n        }\n        await _fsExtra().default.rename(`${pathToFolders}/${segmentsList[segmentsList.length - 1]}`, process.cwd());\n      } catch {\n        throw 'Failed to create correct paths for Android.';\n      }\n      process.chdir(initialDir);\n    }\n  }\n}\nasync function replacePlaceholderWithPackageName({\n  projectName,\n  placeholderName,\n  placeholderTitle,\n  packageName\n}) {\n  validatePackageName(packageName);\n  const cleanPackageName = packageName.replace(/[^\\p{L}\\p{N}.]+/gu, '');\n  for (const filePath of (0, _walk.default)(process.cwd()).reverse()) {\n    if (shouldIgnoreFile(filePath)) {\n      continue;\n    }\n    const iosFile = isIosFile(filePath);\n    if (!(await _fsExtra().default.stat(filePath)).isDirectory()) {\n      let newName = iosFile ? projectName : cleanPackageName;\n\n      //replace bundleID for iOS\n      await replaceNameInUTF8File(filePath, `PRODUCT_BUNDLE_IDENTIFIER = \"${cleanPackageName}\"`, 'PRODUCT_BUNDLE_IDENTIFIER = \"(.*)\"');\n      if (filePath.includes('app.json')) {\n        await replaceNameInUTF8File(filePath, projectName, placeholderName);\n      } else {\n        // replace main component name for Android package\n        await replaceNameInUTF8File(filePath, `return \"${projectName}\"`, `return \"${placeholderName}\"`);\n        await replaceNameInUTF8File(filePath, `<string name=\"app_name\">${projectName}</string>`, `<string name=\"app_name\">${placeholderTitle}</string>`);\n        await replaceNameInUTF8File(filePath, newName, `com.${placeholderName}`);\n        await replaceNameInUTF8File(filePath, newName, placeholderName);\n        await replaceNameInUTF8File(filePath, newName, placeholderTitle);\n      }\n    }\n    let fileName = cleanPackageName;\n    if (shouldRenameFile(filePath, placeholderName)) {\n      if (iosFile) {\n        fileName = projectName;\n      }\n      await renameFile(filePath, placeholderName, fileName);\n    } else if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n      await renameFile(filePath, placeholderName.toLowerCase(), fileName.toLowerCase());\n    }\n    try {\n      await createAndroidPackagePaths(filePath, cleanPackageName);\n    } catch (error) {\n      throw new (_cliTools().CLIError)('Failed to create correct paths for Android.');\n    }\n    await processDotfiles(filePath);\n  }\n}\nasync function changePlaceholderInTemplate({\n  projectName,\n  placeholderName,\n  placeholderTitle = DEFAULT_TITLE_PLACEHOLDER,\n  projectTitle = projectName,\n  packageName\n}) {\n  _cliTools().logger.debug(`Changing ${placeholderName} for ${projectName} in template`);\n  if (packageName) {\n    try {\n      await replacePlaceholderWithPackageName({\n        projectName,\n        placeholderName,\n        placeholderTitle,\n        packageName\n      });\n    } catch (error) {\n      throw new (_cliTools().CLIError)(error.message);\n    }\n  } else {\n    for (const filePath of (0, _walk.default)(process.cwd()).reverse()) {\n      if (shouldIgnoreFile(filePath)) {\n        continue;\n      }\n      if (!(await _fsExtra().default.stat(filePath)).isDirectory()) {\n        await replaceNameInUTF8File(filePath, projectName, placeholderName);\n        await replaceNameInUTF8File(filePath, projectTitle, placeholderTitle);\n      }\n      if (shouldRenameFile(filePath, placeholderName)) {\n        await renameFile(filePath, placeholderName, projectName);\n      } else if (shouldRenameFile(filePath, placeholderName.toLowerCase())) {\n        await renameFile(filePath, placeholderName.toLowerCase(), projectName.toLowerCase());\n      }\n      await processDotfiles(filePath);\n    }\n  }\n}\n\n//# sourceMappingURL=editTemplate.ts.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}