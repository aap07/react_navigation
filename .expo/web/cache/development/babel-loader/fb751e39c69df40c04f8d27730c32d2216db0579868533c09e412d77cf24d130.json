{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.simulatorBuildRequiresCodeSigning = simulatorBuildRequiresCodeSigning;\nvar _configPlugins = require(\"@expo/config-plugins\");\nvar _plist = _interopRequireDefault(require(\"@expo/plist\"));\nvar _fs = _interopRequireDefault(require(\"fs\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar debug = require(\"debug\")(\"expo:run:ios:codeSigning:simulator\");\nvar ENTITLEMENTS_THAT_REQUIRE_CODE_SIGNING = [\"com.apple.developer.associated-domains\", \"com.apple.developer.applesignin\"];\nfunction getEntitlements(projectRoot) {\n  try {\n    var entitlementsPath = _configPlugins.IOSConfig.Entitlements.getEntitlementsPath(projectRoot);\n    if (!entitlementsPath || !_fs.default.existsSync(entitlementsPath)) {\n      return null;\n    }\n    var entitlementsContents = _fs.default.readFileSync(entitlementsPath, \"utf8\");\n    var entitlements = _plist.default.parse(entitlementsContents);\n    return entitlements;\n  } catch (error) {\n    debug(\"Failed to read entitlements\", error);\n  }\n  return null;\n}\nfunction simulatorBuildRequiresCodeSigning(projectRoot) {\n  var entitlements = getEntitlements(projectRoot);\n  if (!entitlements) {\n    return false;\n  }\n  return ENTITLEMENTS_THAT_REQUIRE_CODE_SIGNING.some(function (entitlement) {\n    return entitlement in entitlements;\n  });\n}","map":{"version":3,"names":["simulatorBuildRequiresCodeSigning","_configPlugins","require","_plist","_interopRequireDefault","_fs","debug","ENTITLEMENTS_THAT_REQUIRE_CODE_SIGNING","getEntitlements","projectRoot","entitlementsPath","IOSConfig","Entitlements","getEntitlementsPath","default","existsSync","entitlementsContents","readFileSync","entitlements","parse","error","some","entitlement"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\ios\\codeSigning\\simulatorCodeSigning.ts"],"sourcesContent":["import { IOSConfig } from '@expo/config-plugins';\nimport plist from '@expo/plist';\nimport fs from 'fs';\n\nconst debug = require('debug')('expo:run:ios:codeSigning:simulator');\n\n// NOTE(EvanBacon): These are entitlements that work in a simulator\n// but still require the project to have development code signing setup.\n// There may be more, but this is fine for now.\nconst ENTITLEMENTS_THAT_REQUIRE_CODE_SIGNING = [\n  'com.apple.developer.associated-domains',\n  'com.apple.developer.applesignin',\n];\n\nfunction getEntitlements(projectRoot: string): Record<string, any> | null {\n  try {\n    const entitlementsPath = IOSConfig.Entitlements.getEntitlementsPath(projectRoot);\n    if (!entitlementsPath || !fs.existsSync(entitlementsPath)) {\n      return null;\n    }\n\n    const entitlementsContents = fs.readFileSync(entitlementsPath, 'utf8');\n    const entitlements = plist.parse(entitlementsContents);\n    return entitlements;\n  } catch (error) {\n    debug('Failed to read entitlements', error);\n  }\n  return null;\n}\n\n/** @returns true if the simulator build should be code signed for development. */\nexport function simulatorBuildRequiresCodeSigning(projectRoot: string): boolean {\n  const entitlements = getEntitlements(projectRoot);\n  if (!entitlements) {\n    return false;\n  }\n  return ENTITLEMENTS_THAT_REQUIRE_CODE_SIGNING.some((entitlement) => entitlement in entitlements);\n}\n"],"mappings":"AAAA;;;;;QA+BgBA,iCAAiC,GAAjCA,iCAAiC;AA/BvB,IAAAC,cAAsB,GAAAC,OAAA,CAAtB,sBAAsB;AAC9B,IAAAC,MAAa,GAAAC,sBAAA,CAAAF,OAAA,CAAb,aAAa;AAChB,IAAAG,GAAI,GAAAD,sBAAA,CAAAF,OAAA,CAAJ,IAAI;;;;;;AAEnB,IAAMI,KAAK,GAAGJ,OAAO,CAAC,OAAO,CAAC,CAAC,oCAAoC,CAAC;AAKpE,IAAMK,sCAAsC,GAAG,CAC7C,wCAAwC,EACxC,iCAAiC,CAClC;AAED,SAASC,eAAeA,CAACC,WAAmB,EAA8B;EACxE,IAAI;IACF,IAAMC,gBAAgB,GAAGT,cAAS,CAAAU,SAAA,CAACC,YAAY,CAACC,mBAAmB,CAACJ,WAAW,CAAC;IAChF,IAAI,CAACC,gBAAgB,IAAI,CAACL,GAAE,CAAAS,OAAA,CAACC,UAAU,CAACL,gBAAgB,CAAC,EAAE;MACzD,OAAO,IAAI;;IAGb,IAAMM,oBAAoB,GAAGX,GAAE,CAAAS,OAAA,CAACG,YAAY,CAACP,gBAAgB,EAAE,MAAM,CAAC;IACtE,IAAMQ,YAAY,GAAGf,MAAK,CAAAW,OAAA,CAACK,KAAK,CAACH,oBAAoB,CAAC;IACtD,OAAOE,YAAY;GACpB,CAAC,OAAOE,KAAK,EAAE;IACdd,KAAK,CAAC,6BAA6B,EAAEc,KAAK,CAAC;;EAE7C,OAAO,IAAI;;AAIN,SAASpB,iCAAiCA,CAACS,WAAmB,EAAW;EAC9E,IAAMS,YAAY,GAAGV,eAAe,CAACC,WAAW,CAAC;EACjD,IAAI,CAACS,YAAY,EAAE;IACjB,OAAO,KAAK;;EAEd,OAAOX,sCAAsC,CAACc,IAAI,CAAC,UAACC,WAAW;IAAA,OAAKA,WAAW,IAAIJ,YAAY;EAAA,EAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}