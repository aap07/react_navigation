{"ast":null,"code":"\"use strict\";\n\nvar _construct = require(\"@babel/runtime/helpers/construct\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureObjects = void 0;\nvar _flingGesture = require(\"./flingGesture\");\nvar _forceTouchGesture = require(\"./forceTouchGesture\");\nvar _gestureComposition = require(\"./gestureComposition\");\nvar _longPressGesture = require(\"./longPressGesture\");\nvar _panGesture = require(\"./panGesture\");\nvar _pinchGesture = require(\"./pinchGesture\");\nvar _rotationGesture = require(\"./rotationGesture\");\nvar _tapGesture = require(\"./tapGesture\");\nvar _nativeGesture = require(\"./nativeGesture\");\nvar _manualGesture = require(\"./manualGesture\");\nvar GestureObjects = {\n  Tap: function Tap() {\n    return new _tapGesture.TapGesture();\n  },\n  Pan: function Pan() {\n    return new _panGesture.PanGesture();\n  },\n  Pinch: function Pinch() {\n    return new _pinchGesture.PinchGesture();\n  },\n  Rotation: function Rotation() {\n    return new _rotationGesture.RotationGesture();\n  },\n  Fling: function Fling() {\n    return new _flingGesture.FlingGesture();\n  },\n  LongPress: function LongPress() {\n    return new _longPressGesture.LongPressGesture();\n  },\n  ForceTouch: function ForceTouch() {\n    return new _forceTouchGesture.ForceTouchGesture();\n  },\n  Native: function Native() {\n    return new _nativeGesture.NativeGesture();\n  },\n  Manual: function Manual() {\n    return new _manualGesture.ManualGesture();\n  },\n  Race: function Race() {\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n    return _construct(_gestureComposition.ComposedGesture, gestures);\n  },\n  Simultaneous: function Simultaneous() {\n    for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      gestures[_key2] = arguments[_key2];\n    }\n    return _construct(_gestureComposition.SimultaneousGesture, gestures);\n  },\n  Exclusive: function Exclusive() {\n    for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      gestures[_key3] = arguments[_key3];\n    }\n    return _construct(_gestureComposition.ExclusiveGesture, gestures);\n  }\n};\nexports.GestureObjects = GestureObjects;","map":{"version":3,"names":["_flingGesture","require","_forceTouchGesture","_gestureComposition","_longPressGesture","_panGesture","_pinchGesture","_rotationGesture","_tapGesture","_nativeGesture","_manualGesture","GestureObjects","Tap","TapGesture","Pan","PanGesture","Pinch","PinchGesture","Rotation","RotationGesture","Fling","FlingGesture","LongPress","LongPressGesture","ForceTouch","ForceTouchGesture","Native","NativeGesture","Manual","ManualGesture","Race","_len","arguments","length","gestures","Array","_key","_construct","ComposedGesture","Simultaneous","_len2","_key2","SimultaneousGesture","Exclusive","_len3","_key3","ExclusiveGesture"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\commonjs\\handlers\\gestures\\gestureObjects.ts"],"sourcesContent":["import { FlingGesture } from './flingGesture';\nimport { ForceTouchGesture } from './forceTouchGesture';\nimport { Gesture } from './gesture';\nimport {\n  ComposedGesture,\n  ExclusiveGesture,\n  SimultaneousGesture,\n} from './gestureComposition';\nimport { LongPressGesture } from './longPressGesture';\nimport { PanGesture } from './panGesture';\nimport { PinchGesture } from './pinchGesture';\nimport { RotationGesture } from './rotationGesture';\nimport { TapGesture } from './tapGesture';\nimport { NativeGesture } from './nativeGesture';\nimport { ManualGesture } from './manualGesture';\n\nexport const GestureObjects = {\n  Tap: () => {\n    return new TapGesture();\n  },\n\n  Pan: () => {\n    return new PanGesture();\n  },\n\n  Pinch: () => {\n    return new PinchGesture();\n  },\n\n  Rotation: () => {\n    return new RotationGesture();\n  },\n\n  Fling: () => {\n    return new FlingGesture();\n  },\n\n  LongPress: () => {\n    return new LongPressGesture();\n  },\n\n  ForceTouch: () => {\n    return new ForceTouchGesture();\n  },\n\n  Native: () => {\n    return new NativeGesture();\n  },\n\n  Manual: () => {\n    return new ManualGesture();\n  },\n\n  /**\n   * Builds a composed gesture consisting of gestures provided as parameters.\n   * The first one that becomes active cancels the rest of gestures.\n   */\n  Race: (...gestures: Gesture[]) => {\n    return new ComposedGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture that allows all base gestures to run simultaneously.\n   */\n  Simultaneous(...gestures: Gesture[]) {\n    return new SimultaneousGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture where only one of the provided gestures can become active.\n   * Priority is decided through the order of gestures: the first one has higher priority\n   * than the second one, second one has higher priority than the third one, and so on.\n   * For example, to make a gesture that recognizes both single and double tap you need\n   * to call Exclusive(doubleTap, singleTap).\n   */\n  Exclusive(...gestures: Gesture[]) {\n    return new ExclusiveGesture(...gestures);\n  },\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AAEA,IAAAE,mBAAA,GAAAF,OAAA;AAKA,IAAAG,iBAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,gBAAA,GAAAN,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,cAAA,GAAAR,OAAA;AACA,IAAAS,cAAA,GAAAT,OAAA;AAEO,IAAMU,cAAc,GAAG;EAC5BC,GAAG,EAAE,SAAAA,IAAA,EAAM;IACT,OAAO,IAAIJ,WAAA,CAAAK,UAAJ,EAAP;EACD,CAH2B;EAK5BC,GAAG,EAAE,SAAAA,IAAA,EAAM;IACT,OAAO,IAAIT,WAAA,CAAAU,UAAJ,EAAP;EACD,CAP2B;EAS5BC,KAAK,EAAE,SAAAA,MAAA,EAAM;IACX,OAAO,IAAIV,aAAA,CAAAW,YAAJ,EAAP;EACD,CAX2B;EAa5BC,QAAQ,EAAE,SAAAA,SAAA,EAAM;IACd,OAAO,IAAIX,gBAAA,CAAAY,eAAJ,EAAP;EACD,CAf2B;EAiB5BC,KAAK,EAAE,SAAAA,MAAA,EAAM;IACX,OAAO,IAAIpB,aAAA,CAAAqB,YAAJ,EAAP;EACD,CAnB2B;EAqB5BC,SAAS,EAAE,SAAAA,UAAA,EAAM;IACf,OAAO,IAAIlB,iBAAA,CAAAmB,gBAAJ,EAAP;EACD,CAvB2B;EAyB5BC,UAAU,EAAE,SAAAA,WAAA,EAAM;IAChB,OAAO,IAAItB,kBAAA,CAAAuB,iBAAJ,EAAP;EACD,CA3B2B;EA6B5BC,MAAM,EAAE,SAAAA,OAAA,EAAM;IACZ,OAAO,IAAIjB,cAAA,CAAAkB,aAAJ,EAAP;EACD,CA/B2B;EAiC5BC,MAAM,EAAE,SAAAA,OAAA,EAAM;IACZ,OAAO,IAAIlB,cAAA,CAAAmB,aAAJ,EAAP;EACD,CAnC2B;EAyC5BC,IAAI,EAAE,SAAAA,KAAA,EAA4B;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxBC,QAAJ,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAIF,QAAJ,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACJ,OAAAC,UAAA,CAAWlC,mBAAA,CAAAmC,eAAJ,EAAuBJ,QAAvB;EACR,CA3C2B;EAgD5BK,YAAY,WAAAA,aAAA,EAAyB;IAAA,SAAAC,KAAA,GAAAR,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAK,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAIP,QAAJ,CAAAO,KAAA,IAAAT,SAAA,CAAAS,KAAA;IAAA;IACV,OAAAJ,UAAA,CAAWlC,mBAAA,CAAAuC,mBAAJ,EAA2BR,QAA3B;EACR,CAlD2B;EA2D5BS,SAAS,WAAAA,UAAA,EAAyB;IAAA,SAAAC,KAAA,GAAAZ,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAS,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAIX,QAAJ,CAAAW,KAAA,IAAAb,SAAA,CAAAa,KAAA;IAAA;IACP,OAAAR,UAAA,CAAWlC,mBAAA,CAAA2C,gBAAJ,EAAwBZ,QAAxB;EACR;AA7D2B,CAAvB"},"metadata":{},"sourceType":"script","externalDependencies":[]}