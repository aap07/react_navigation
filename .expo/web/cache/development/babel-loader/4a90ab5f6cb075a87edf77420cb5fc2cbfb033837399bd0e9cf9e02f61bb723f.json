{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startBundlerAsync = startBundlerAsync;\nvar _config = require(\"@expo/config\");\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\nvar Log = _interopRequireWildcard(require(\"../log\"));\nvar _startInterface = require(\"../start/interface/startInterface\");\nvar _devServerManager = require(\"../start/server/DevServerManager\");\nvar _interactive = require(\"../utils/interactive\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction startBundlerAsync(_x, _x2) {\n  return _startBundlerAsync.apply(this, arguments);\n}\nfunction _startBundlerAsync() {\n  _startBundlerAsync = _asyncToGenerator(function* (projectRoot, _ref) {\n    var port = _ref.port,\n      headless = _ref.headless,\n      scheme = _ref.scheme;\n    var options = {\n      port: port,\n      headless: headless,\n      devClient: true,\n      location: {\n        scheme: scheme\n      }\n    };\n    var devServerManager = new _devServerManager.DevServerManager(projectRoot, options);\n    yield devServerManager.startAsync([{\n      type: \"metro\",\n      options: options\n    }]);\n    if (!headless && (0, _interactive).isInteractive()) {\n      var _getConfig = (0, _config).getConfig(projectRoot, {\n          skipSDKVersionRequirement: true,\n          skipPlugins: true\n        }),\n        exp = _getConfig.exp;\n      var _platforms;\n      yield (0, _startInterface).startInterfaceAsync(devServerManager, {\n        platforms: (_platforms = exp.platforms) != null ? _platforms : []\n      });\n    } else {\n      var ref;\n      var url = (ref = devServerManager.getDefaultDevServer()) == null ? void 0 : ref.getDevServerUrl();\n      if (url) {\n        Log.log(_chalk.default`Waiting on {underline ${url}}`);\n      }\n    }\n    if (!options.headless) {\n      yield devServerManager.watchEnvironmentVariables();\n      yield devServerManager.bootstrapTypeScriptAsync();\n    }\n    return devServerManager;\n  });\n  return _startBundlerAsync.apply(this, arguments);\n}","map":{"version":3,"names":["_asyncToGenerator","require","startBundlerAsync","_config","_chalk","_interopRequireDefault","Log","_interopRequireWildcard","_startInterface","_devServerManager","_interactive","_x","_x2","_startBundlerAsync","apply","arguments","projectRoot","_ref","port","headless","scheme","options","devClient","location","devServerManager","DevServerManager","startAsync","type","isInteractive","_getConfig","getConfig","skipSDKVersionRequirement","skipPlugins","exp","_platforms","startInterfaceAsync","platforms","ref","url","getDefaultDevServer","getDevServerUrl","log","default","watchEnvironmentVariables","bootstrapTypeScriptAsync"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\run\\startBundler.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport chalk from 'chalk';\n\nimport * as Log from '../log';\nimport { startInterfaceAsync } from '../start/interface/startInterface';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { isInteractive } from '../utils/interactive';\n\nexport async function startBundlerAsync(\n  projectRoot: string,\n  {\n    port,\n    headless,\n    scheme,\n  }: {\n    port: number;\n    headless?: boolean;\n    scheme?: string;\n  }\n): Promise<DevServerManager> {\n  const options = {\n    port,\n    headless,\n    devClient: true,\n\n    location: {\n      scheme,\n    },\n  };\n\n  const devServerManager = new DevServerManager(projectRoot, options);\n\n  await devServerManager.startAsync([\n    {\n      // TODO: Allow swapping this value for another bundler.\n      type: 'metro',\n      options,\n    },\n  ]);\n\n  // Present the Terminal UI.\n  if (!headless && isInteractive()) {\n    // Only read the config if we are going to use the results.\n    const { exp } = getConfig(projectRoot, {\n      // We don't need very many fields here, just use the lightest possible read.\n      skipSDKVersionRequirement: true,\n      skipPlugins: true,\n    });\n    await startInterfaceAsync(devServerManager, {\n      platforms: exp.platforms ?? [],\n    });\n  } else {\n    // Display the server location in CI...\n    const url = devServerManager.getDefaultDevServer()?.getDevServerUrl();\n    if (url) {\n      Log.log(chalk`Waiting on {underline ${url}}`);\n    }\n  }\n\n  if (!options.headless) {\n    await devServerManager.watchEnvironmentVariables();\n    await devServerManager.bootstrapTypeScriptAsync();\n  }\n\n  return devServerManager;\n}\n"],"mappings":"AAAA;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;;;;QAQsBC,iBAAiB,GAAjBA,iBAAiB;AARb,IAAAC,OAAc,GAAAF,OAAA,CAAd,cAAc;AACtB,IAAAG,MAAO,GAAAC,sBAAA,CAAAJ,OAAA,CAAP,OAAO;AAEb,IAAAK,GAAG,GAAAC,uBAAA,CAAAN,OAAA,SAAc,EAAd;AACqB,IAAAO,eAAmC,GAAAP,OAAA;AACtC,IAAAQ,iBAAkC,GAAAR,OAAA;AACrC,IAAAS,YAAsB,GAAAT,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;SAE9BC,iBAAiBA,CAAAS,EAAA,EAAAC,GAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,mBAAA;EAAAA,kBAAA,GAAAb,iBAAA,CAAhC,WACLgB,WAAmB,EAAAC,IAAA,EAUQ;IAAA,IARzBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;MACJC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;MACRC,MAAM,GAAAH,IAAA,CAANG,MAAM;IAOR,IAAMC,OAAO,GAAG;MACdH,IAAI,EAAJA,IAAI;MACJC,QAAQ,EAARA,QAAQ;MACRG,SAAS,EAAE,IAAI;MAEfC,QAAQ,EAAE;QACRH,MAAM,EAANA;;KAEH;IAED,IAAMI,gBAAgB,GAAG,IAAIf,iBAAgB,CAAAgB,gBAAA,CAACT,WAAW,EAAEK,OAAO,CAAC;IAEnE,MAAMG,gBAAgB,CAACE,UAAU,CAAC,CAChC;MAEEC,IAAI,EAAE,OAAO;MACbN,OAAO,EAAPA;KACD,CACF,CAAC;IAGF,IAAI,CAACF,QAAQ,IAAI,IAAAT,YAAa,EAAEkB,aAAF,EAAE,EAAE;MAEhC,IAAAC,UAAA,GAAgB,IAAA1B,OAAS,EAIvB2B,SAJuB,CAACd,WAAW,EAAE;UAErCe,yBAAyB,EAAE,IAAI;UAC/BC,WAAW,EAAE;SACd,CAAC;QAJMC,GAAG,GAAAJ,UAAA,CAAHI,GAAG;UAMEC,UAAa;MAD1B,MAAM,IAAA1B,eAAmB,EAEvB2B,mBAFuB,CAACX,gBAAgB,EAAE;QAC1CY,SAAS,EAAE,CAAAF,UAAa,GAAbD,GAAG,CAACG,SAAS,YAAbF,UAAa,GAAI;OAC7B,CAAC;KACH,MAAM;UAEOG,GAAsC;MAAlD,IAAMC,GAAG,GAAG,CAAAD,GAAsC,GAAtCb,gBAAgB,CAACe,mBAAmB,EAAE,SAAiB,GAAvD,MAAuD,GAAvDF,GAAsC,CAAEG,eAAe,EAAE;MACrE,IAAIF,GAAG,EAAE;QACPhC,GAAG,CAACmC,GAAG,CAACrC,MAAK,CAAAsC,OAAC,yBAAwBJ,GAAI,GAAE,CAAC;;;IAIjD,IAAI,CAACjB,OAAO,CAACF,QAAQ,EAAE;MACrB,MAAMK,gBAAgB,CAACmB,yBAAyB,EAAE;MAClD,MAAMnB,gBAAgB,CAACoB,wBAAwB,EAAE;;IAGnD,OAAOpB,gBAAgB;GACxB;EAAA,OAAAX,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}