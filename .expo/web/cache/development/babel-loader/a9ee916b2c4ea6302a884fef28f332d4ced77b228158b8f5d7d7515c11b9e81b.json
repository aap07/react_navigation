{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlatList = exports.RefreshControl = exports.DrawerLayoutAndroid = exports.TextInput = exports.Switch = exports.ScrollView = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _createNativeWrapper = _interopRequireDefault(require(\"../handlers/createNativeWrapper\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n  return cache;\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ScrollView = (0, _createNativeWrapper.default)(_reactNative.ScrollView, {\n  disallowInterruption: false\n});\nexports.ScrollView = ScrollView;\nvar Switch = (0, _createNativeWrapper.default)(_reactNative.Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexports.Switch = Switch;\nvar TextInput = (0, _createNativeWrapper.default)(_reactNative.TextInput);\nexports.TextInput = TextInput;\nvar DrawerLayoutAndroid = function DrawerLayoutAndroid() {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return React.createElement(_reactNative.View, null);\n};\nexports.DrawerLayoutAndroid = DrawerLayoutAndroid;\nvar RefreshControl = (0, _createNativeWrapper.default)(_reactNative.View);\nexports.RefreshControl = RefreshControl;\nvar FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(_reactNative.FlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, scrollProps);\n    }\n  }));\n});\nexports.FlatList = FlatList;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_createNativeWrapper","_interopRequireDefault","ScrollView","default","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","console","warn","createElement","View","RefreshControl","FlatList","forwardRef","props","ref","_extends","renderScrollComponent","scrollProps"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\react-native-gesture-handler\\lib\\commonjs\\components\\GestureComponents.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n  View,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return <View />;\n};\n\n// RefreshControl is implemented as a functional component, rendering a View\n// NativeViewGestureHandler needs to set a ref on its child, which cannot be done\n// on functional components\nexport const RefreshControl = createNativeWrapper(View);\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAUA,IAAAE,oBAAA,GAAAC,sBAAA,CAAAH,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMI,UAAU,GAAG,IAAAF,oBAAA,CAAAG,OAAA,EAAoBJ,YAAA,CAAAG,UAApB,EAAkC;EAC1DE,oBAAoB,EAAE;AADoC,CAAlC,CAAnB;;AAIA,IAAMC,MAAM,GAAG,IAAAL,oBAAA,CAAAG,OAAA,EAAoBJ,YAAA,CAAAM,MAApB,EAA8B;EAClDC,uBAAuB,EAAE,KADyB;EAElDC,qBAAqB,EAAE,IAF2B;EAGlDH,oBAAoB,EAAE;AAH4B,CAA9B,CAAf;;AAKA,IAAMI,SAAS,GAAG,IAAAR,oBAAA,CAAAG,OAAA,EAAoBJ,YAAA,CAAAS,SAApB,CAAlB;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EACvCC,OAAO,CAACC,IAAR,CAAa,8CAAb;EACA,OAAOf,KAAA,CAAAgB,aAAA,CAACb,YAAA,CAAAc,IAAD,OAAP;AACD,CAHM;;AAQA,IAAMC,cAAc,GAAG,IAAAd,oBAAA,CAAAG,OAAA,EAAoBJ,YAAA,CAAAc,IAApB,CAAvB;;AAEA,IAAME,QAAQ,GAAGnB,KAAK,CAACoB,UAAN,CACtB,UAAoBC,KAApB,EAAiDC,GAAjD;EAAA,OACEtB,KAAA,CAAAgB,aAAA,CAACb,YAAA,CAAAgB,QAAD,EAAAI,QAAA;IACED,GAAG,EAAEA;EADP,GAEMD,KAFN;IAGEG,qBAAqB,EAAG,SAAAA,sBAAAC,WAAD;MAAA,OAAiBzB,KAAA,CAAAgB,aAAA,CAACV,UAAD,EAAgBmB,WAAhB;IAAA;EAH1C,GAFoB;AAAA,EAAjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}