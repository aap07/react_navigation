{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport glob from 'fast-glob';\nimport fs from 'fs-extra';\nimport path from 'path';\nvar indent = '  ';\nfunction findPodspecFiles(_x) {\n  return _findPodspecFiles.apply(this, arguments);\n}\nfunction _findPodspecFiles() {\n  _findPodspecFiles = _asyncToGenerator(function* (revision) {\n    var _revision$config;\n    var configPodspecPaths = (_revision$config = revision.config) == null ? void 0 : _revision$config.iosPodspecPaths();\n    if (configPodspecPaths && configPodspecPaths.length) {\n      return configPodspecPaths;\n    }\n    var podspecFiles = yield glob('*/*.podspec', {\n      cwd: revision.path,\n      ignore: ['**/node_modules/**']\n    });\n    return podspecFiles;\n  });\n  return _findPodspecFiles.apply(this, arguments);\n}\nexport function getSwiftModuleNames(pods, swiftModuleNames) {\n  if (swiftModuleNames && swiftModuleNames.length) {\n    return swiftModuleNames;\n  }\n  return pods.map(function (pod) {\n    return pod.podName.replace(/[^a-zA-Z0-9]/g, '_');\n  });\n}\nexport function resolveModuleAsync(_x2, _x3, _x4) {\n  return _resolveModuleAsync.apply(this, arguments);\n}\nfunction _resolveModuleAsync() {\n  _resolveModuleAsync = _asyncToGenerator(function* (packageName, revision, options) {\n    var _revision$config2, _revision$config$iosM, _revision$config3, _revision$config$iosA, _revision$config4, _revision$config$iosR, _revision$config5, _revision$config$iosD, _revision$config6;\n    var podspecFiles = yield findPodspecFiles(revision);\n    if (!podspecFiles.length) {\n      return null;\n    }\n    var pods = podspecFiles.map(function (podspecFile) {\n      return {\n        podName: path.basename(podspecFile, path.extname(podspecFile)),\n        podspecDir: path.dirname(path.join(revision.path, podspecFile))\n      };\n    });\n    var swiftModuleNames = getSwiftModuleNames(pods, (_revision$config2 = revision.config) == null ? void 0 : _revision$config2.iosSwiftModuleNames());\n    return {\n      packageName: packageName,\n      pods: pods,\n      swiftModuleNames: swiftModuleNames,\n      flags: options.flags,\n      modules: (_revision$config$iosM = (_revision$config3 = revision.config) == null ? void 0 : _revision$config3.iosModules()) != null ? _revision$config$iosM : [],\n      appDelegateSubscribers: (_revision$config$iosA = (_revision$config4 = revision.config) == null ? void 0 : _revision$config4.iosAppDelegateSubscribers()) != null ? _revision$config$iosA : [],\n      reactDelegateHandlers: (_revision$config$iosR = (_revision$config5 = revision.config) == null ? void 0 : _revision$config5.iosReactDelegateHandlers()) != null ? _revision$config$iosR : [],\n      debugOnly: (_revision$config$iosD = (_revision$config6 = revision.config) == null ? void 0 : _revision$config6.iosDebugOnly()) != null ? _revision$config$iosD : false\n    };\n  });\n  return _resolveModuleAsync.apply(this, arguments);\n}\nexport function generatePackageListAsync(_x5, _x6) {\n  return _generatePackageListAsync.apply(this, arguments);\n}\nfunction _generatePackageListAsync() {\n  _generatePackageListAsync = _asyncToGenerator(function* (modules, targetPath) {\n    var className = path.basename(targetPath, path.extname(targetPath));\n    var generatedFileContent = yield generatePackageListFileContentAsync(modules, className);\n    yield fs.outputFile(targetPath, generatedFileContent);\n  });\n  return _generatePackageListAsync.apply(this, arguments);\n}\nfunction generatePackageListFileContentAsync(_x7, _x8) {\n  return _generatePackageListFileContentAsync.apply(this, arguments);\n}\nfunction _generatePackageListFileContentAsync() {\n  _generatePackageListFileContentAsync = _asyncToGenerator(function* (modules, className) {\n    var _ref, _ref2, _ref3, _ref4, _ref5, _ref6;\n    var iosModules = modules.filter(function (module) {\n      return module.modules.length || module.appDelegateSubscribers.length || module.reactDelegateHandlers.length;\n    });\n    var modulesToImport = iosModules.filter(function (module) {\n      return !module.debugOnly;\n    });\n    var debugOnlyModules = iosModules.filter(function (module) {\n      return module.debugOnly;\n    });\n    var swiftModules = (_ref = []).concat.apply(_ref, _toConsumableArray(modulesToImport.map(function (module) {\n      return module.swiftModuleNames;\n    }))).filter(Boolean);\n    var debugOnlySwiftModules = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(debugOnlyModules.map(function (module) {\n      return module.swiftModuleNames;\n    }))).filter(Boolean);\n    var modulesClassNames = (_ref3 = []).concat.apply(_ref3, _toConsumableArray(modulesToImport.map(function (module) {\n      return module.modules;\n    }))).filter(Boolean);\n    var debugOnlyModulesClassNames = (_ref4 = []).concat.apply(_ref4, _toConsumableArray(debugOnlyModules.map(function (module) {\n      return module.modules;\n    }))).filter(Boolean);\n    var appDelegateSubscribers = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(modulesToImport.map(function (module) {\n      return module.appDelegateSubscribers;\n    })));\n    var debugOnlyAppDelegateSubscribers = (_ref6 = []).concat.apply(_ref6, _toConsumableArray(debugOnlyModules.map(function (module) {\n      return module.appDelegateSubscribers;\n    })));\n    var reactDelegateHandlerModules = modulesToImport.filter(function (module) {\n      return !!module.reactDelegateHandlers.length;\n    });\n    var debugOnlyReactDelegateHandlerModules = debugOnlyModules.filter(function (module) {\n      return !!module.reactDelegateHandlers.length;\n    });\n    return `/**\n * Automatically generated by expo-modules-autolinking.\n *\n * This autogenerated class provides a list of classes of native Expo modules,\n * but only these that are written in Swift and use the new API for creating Expo modules.\n */\n\nimport ExpoModulesCore\n${generateCommonImportList(swiftModules)}\n${generateDebugOnlyImportList(debugOnlySwiftModules)}\n@objc(${className})\npublic class ${className}: ModulesProvider {\n  public override func getModuleClasses() -> [AnyModule.Type] {\n${generateModuleClasses(modulesClassNames, debugOnlyModulesClassNames)}\n  }\n\n  public override func getAppDelegateSubscribers() -> [ExpoAppDelegateSubscriber.Type] {\n${generateModuleClasses(appDelegateSubscribers, debugOnlyAppDelegateSubscribers)}\n  }\n\n  public override func getReactDelegateHandlers() -> [ExpoReactDelegateHandlerTupleType] {\n${generateReactDelegateHandlers(reactDelegateHandlerModules, debugOnlyReactDelegateHandlerModules)}\n  }\n}\n`;\n  });\n  return _generatePackageListFileContentAsync.apply(this, arguments);\n}\nfunction generateCommonImportList(swiftModules) {\n  return swiftModules.map(function (moduleName) {\n    return `import ${moduleName}`;\n  }).join('\\n');\n}\nfunction generateDebugOnlyImportList(swiftModules) {\n  if (!swiftModules.length) {\n    return '';\n  }\n  return wrapInDebugConfigurationCheck(0, swiftModules.map(function (moduleName) {\n    return `import ${moduleName}`;\n  }).join('\\n')) + '\\n';\n}\nfunction generateModuleClasses(classNames, debugOnlyClassName) {\n  var commonClassNames = formatArrayOfClassNames(classNames);\n  if (debugOnlyClassName.length > 0) {\n    return wrapInDebugConfigurationCheck(2, `return ${formatArrayOfClassNames(classNames.concat(debugOnlyClassName))}`, `return ${commonClassNames}`);\n  } else {\n    return `${indent.repeat(2)}return ${commonClassNames}`;\n  }\n}\nfunction formatArrayOfClassNames(classNames) {\n  return `[${classNames.map(function (className) {\n    return `\\n${indent.repeat(3)}${className}.self`;\n  }).join(',')}\n${indent.repeat(2)}]`;\n}\nfunction generateReactDelegateHandlers(module, debugOnlyModules) {\n  var commonModules = formatArrayOfReactDelegateHandler(module);\n  if (debugOnlyModules.length > 0) {\n    return wrapInDebugConfigurationCheck(2, `return ${formatArrayOfReactDelegateHandler(module.concat(debugOnlyModules))}`, `return ${commonModules}`);\n  } else {\n    return `${indent.repeat(2)}return ${commonModules}`;\n  }\n}\nexport function formatArrayOfReactDelegateHandler(modules) {\n  var values = [];\n  for (var module of modules) {\n    for (var handler of module.reactDelegateHandlers) {\n      values.push(`(packageName: \"${module.packageName}\", handler: ${handler}.self)`);\n    }\n  }\n  return `[${values.map(function (value) {\n    return `\\n${indent.repeat(3)}${value}`;\n  }).join(',')}\n${indent.repeat(2)}]`;\n}\nfunction wrapInDebugConfigurationCheck(indentationLevel, debugBlock) {\n  var releaseBlock = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  if (releaseBlock) {\n    return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(indentationLevel)}${debugBlock}\\n${indent.repeat(indentationLevel)}#else\\n${indent.repeat(indentationLevel)}${releaseBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n  }\n  return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(indentationLevel)}${debugBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n}","map":{"version":3,"names":["glob","fs","path","indent","findPodspecFiles","_x","_findPodspecFiles","apply","arguments","_asyncToGenerator","revision","_revision$config","configPodspecPaths","config","iosPodspecPaths","length","podspecFiles","cwd","ignore","getSwiftModuleNames","pods","swiftModuleNames","map","pod","podName","replace","resolveModuleAsync","_x2","_x3","_x4","_resolveModuleAsync","packageName","options","_revision$config2","_revision$config$iosM","_revision$config3","_revision$config$iosA","_revision$config4","_revision$config$iosR","_revision$config5","_revision$config$iosD","_revision$config6","podspecFile","basename","extname","podspecDir","dirname","join","iosSwiftModuleNames","flags","modules","iosModules","appDelegateSubscribers","iosAppDelegateSubscribers","reactDelegateHandlers","iosReactDelegateHandlers","debugOnly","iosDebugOnly","generatePackageListAsync","_x5","_x6","_generatePackageListAsync","targetPath","className","generatedFileContent","generatePackageListFileContentAsync","outputFile","_x7","_x8","_generatePackageListFileContentAsync","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","filter","module","modulesToImport","debugOnlyModules","swiftModules","concat","_toConsumableArray","Boolean","debugOnlySwiftModules","modulesClassNames","debugOnlyModulesClassNames","debugOnlyAppDelegateSubscribers","reactDelegateHandlerModules","debugOnlyReactDelegateHandlerModules","generateCommonImportList","generateDebugOnlyImportList","generateModuleClasses","generateReactDelegateHandlers","moduleName","wrapInDebugConfigurationCheck","classNames","debugOnlyClassName","commonClassNames","formatArrayOfClassNames","repeat","commonModules","formatArrayOfReactDelegateHandler","values","handler","push","value","indentationLevel","debugBlock","releaseBlock","undefined"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/expo-modules-autolinking/src/platforms/ios.ts"],"sourcesContent":["import glob from 'fast-glob';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport {\n  ModuleDescriptorIos,\n  ModuleIosPodspecInfo,\n  PackageRevision,\n  SearchOptions,\n} from '../types';\n\nconst indent = '  ';\n\nasync function findPodspecFiles(revision: PackageRevision): Promise<string[]> {\n  const configPodspecPaths = revision.config?.iosPodspecPaths();\n  if (configPodspecPaths && configPodspecPaths.length) {\n    return configPodspecPaths;\n  }\n\n  const podspecFiles = await glob('*/*.podspec', {\n    cwd: revision.path,\n    ignore: ['**/node_modules/**'],\n  });\n\n  return podspecFiles;\n}\n\nexport function getSwiftModuleNames(\n  pods: ModuleIosPodspecInfo[],\n  swiftModuleNames: string[] | undefined\n): string[] {\n  if (swiftModuleNames && swiftModuleNames.length) {\n    return swiftModuleNames;\n  }\n  // by default, non-alphanumeric characters in the pod name are replaced by _ in the module name\n  return pods.map((pod) => pod.podName.replace(/[^a-zA-Z0-9]/g, '_'));\n}\n\n/**\n * Resolves module search result with additional details required for iOS platform.\n */\nexport async function resolveModuleAsync(\n  packageName: string,\n  revision: PackageRevision,\n  options: SearchOptions\n): Promise<ModuleDescriptorIos | null> {\n  const podspecFiles = await findPodspecFiles(revision);\n  if (!podspecFiles.length) {\n    return null;\n  }\n\n  const pods = podspecFiles.map((podspecFile) => ({\n    podName: path.basename(podspecFile, path.extname(podspecFile)),\n    podspecDir: path.dirname(path.join(revision.path, podspecFile)),\n  }));\n\n  const swiftModuleNames = getSwiftModuleNames(pods, revision.config?.iosSwiftModuleNames());\n\n  return {\n    packageName,\n    pods,\n    swiftModuleNames,\n    flags: options.flags,\n    modules: revision.config?.iosModules() ?? [],\n    appDelegateSubscribers: revision.config?.iosAppDelegateSubscribers() ?? [],\n    reactDelegateHandlers: revision.config?.iosReactDelegateHandlers() ?? [],\n    debugOnly: revision.config?.iosDebugOnly() ?? false,\n  };\n}\n\n/**\n * Generates Swift file that contains all autolinked Swift packages.\n */\nexport async function generatePackageListAsync(\n  modules: ModuleDescriptorIos[],\n  targetPath: string\n): Promise<void> {\n  const className = path.basename(targetPath, path.extname(targetPath));\n  const generatedFileContent = await generatePackageListFileContentAsync(modules, className);\n\n  await fs.outputFile(targetPath, generatedFileContent);\n}\n\n/**\n * Generates the string to put into the generated package list.\n */\nasync function generatePackageListFileContentAsync(\n  modules: ModuleDescriptorIos[],\n  className: string\n): Promise<string> {\n  const iosModules = modules.filter(\n    (module) =>\n      module.modules.length ||\n      module.appDelegateSubscribers.length ||\n      module.reactDelegateHandlers.length\n  );\n\n  const modulesToImport = iosModules.filter((module) => !module.debugOnly);\n  const debugOnlyModules = iosModules.filter((module) => module.debugOnly);\n\n  const swiftModules = ([] as string[])\n    .concat(...modulesToImport.map((module) => module.swiftModuleNames))\n    .filter(Boolean);\n\n  const debugOnlySwiftModules = ([] as string[])\n    .concat(...debugOnlyModules.map((module) => module.swiftModuleNames))\n    .filter(Boolean);\n\n  const modulesClassNames = ([] as string[])\n    .concat(...modulesToImport.map((module) => module.modules))\n    .filter(Boolean);\n\n  const debugOnlyModulesClassNames = ([] as string[])\n    .concat(...debugOnlyModules.map((module) => module.modules))\n    .filter(Boolean);\n\n  const appDelegateSubscribers = ([] as string[]).concat(\n    ...modulesToImport.map((module) => module.appDelegateSubscribers)\n  );\n\n  const debugOnlyAppDelegateSubscribers = ([] as string[]).concat(\n    ...debugOnlyModules.map((module) => module.appDelegateSubscribers)\n  );\n\n  const reactDelegateHandlerModules = modulesToImport.filter(\n    (module) => !!module.reactDelegateHandlers.length\n  );\n\n  const debugOnlyReactDelegateHandlerModules = debugOnlyModules.filter(\n    (module) => !!module.reactDelegateHandlers.length\n  );\n\n  return `/**\n * Automatically generated by expo-modules-autolinking.\n *\n * This autogenerated class provides a list of classes of native Expo modules,\n * but only these that are written in Swift and use the new API for creating Expo modules.\n */\n\nimport ExpoModulesCore\n${generateCommonImportList(swiftModules)}\n${generateDebugOnlyImportList(debugOnlySwiftModules)}\n@objc(${className})\npublic class ${className}: ModulesProvider {\n  public override func getModuleClasses() -> [AnyModule.Type] {\n${generateModuleClasses(modulesClassNames, debugOnlyModulesClassNames)}\n  }\n\n  public override func getAppDelegateSubscribers() -> [ExpoAppDelegateSubscriber.Type] {\n${generateModuleClasses(appDelegateSubscribers, debugOnlyAppDelegateSubscribers)}\n  }\n\n  public override func getReactDelegateHandlers() -> [ExpoReactDelegateHandlerTupleType] {\n${generateReactDelegateHandlers(reactDelegateHandlerModules, debugOnlyReactDelegateHandlerModules)}\n  }\n}\n`;\n}\n\nfunction generateCommonImportList(swiftModules: string[]): string {\n  return swiftModules.map((moduleName) => `import ${moduleName}`).join('\\n');\n}\n\nfunction generateDebugOnlyImportList(swiftModules: string[]): string {\n  if (!swiftModules.length) {\n    return '';\n  }\n\n  return (\n    wrapInDebugConfigurationCheck(\n      0,\n      swiftModules.map((moduleName) => `import ${moduleName}`).join('\\n')\n    ) + '\\n'\n  );\n}\n\nfunction generateModuleClasses(classNames: string[], debugOnlyClassName: string[]): string {\n  const commonClassNames = formatArrayOfClassNames(classNames);\n  if (debugOnlyClassName.length > 0) {\n    return wrapInDebugConfigurationCheck(\n      2,\n      `return ${formatArrayOfClassNames(classNames.concat(debugOnlyClassName))}`,\n      `return ${commonClassNames}`\n    );\n  } else {\n    return `${indent.repeat(2)}return ${commonClassNames}`;\n  }\n}\n\n/**\n * Formats an array of class names to Swift's array containing these classes.\n */\nfunction formatArrayOfClassNames(classNames: string[]): string {\n  return `[${classNames.map((className) => `\\n${indent.repeat(3)}${className}.self`).join(',')}\n${indent.repeat(2)}]`;\n}\n\nfunction generateReactDelegateHandlers(\n  module: ModuleDescriptorIos[],\n  debugOnlyModules: ModuleDescriptorIos[]\n): string {\n  const commonModules = formatArrayOfReactDelegateHandler(module);\n  if (debugOnlyModules.length > 0) {\n    return wrapInDebugConfigurationCheck(\n      2,\n      `return ${formatArrayOfReactDelegateHandler(module.concat(debugOnlyModules))}`,\n      `return ${commonModules}`\n    );\n  } else {\n    return `${indent.repeat(2)}return ${commonModules}`;\n  }\n}\n\n/**\n * Formats an array of modules to Swift's array containing ReactDelegateHandlers\n */\nexport function formatArrayOfReactDelegateHandler(modules: ModuleDescriptorIos[]): string {\n  const values: string[] = [];\n  for (const module of modules) {\n    for (const handler of module.reactDelegateHandlers) {\n      values.push(`(packageName: \"${module.packageName}\", handler: ${handler}.self)`);\n    }\n  }\n  return `[${values.map((value) => `\\n${indent.repeat(3)}${value}`).join(',')}\n${indent.repeat(2)}]`;\n}\n\nfunction wrapInDebugConfigurationCheck(\n  indentationLevel: number,\n  debugBlock: string,\n  releaseBlock: string | null = null\n) {\n  if (releaseBlock) {\n    return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(\n      indentationLevel\n    )}${debugBlock}\\n${indent.repeat(indentationLevel)}#else\\n${indent.repeat(\n      indentationLevel\n    )}${releaseBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n  }\n\n  return `${indent.repeat(indentationLevel)}#if EXPO_CONFIGURATION_DEBUG\\n${indent.repeat(\n    indentationLevel\n  )}${debugBlock}\\n${indent.repeat(indentationLevel)}#endif`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}