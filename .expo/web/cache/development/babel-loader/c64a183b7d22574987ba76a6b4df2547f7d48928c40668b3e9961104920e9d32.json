{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/webpack-config/webpack/loaders/createBabelLoader.d.ts"],"sourcesContent":["import { RuleSetRule } from 'webpack';\nimport { Environment, Mode } from '../types';\n/**\n * Creates a Rule for loading Application code and packages from the Expo ecosystem.\n * This method attempts to recreate how Metro loads ES modules in the `node_modules` folder.\n *\n * @param env\n * @internal\n */\nexport declare function createBabelLoaderFromEnvironment(env: Pick<Environment, 'babel' | 'locations' | 'projectRoot' | 'config' | 'mode' | 'platform'>): RuleSetRule;\n/**\n * A complex babel loader which uses the project's `babel.config.js`\n * to resolve all of the Unimodules which are shipped as ES modules (early 2019).\n * @category loaders\n */\nexport default function createBabelLoader({ \n/**\n * The webpack mode: `\"production\" | \"development\"`\n */\nmode, projectRoot: inputProjectRoot, babelProjectRoot, include, verbose, platform, useCustom, ...options }?: {\n    projectRoot?: string;\n    useCustom?: boolean;\n    mode?: Mode;\n    babelProjectRoot?: string;\n    include?: string[];\n    verbose?: boolean;\n    [key: string]: any;\n}): RuleSetRule;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}