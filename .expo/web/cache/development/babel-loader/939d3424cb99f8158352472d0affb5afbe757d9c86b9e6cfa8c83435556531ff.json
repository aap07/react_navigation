{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: DetailsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Profiles\",\n        component: ProfilesScreen\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","initialRouteName","Screen","name","component","HomeScreen","DetailsScreen","ProfilesScreen"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/App.js"],"sourcesContent":["import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\n// // Layar Home\n// const HomeScreen = ({ navigation }) => (\n//   <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n//     <Text>Home Screen</Text>\n//     <TouchableOpacity\n//       // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n//       // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n//       // Details adalah nama route yang akan dikunjungi\n//       onPress={() => navigation.navigate(\"Details\")}\n//       style={{ backgroundColor: \"blue\", padding: 10, marginTop: 10 }}\n//     >\n//       <Text style={{ color: \"white\" }}>Details</Text>\n//     </TouchableOpacity>\n//     <TouchableOpacity\n//       // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n//       // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n//       // Profiles adalah nama route yang akan dikunjungi\n//       onPress={() => navigation.navigate(\"Profiles\")}\n//       style={{ backgroundColor: \"red\", padding: 10, marginTop: 10 }}\n//     >\n//       <Text style={{ color: \"white\" }}>Profile</Text>\n//     </TouchableOpacity>\n//   </View>\n// );\n\n\n// // Layar Detail\n// const DetailsScreen = ({ navigation }) => (\n//   <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n//     <Text>Details Screen</Text>\n//     <TouchableOpacity\n//       // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n//       // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n//       // Home adalah nama route yang akan dikunjungi\n//       onPress={() => navigation.navigate('Home')}\n//       style={{ backgroundColor: 'green', padding: 10, marginTop: 10 }}\n//     >\n//       <Text style={{ color: 'white' }}>Go to Home</Text>\n//     </TouchableOpacity>\n//   </View>\n// );\n\n// // Layar Profile\n// const ProfilesScreen = ({ navigation }) => (\n//   <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n//     <Text>Profile Screen</Text>\n//     <TouchableOpacity\n//       // onPress adalah komponen yang merespon tindakan ketika elemen tersebut ditekan (klik atau sentuh).\n//       // navigation.navigate adalah kode yang digunakan untuk memicu perpindahan ke layar (screen) lain dalam aplikasi menggunakan React Navigation.\n//       // Home adalah nama route yang akan dikunjungi\n//       onPress={() => navigation.navigate('Home')}\n//       style={{ backgroundColor: 'black', padding: 10, marginTop: 10 }}\n//     >\n//       <Text style={{ color: 'white' }}>Go to Home</Text>\n//     </TouchableOpacity>\n//   </View>\n// );\n\n// Membuat tumpukan navigasi (stack navigator) dengan menggunakan library React Navigation.\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return(\n    // Mengelola navigasi dalam aplikasi menggunakan React Navigation.\n    <NavigationContainer>\n      {/* Inisialisasi tumpukan navigator dengan rute awal yang ditentukan sebagai \"Home\". */}\n      <Stack.Navigator initialRouteName=\"Home\">\n        {/* \n        Setiap \"Stack.Screen\" merepresentasikan satu rute (layar) dalam tumpukan navigator.\n        Anda dapat menambahkan lebih banyak Stack.Screen sesuai dengan kebutuhan aplikasi.\n        */}\n        {/* Contoh: */}\n        {/* <Stack.Screen name=\"NamaRute\" component={NamaRuteComponent} /> */}\n        {/* Layar \"Home\" akan menggunakan komponen HomeScreen untuk tampilannya. */}\n        <Stack.Screen name=\"Home\" component={HomeScreen} />    \n        {/* Layar \"Details\" akan menggunakan komponen DetailsScreen untuk tampilannya. */}\n        <Stack.Screen name=\"Details\" component={DetailsScreen} />\n        {/* Layar \"Profiles\" akan menggunakan komponen ProfilesScreen untuk tampilannya. */}\n        <Stack.Screen name=\"Profiles\" component={ProfilesScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n\n    );\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AA6D/D,IAAMC,KAAK,GAAGL,oBAAoB,CAAC,CAAC;AAEpC,IAAMM,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OAEEJ,IAAA,CAACH,mBAAmB;IAAAQ,QAAA,EAElBH,KAAA,CAACC,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,MAAM;MAAAF,QAAA,GAQtCL,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEC;MAAW,CAAE,CAAC,EAEnDX,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEE;MAAc,CAAE,CAAC,EAEzDZ,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEG;MAAe,CAAE,CAAC;IAAA,CAC5C;EAAC,CACC,CAAC;AAG1B,CAAC;AAED,eAAeT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}