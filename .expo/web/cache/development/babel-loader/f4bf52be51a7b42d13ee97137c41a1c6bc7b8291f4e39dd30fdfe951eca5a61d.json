{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useDescriptors;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\nvar _SceneView = _interopRequireDefault(require(\"./SceneView\"));\nvar _useNavigationCache = _interopRequireDefault(require(\"./useNavigationCache\"));\nvar _useRouteCache = _interopRequireDefault(require(\"./useRouteCache\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction useDescriptors(_ref) {\n  var state = _ref.state,\n    screens = _ref.screens,\n    navigation = _ref.navigation,\n    screenOptions = _ref.screenOptions,\n    defaultScreenOptions = _ref.defaultScreenOptions,\n    onAction = _ref.onAction,\n    getState = _ref.getState,\n    setState = _ref.setState,\n    addListener = _ref.addListener,\n    addKeyedListener = _ref.addKeyedListener,\n    onRouteFocus = _ref.onRouteFocus,\n    router = _ref.router,\n    emitter = _ref.emitter;\n  var _React$useState = React.useState({}),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    options = _React$useState2[0],\n    setOptions = _React$useState2[1];\n  var _React$useContext = React.useContext(_NavigationBuilderContext.default),\n    onDispatchAction = _React$useContext.onDispatchAction,\n    onOptionsChange = _React$useContext.onOptionsChange,\n    stackRef = _React$useContext.stackRef;\n  var context = React.useMemo(function () {\n    return {\n      navigation: navigation,\n      onAction: onAction,\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onRouteFocus: onRouteFocus,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      stackRef: stackRef\n    };\n  }, [navigation, onAction, addListener, addKeyedListener, onRouteFocus, onDispatchAction, onOptionsChange, stackRef]);\n  var navigations = (0, _useNavigationCache.default)({\n    state: state,\n    getState: getState,\n    navigation: navigation,\n    setOptions: setOptions,\n    router: router,\n    emitter: emitter\n  });\n  var routes = (0, _useRouteCache.default)(state.routes);\n  return routes.reduce(function (acc, route, i) {\n    var config = screens[route.name];\n    var screen = config.props;\n    var navigation = navigations[route.key];\n    var optionsList = [screenOptions].concat(_toConsumableArray(config.options ? config.options.filter(Boolean) : []), [screen.options, options[route.key]]);\n    var customOptions = optionsList.reduce(function (acc, curr) {\n      return Object.assign(acc, typeof curr !== 'function' ? curr : curr({\n        route: route,\n        navigation: navigation\n      }));\n    }, {});\n    var mergedOptions = _objectSpread(_objectSpread({}, typeof defaultScreenOptions === 'function' ? defaultScreenOptions({\n      route: route,\n      navigation: navigation,\n      options: customOptions\n    }) : defaultScreenOptions), customOptions);\n    var clearOptions = function clearOptions() {\n      return setOptions(function (o) {\n        if (route.key in o) {\n          var _route$key = route.key,\n            _ = o[_route$key],\n            rest = _objectWithoutProperties(o, [_route$key].map(_toPropertyKey));\n          return rest;\n        }\n        return o;\n      });\n    };\n    acc[route.key] = {\n      route: route,\n      navigation: navigation,\n      render: function render() {\n        return React.createElement(_NavigationBuilderContext.default.Provider, {\n          key: route.key,\n          value: context\n        }, React.createElement(_NavigationContext.default.Provider, {\n          value: navigation\n        }, React.createElement(_NavigationRouteContext.default.Provider, {\n          value: route\n        }, React.createElement(_SceneView.default, {\n          navigation: navigation,\n          route: route,\n          screen: screen,\n          routeState: state.routes[i].state,\n          getState: getState,\n          setState: setState,\n          options: mergedOptions,\n          clearOptions: clearOptions\n        }))));\n      },\n      options: mergedOptions\n    };\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_NavigationBuilderContext","_interopRequireDefault","_NavigationContext","_NavigationRouteContext","_SceneView","_useNavigationCache","_useRouteCache","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","useDescriptors","_ref","state","screens","navigation","screenOptions","defaultScreenOptions","onAction","getState","setState","addListener","addKeyedListener","onRouteFocus","router","emitter","_React$useState","useState","_React$useState2","_slicedToArray","options","setOptions","_React$useContext","useContext","onDispatchAction","onOptionsChange","stackRef","context","useMemo","navigations","routes","reduce","acc","route","i","config","name","screen","props","optionsList","concat","_toConsumableArray","filter","Boolean","customOptions","curr","assign","mergedOptions","_objectSpread","clearOptions","o","_route$key","_","rest","_objectWithoutProperties","map","_toPropertyKey","render","createElement","Provider","value","routeState"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@react-navigation\\core\\src\\useDescriptors.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  AddKeyedListener,\n  AddListener,\n} from './NavigationBuilderContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport SceneView from './SceneView';\nimport type {\n  Descriptor,\n  EventMapBase,\n  NavigationHelpers,\n  NavigationProp,\n  RouteConfig,\n  RouteProp,\n} from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport useNavigationCache from './useNavigationCache';\nimport useRouteCache from './useRouteCache';\n\nexport type ScreenConfigWithParent<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  keys: (string | undefined)[];\n  options: (ScreenOptionsOrCallback<ScreenOptions> | undefined)[] | undefined;\n  props: RouteConfig<ParamListBase, string, State, ScreenOptions, EventMap>;\n};\n\ntype ScreenOptionsOrCallback<ScreenOptions extends {}> =\n  | ScreenOptions\n  | ((props: {\n      route: RouteProp<ParamListBase, string>;\n      navigation: any;\n    }) => ScreenOptions);\n\ntype Options<\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n> = {\n  state: State;\n  screens: Record<\n    string,\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>\n  >;\n  navigation: NavigationHelpers<ParamListBase>;\n  screenOptions?: ScreenOptionsOrCallback<ScreenOptions>;\n  defaultScreenOptions?:\n    | ScreenOptions\n    | ((props: {\n        route: RouteProp<ParamListBase>;\n        navigation: any;\n        options: ScreenOptions;\n      }) => ScreenOptions);\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  setState: (state: State) => void;\n  addListener: AddListener;\n  addKeyedListener: AddKeyedListener;\n  onRouteFocus: (key: string) => void;\n  router: Router<State, NavigationAction>;\n  emitter: NavigationEventEmitter<EventMap>;\n};\n\n/**\n * Hook to create descriptor objects for the child routes.\n *\n * A descriptor object provides 3 things:\n * - Helper method to render a screen\n * - Options specified by the screen for the navigator\n * - Navigation object intended for the route\n */\nexport default function useDescriptors<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase\n>({\n  state,\n  screens,\n  navigation,\n  screenOptions,\n  defaultScreenOptions,\n  onAction,\n  getState,\n  setState,\n  addListener,\n  addKeyedListener,\n  onRouteFocus,\n  router,\n  emitter,\n}: Options<State, ScreenOptions, EventMap>) {\n  const [options, setOptions] = React.useState<Record<string, object>>({});\n  const { onDispatchAction, onOptionsChange, stackRef } = React.useContext(\n    NavigationBuilderContext\n  );\n\n  const context = React.useMemo(\n    () => ({\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    }),\n    [\n      navigation,\n      onAction,\n      addListener,\n      addKeyedListener,\n      onRouteFocus,\n      onDispatchAction,\n      onOptionsChange,\n      stackRef,\n    ]\n  );\n\n  const navigations = useNavigationCache<State, ScreenOptions, EventMap>({\n    state,\n    getState,\n    navigation,\n    setOptions,\n    router,\n    emitter,\n  });\n\n  const routes = useRouteCache(state.routes);\n\n  return routes.reduce<\n    Record<\n      string,\n      Descriptor<\n        ScreenOptions,\n        NavigationProp<\n          ParamListBase,\n          string,\n          string | undefined,\n          State,\n          ScreenOptions,\n          EventMap\n        > &\n          ActionHelpers,\n        RouteProp<ParamListBase>\n      >\n    >\n  >((acc, route, i) => {\n    const config = screens[route.name];\n    const screen = config.props;\n    const navigation = navigations[route.key];\n\n    const optionsList = [\n      // The default `screenOptions` passed to the navigator\n      screenOptions,\n      // The `screenOptions` props passed to `Group` elements\n      ...((config.options\n        ? config.options.filter(Boolean)\n        : []) as ScreenOptionsOrCallback<ScreenOptions>[]),\n      // The `options` prop passed to `Screen` elements,\n      screen.options,\n      // The options set via `navigation.setOptions`\n      options[route.key],\n    ];\n\n    const customOptions = optionsList.reduce<ScreenOptions>(\n      (acc, curr) =>\n        Object.assign(\n          acc,\n          // @ts-expect-error: we check for function but TS still complains\n          typeof curr !== 'function' ? curr : curr({ route, navigation })\n        ),\n      {} as ScreenOptions\n    );\n\n    const mergedOptions = {\n      ...(typeof defaultScreenOptions === 'function'\n        ? // @ts-expect-error: ts gives incorrect error here\n          defaultScreenOptions({\n            route,\n            navigation,\n            options: customOptions,\n          })\n        : defaultScreenOptions),\n      ...customOptions,\n    };\n\n    const clearOptions = () =>\n      setOptions((o) => {\n        if (route.key in o) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const { [route.key]: _, ...rest } = o;\n          return rest;\n        }\n\n        return o;\n      });\n\n    acc[route.key] = {\n      route,\n      // @ts-expect-error: it's missing action helpers, fix later\n      navigation,\n      render() {\n        return (\n          <NavigationBuilderContext.Provider key={route.key} value={context}>\n            <NavigationContext.Provider value={navigation}>\n              <NavigationRouteContext.Provider value={route}>\n                <SceneView\n                  navigation={navigation}\n                  route={route}\n                  screen={screen}\n                  routeState={state.routes[i].state}\n                  getState={getState}\n                  setState={setState}\n                  options={mergedOptions}\n                  clearOptions={clearOptions}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          </NavigationBuilderContext.Provider>\n        );\n      },\n      options: mergedOptions as ScreenOptions,\n    };\n\n    return acc;\n  }, {});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}