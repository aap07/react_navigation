{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.joinWithCommasAnd = joinWithCommasAnd;\nfunction joinWithCommasAnd(items) {\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  if (!items.length) {\n    return \"\";\n  }\n  var uniqueItems = items.filter(function (value, index, array) {\n    return array.indexOf(value) === index;\n  });\n  if (uniqueItems.length === 1) {\n    return uniqueItems[0];\n  }\n  if (limit && uniqueItems.length > limit) {\n    var first = uniqueItems.slice(0, limit);\n    var remaining = uniqueItems.length - limit;\n    return `${first.join(\", \")}, and ${remaining} ${remaining > 1 ? \"others\" : \"other\"}`;\n  }\n  var last = uniqueItems.pop();\n  return `${uniqueItems.join(\", \")}${uniqueItems.length >= 2 ? \",\" : \"\"} and ${last}`;\n}","map":{"version":3,"names":["joinWithCommasAnd","items","limit","arguments","length","undefined","uniqueItems","filter","value","index","array","indexOf","first","slice","remaining","join","last","pop"],"sources":["C:\\Users\\CR Laptop\\Desktop\\rn-project\\react_navigation\\node_modules\\@expo\\cli\\src\\utils\\strings.ts"],"sourcesContent":["/**\n * Joins strings with commas and 'and', based on English rules, limiting the number of items enumerated to keep from filling the console.\n * @param items strings to join\n * @param limit max number of strings to enumerate before using 'others'\n * @returns joined string\n */\nexport function joinWithCommasAnd(items: string[], limit: number | undefined = 10): string {\n  if (!items.length) {\n    return '';\n  }\n\n  const uniqueItems = items.filter((value, index, array) => array.indexOf(value) === index);\n\n  if (uniqueItems.length === 1) {\n    return uniqueItems[0];\n  }\n\n  if (limit && uniqueItems.length > limit) {\n    const first = uniqueItems.slice(0, limit);\n    const remaining = uniqueItems.length - limit;\n    return `${first.join(', ')}, and ${remaining} ${remaining > 1 ? 'others' : 'other'}`;\n  }\n\n  const last = uniqueItems.pop();\n  return `${uniqueItems.join(', ')}${uniqueItems.length >= 2 ? ',' : ''} and ${last}`;\n}\n"],"mappings":"AAMA;;;;;QAAgBA,iBAAiB,GAAjBA,iBAAiB;AAA1B,SAASA,iBAAiBA,CAACC,KAAe,EAA0C;EAAA,IAAxCC,KAAyB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC/E,IAAI,CAACF,KAAK,CAACG,MAAM,EAAE;IACjB,OAAO,EAAE;;EAGX,IAAME,WAAW,GAAGL,KAAK,CAACM,MAAM,CAAC,UAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK;IAAA,OAAKA,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,KAAKC,KAAK;EAAA,EAAC;EAEzF,IAAIH,WAAW,CAACF,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAOE,WAAW,CAAC,CAAC,CAAC;;EAGvB,IAAIJ,KAAK,IAAII,WAAW,CAACF,MAAM,GAAGF,KAAK,EAAE;IACvC,IAAMU,KAAK,GAAGN,WAAW,CAACO,KAAK,CAAC,CAAC,EAAEX,KAAK,CAAC;IACzC,IAAMY,SAAS,GAAGR,WAAW,CAACF,MAAM,GAAGF,KAAK;IAC5C,OAAQ,GAAEU,KAAK,CAACG,IAAI,CAAC,IAAI,CAAE,SAAQD,SAAU,IAAGA,SAAS,GAAG,CAAC,GAAG,QAAQ,GAAG,OAAQ,EAAC;;EAGtF,IAAME,IAAI,GAAGV,WAAW,CAACW,GAAG,EAAE;EAC9B,OAAQ,GAAEX,WAAW,CAACS,IAAI,CAAC,IAAI,CAAE,GAAET,WAAW,CAACF,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,EAAG,QAAOY,IAAK,EAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}