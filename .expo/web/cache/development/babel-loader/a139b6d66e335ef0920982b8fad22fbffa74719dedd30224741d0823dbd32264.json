{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport JsonWebpackPlugin from \"./JsonWebpackPlugin\";\nvar PwaManifestWebpackPlugin = function (_JsonWebpackPlugin) {\n  _inherits(PwaManifestWebpackPlugin, _JsonWebpackPlugin);\n  var _super = _createSuper(PwaManifestWebpackPlugin);\n  function PwaManifestWebpackPlugin() {\n    _classCallCheck(this, PwaManifestWebpackPlugin);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(PwaManifestWebpackPlugin);\n}(JsonWebpackPlugin);\nexport { PwaManifestWebpackPlugin as default };","map":{"version":3,"names":["JsonWebpackPlugin","PwaManifestWebpackPlugin","_JsonWebpackPlugin","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","default"],"sources":["C:/Users/CR Laptop/Desktop/rn-project/react_navigation/node_modules/@expo/webpack-config/webpack/plugins/PwaManifestWebpackPlugin.d.ts"],"sourcesContent":["import { Compiler } from 'webpack';\nimport JsonWebpackPlugin from './JsonWebpackPlugin';\nexport declare type Icon = {\n    src: string;\n    sizes: string;\n    type: 'image/png';\n};\nexport declare type PwaManifestOptions = {\n    path: string;\n    inject?: boolean | Function;\n    publicPath: string;\n};\nexport default class PwaManifestWebpackPlugin extends JsonWebpackPlugin {\n    private pwaOptions;\n    rel: string;\n    constructor(pwaOptions: PwaManifestOptions, manifest: any);\n    apply(compiler: Compiler): void;\n}\n"],"mappings":";;;;;;;AACA,OAAOA,iBAAiB;AAA4B,IAW/BC,wBAAwB,aAAAC,kBAAA;EAAAC,SAAA,CAAAF,wBAAA,EAAAC,kBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,wBAAA;EAAA,SAAAA,yBAAA;IAAAK,eAAA,OAAAL,wBAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAA,OAAAC,YAAA,CAAAR,wBAAA;AAAA,EAASD,iBAAiB;AAAA,SAAlDC,wBAAwB,IAAAS,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}